#include "imgui.h"

// dear imgui, v1.70 WIP
// (main code and documentation)

// Call and read ImGui::ShowDemoWindow() in imgui_demo.cpp for demo code.
// Newcomers, read 'Programmer guide' below for notes on how to setup Dear ImGui in your codebase.
// Get latest version at https://github.com/ocornut/imgui
// Releases change-log at https://github.com/ocornut/imgui/releases
// Technical Support for Getting Started https://discourse.dearimgui.org/c/getting-started
// Gallery (please post your screenshots/video there!): https://github.com/ocornut/imgui/issues/1269

// Developed by Omar Cornut and every direct or indirect contributors to the GitHub.
// See LICENSE.txt for copyright and licensing details (standard MIT License).
// This library is free but I need your support to sustain development and maintenance.
// Businesses: you can support continued maintenance and development via support contracts or sponsoring, see docs/README.
// Individuals: you can support continued maintenance and development via donations or Patreon https://www.patreon.com/imgui.

// It is recommended that you don't modify imgui.cpp! It will become difficult for you to update the library.
// Note that 'ImGui::' being a namespace, you can add functions into the namespace from your own source files, without
// modifying imgui.h or imgui.cpp. You may include imgui_internal.h to access internal data structures, but it doesn't
// come with any guarantee of forward compatibility. Discussing your changes on the GitHub Issue Tracker may lead you
// to a better solution or official support for them.

/*

Index of this file:

DOCUMENTATION

- MISSION STATEMENT
- END-USER GUIDE
- PROGRAMMER GUIDE (read me!)
  - Read first.
  - How to update to a newer version of Dear ImGui.
  - Getting started with integrating Dear ImGui in your code/engine.
  - This is how a simple application may look like (2 variations).
  - This is how a simple rendering function may look like.
  - Using gamepad/keyboard navigation controls.
- API BREAKING CHANGES (read me when you update!)
- FREQUENTLY ASKED QUESTIONS (FAQ), TIPS
  - Where is the documentation?
  - Which version should I get?
  - Who uses Dear ImGui?
  - Why the odd dual naming, "Dear ImGui" vs "ImGui"?
  - How can I tell whether to dispatch mouse/keyboard to imgui or to my application?
  - How can I display an image? What is ImTextureID, how does it works?
  - Why are multiple widgets reacting when I interact with a single one? How can I have
    multiple widgets with the same label or with an empty label? A primer on labels and the ID Stack...
  - How can I use my own math types instead of ImVec2/ImVec4?
  - How can I load a different font than the default?
  - How can I easily use icons in my application?
  - How can I load multiple fonts?
  - How can I display and input non-latin characters such as Chinese, Japanese, Korean, Cyrillic?
  - How can I interact with standard C++ types (such as std::string and std::vector)?
  - How can I use the drawing facilities without an ImGui window? (using ImDrawList API)
  - How can I use Dear ImGui on a platform that doesn't have a mouse or a keyboard? (input share, remoting, gamepad)
  - I integrated Dear ImGui in my engine and the text or lines are blurry..
  - I integrated Dear ImGui in my engine and some elements are clipping or disappearing when I move windows around..
  - How can I help?

CODE
(search for "[SECTION]" in the code to find them)

// [SECTION] FORWARD DECLARATIONS
// [SECTION] CONTEXT AND MEMORY ALLOCATORS
// [SECTION] MAIN USER FACING STRUCTURES (ImGuiStyle, ImGuiIO)
// [SECTION] MISC HELPERS/UTILITIES (Maths, String, Format, Hash, File functions)
// [SECTION] MISC HELPERS/UTILITIES (ImText* functions)
// [SECTION] MISC HELPERS/UTILITIES (Color functions)
// [SECTION] ImGuiStorage
// [SECTION] ImGuiTextFilter
// [SECTION] ImGuiTextBuffer
// [SECTION] ImGuiListClipper
// [SECTION] RENDER HELPERS
// [SECTION] MAIN CODE (most of the code! lots of stuff, needs tidying up!)
// [SECTION] TOOLTIPS
// [SECTION] POPUPS
// [SECTION] KEYBOARD/GAMEPAD NAVIGATION
// [SECTION] COLUMNS
// [SECTION] DRAG AND DROP
// [SECTION] LOGGING/CAPTURING
// [SECTION] SETTINGS
// [SECTION] PLATFORM DEPENDENT HELPERS
// [SECTION] METRICS/DEBUG WINDOW

*/

//-----------------------------------------------------------------------------
// DOCUMENTATION
//-----------------------------------------------------------------------------

/*

 MISSION STATEMENT
 =================

 - Easy to use to create code-driven and data-driven tools.
 - Easy to use to create ad hoc short-lived tools and long-lived, more elaborate tools.
 - Easy to hack and improve.
 - Minimize screen real-estate usage.
 - Minimize setup and maintenance.
 - Minimize state storage on user side.
 - Portable, minimize dependencies, run on target (consoles, phones, etc.).
 - Efficient runtime and memory consumption (NB- we do allocate when "growing" content e.g. creating a window,.
   opening a tree node for the first time, etc. but a typical frame should not allocate anything).

 Designed for developers and content-creators, not the typical end-user! Some of the weaknesses includes:
 - Doesn't look fancy, doesn't animate.
 - Limited layout features, intricate layouts are typically crafted in code.


 END-USER GUIDE
 ==============

 - Double-click on title bar to collapse window.
 - Click upper right corner to close a window, available when 'bool* p_open' is passed to ImGui::Begin().
 - Click and drag on lower right corner to resize window (double-click to auto fit window to its contents).
 - Click and drag on any empty space to move window.
 - TAB/SHIFT+TAB to cycle through keyboard editable fields.
 - CTRL+Click on a slider or drag box to input value as text.
 - Use mouse wheel to scroll.
 - Text editor:
   - Hold SHIFT or use mouse to select text.
   - CTRL+Left/Right to word jump.
   - CTRL+Shift+Left/Right to select words.
   - CTRL+A our Double-Click to select all.
   - CTRL+X,CTRL+C,CTRL+V to use OS clipboard/
   - CTRL+Z,CTRL+Y to undo/redo.
   - ESCAPE to revert text to its original value.
   - You can apply arithmetic operators +,*,/ on numerical values. Use +- to subtract (because - would set a negative value!)
   - Controls are automatically adjusted for OSX to match standard OSX text editing operations.
 - General Keyboard controls: enable with ImGuiConfigFlags_NavEnableKeyboard.
 - General Gamepad controls: enable with ImGuiConfigFlags_NavEnableGamepad. See suggested mappings in imgui.h ImGuiNavInput_ + download PNG/PSD at http://goo.gl/9LgVZW


 PROGRAMMER GUIDE
 ================

 READ FIRST:

 - Read the FAQ below this section!
 - Your code creates the UI, if your code doesn't run the UI is gone! The UI can be highly dynamic, there are no construction
   or destruction steps, less superfluous data retention on your side, less state duplication, less state synchronization, less bugs.
 - Call and read ImGui::ShowDemoWindow() for demo code demonstrating most features.
 - The library is designed to be built from sources. Avoid pre-compiled binaries and packaged versions. See imconfig.h to configure your build.
 - Dear ImGui is an implementation of the IMGUI paradigm (immediate-mode graphical user interface, a term coined by Casey Muratori).
   You can learn about IMGUI principles at http://www.johno.se/book/imgui.html, http://mollyrocket.com/861 & more links docs/README.md.
 - Dear ImGui is a "single pass" rasterizing implementation of the IMGUI paradigm, aimed at ease of use and high-performances.
   For every application frame your UI code will be called only once. This is in contrast to e.g. Unity's own implementation of an IMGUI,
   where the UI code is called multiple times ("multiple passes") from a single entry point. There are pros and cons to both approaches.
 - Our origin are on the top-left. In axis aligned bounding boxes, Min = top-left, Max = bottom-right.
 - This codebase is also optimized to yield decent performances with typical "Debug" builds settings.
 - Please make sure you have asserts enabled (IM_ASSERT redirects to assert() by default, but can be redirected).
   If you get an assert, read the messages and comments around the assert.
 - C++: this is a very C-ish codebase: we don't rely on C++11, we don't include any C++ headers, and ImGui:: is a namespace.
 - C++: ImVec2/ImVec4 do not expose math operators by default, because it is expected that you use your own math types.
   See FAQ "How can I use my own math types instead of ImVec2/ImVec4?" for details about setting up imconfig.h for that.
   However, imgui_internal.h can optionally export math operators for ImVec2/ImVec4, which we use in this codebase.
 - C++: pay attention that ImVector<> manipulates plain-old-data and does not honor construction/destruction (avoid using it in your code!).

 HOW TO UPDATE TO A NEWER VERSION OF DEAR IMGUI:

 - Overwrite all the sources files except for imconfig.h (if you have made modification to your copy of imconfig.h)
 - Or maintain your own branch where you have imconfig.h modified.
 - Read the "API BREAKING CHANGES" section (below). This is where we list occasional API breaking changes.
   If a function/type has been renamed / or marked obsolete, try to fix the name in your code before it is permanently removed
   from the public API. If you have a problem with a missing function/symbols, search for its name in the code, there will
   likely be a comment about it. Please report any issue to the GitHub page!
 - Try to keep your copy of dear imgui reasonably up to date.

 GETTING STARTED WITH INTEGRATING DEAR IMGUI IN YOUR CODE/ENGINE:

 - Run and study the examples and demo in imgui_demo.cpp to get acquainted with the library.
 - Add the Dear ImGui source files to your projects or using your preferred build system.
   It is recommended you build and statically link the .cpp files as part of your project and not as shared library (DLL).
 - You can later customize the imconfig.h file to tweak some compile-time behavior, such as integrating imgui types with your own maths types.
 - When using Dear ImGui, your programming IDE is your friend: follow the declaration of variables, functions and types to find comments about them.
 - Dear ImGui never touches or knows about your GPU state. The only function that knows about GPU is the draw function that you provide.
   Effectively it means you can create widgets at any time in your code, regardless of considerations of being in "update" vs "render"
   phases of your own application. All rendering informatioe are stored into command-lists that you will retrieve after calling ImGui::Render().
 - Refer to the bindings and demo applications in the examples/ folder for instruction on how to setup your code.
 - If you are running over a standard OS with a common graphics API, you should be able to use unmodified imgui_impl_*** files from the examples/ folder.

 HOW A SIMPLE APPLICATION MAY LOOK LIKE:
 EXHIBIT 1: USING THE EXAMPLE BINDINGS (imgui_impl_XXX.cpp files from the examples/ folder).

     // Application init: create a dear imgui context, setup some options, load fonts
     ImGui::CreateContext();
     ImGuiIO& io = ImGui::GetIO();
     // TODO: Set optional io.ConfigFlags values, e.g. 'io.ConfigFlags |= ImGuiConfigFlags_NavEnableKeyboard' to enable keyboard controls.
     // TODO: Fill optional fields of the io structure later.
     // TODO: Load TTF/OTF fonts if you don't want to use the default font.

     // Initialize helper Platform and Renderer bindings (here we are using imgui_impl_win32 and imgui_impl_dx11)
     ImGui_ImplWin32_Init(hwnd);
     ImGui_ImplDX11_Init(g_pd3dDevice, g_pd3dDeviceContext);

     // Application main loop
     while (true)
     {
         // Feed inputs to dear imgui, start new frame
         ImGui_ImplDX11_NewFrame();
         ImGui_ImplWin32_NewFrame();
         ImGui::NewFrame();

         // Any application code here
         ImGui::Text("Hello, world!");

         // Render dear imgui into screen
         ImGui::Render();
         ImGui_ImplDX11_RenderDrawData(ImGui::GetDrawData());
         g_pSwapChain->Present(1, 0);
     }

     // Shutdown
     ImGui_ImplDX11_Shutdown();
     ImGui_ImplWin32_Shutdown();
     ImGui::DestroyContext();

 HOW A SIMPLE APPLICATION MAY LOOK LIKE:
 EXHIBIT 2: IMPLEMENTING CUSTOM BINDING / CUSTOM ENGINE.

     // Application init: create a dear imgui context, setup some options, load fonts
     ImGui::CreateContext();
     ImGuiIO& io = ImGui::GetIO();
     // TODO: Set optional io.ConfigFlags values, e.g. 'io.ConfigFlags |= ImGuiConfigFlags_NavEnableKeyboard' to enable keyboard controls.
     // TODO: Fill optional fields of the io structure later.
     // TODO: Load TTF/OTF fonts if you don't want to use the default font.

     // Build and load the texture atlas into a texture
     // (In the examples/ app this is usually done within the ImGui_ImplXXX_Init() function from one of the demo Renderer)
     int width, height;
     unsigned char* pixels = NULL;
     io.Fonts->GetTexDataAsRGBA32(&pixels, &width, &height);

     // At this point you've got the texture data and you need to upload that your your graphic system:
     // After we have created the texture, store its pointer/identifier (_in whichever format your engine uses_) in 'io.Fonts->TexID'.
     // This will be passed back to your via the renderer. Basically ImTextureID == void*. Read FAQ below for details about ImTextureID.
     MyTexture* texture = MyEngine::CreateTextureFromMemoryPixels(pixels, width, height, TEXTURE_TYPE_RGBA32)
     io.Fonts->TexID = (void*)texture;

     // Application main loop
     while (true)
     {
        // Setup low-level inputs, e.g. on Win32: calling GetKeyboardState(), or write to those fields from your Windows message handlers, etc.
        // (In the examples/ app this is usually done within the ImGui_ImplXXX_NewFrame() function from one of the demo Platform bindings)
        io.DeltaTime = 1.0f/60.0f;              // set the time elapsed since the previous frame (in seconds)
        io.DisplaySize.x = 1920.0f;             // set the current display width
        io.DisplaySize.y = 1280.0f;             // set the current display height here
        io.MousePos = my_mouse_pos;             // set the mouse position
        io.MouseDown[0] = my_mouse_buttons[0];  // set the mouse button states
        io.MouseDown[1] = my_mouse_buttons[1];

        // Call NewFrame(), after this point you can use ImGui::* functions anytime
        // (So you want to try calling NewFrame() as early as you can in your mainloop to be able to use imgui everywhere)
        ImGui::NewFrame();

        // Most of your application code here
        ImGui::Text("Hello, world!");
        MyGameUpdate(); // may use any ImGui functions, e.g. ImGui::Begin("My window"); ImGui::Text("Hello, world!"); ImGui::End();
        MyGameRender(); // may use any ImGui functions as well!

        // Render imgui, swap buffers
        // (You want to try calling EndFrame/Render as late as you can, to be able to use imgui in your own game rendering code)
        ImGui::EndFrame();
        ImGui::Render();
        ImDrawData* draw_data = ImGui::GetDrawData();
        MyImGuiRenderFunction(draw_data);
        SwapBuffers();
     }

     // Shutdown
     ImGui::DestroyContext();

 HOW A SIMPLE RENDERING FUNCTION MAY LOOK LIKE:

    void void MyImGuiRenderFunction(ImDrawData* draw_data)
    {
       // TODO: Setup render state: alpha-blending enabled, no face culling, no depth testing, scissor enabled
       // TODO: Setup viewport covering draw_data->DisplayPos to draw_data->DisplayPos + draw_data->DisplaySize
       // TODO: Setup orthographic projection matrix cover draw_data->DisplayPos to draw_data->DisplayPos + draw_data->DisplaySize
       // TODO: Setup shader: vertex { float2 pos, float2 uv, u32 color }, fragment shader sample color from 1 texture, multiply by vertex color.
       for (int n = 0; n < draw_data->CmdListsCount; n++)
       {
          const ImDrawList* cmd_list = draw_data->CmdLists[n];
          const ImDrawVert* vtx_buffer = cmd_list->VtxBuffer.Data;  // vertex buffer generated by ImGui
          const ImDrawIdx* idx_buffer = cmd_list->IdxBuffer.Data;   // index buffer generated by ImGui
          for (int cmd_i = 0; cmd_i < cmd_list->CmdBuffer.Size; cmd_i++)
          {
             const ImDrawCmd* pcmd = &cmd_list->CmdBuffer[cmd_i];
             if (pcmd->UserCallback)
             {
                 pcmd->UserCallback(cmd_list, pcmd);
             }
             else
             {
                 // The texture for the draw call is specified by pcmd->TextureId.
                 // The vast majority of draw calls will use the imgui texture atlas, which value you have set yourself during initialization.
                 MyEngineBindTexture((MyTexture*)pcmd->TextureId);

                 // We are using scissoring to clip some objects. All low-level graphics API should supports it.
                 // - If your engine doesn't support scissoring yet, you may ignore this at first. You will get some small glitches
                 //   (some elements visible outside their bounds) but you can fix that once everything else works!
                 // - Clipping coordinates are provided in imgui coordinates space (from draw_data->DisplayPos to draw_data->DisplayPos + draw_data->DisplaySize)
                 //   In a single viewport application, draw_data->DisplayPos will always be (0,0) and draw_data->DisplaySize will always be == io.DisplaySize.
                 //   However, in the interest of supporting multi-viewport applications in the future (see 'viewport' branch on github),
                 //   always subtract draw_data->DisplayPos from clipping bounds to convert them to your viewport space.
                 // - Note that pcmd->ClipRect contains Min+Max bounds. Some graphics API may use Min+Max, other may use Min+Size (size being Max-Min)
                 ImVec2 pos = draw_data->DisplayPos;
                 MyEngineScissor((int)(pcmd->ClipRect.x - pos.x), (int)(pcmd->ClipRect.y - pos.y), (int)(pcmd->ClipRect.z - pos.x), (int)(pcmd->ClipRect.w - pos.y));

                 // Render 'pcmd->ElemCount/3' indexed triangles.
                 // By default the indices ImDrawIdx are 16-bits, you can change them to 32-bits in imconfig.h if your engine doesn't support 16-bits indices.
                 MyEngineDrawIndexedTriangles(pcmd->ElemCount, sizeof(ImDrawIdx) == 2 ? GL_UNSIGNED_SHORT : GL_UNSIGNED_INT, idx_buffer, vtx_buffer);
             }
             idx_buffer += pcmd->ElemCount;
          }
       }
    }

 - The examples/ folders contains many actual implementation of the pseudo-codes above.
 - When calling NewFrame(), the 'io.WantCaptureMouse', 'io.WantCaptureKeyboard' and 'io.WantTextInput' flags are updated.
   They tell you if Dear ImGui intends to use your inputs. When a flag is set you want to hide the corresponding inputs
   from the rest of your application. In every cases you need to pass on the inputs to imgui. Refer to the FAQ for more information.
 - Please read the FAQ below!. Amusingly, it is called a FAQ because people frequently run into the same issues!

 USING GAMEPAD/KEYBOARD NAVIGATION CONTROLS

 - The gamepad/keyboard navigation is fairly functional and keeps being improved.
 - Gamepad support is particularly useful to use dear imgui on a console system (e.g. PS4, Switch, XB1) without a mouse!
 - You can ask questions and report issues at https://github.com/ocornut/imgui/issues/787
 - The initial focus was to support game controllers, but keyboard is becoming increasingly and decently usable.
 - Gamepad:
    - Set io.ConfigFlags |= ImGuiConfigFlags_NavEnableGamepad to enable.
    - Backend: Set io.BackendFlags |= ImGuiBackendFlags_HasGamepad + fill the io.NavInputs[] fields before calling NewFrame().
      Note that io.NavInputs[] is cleared by EndFrame().
    - See 'enum ImGuiNavInput_' in imgui.h for a description of inputs. For each entry of io.NavInputs[], set the following values:
         0.0f= not held. 1.0f= fully held. Pass intermediate 0.0f..1.0f values for analog triggers/sticks.
    - We uses a simple >0.0f test for activation testing, and won't attempt to test for a dead-zone.
      Your code will probably need to transform your raw inputs (such as e.g. remapping your 0.2..0.9 raw input range to 0.0..1.0 imgui range, etc.).
    - You can download PNG/PSD files depicting the gamepad controls for common controllers at: http://goo.gl/9LgVZW.
    - If you need to share inputs between your game and the imgui parts, the easiest approach is to go all-or-nothing, with a buttons combo
      to toggle the target. Please reach out if you think the game vs navigation input sharing could be improved.
 - Keyboard:
    - Set io.ConfigFlags |= ImGuiConfigFlags_NavEnableKeyboard to enable.
      NewFrame() will automatically fill io.NavInputs[] based on your io.KeysDown[] + io.KeyMap[] arrays.
    - When keyboard navigation is active (io.NavActive + ImGuiConfigFlags_NavEnableKeyboard), the io.WantCaptureKeyboard flag
      will be set. For more advanced uses, you may want to read from:
       - io.NavActive: true when a window is focused and it doesn't have the ImGuiWindowFlags_NoNavInputs flag set.
       - io.NavVisible: true when the navigation cursor is visible (and usually goes false when mouse is used).
       - or query focus information with e.g. IsWindowFocused(ImGuiFocusedFlags_AnyWindow), IsItemFocused() etc. functions.
      Please reach out if you think the game vs navigation input sharing could be improved.
 - Mouse:
    - PS4 users: Consider emulating a mouse cursor with DualShock4 touch pad or a spare analog stick as a mouse-emulation fallback.
    - Consoles/Tablet/Phone users: Consider using a Synergy 1.x server (on your PC) + uSynergy.c (on your console/tablet/phone app) to share your PC mouse/keyboard.
    - On a TV/console system where readability may be lower or mouse inputs may be awkward, you may want to set the ImGuiConfigFlags_NavEnableSetMousePos flag.
      Enabling ImGuiConfigFlags_NavEnableSetMousePos + ImGuiBackendFlags_HasSetMousePos instructs dear imgui to move your mouse cursor along with navigation movements.
      When enabled, the NewFrame() function may alter 'io.MousePos' and set 'io.WantSetMousePos' to notify you that it wants the mouse cursor to be moved.
      When that happens your back-end NEEDS to move the OS or underlying mouse cursor on the next frame. Some of the binding in examples/ do that.
      (If you set the NavEnableSetMousePos flag but don't honor 'io.WantSetMousePos' properly, imgui will misbehave as it will see your mouse as moving back and forth!)
      (In a setup when you may not have easy control over the mouse cursor, e.g. uSynergy.c doesn't expose moving remote mouse cursor, you may want
       to set a boolean to ignore your other external mouse positions until the external source is moved again.)


 API BREAKING CHANGES
 ====================

 Occasionally introducing changes that are breaking the API. We try to make the breakage minor and easy to fix.
 Below is a change-log of API breaking changes only. If you are using one of the functions listed, expect to have to fix some code.
 When you are not sure about a old symbol or function name, try using the Search/Find function of your IDE to look for comments or references in all imgui files.
 You can read releases logs https://github.com/ocornut/imgui/releases for more details.

 - 2019/03/04 (1.69) - renamed GetOverlayDrawList() to GetForegroundDrawList(). Kept redirection function (will obsolete).
 - 2019/02/26 (1.69) - renamed ImGuiColorEditFlags_RGB/ImGuiColorEditFlags_HSV/ImGuiColorEditFlags_HEX to ImGuiColorEditFlags_DisplayRGB/ImGuiColorEditFlags_DisplayHSV/ImGuiColorEditFlags_DisplayHex. Kept redirection enums (will obsolete).
 - 2019/02/14 (1.68) - made it illegal/assert when io.DisplayTime == 0.0f (with an exception for the first frame). If for some reason your time step calculation gives you a zero value, replace it with a dummy small value!
 - 2019/02/01 (1.68) - removed io.DisplayVisibleMin/DisplayVisibleMax (which were marked obsolete and removed from viewport/docking branch already).
 - 2019/01/06 (1.67) - renamed io.InputCharacters[], marked internal as was always intended. Please don't access directly, and use AddInputCharacter() instead!
 - 2019/01/06 (1.67) - renamed ImFontAtlas::GlyphRangesBuilder to ImFontGlyphRangesBuilder. Keep redirection typedef (will obsolete).
 - 2018/12/20 (1.67) - made it illegal to call Begin("") with an empty string. This somehow half-worked before but had various undesirable side-effects.
 - 2018/12/10 (1.67) - renamed io.ConfigResizeWindowsFromEdges to io.ConfigWindowsResizeFromEdges as we are doing a large pass on configuration flags.
 - 2018/10/12 (1.66) - renamed misc/stl/imgui_stl.* to misc/cpp/imgui_stdlib.* in prevision for other C++ helper files.
 - 2018/09/28 (1.66) - renamed SetScrollHere() to SetScrollHereY(). Kept redirection function (will obsolete).
 - 2018/09/06 (1.65) - renamed stb_truetype.h to imstb_truetype.h, stb_textedit.h to imstb_textedit.h, and stb_rect_pack.h to imstb_rectpack.h.
                       If you were conveniently using the imgui copy of those STB headers in your project you will have to update your include paths.
 - 2018/09/05 (1.65) - renamed io.OptCursorBlink/io.ConfigCursorBlink to io.ConfigInputTextCursorBlink. (#1427)
 - 2018/08/31 (1.64) - added imgui_widgets.cpp file, extracted and moved widgets code out of imgui.cpp into imgui_widgets.cpp. Re-ordered some of the code remaining in imgui.cpp.
                       NONE OF THE FUNCTIONS HAVE CHANGED. THE CODE IS SEMANTICALLY 100% IDENTICAL, BUT _EVERY_ FUNCTION HAS BEEN MOVED.
                       Because of this, any local modifications to imgui.cpp will likely conflict when you update. Read docs/CHANGELOG.txt for suggestions.
 - 2018/08/22 (1.63) - renamed IsItemDeactivatedAfterChange() to IsItemDeactivatedAfterEdit() for consistency with new IsItemEdited() API. Kept redirection function (will obsolete soonish as IsItemDeactivatedAfterChange() is very recent).
 - 2018/08/21 (1.63) - renamed ImGuiTextEditCallback to ImGuiInputTextCallback, ImGuiTextEditCallbackData to ImGuiInputTextCallbackData for consistency. Kept redirection types (will obsolete).
 - 2018/08/21 (1.63) - removed ImGuiInputTextCallbackData::ReadOnly since it is a duplication of (ImGuiInputTextCallbackData::Flags & ImGuiInputTextFlags_ReadOnly).
 - 2018/08/01 (1.63) - removed per-window ImGuiWindowFlags_ResizeFromAnySide beta flag in favor of a global io.ConfigResizeWindowsFromEdges [update 1.67 renamed to ConfigWindowsResizeFromEdges] to enable the feature.
 - 2018/08/01 (1.63) - renamed io.OptCursorBlink to io.ConfigCursorBlink [-> io.ConfigInputTextCursorBlink in 1.65], io.OptMacOSXBehaviors to ConfigMacOSXBehaviors for consistency.
 - 2018/07/22 (1.63) - changed ImGui::GetTime() return value from float to double to avoid accumulating floating point imprecisions over time.
 - 2018/07/08 (1.63) - style: renamed ImGuiCol_ModalWindowDarkening to ImGuiCol_ModalWindowDimBg for consistency with other features. Kept redirection enum (will obsolete).
 - 2018/06/08 (1.62) - examples: the imgui_impl_xxx files have been split to separate platform (Win32, Glfw, SDL2, etc.) from renderer (DX11, OpenGL, Vulkan,  etc.).
                       old bindings will still work as is, however prefer using the separated bindings as they will be updated to support multi-viewports.
                       when adopting new bindings follow the main.cpp code of your preferred examples/ folder to know which functions to call.
                       in particular, note that old bindings called ImGui::NewFrame() at the end of their ImGui_ImplXXXX_NewFrame() function.
 - 2018/06/06 (1.62) - renamed GetGlyphRangesChinese() to GetGlyphRangesChineseFull() to distinguish other variants and discourage using the full set.
 - 2018/06/06 (1.62) - TreeNodeEx()/TreeNodeBehavior(): the ImGuiTreeNodeFlags_CollapsingHeader helper now include the ImGuiTreeNodeFlags_NoTreePushOnOpen flag. See Changelog for details.
 - 2018/05/03 (1.61) - DragInt(): the default compile-time format string has been changed from "%.0f" to "%d", as we are not using integers internally any more.
                       If you used DragInt() with custom format strings, make sure you change them to use %d or an integer-compatible format.
                       To honor backward-compatibility, the DragInt() code will currently parse and modify format strings to replace %*f with %d, giving time to users to upgrade their code.
                       If you have IMGUI_DISABLE_OBSOLETE_FUNCTIONS enabled, the code will instead assert! You may run a reg-exp search on your codebase for e.g. "DragInt.*%f" to help you find them.
 - 2018/04/28 (1.61) - obsoleted InputFloat() functions taking an optional "int decimal_precision" in favor of an equivalent and more flexible "const char* format",
                       consistent with other functions. Kept redirection functions (will obsolete).
 - 2018/04/09 (1.61) - IM_DELETE() helper function added in 1.60 doesn't clear the input _pointer_ reference, more consistent with expectation and allows passing r-value.
 - 2018/03/20 (1.60) - renamed io.WantMoveMouse to io.WantSetMousePos for consistency and ease of understanding (was added in 1.52, _not_ used by core and only honored by some binding ahead of merging the Nav branch).
 - 2018/03/12 (1.60) - removed ImGuiCol_CloseButton, ImGuiCol_CloseButtonActive, ImGuiCol_CloseButtonHovered as the closing cross uses regular button colors now.
 - 2018/03/08 (1.60) - changed ImFont::DisplayOffset.y to default to 0 instead of +1. Fixed rounding of Ascent/Descent to match TrueType renderer. If you were adding or subtracting to ImFont::DisplayOffset check if your fonts are correctly aligned vertically.
 - 2018/03/03 (1.60) - renamed ImGuiStyleVar_Count_ to ImGuiStyleVar_COUNT and ImGuiMouseCursor_Count_ to ImGuiMouseCursor_COUNT for consistency with other public enums.
 - 2018/02/18 (1.60) - BeginDragDropSource(): temporarily removed the optional mouse_button=0 parameter because it is not really usable in many situations at the moment.
 - 2018/02/16 (1.60) - obsoleted the io.RenderDrawListsFn callback, you can call your graphics engine render function after ImGui::Render(). Use ImGui::GetDrawData() to retrieve the ImDrawData* to display.
 - 2018/02/07 (1.60) - reorganized context handling to be more explicit,
                       - YOU NOW NEED TO CALL ImGui::CreateContext() AT THE BEGINNING OF YOUR APP, AND CALL ImGui::DestroyContext() AT THE END.
                       - removed Shutdown() function, as DestroyContext() serve this purpose.
                       - you may pass a ImFontAtlas* pointer to CreateContext() to share a font atlas between contexts. Otherwise CreateContext() will create its own font atlas instance.
                       - removed allocator parameters from CreateContext(), they are now setup with SetAllocatorFunctions(), and shared by all contexts.
                       - removed the default global context and font atlas instance, which were confusing for users of DLL reloading and users of multiple contexts.
 - 2018/01/31 (1.60) - moved sample TTF files from extra_fonts/ to misc/fonts/. If you loaded files directly from the imgui repo you may need to update your paths.
 - 2018/01/11 (1.60) - obsoleted IsAnyWindowHovered() in favor of IsWindowHovered(ImGuiHoveredFlags_AnyWindow). Kept redirection function (will obsolete).
 - 2018/01/11 (1.60) - obsoleted IsAnyWindowFocused() in favor of IsWindowFocused(ImGuiFocusedFlags_AnyWindow). Kept redirection function (will obsolete).
 - 2018/01/03 (1.60) - renamed ImGuiSizeConstraintCallback to ImGuiSizeCallback, ImGuiSizeConstraintCallbackData to ImGuiSizeCallbackData.
 - 2017/12/29 (1.60) - removed CalcItemRectClosestPoint() which was weird and not really used by anyone except demo code. If you need it it's easy to replicate on your side.
 - 2017/12/24 (1.53) - renamed the emblematic ShowTestWindow() function to ShowDemoWindow(). Kept redirection function (will obsolete).
 - 2017/12/21 (1.53) - ImDrawList: renamed style.AntiAliasedShapes to style.AntiAliasedFill for consistency and as a way to explicitly break code that manipulate those flag at runtime. You can now manipulate ImDrawList::Flags
 - 2017/12/21 (1.53) - ImDrawList: removed 'bool anti_aliased = true' final parameter of ImDrawList::AddPolyline() and ImDrawList::AddConvexPolyFilled(). Prefer manipulating ImDrawList::Flags if you need to toggle them during the frame.
 - 2017/12/14 (1.53) - using the ImGuiWindowFlags_NoScrollWithMouse flag on a child window forwards the mouse wheel event to the parent window, unless either ImGuiWindowFlags_NoInputs or ImGuiWindowFlags_NoScrollbar are also set.
 - 2017/12/13 (1.53) - renamed GetItemsLineHeightWithSpacing() to GetFrameHeightWithSpacing(). Kept redirection function (will obsolete).
 - 2017/12/13 (1.53) - obsoleted IsRootWindowFocused() in favor of using IsWindowFocused(ImGuiFocusedFlags_RootWindow). Kept redirection function (will obsolete).
                     - obsoleted IsRootWindowOrAnyChildFocused() in favor of using IsWindowFocused(ImGuiFocusedFlags_RootAndChildWindows). Kept redirection function (will obsolete).
 - 2017/12/12 (1.53) - renamed ImGuiTreeNodeFlags_AllowOverlapMode to ImGuiTreeNodeFlags_AllowItemOverlap. Kept redirection enum (will obsolete).
 - 2017/12/10 (1.53) - removed SetNextWindowContentWidth(), prefer using SetNextWindowContentSize(). Kept redirection function (will obsolete).
 - 2017/11/27 (1.53) - renamed ImGuiTextBuffer::append() helper to appendf(), appendv() to appendfv(). If you copied the 'Log' demo in your code, it uses appendv() so that needs to be renamed.
 - 2017/11/18 (1.53) - Style, Begin: removed ImGuiWindowFlags_ShowBorders window flag. Borders are now fully set up in the ImGuiStyle structure (see e.g. style.FrameBorderSize, style.WindowBorderSize). Use ImGui::ShowStyleEditor() to look them up.
                       Please note that the style system will keep evolving (hopefully stabilizing in Q1 2018), and so custom styles will probably subtly break over time. It is recommended you use the StyleColorsClassic(), StyleColorsDark(), StyleColorsLight() functions.
 - 2017/11/18 (1.53) - Style: removed ImGuiCol_ComboBg in favor of combo boxes using ImGuiCol_PopupBg for consistency.
 - 2017/11/18 (1.53) - Style: renamed ImGuiCol_ChildWindowBg to ImGuiCol_ChildBg.
 - 2017/11/18 (1.53) - Style: renamed style.ChildWindowRounding to style.ChildRounding, ImGuiStyleVar_ChildWindowRounding to ImGuiStyleVar_ChildRounding.
 - 2017/11/02 (1.53) - obsoleted IsRootWindowOrAnyChildHovered() in favor of using IsWindowHovered(ImGuiHoveredFlags_RootAndChildWindows);
 - 2017/10/24 (1.52) - renamed IMGUI_DISABLE_WIN32_DEFAULT_CLIPBOARD_FUNCS/IMGUI_DISABLE_WIN32_DEFAULT_IME_FUNCS to IMGUI_DISABLE_WIN32_DEFAULT_CLIPBOARD_FUNCTIONS/IMGUI_DISABLE_WIN32_DEFAULT_IME_FUNCTIONS for consistency.
 - 2017/10/20 (1.52) - changed IsWindowHovered() default parameters behavior to return false if an item is active in another window (e.g. click-dragging item from another window to this window). You can use the newly introduced IsWindowHovered() flags to requests this specific behavior if you need it.
 - 2017/10/20 (1.52) - marked IsItemHoveredRect()/IsMouseHoveringWindow() as obsolete, in favor of using the newly introduced flags for IsItemHovered() and IsWindowHovered(). See https://github.com/ocornut/imgui/issues/1382 for details.
                       removed the IsItemRectHovered()/IsWindowRectHovered() names introduced in 1.51 since they were merely more consistent names for the two functions we are now obsoleting.
 - 2017/10/17 (1.52) - marked the old 5-parameters version of Begin() as obsolete (still available). Use SetNextWindowSize()+Begin() instead!
 - 2017/10/11 (1.52) - renamed AlignFirstTextHeightToWidgets() to AlignTextToFramePadding(). Kept inline redirection function (will obsolete).
 - 2017/09/26 (1.52) - renamed ImFont::Glyph to ImFontGlyph. Keep redirection typedef (will obsolete).
 - 2017/09/25 (1.52) - removed SetNextWindowPosCenter() because SetNextWindowPos() now has the optional pivot information to do the same and more. Kept redirection function (will obsolete).
 - 2017/08/25 (1.52) - io.MousePos needs to be set to ImVec2(-FLT_MAX,-FLT_MAX) when mouse is unavailable/missing. Previously ImVec2(-1,-1) was enough but we now accept negative mouse coordinates. In your binding if you need to support unavailable mouse, make sure to replace "io.MousePos = ImVec2(-1,-1)" with "io.MousePos = ImVec2(-FLT_MAX,-FLT_MAX)".
 - 2017/08/22 (1.51) - renamed IsItemHoveredRect() to IsItemRectHovered(). Kept inline redirection function (will obsolete). -> (1.52) use IsItemHovered(ImGuiHoveredFlags_RectOnly)!
                     - renamed IsMouseHoveringAnyWindow() to IsAnyWindowHovered() for consistency. Kept inline redirection function (will obsolete).
                     - renamed IsMouseHoveringWindow() to IsWindowRectHovered() for consistency. Kept inline redirection function (will obsolete).
 - 2017/08/20 (1.51) - renamed GetStyleColName() to GetStyleColorName() for consistency.
 - 2017/08/20 (1.51) - added PushStyleColor(ImGuiCol idx, ImU32 col) overload, which _might_ cause an "ambiguous call" compilation error if you are using ImColor() with implicit cast. Cast to ImU32 or ImVec4 explicily to fix.
 - 2017/08/15 (1.51) - marked the weird IMGUI_ONCE_UPON_A_FRAME helper macro as obsolete. prefer using the more explicit ImGuiOnceUponAFrame.
 - 2017/08/15 (1.51) - changed parameter order for BeginPopupContextWindow() from (const char*,int buttons,bool also_over_items) to (const char*,int buttons,bool also_over_items). Note that most calls relied on default parameters completely.
 - 2017/08/13 (1.51) - renamed ImGuiCol_Columns*** to ImGuiCol_Separator***. Kept redirection enums (will obsolete).
 - 2017/08/11 (1.51) - renamed ImGuiSetCond_*** types and flags to ImGuiCond_***. Kept redirection enums (will obsolete).
 - 2017/08/09 (1.51) - removed ValueColor() helpers, they are equivalent to calling Text(label) + SameLine() + ColorButton().
 - 2017/08/08 (1.51) - removed ColorEditMode() and ImGuiColorEditMode in favor of ImGuiColorEditFlags and parameters to the various Color*() functions. The SetColorEditOptions() allows to initialize default but the user can still change them with right-click context menu.
                     - changed prototype of 'ColorEdit4(const char* label, float col[4], bool show_alpha = true)' to 'ColorEdit4(const char* label, float col[4], ImGuiColorEditFlags flags = 0)', where passing flags = 0x01 is a safe no-op (hello dodgy backward compatibility!). - check and run the demo window, under "Color/Picker Widgets", to understand the various new options.
                     - changed prototype of rarely used 'ColorButton(ImVec4 col, bool small_height = false, bool outline_border = true)' to 'ColorButton(const char* desc_id, ImVec4 col, ImGuiColorEditFlags flags = 0, ImVec2 size = ImVec2(0,0))'
 - 2017/07/20 (1.51) - removed IsPosHoveringAnyWindow(ImVec2), which was partly broken and misleading. ASSERT + redirect user to io.WantCaptureMouse
 - 2017/05/26 (1.50) - removed ImFontConfig::MergeGlyphCenterV in favor of a more multipurpose ImFontConfig::GlyphOffset.
 - 2017/05/01 (1.50) - renamed ImDrawList::PathFill() (rarely used directly) to ImDrawList::PathFillConvex() for clarity.
 - 2016/11/06 (1.50) - BeginChild(const char*) now applies the stack id to the provided label, consistently with other functions as it should always have been. It shouldn't affect you unless (extremely unlikely) you were appending multiple times to a same child from different locations of the stack id. If that's the case, generate an id with GetId() and use it instead of passing string to BeginChild().
 - 2016/10/15 (1.50) - avoid 'void* user_data' parameter to io.SetClipboardTextFn/io.GetClipboardTextFn pointers. We pass io.ClipboardUserData to it.
 - 2016/09/25 (1.50) - style.WindowTitleAlign is now a ImVec2 (ImGuiAlign enum was removed). set to (0.5f,0.5f) for horizontal+vertical centering, (0.0f,0.0f) for upper-left, etc.
 - 2016/07/30 (1.50) - SameLine(x) with x>0.0f is now relative to left of column/group if any, and not always to left of window. This was sort of always the intent and hopefully breakage should be minimal.
 - 2016/05/12 (1.49) - title bar (using ImGuiCol_TitleBg/ImGuiCol_TitleBgActive colors) isn't rendered over a window background (ImGuiCol_WindowBg color) anymore.
                       If your TitleBg/TitleBgActive alpha was 1.0f or you are using the default theme it will not affect you.
                       If your TitleBg/TitleBgActive alpha was <1.0f you need to tweak your custom theme to readjust for the fact that we don't draw a WindowBg background behind the title bar.
                       This helper function will convert an old TitleBg/TitleBgActive color into a new one with the same visual output, given the OLD color and the OLD WindowBg color.
                           ImVec4 ConvertTitleBgCol(const ImVec4& win_bg_col, const ImVec4& title_bg_col)
                           {
                               float new_a = 1.0f - ((1.0f - win_bg_col.w) * (1.0f - title_bg_col.w)), k = title_bg_col.w / new_a;
                               return ImVec4((win_bg_col.x * win_bg_col.w + title_bg_col.x) * k, (win_bg_col.y * win_bg_col.w + title_bg_col.y) * k, (win_bg_col.z * win_bg_col.w + title_bg_col.z) * k, new_a);
                           }
                       If this is confusing, pick the RGB value from title bar from an old screenshot and apply this as TitleBg/TitleBgActive. Or you may just create TitleBgActive from a tweaked TitleBg color.
 - 2016/05/07 (1.49) - removed confusing set of GetInternalState(), GetInternalStateSize(), SetInternalState() functions. Now using CreateContext(), DestroyContext(), GetCurrentContext(), SetCurrentContext().
 - 2016/05/02 (1.49) - renamed SetNextTreeNodeOpened() to SetNextTreeNodeOpen(), no redirection.
 - 2016/05/01 (1.49) - obsoleted old signature of CollapsingHeader(const char* label, const char* str_id = NULL, bool display_frame = true, bool default_open = false) as extra parameters were badly designed and rarely used. You can replace the "default_open = true" flag in new API with CollapsingHeader(label, ImGuiTreeNodeFlags_DefaultOpen).
 - 2016/04/26 (1.49) - changed ImDrawList::PushClipRect(ImVec4 rect) to ImDrawList::PushClipRect(Imvec2 min,ImVec2 max,bool intersect_with_current_clip_rect=false). Note that higher-level ImGui::PushClipRect() is preferable because it will clip at logic/widget level, whereas ImDrawList::PushClipRect() only affect your renderer.
 - 2016/04/03 (1.48) - removed style.WindowFillAlphaDefault setting which was redundant. Bake default BG alpha inside style.Colors[ImGuiCol_WindowBg] and all other Bg color values. (ref github issue #337).
 - 2016/04/03 (1.48) - renamed ImGuiCol_TooltipBg to ImGuiCol_PopupBg, used by popups/menus and tooltips. popups/menus were previously using ImGuiCol_WindowBg. (ref github issue #337)
 - 2016/03/21 (1.48) - renamed GetWindowFont() to GetFont(), GetWindowFontSize() to GetFontSize(). Kept inline redirection function (will obsolete).
 - 2016/03/02 (1.48) - InputText() completion/history/always callbacks: if you modify the text buffer manually (without using DeleteChars()/InsertChars() helper) you need to maintain the BufTextLen field. added an assert.
 - 2016/01/23 (1.48) - fixed not honoring exact width passed to PushItemWidth(), previously it would add extra FramePadding.x*2 over that width. if you had manual pixel-perfect alignment in place it might affect you.
 - 2015/12/27 (1.48) - fixed ImDrawList::AddRect() which used to render a rectangle 1 px too large on each axis.
 - 2015/12/04 (1.47) - renamed Color() helpers to ValueColor() - dangerously named, rarely used and probably to be made obsolete.
 - 2015/08/29 (1.45) - with the addition of horizontal scrollbar we made various fixes to inconsistencies with dealing with cursor position.
                       GetCursorPos()/SetCursorPos() functions now include the scrolled amount. It shouldn't affect the majority of users, but take note that SetCursorPosX(100.0f) puts you at +100 from the starting x position which may include scrolling, not at +100 from the window left side.
                       GetContentRegionMax()/GetWindowContentRegionMin()/GetWindowContentRegionMax() functions allow include the scrolled amount. Typically those were used in cases where no scrolling would happen so it may not be a problem, but watch out!
 - 2015/08/29 (1.45) - renamed style.ScrollbarWidth to style.ScrollbarSize
 - 2015/08/05 (1.44) - split imgui.cpp into extra files: imgui_demo.cpp imgui_draw.cpp imgui_internal.h that you need to add to your project.
 - 2015/07/18 (1.44) - fixed angles in ImDrawList::PathArcTo(), PathArcToFast() (introduced in 1.43) being off by an extra PI for no justifiable reason
 - 2015/07/14 (1.43) - add new ImFontAtlas::AddFont() API. For the old AddFont***, moved the 'font_no' parameter of ImFontAtlas::AddFont** functions to the ImFontConfig structure.
                       you need to render your textured triangles with bilinear filtering to benefit from sub-pixel positioning of text.
 - 2015/07/08 (1.43) - switched rendering data to use indexed rendering. this is saving a fair amount of CPU/GPU and enables us to get anti-aliasing for a marginal cost.
                       this necessary change will break your rendering function! the fix should be very easy. sorry for that :(
                     - if you are using a vanilla copy of one of the imgui_impl_XXXX.cpp provided in the example, you just need to update your copy and you can ignore the rest.
                     - the signature of the io.RenderDrawListsFn handler has changed!
                       old: ImGui_XXXX_RenderDrawLists(ImDrawList** const cmd_lists, int cmd_lists_count)
                       new: ImGui_XXXX_RenderDrawLists(ImDrawData* draw_data).
                         parameters: 'cmd_lists' becomes 'draw_data->CmdLists', 'cmd_lists_count' becomes 'draw_data->CmdListsCount'
                         ImDrawList: 'commands' becomes 'CmdBuffer', 'vtx_buffer' becomes 'VtxBuffer', 'IdxBuffer' is new.
                         ImDrawCmd:  'vtx_count' becomes 'ElemCount', 'clip_rect' becomes 'ClipRect', 'user_callback' becomes 'UserCallback', 'texture_id' becomes 'TextureId'.
                     - each ImDrawList now contains both a vertex buffer and an index buffer. For each command, render ElemCount/3 triangles using indices from the index buffer.
                     - if you REALLY cannot render indexed primitives, you can call the draw_data->DeIndexAllBuffers() method to de-index the buffers. This is slow and a waste of CPU/GPU. Prefer using indexed rendering!
                     - refer to code in the examples/ folder or ask on the GitHub if you are unsure of how to upgrade. please upgrade!
 - 2015/07/10 (1.43) - changed SameLine() parameters from int to float.
 - 2015/07/02 (1.42) - renamed SetScrollPosHere() to SetScrollFromCursorPos(). Kept inline redirection function (will obsolete).
 - 2015/07/02 (1.42) - renamed GetScrollPosY() to GetScrollY(). Necessary to reduce confusion along with other scrolling functions, because positions (e.g. cursor position) are not equivalent to scrolling amount.
 - 2015/06/14 (1.41) - changed ImageButton() default bg_col parameter from (0,0,0,1) (black) to (0,0,0,0) (transparent) - makes a difference when texture have transparence
 - 2015/06/14 (1.41) - changed Selectable() API from (label, selected, size) to (label, selected, flags, size). Size override should have been rarely be used. Sorry!
 - 2015/05/31 (1.40) - renamed GetWindowCollapsed() to IsWindowCollapsed() for consistency. Kept inline redirection function (will obsolete).
 - 2015/05/31 (1.40) - renamed IsRectClipped() to IsRectVisible() for consistency. Note that return value is opposite! Kept inline redirection function (will obsolete).
 - 2015/05/27 (1.40) - removed the third 'repeat_if_held' parameter from Button() - sorry! it was rarely used and inconsistent. Use PushButtonRepeat(true) / PopButtonRepeat() to enable repeat on desired buttons.
 - 2015/05/11 (1.40) - changed BeginPopup() API, takes a string identifier instead of a bool. ImGui needs to manage the open/closed state of popups. Call OpenPopup() to actually set the "open" state of a popup. BeginPopup() returns true if the popup is opened.
 - 2015/05/03 (1.40) - removed style.AutoFitPadding, using style.WindowPadding makes more sense (the default values were already the same).
 - 2015/04/13 (1.38) - renamed IsClipped() to IsRectClipped(). Kept inline redirection function until 1.50.
 - 2015/04/09 (1.38) - renamed ImDrawList::AddArc() to ImDrawList::AddArcFast() for compatibility with future API
 - 2015/04/03 (1.38) - removed ImGuiCol_CheckHovered, ImGuiCol_CheckActive, replaced with the more general ImGuiCol_FrameBgHovered, ImGuiCol_FrameBgActive.
 - 2014/04/03 (1.38) - removed support for passing -FLT_MAX..+FLT_MAX as the range for a SliderFloat(). Use DragFloat() or Inputfloat() instead.
 - 2015/03/17 (1.36) - renamed GetItemBoxMin()/GetItemBoxMax()/IsMouseHoveringBox() to GetItemRectMin()/GetItemRectMax()/IsMouseHoveringRect(). Kept inline redirection function until 1.50.
 - 2015/03/15 (1.36) - renamed style.TreeNodeSpacing to style.IndentSpacing, ImGuiStyleVar_TreeNodeSpacing to ImGuiStyleVar_IndentSpacing
 - 2015/03/13 (1.36) - renamed GetWindowIsFocused() to IsWindowFocused(). Kept inline redirection function until 1.50.
 - 2015/03/08 (1.35) - renamed style.ScrollBarWidth to style.ScrollbarWidth (casing)
 - 2015/02/27 (1.34) - renamed OpenNextNode(bool) to SetNextTreeNodeOpened(bool, ImGuiSetCond). Kept inline redirection function until 1.50.
 - 2015/02/27 (1.34) - renamed ImGuiSetCondition_*** to ImGuiSetCond_***, and _FirstUseThisSession becomes _Once.
 - 2015/02/11 (1.32) - changed text input callback ImGuiTextEditCallback return type from void-->int. reserved for future use, return 0 for now.
 - 2015/02/10 (1.32) - renamed GetItemWidth() to CalcItemWidth() to clarify its evolving behavior
 - 2015/02/08 (1.31) - renamed GetTextLineSpacing() to GetTextLineHeightWithSpacing()
 - 2015/02/01 (1.31) - removed IO.MemReallocFn (unused)
 - 2015/01/19 (1.30) - renamed ImGuiStorage::GetIntPtr()/GetFloatPtr() to GetIntRef()/GetIntRef() because Ptr was conflicting with actual pointer storage functions.
 - 2015/01/11 (1.30) - big font/image API change! now loads TTF file. allow for multiple fonts. no need for a PNG loader.
              (1.30) - removed GetDefaultFontData(). uses io.Fonts->GetTextureData*() API to retrieve uncompressed pixels.
                       font init:  { const void* png_data; unsigned int png_size; ImGui::GetDefaultFontData(NULL, NULL, &png_data, &png_size); <..Upload texture to GPU..>; }
                       became:     { unsigned char* pixels; int width, height; io.Fonts->GetTexDataAsRGBA32(&pixels, &width, &height); <..Upload texture to GPU>; io.Fonts->TexId = YourTextureIdentifier; }
                       you now have more flexibility to load multiple TTF fonts and manage the texture buffer for internal needs.
                       it is now recommended that you sample the font texture with bilinear interpolation.
              (1.30) - added texture identifier in ImDrawCmd passed to your render function (we can now render images). make sure to set io.Fonts->TexID.
              (1.30) - removed IO.PixelCenterOffset (unnecessary, can be handled in user projection matrix)
              (1.30) - removed ImGui::IsItemFocused() in favor of ImGui::IsItemActive() which handles all widgets
 - 2014/12/10 (1.18) - removed SetNewWindowDefaultPos() in favor of new generic API SetNextWindowPos(pos, ImGuiSetCondition_FirstUseEver)
 - 2014/11/28 (1.17) - moved IO.Font*** options to inside the IO.Font-> structure (FontYOffset, FontTexUvForWhite, FontBaseScale, FontFallbackGlyph)
 - 2014/11/26 (1.17) - reworked syntax of IMGUI_ONCE_UPON_A_FRAME helper macro to increase compiler compatibility
 - 2014/11/07 (1.15) - renamed IsHovered() to IsItemHovered()
 - 2014/10/02 (1.14) - renamed IMGUI_INCLUDE_IMGUI_USER_CPP to IMGUI_INCLUDE_IMGUI_USER_INL and imgui_user.cpp to imgui_user.inl (more IDE friendly)
 - 2014/09/25 (1.13) - removed 'text_end' parameter from IO.SetClipboardTextFn (the string is now always zero-terminated for simplicity)
 - 2014/09/24 (1.12) - renamed SetFontScale() to SetWindowFontScale()
 - 2014/09/24 (1.12) - moved IM_MALLOC/IM_REALLOC/IM_FREE preprocessor defines to IO.MemAllocFn/IO.MemReallocFn/IO.MemFreeFn
 - 2014/08/30 (1.09) - removed IO.FontHeight (now computed automatically)
 - 2014/08/30 (1.09) - moved IMGUI_FONT_TEX_UV_FOR_WHITE preprocessor define to IO.FontTexUvForWhite
 - 2014/08/28 (1.09) - changed the behavior of IO.PixelCenterOffset following various rendering fixes


 FREQUENTLY ASKED QUESTIONS (FAQ), TIPS
 ======================================

 Q: Where is the documentation?
 A: This library is poorly documented at the moment and expects of the user to be acquainted with C/C++.
    - Run the examples/ and explore them.
    - See demo code in imgui_demo.cpp and particularly the ImGui::ShowDemoWindow() function. 
    - The demo covers most features of Dear ImGui, so you can read the code and see its output. 
    - See documentation and comments at the top of imgui.cpp + effectively imgui.h.
    - Dozens of standalone example applications using e.g. OpenGL/DirectX are provided in the examples/ 
      folder to explain how to integrate Dear ImGui with your own engine/application.
    - Your programming IDE is your friend, find the type or function declaration to find comments 
      associated to it.

 Q: Which version should I get?
 A: I occasionally tag Releases (https://github.com/ocornut/imgui/releases) but it is generally safe 
    and recommended to sync to master/latest. The library is fairly stable and regressions tend to be 
    fixed fast when reported. You may also peak at the 'docking' branch which includes:
    - Docking/Merging features (https://github.com/ocornut/imgui/issues/2109)
    - Multi-viewport features (https://github.com/ocornut/imgui/issues/1542)
    Many projects are using this branch and it is kept in sync with master regularly.

 Q: Who uses Dear ImGui?
 A: See "Quotes" (https://github.com/ocornut/imgui/wiki/Quotes) and
    "Software using Dear ImGui" (https://github.com/ocornut/imgui/wiki/Software-using-dear-imgui) Wiki pages
    for a list of games/software which are publicly known to use dear imgui. Please add yours if you can!

 Q: Why the odd dual naming, "Dear ImGui" vs "ImGui"?
 A: The library started its life as "ImGui" due to the fact that I didn't give it a proper name when 
    when I released 1.0, and had no particular expectation that it would take off. However, the term IMGUI 
    (immediate-mode graphical user interface) was coined before and is being used in variety of other 
    situations (e.g. Unity uses it own implementation of the IMGUI paradigm). 
    To reduce the ambiguity without affecting existing code bases, I have decided on an alternate, 
    longer name "Dear ImGui" that people can use to refer to this specific library.
    Please try to refer to this library as "Dear ImGui".

 Q: How can I tell whether to dispatch mouse/keyboard to imgui or to my application?
 A: You can read the 'io.WantCaptureMouse', 'io.WantCaptureKeyboard' and 'io.WantTextInput' flags from the ImGuiIO structure (e.g. if (ImGui::GetIO().WantCaptureMouse) { ... } )
    - When 'io.WantCaptureMouse' is set, imgui wants to use your mouse state, and you may want to discard/hide the inputs from the rest of your application.
    - When 'io.WantCaptureKeyboard' is set, imgui wants to use your keyboard state, and you may want to discard/hide the inputs from the rest of your application.
    - When 'io.WantTextInput' is set to may want to notify your OS to popup an on-screen keyboard, if available (e.g. on a mobile phone, or console OS).
    Note: you should always pass your mouse/keyboard inputs to imgui, even when the io.WantCaptureXXX flag are set false.
     This is because imgui needs to detect that you clicked in the void to unfocus its own windows.
    Note: The 'io.WantCaptureMouse' is more accurate that any attempt to "check if the mouse is hovering a window" (don't do that!).
     It handle mouse dragging correctly (both dragging that started over your application or over an imgui window) and handle e.g. modal windows blocking inputs.
     Those flags are updated by ImGui::NewFrame(). Preferably read the flags after calling NewFrame() if you can afford it, but reading them before is also
     perfectly fine, as the bool toggle fairly rarely. If you have on a touch device, you might find use for an early call to UpdateHoveredWindowAndCaptureFlags().
    Note: Text input widget releases focus on "Return KeyDown", so the subsequent "Return KeyUp" event that your application receive will typically
     have 'io.WantCaptureKeyboard=false'. Depending on your application logic it may or not be inconvenient. You might want to track which key-downs
     were targeted for Dear ImGui, e.g. with an array of bool, and filter out the corresponding key-ups.)

 Q: How can I display an image? What is ImTextureID, how does it works?
 A: Short explanation:
    - You may use functions such as ImGui::Image(), ImGui::ImageButton() or lower-level ImDrawList::AddImage() to emit draw calls that will use your own textures.
    - Actual textures are identified in a way that is up to the user/engine. Those identifiers are stored and passed as ImTextureID (void*) value.
    - Loading image files from the disk and turning them into a texture is not within the scope of Dear ImGui (for a good reason).
      Please read documentations or tutorials on your graphics API to understand how to display textures on the screen before moving onward.

    Long explanation:
    - Dear ImGui's job is to create "meshes", defined in a renderer-agnostic format made of draw commands and vertices.
      At the end of the frame those meshes (ImDrawList) will be displayed by your rendering function. They are made up of textured polygons and the code
      to render them is generally fairly short (a few dozen lines). In the examples/ folder we provide functions for popular graphics API (OpenGL, DirectX, etc.).
    - Each rendering function decides on a data type to represent "textures". The concept of what is a "texture" is entirely tied to your underlying engine/graphics API.
      We carry the information to identify a "texture" in the ImTextureID type.
      ImTextureID is nothing more that a void*, aka 4/8 bytes worth of data: just enough to store 1 pointer or 1 integer of your choice.
      Dear ImGui doesn't know or understand what you are storing in ImTextureID, it merely pass ImTextureID values until they reach your rendering function.
    - In the examples/ bindings, for each graphics API binding we decided on a type that is likely to be a good representation for specifying
      an image from the end-user perspective. This is what the _examples_ rendering functions are using:

         OpenGL:     ImTextureID = GLuint                       (see ImGui_ImplGlfwGL3_RenderDrawData() function in imgui_impl_glfw_gl3.cpp)
         DirectX9:   ImTextureID = LPDIRECT3DTEXTURE9           (see ImGui_ImplDX9_RenderDrawData()     function in imgui_impl_dx9.cpp)
         DirectX11:  ImTextureID = ID3D11ShaderResourceView*    (see ImGui_ImplDX11_RenderDrawData()    function in imgui_impl_dx11.cpp)
         DirectX12:  ImTextureID = D3D12_GPU_DESCRIPTOR_HANDLE  (see ImGui_ImplDX12_RenderDrawData()    function in imgui_impl_dx12.cpp)

      For example, in the OpenGL example binding we store raw OpenGL texture identifier (GLuint) inside ImTextureID.
      Whereas in the DirectX11 example binding we store a pointer to ID3D11ShaderResourceView inside ImTextureID, which is a higher-level structure
      tying together both the texture and information about its format and how to read it.
    - If you have a custom engine built over e.g. OpenGL, instead of passing GLuint around you may decide to use a high-level data type to carry information about
      the texture as well as how to display it (shaders, etc.). The decision of what to use as ImTextureID can always be made better knowing how your codebase
      is designed. If your engine has high-level data types for "textures" and "material" then you may want to use them.
      If you are starting with OpenGL or DirectX or Vulkan and haven't built much of a rendering engine over them, keeping the default ImTextureID
      representation suggested by the example bindings is probably the best choice.
      (Advanced users may also decide to keep a low-level type in ImTextureID, and use ImDrawList callback and pass information to their renderer)

    User code may do:

        // Cast our texture type to ImTextureID / void*
        MyTexture* texture = g_CoffeeTableTexture;
        ImGui::Image((void*)texture, ImVec2(texture->Width, texture->Height));

    The renderer function called after ImGui::Render() will receive that same value that the user code passed:

        // Cast ImTextureID / void* stored in the draw command as our texture type
        MyTexture* texture = (MyTexture*)pcmd->TextureId;
        MyEngineBindTexture2D(texture);

    Once you understand this design you will understand that loading image files and turning them into displayable textures is not within the scope of Dear ImGui.
    This is by design and is actually a good thing, because it means your code has full control over your data types and how you display them.
    If you want to display an image file (e.g. PNG file) into the screen, please refer to documentation and tutorials for the graphics API you are using.

    Here's a simplified OpenGL example using stb_image.h:

        // Use stb_image.h to load a PNG from disk and turn it into raw RGBA pixel data:
        #define STB_IMAGE_IMPLEMENTATION
        #include <stb_image.h>
        [...]
        int my_image_width, my_image_height;
        unsigned char* my_image_data = stbi_load("my_image.png", &my_image_width, &my_image_height, NULL, 4);

        // Turn the RGBA pixel data into an OpenGL texture:
        GLuint my_opengl_texture;
        glGenTextures(1, &my_opengl_texture);
        glBindTexture(GL_TEXTURE_2D, my_opengl_texture);
        glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_LINEAR);
        glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_LINEAR);
        glPixelStorei(GL_UNPACK_ROW_LENGTH, 0);
        glTexImage2D(GL_TEXTURE_2D, 0, GL_RGBA, image_width, image_height, 0, GL_RGBA, GL_UNSIGNED_BYTE, image_data);

        // Now that we have an OpenGL texture, assuming our imgui rendering function (imgui_impl_xxx.cpp file) takes GLuint as ImTextureID, we can display it:
        ImGui::Image((void*)(intptr_t)my_opengl_texture, ImVec2(my_image_width, my_image_height));

    C/C++ tip: a void* is pointer-sized storage. You may safely store any pointer or integer into it by casting your value to ImTextureID / void*, and vice-versa.
    Because both end-points (user code and rendering function) are under your control, you know exactly what is stored inside the ImTextureID / void*.
    Examples:

        GLuint my_tex = XXX;
        void* my_void_ptr;
        my_void_ptr = (void*)(intptr_t)my_tex;                  // cast a GLuint into a void* (we don't take its address! we literally store the value inside the pointer)
        my_tex = (GLuint)(intptr_t)my_void_ptr;                 // cast a void* into a GLuint

        ID3D11ShaderResourceView* my_dx11_srv = XXX;
        void* my_void_ptr;
        my_void_ptr = (void*)my_dx11_srv;                       // cast a ID3D11ShaderResourceView* into an opaque void*
        my_dx11_srv = (ID3D11ShaderResourceView*)my_void_ptr;   // cast a void* into a ID3D11ShaderResourceView*

    Finally, you may call ImGui::ShowMetricsWindow() to explore/visualize/understand how the ImDrawList are generated.

 Q: Why are multiple widgets reacting when I interact with a single one?
 Q: How can I have multiple widgets with the same label or with an empty label?
 A: A primer on labels and the ID Stack...

    Dear ImGui internally need to uniquely identify UI elements.
    Elements that are typically not clickable (such as calls to the Text functions) don't need an ID.
    Interactive widgets (such as calls to Button buttons) need a unique ID.
    Unique ID are used internally to track active widgets and occasionally associate state to widgets.
    Unique ID are implicitly built from the hash of multiple elements that identify the "path" to the UI element.

   - Unique ID are often derived from a string label:

       Button("OK");          // Label = "OK",     ID = hash of (..., "OK")
       Button("Cancel");      // Label = "Cancel", ID = hash of (..., "Cancel")

   - ID are uniquely scoped within windows, tree nodes, etc. which all pushes to the ID stack. Having
     two buttons labeled "OK" in different windows or different tree locations is fine.
     We used "..." above to signify whatever was already pushed to the ID stack previously:

       Begin("MyWindow");
       Button("OK");          // Label = "OK",     ID = hash of ("MyWindow", "OK")
       End();
       Begin("MyOtherWindow");
       Button("OK");          // Label = "OK",     ID = hash of ("MyOtherWindow", "OK")
       End();

   - If you have a same ID twice in the same location, you'll have a conflict:

       Button("OK");
       Button("OK");          // ID collision! Interacting with either button will trigger the first one.

     Fear not! this is easy to solve and there are many ways to solve it!

   - Solving ID conflict in a simple/local context:
     When passing a label you can optionally specify extra ID information within string itself.
     Use "##" to pass a complement to the ID that won't be visible to the end-user.
     This helps solving the simple collision cases when you know e.g. at compilation time which items
     are going to be created:

       Begin("MyWindow");
       Button("Play");        // Label = "Play",   ID = hash of ("MyWindow", "Play")
       Button("Play##foo1");  // Label = "Play",   ID = hash of ("MyWindow", "Play##foo1")  // Different from above
       Button("Play##foo2");  // Label = "Play",   ID = hash of ("MyWindow", "Play##foo2")  // Different from above
       End();

   - If you want to completely hide the label, but still need an ID:

       Checkbox("##On", &b);  // Label = "",       ID = hash of (..., "##On")   // No visible label, just a checkbox!

   - Occasionally/rarely you might want change a label while preserving a constant ID. This allows
     you to animate labels. For example you may want to include varying information in a window title bar,
     but windows are uniquely identified by their ID. Use "###" to pass a label that isn't part of ID:

       Button("Hello###ID");  // Label = "Hello",  ID = hash of (..., "###ID")
       Button("World###ID");  // Label = "World",  ID = hash of (..., "###ID")  // Same as above, even though the label looks different

       sprintf(buf, "My game (%f FPS)###MyGame", fps);
       Begin(buf);            // Variable title,   ID = hash of "MyGame"

   - Solving ID conflict in a more general manner:
     Use PushID() / PopID() to create scopes and manipulate the ID stack, as to avoid ID conflicts
     within the same window. This is the most convenient way of distinguishing ID when iterating and
     creating many UI elements programmatically.
     You can push a pointer, a string or an integer value into the ID stack.
     Remember that ID are formed from the concatenation of _everything_ pushed into the ID stack.
     At each level of the stack we store the seed used for items at this level of the ID stack.

     Begin("Window");
       for (int i = 0; i < 100; i++)
       {
         PushID(i);           // Push i to the id tack
         Button("Click");     // Label = "Click",  ID = hash of ("Window", i, "Click")
         PopID();
       }
       for (int i = 0; i < 100; i++)
       {
         MyObject* obj = Objects[i];
         PushID(obj);
         Button("Click");     // Label = "Click",  ID = hash of ("Window", obj pointer, "Click")
         PopID();
       }
       for (int i = 0; i < 100; i++)
       {
         MyObject* obj = Objects[i];
         PushID(obj->Name);
         Button("Click");     // Label = "Click",  ID = hash of ("Window", obj->Name, "Click")
         PopID();
       }
       End();

   - You can stack multiple prefixes into the ID stack:

       Button("Click");       // Label = "Click",  ID = hash of (..., "Click")
       PushID("node");
       Button("Click");       // Label = "Click",  ID = hash of (..., "node", "Click")
         PushID(my_ptr);
           Button("Click");   // Label = "Click",  ID = hash of (..., "node", my_ptr, "Click")
         PopID();
       PopID();

   - Tree nodes implicitly creates a scope for you by calling PushID().

       Button("Click");       // Label = "Click",  ID = hash of (..., "Click")
       if (TreeNode("node"))  // <-- this function call will do a PushID() for you (unless instructed not to, with a special flag)
       {
         Button("Click");     // Label = "Click",  ID = hash of (..., "node", "Click")
         TreePop();
       }

   - When working with trees, ID are used to preserve the open/close state of each tree node.
     Depending on your use cases you may want to use strings, indices or pointers as ID.
      e.g. when following a single pointer that may change over time, using a static string as ID
       will preserve your node open/closed state when the targeted object change.
      e.g. when displaying a list of objects, using indices or pointers as ID will preserve the
       node open/closed state differently. See what makes more sense in your situation!

 Q: How can I use my own math types instead of ImVec2/ImVec4?
 A: You can edit imconfig.h and setup the IM_VEC2_CLASS_EXTRA/IM_VEC4_CLASS_EXTRA macros to add implicit type conversions.
    This way you'll be able to use your own types everywhere, e.g. passing glm::vec2 to ImGui functions instead of ImVec2.

 Q: How can I load a different font than the default?
 A: Use the font atlas to load the TTF/OTF file you want:
      ImGuiIO& io = ImGui::GetIO();
      io.Fonts->AddFontFromFileTTF("myfontfile.ttf", size_in_pixels);
      io.Fonts->GetTexDataAsRGBA32() or GetTexDataAsAlpha8()
    Default is ProggyClean.ttf, monospace, rendered at size 13, embedded in dear imgui's source code.
    (Tip: monospace fonts are convenient because they allow to facilitate horizontal alignment directly at the string level.)
    (Read the 'misc/fonts/README.txt' file for more details about font loading.)

    New programmers: remember that in C/C++ and most programming languages if you want to use a
    backslash \ within a string literal, you need to write it double backslash "\\":
      io.Fonts->AddFontFromFileTTF("MyDataFolder\MyFontFile.ttf", size_in_pixels);   // WRONG (you are escape the M here!)
      io.Fonts->AddFontFromFileTTF("MyDataFolder\\MyFontFile.ttf", size_in_pixels);  // CORRECT
      io.Fonts->AddFontFromFileTTF("MyDataFolder/MyFontFile.ttf", size_in_pixels);   // ALSO CORRECT

 Q: How can I easily use icons in my application?
 A: The most convenient and practical way is to merge an icon font such as FontAwesome inside you
    main font. Then you can refer to icons within your strings.
    You may want to see ImFontConfig::GlyphMinAdvanceX to make your icon look monospace to facilitate alignment.
    (Read the 'misc/fonts/README.txt' file for more details about icons font loading.)

 Q: How can I load multiple fonts?
 A: Use the font atlas to pack them into a single texture:
    (Read the 'misc/fonts/README.txt' file and the code in ImFontAtlas for more details.)

      ImGuiIO& io = ImGui::GetIO();
      ImFont* font0 = io.Fonts->AddFontDefault();
      ImFont* font1 = io.Fonts->AddFontFromFileTTF("myfontfile.ttf", size_in_pixels);
      ImFont* font2 = io.Fonts->AddFontFromFileTTF("myfontfile2.ttf", size_in_pixels);
      io.Fonts->GetTexDataAsRGBA32() or GetTexDataAsAlpha8()
      // the first loaded font gets used by default
      // use ImGui::PushFont()/ImGui::PopFont() to change the font at runtime

      // Options
      ImFontConfig config;
      config.OversampleH = 2;
      config.OversampleV = 1;
      config.GlyphOffset.y -= 1.0f;      // Move everything by 1 pixels up
      config.GlyphExtraSpacing.x = 1.0f; // Increase spacing between characters
      io.Fonts->AddFontFromFileTTF("myfontfile.ttf", size_pixels, &config);

      // Combine multiple fonts into one (e.g. for icon fonts)
      static ImWchar ranges[] = { 0xf000, 0xf3ff, 0 };
      ImFontConfig config;
      config.MergeMode = true;
      io.Fonts->AddFontDefault();
      io.Fonts->AddFontFromFileTTF("fontawesome-webfont.ttf", 16.0f, &config, ranges); // Merge icon font
      io.Fonts->AddFontFromFileTTF("myfontfile.ttf", size_pixels, NULL, &config, io.Fonts->GetGlyphRangesJapanese()); // Merge japanese glyphs

 Q: How can I display and input non-Latin characters such as Chinese, Japanese, Korean, Cyrillic?
 A: When loading a font, pass custom Unicode ranges to specify the glyphs to load.

      // Add default Japanese ranges
      io.Fonts->AddFontFromFileTTF("myfontfile.ttf", size_in_pixels, NULL, io.Fonts->GetGlyphRangesJapanese());

      // Or create your own custom ranges (e.g. for a game you can feed your entire game script and only build the characters the game need)
      ImVector<ImWchar> ranges;
      ImFontGlyphRangesBuilder builder;
      builder.AddText("Hello world");                        // Add a string (here "Hello world" contains 7 unique characters)
      builder.AddChar(0x7262);                               // Add a specific character
      builder.AddRanges(io.Fonts->GetGlyphRangesJapanese()); // Add one of the default ranges
      builder.BuildRanges(&ranges);                          // Build the final result (ordered ranges with all the unique characters submitted)
      io.Fonts->AddFontFromFileTTF("myfontfile.ttf", size_in_pixels, NULL, ranges.Data);

    All your strings needs to use UTF-8 encoding. In C++11 you can encode a string literal in UTF-8
    by using the u8"hello" syntax. Specifying literal in your source code using a local code page
    (such as CP-923 for Japanese or CP-1251 for Cyrillic) will NOT work!
    Otherwise you can convert yourself to UTF-8 or load text data from file already saved as UTF-8.

    Text input: it is up to your application to pass the right character code by calling io.AddInputCharacter().
    The applications in examples/ are doing that.
    Windows: you can use the WM_CHAR or WM_UNICHAR or WM_IME_CHAR message (depending if your app is built using Unicode or MultiByte mode).
    You may also use MultiByteToWideChar() or ToUnicode() to retrieve Unicode codepoints from MultiByte characters or keyboard state.
    Windows: if your language is relying on an Input Method Editor (IME), you copy the HWND of your window to io.ImeWindowHandle in order for
    the default implementation of io.ImeSetInputScreenPosFn() to set your Microsoft IME position correctly.

 Q: How can I interact with standard C++ types (such as std::string and std::vector)?
 A: - Being highly portable (bindings for several languages, frameworks, programming style, obscure or older platforms/compilers),
      and aiming for compatibility & performance suitable for every modern real-time game engines, dear imgui does not use
      any of std C++ types. We use raw types (e.g. char* instead of std::string) because they adapt to more use cases.
    - To use ImGui::InputText() with a std::string or any resizable string class, see misc/cpp/imgui_stdlib.h.
    - To use combo boxes and list boxes with std::vector or any other data structure: the BeginCombo()/EndCombo() API
      lets you iterate and submit items yourself, so does the ListBoxHeader()/ListBoxFooter() API.
      Prefer using them over the old and awkward Combo()/ListBox() api.
    - Generally for most high-level types you should be able to access the underlying data type.
      You may write your own one-liner wrappers to facilitate user code (tip: add new functions in ImGui:: namespace from your code).
    - Dear ImGui applications often need to make intensive use of strings. It is expected that many of the strings you will pass
      to the API are raw literals (free in C/C++) or allocated in a manner that won't incur a large cost on your application.
      Please bear in mind that using std::string on applications with large amount of UI may incur unsatisfactory performances.
      Modern implementations of std::string often include small-string optimization (which is often a local buffer) but those
      are not configurable and not the same across implementations.
    - If you are finding your UI traversal cost to be too large, make sure your string usage is not leading to excessive amount
      of heap allocations. Consider using literals, statically sized buffers and your own helper functions. A common 

      is that you will need to build lots of strings on the fly, and their maximum length can be easily be scoped ahead.
      One possible implementation of a helper to facilitate printf-style building of strings: https://github.com/ocornut/Str
      This is a small helper where you can instance strings with configurable local buffers length. Many game engines will
      provide similar or better string helpers.

 Q: How can I use the drawing facilities without an ImGui window? (using ImDrawList API)
 A: - You can create a dummy window. Call Begin() with the NoBackground | NoDecoration | NoSavedSettings | NoInputs flags.
      (The ImGuiWindowFlags_NoDecoration flag itself is a shortcut for NoTitleBar | NoResize | NoScrollbar | NoCollapse)
      Then you can retrieve the ImDrawList* via GetWindowDrawList() and draw to it in any way you like.
    - You can call ImGui::GetBackgroundDrawList() or ImGui::GetForegroundDrawList() and use those draw list to display
      contents behind or over every other imgui windows (one bg/fg drawlist per viewport).
    - You can create your own ImDrawList instance. You'll need to initialize them ImGui::GetDrawListSharedData(), or create
      your own ImDrawListSharedData, and then call your rendered code with your own ImDrawList or ImDrawData data.

 Q: How can I use this without a mouse, without a keyboard or without a screen? (gamepad, input share, remote display)
 A: - You can control Dear ImGui with a gamepad. Read about navigation in "Using gamepad/keyboard navigation controls".
      (short version: map gamepad inputs into the io.NavInputs[] array + set io.ConfigFlags |= ImGuiConfigFlags_NavEnableGamepad)
    - You can share your computer mouse seamlessly with your console/tablet/phone using Synergy (https://symless.com/synergy)
      This is the preferred solution for developer productivity.
      In particular, the "micro-synergy-client" repository (https://github.com/symless/micro-synergy-client) has simple
      and portable source code (uSynergy.c/.h) for a small embeddable client that you can use on any platform to connect
      to your host computer, based on the Synergy 1.x protocol. Make sure you download the Synergy 1 server on your computer.
      Console SDK also sometimes provide equivalent tooling or wrapper for Synergy-like protocols.
    - You may also use a third party solution such as Remote ImGui (https://github.com/JordiRos/remoteimgui) which sends
      the vertices to render over the local network, allowing you to use Dear ImGui even on a screen-less machine.
    - For touch inputs, you can increase the hit box of widgets (via the style.TouchPadding setting) to accommodate
      for the lack of precision of touch inputs, but it is recommended you use a mouse or gamepad to allow optimizing
      for screen real-estate and precision.

 Q: I integrated Dear ImGui in my engine and the text or lines are blurry..
 A: In your Render function, try translating your projection matrix by (0.5f,0.5f) or (0.375f,0.375f).
    Also make sure your orthographic projection matrix and io.DisplaySize matches your actual framebuffer dimension.

 Q: I integrated Dear ImGui in my engine and some elements are clipping or disappearing when I move windows around..
 A: You are probably mishandling the clipping rectangles in your render function.
    Rectangles provided by ImGui are defined as (x1=left,y1=top,x2=right,y2=bottom) and NOT as (x1,y1,width,height).

 Q: How can I help?
 A: - If you are experienced with Dear ImGui and C++, look at the github issues, look at the Wiki, read docs/TODO.txt
      and see how you want to help and can help!
    - Businesses: convince your company to fund development via support contracts/sponsoring! This is among the most useful thing you can do for dear imgui.
    - Individuals: you can also become a Patron (http://www.patreon.com/imgui) or donate on PayPal! See README.
    - Disclose your usage of dear imgui via a dev blog post, a tweet, a screenshot, a mention somewhere etc.
      You may post screenshot or links in the gallery threads (github.com/ocornut/imgui/issues/1902). Visuals are ideal as they inspire other programmers.
      But even without visuals, disclosing your use of dear imgui help the library grow credibility, and help other teams and programmers with taking decisions.
    - If you have issues or if you need to hack into the library, even if you don't expect any support it is useful that you share your issues (on github or privately).

 - tip: you can call Begin() multiple times with the same name during the same frame, it will keep appending to the same window.
        this is also useful to set yourself in the context of another window (to get/set other settings)
 - tip: you can create widgets without a Begin()/End() block, they will go in an implicit window called "Debug".
 - tip: the ImGuiOnceUponAFrame helper will allow run the block of code only once a frame. You can use it to quickly add custom UI in the middle
        of a deep nested inner loop in your code.
 - tip: you can call Render() multiple times (e.g for VR renders).
 - tip: call and read the ShowDemoWindow() code in imgui_demo.cpp for more example of how to use ImGui!

*/

#if defined(_MSC_VER) && !defined(_CRT_SECURE_NO_WARNINGS)
#define _CRT_SECURE_NO_WARNINGS
#endif

#include "imgui.h"
#ifndef IMGUI_DEFINE_MATH_OPERATORS
#define IMGUI_DEFINE_MATH_OPERATORS
#endif
#include "imgui_internal.h"

#include <ctype.h>      // toupper
#include <stdio.h>      // vsnprintf, sscanf, printf
#if defined(_MSC_VER) && _MSC_VER <= 1500 // MSVC 2008 or earlier
#include <stddef.h>     // intptr_t
#else
#include <stdint.h>     // intptr_t
#endif

// Debug options
#define IMGUI_DEBUG_NAV_SCORING     0   // Display navigation scoring preview when hovering items. Display last moving direction matches when holding CTRL
#define IMGUI_DEBUG_NAV_RECTS       0   // Display the reference navigation rectangle for each window

// Visual Studio warnings
#ifdef _MSC_VER
#pragma warning (disable: 4127)     // condition expression is constant
#pragma warning (disable: 4996)     // 'This function or variable may be unsafe': strcpy, strdup, sprintf, vsnprintf, sscanf, fopen
#endif

// Clang/GCC warnings with -Weverything
#ifdef __clang__
#pragma clang diagnostic ignored "-Wunknown-pragmas"        // warning : unknown warning group '-Wformat-pedantic *'        // not all warnings are known by all clang versions.. so ignoring warnings triggers new warnings on some configuration. great!
#pragma clang diagnostic ignored "-Wold-style-cast"         // warning : use of old-style cast                              // yes, they are more terse.
#pragma clang diagnostic ignored "-Wfloat-equal"            // warning : comparing floating point with == or != is unsafe   // storing and comparing against same constants (typically 0.0f) is ok.
#pragma clang diagnostic ignored "-Wformat-nonliteral"      // warning : format string is not a string literal              // passing non-literal to vsnformat(). yes, user passing incorrect format strings can crash the code.
#pragma clang diagnostic ignored "-Wexit-time-destructors"  // warning : declaration requires an exit-time destructor       // exit-time destruction order is undefined. if MemFree() leads to users code that has been disabled before exit it might cause problems. ImGui coding style welcomes static/globals.
#pragma clang diagnostic ignored "-Wglobal-constructors"    // warning : declaration requires a global destructor           // similar to above, not sure what the exact difference is.
#pragma clang diagnostic ignored "-Wsign-conversion"        // warning : implicit conversion changes signedness             //
#pragma clang diagnostic ignored "-Wformat-pedantic"        // warning : format specifies type 'void *' but the argument has type 'xxxx *' // unreasonable, would lead to casting every %p arg to void*. probably enabled by -pedantic.
#pragma clang diagnostic ignored "-Wint-to-void-pointer-cast"       // warning : cast to 'void *' from smaller integer type 'int'
#if __has_warning("-Wzero-as-null-pointer-constant")
#pragma clang diagnostic ignored "-Wzero-as-null-pointer-constant"  // warning : zero as null pointer constant              // some standard header variations use #define NULL 0
#endif
#if __has_warning("-Wdouble-promotion")
#pragma clang diagnostic ignored "-Wdouble-promotion"       // warning: implicit conversion from 'float' to 'double' when passing argument to function  // using printf() is a misery with this as C++ va_arg ellipsis changes float to double.
#endif
#elif defined(__GNUC__)
#pragma GCC diagnostic ignored "-Wunused-function"          // warning: 'xxxx' defined but not used
#pragma GCC diagnostic ignored "-Wint-to-pointer-cast"      // warning: cast to pointer from integer of different size
#pragma GCC diagnostic ignored "-Wformat"                   // warning: format '%p' expects argument of type 'void*', but argument 6 has type 'ImGuiWindow*'
#pragma GCC diagnostic ignored "-Wdouble-promotion"         // warning: implicit conversion from 'float' to 'double' when passing argument to function
#pragma GCC diagnostic ignored "-Wconversion"               // warning: conversion to 'xxxx' from 'xxxx' may alter its value
#pragma GCC diagnostic ignored "-Wformat-nonliteral"        // warning: format not a string literal, format string not checked
#pragma GCC diagnostic ignored "-Wstrict-overflow"          // warning: assuming signed overflow does not occur when assuming that (X - c) > X is always false
#if __GNUC__ >= 8
#pragma GCC diagnostic ignored "-Wclass-memaccess"          // warning: 'memset/memcpy' clearing/writing an object of type 'xxxx' with no trivial copy-assignment; use assignment or value-initialization instead
#endif
#endif

// When using CTRL+TAB (or Gamepad Square+L/R) we delay the visual a little in order to reduce visual noise doing a fast switch.
static const float NAV_WINDOWING_HIGHLIGHT_DELAY            = 0.20f;    // Time before the highlight and screen dimming starts fading in
static const float NAV_WINDOWING_LIST_APPEAR_DELAY          = 0.15f;    // Time before the window list starts to appear

// Window resizing from edges (when io.ConfigWindowsResizeFromEdges = true and ImGuiBackendFlags_HasMouseCursors is set in io.BackendFlags by back-end)
static const float WINDOWS_RESIZE_FROM_EDGES_HALF_THICKNESS = 4.0f;     // Extend outside and inside windows. Affect FindHoveredWindow().
static const float WINDOWS_RESIZE_FROM_EDGES_FEEDBACK_TIMER = 0.04f;    // Reduce visual noise by only highlighting the border after a certain time.

//-------------------------------------------------------------------------
// [SECTION] FORWARD DECLARATIONS
//-------------------------------------------------------------------------

static void             SetCurrentWindow(ImGuiWindow* window);
static void             FindHoveredWindow();
static ImGuiWindow*     CreateNewWindow(const char* name, ImVec2 size, ImGuiWindowFlags flags);
static void             CheckStacksSize(ImGuiWindow* window, bool write);
static ImVec2           CalcNextScrollFromScrollTargetAndClamp(ImGuiWindow* window, bool snap_on_edges);

static void             AddDrawListToDrawData(ImVector<ImDrawList*>* out_list, ImDrawList* draw_list);
static void             AddWindowToSortBuffer(ImVector<ImGuiWindow*>* out_sorted_windows, ImGuiWindow* window);

static ImRect           GetViewportRect();

// Settings
static void*            SettingsHandlerWindow_ReadOpen(ImGuiContext*, ImGuiSettingsHandler*, const char* name);
static void             SettingsHandlerWindow_ReadLine(ImGuiContext*, ImGuiSettingsHandler*, void* entry, const char* line);
static void             SettingsHandlerWindow_WriteAll(ImGuiContext* imgui_ctx, ImGuiSettingsHandler* handler, ImGuiTextBuffer* buf);

// Platform Dependents default implementation for IO functions
static const char*      GetClipboardTextFn_DefaultImpl(void* user_data);
static void             SetClipboardTextFn_DefaultImpl(void* user_data, const char* text);
static void             ImeSetInputScreenPosFn_DefaultImpl(int x, int y);

namespace ImGui
{
static bool             BeginChildEx(const char* name, ImGuiID id, const ImVec2& size_arg, bool border, ImGuiWindowFlags flags);

// Navigation
static void             NavUpdate();
static void             NavUpdateWindowing();
static void             NavUpdateWindowingList();
static void             NavUpdateMoveResult();
static float            NavUpdatePageUpPageDown(int allowed_dir_flags);
static inline void      NavUpdateAnyRequestFlag();
static void             NavProcessItem(ImGuiWindow* window, const ImRect& nav_bb, ImGuiID id);
static ImVec2           NavCalcPreferredRefPos();
static void             NavSaveLastChildNavWindowIntoParent(ImGuiWindow* nav_window);
static ImGuiWindow*     NavRestoreLastChildNavWindow(ImGuiWindow* window);

// Misc
static void             UpdateMouseInputs();
static void             UpdateMouseWheel();
static void             UpdateManualResize(ImGuiWindow* window, const ImVec2& size_auto_fit, int* border_held, int resize_grip_count, ImU32 resize_grip_col[4]);
static void             RenderOuterBorders(ImGuiWindow* window);

}

//-----------------------------------------------------------------------------
// [SECTION] CONTEXT AND MEMORY ALLOCATORS
//-----------------------------------------------------------------------------

// Current context pointer. Implicitly used by all Dear ImGui functions. Always assumed to be != NULL.
// ImGui::CreateContext() will automatically set this pointer if it is NULL. Change to a different context by calling ImGui::SetCurrentContext().
// 1) Important: globals are not shared across DLL boundaries! If you use DLLs or any form of hot-reloading: you will need to call
//    SetCurrentContext() (with the pointer you got from CreateContext) from each unique static/DLL boundary, and after each hot-reloading.
//    In your debugger, add GImGui to your watch window and notice how its value changes depending on which location you are currently stepping into.
// 2) Important: Dear ImGui functions are not thread-safe because of this pointer.
//    If you want thread-safety to allow N threads to access N different contexts, you can:
//    - Change this variable to use thread local storage so each thread can refer to a different context, in imconfig.h:
//          struct ImGuiContext;
//          extern thread_local ImGuiContext* MyImGuiTLS;
//          #define GImGui MyImGuiTLS
//      And then define MyImGuiTLS in one of your cpp file. Note that thread_local is a C++11 keyword, earlier C++ uses compiler-specific keyword.
//    - Future development aim to make this context pointer explicit to all calls. Also read https://github.com/ocornut/imgui/issues/586
//    - If you need a finite number of contexts, you may compile and use multiple instances of the ImGui code from different namespace.
#ifndef GImGui
ImGuiContext*   GImGui = NULL;
#endif

// Memory Allocator functions. Use SetAllocatorFunctions() to change them.
// If you use DLL hotreloading you might need to call SetAllocatorFunctions() after reloading code from this file.
// Otherwise, you probably don't want to modify them mid-program, and if you use global/static e.g. ImVector<> instances you may need to keep them accessible during program destruction.
#ifndef IMGUI_DISABLE_DEFAULT_ALLOCATORS
static void*   MallocWrapper(size_t size, void* user_data)    { IM_UNUSED(user_data); return malloc(size); }
static void    FreeWrapper(void* ptr, void* user_data)        { IM_UNUSED(user_data); free(ptr); }
#else
static void*   MallocWrapper(size_t size, void* user_data)    { IM_UNUSED(user_data); IM_UNUSED(size); IM_ASSERT(0); return NULL; }
static void    FreeWrapper(void* ptr, void* user_data)        { IM_UNUSED(user_data); IM_UNUSED(ptr); IM_ASSERT(0); }
#endif

static void*  (*GImAllocatorAllocFunc)(size_t size, void* user_data) = MallocWrapper;
static void   (*GImAllocatorFreeFunc)(void* ptr, void* user_data) = FreeWrapper;
static void*    GImAllocatorUserData = NULL;

//-----------------------------------------------------------------------------
// [SECTION] MAIN USER FACING STRUCTURES (ImGuiStyle, ImGuiIO)
//-----------------------------------------------------------------------------

ImGuiStyle::ImGuiStyle()
{
    Alpha                   = 1.0f;             // Global alpha applies to everything in ImGui
    WindowPadding           = ImVec2(8,8);      // Padding within a window
    WindowRounding          = 7.0f;             // Radius of window corners rounding. Set to 0.0f to have rectangular windows
    WindowBorderSize        = 1.0f;             // Thickness of border around windows. Generally set to 0.0f or 1.0f. Other values not well tested.
    WindowMinSize           = ImVec2(32,32);    // Minimum window size
    WindowTitleAlign        = ImVec2(0.0f,0.5f);// Alignment for title bar text
    ChildRounding           = 0.0f;             // Radius of child window corners rounding. Set to 0.0f to have rectangular child windows
    ChildBorderSize         = 1.0f;             // Thickness of border around child windows. Generally set to 0.0f or 1.0f. Other values not well tested.
    PopupRounding           = 0.0f;             // Radius of popup window corners rounding. Set to 0.0f to have rectangular child windows
    PopupBorderSize         = 1.0f;             // Thickness of border around popup or tooltip windows. Generally set to 0.0f or 1.0f. Other values not well tested.
    FramePadding            = ImVec2(4,3);      // Padding within a framed rectangle (used by most widgets)
    FrameRounding           = 0.0f;             // Radius of frame corners rounding. Set to 0.0f to have rectangular frames (used by most widgets).
    FrameBorderSize         = 0.0f;             // Thickness of border around frames. Generally set to 0.0f or 1.0f. Other values not well tested.
    ItemSpacing             = ImVec2(8,4);      // Horizontal and vertical spacing between widgets/lines
    ItemInnerSpacing        = ImVec2(4,4);      // Horizontal and vertical spacing between within elements of a composed widget (e.g. a slider and its label)
    TouchExtraPadding       = ImVec2(0,0);      // Expand reactive bounding box for touch-based system where touch position is not accurate enough. Unfortunately we don't sort widgets so priority on overlap will always be given to the first widget. So don't grow this too much!
    IndentSpacing           = 21.0f;            // Horizontal spacing when e.g. entering a tree node. Generally == (FontSize + FramePadding.x*2).
    ColumnsMinSpacing       = 6.0f;             // Minimum horizontal spacing between two columns
    ScrollbarSize           = 16.0f;            // Width of the vertical scrollbar, Height of the horizontal scrollbar
    ScrollbarRounding       = 9.0f;             // Radius of grab corners rounding for scrollbar
    GrabMinSize             = 10.0f;            // Minimum width/height of a grab box for slider/scrollbar
    GrabRounding            = 0.0f;             // Radius of grabs corners rounding. Set to 0.0f to have rectangular slider grabs.
    TabRounding             = 4.0f;             // Radius of upper corners of a tab. Set to 0.0f to have rectangular tabs.
    TabBorderSize           = 0.0f;             // Thickness of border around tabs.
    ButtonTextAlign         = ImVec2(0.5f,0.5f);// Alignment of button text when button is larger than text.
    SelectableTextAlign     = ImVec2(0.0f,0.0f);// Alignment of selectable text when button is larger than text.
    DisplayWindowPadding    = ImVec2(19,19);    // Window position are clamped to be visible within the display area by at least this amount. Only applies to regular windows.
    DisplaySafeAreaPadding  = ImVec2(3,3);      // If you cannot see the edge of your screen (e.g. on a TV) increase the safe area padding. Covers popups/tooltips as well regular windows.
    MouseCursorScale        = 1.0f;             // Scale software rendered mouse cursor (when io.MouseDrawCursor is enabled). May be removed later.
    AntiAliasedLines        = true;             // Enable anti-aliasing on lines/borders. Disable if you are really short on CPU/GPU.
    AntiAliasedFill         = true;             // Enable anti-aliasing on filled shapes (rounded rectangles, circles, etc.)
    CurveTessellationTol    = 1.25f;            // Tessellation tolerance when using PathBezierCurveTo() without a specific number of segments. Decrease for highly tessellated curves (higher quality, more polygons), increase to reduce quality.

    // Default theme
    ImGui::StyleColorsDark(this);
}

// To scale your entire UI (e.g. if you want your app to use High DPI or generally be DPI aware) you may use this helper function. Scaling the fonts is done separately and is up to you.
// Important: This operation is lossy because we round all sizes to integer. If you need to change your scale multiples, call this over a freshly initialized ImGuiStyle structure rather than scaling multiple times.
void ImGuiStyle::ScaleAllSizes(float scale_factor)
{
    WindowPadding = ImFloor(WindowPadding * scale_factor);
    WindowRounding = ImFloor(WindowRounding * scale_factor);
    WindowMinSize = ImFloor(WindowMinSize * scale_factor);
    ChildRounding = ImFloor(ChildRounding * scale_factor);
    PopupRounding = ImFloor(PopupRounding * scale_factor);
    FramePadding = ImFloor(FramePadding * scale_factor);
    FrameRounding = ImFloor(FrameRounding * scale_factor);
    ItemSpacing = ImFloor(ItemSpacing * scale_factor);
    ItemInnerSpacing = ImFloor(ItemInnerSpacing * scale_factor);
    TouchExtraPadding = ImFloor(TouchExtraPadding * scale_factor);
    IndentSpacing = ImFloor(IndentSpacing * scale_factor);
    ColumnsMinSpacing = ImFloor(ColumnsMinSpacing * scale_factor);
    ScrollbarSize = ImFloor(ScrollbarSize * scale_factor);
    ScrollbarRounding = ImFloor(ScrollbarRounding * scale_factor);
    GrabMinSize = ImFloor(GrabMinSize * scale_factor);
    GrabRounding = ImFloor(GrabRounding * scale_factor);
    TabRounding = ImFloor(TabRounding * scale_factor);
    DisplayWindowPadding = ImFloor(DisplayWindowPadding * scale_factor);
    DisplaySafeAreaPadding = ImFloor(DisplaySafeAreaPadding * scale_factor);
    MouseCursorScale = ImFloor(MouseCursorScale * scale_factor);
}

ImGuiIO::ImGuiIO()
{
    // Most fields are initialized with zero
    memset(this, 0, sizeof(*this));

    // Settings
    ConfigFlags = ImGuiConfigFlags_None;
    BackendFlags = ImGuiBackendFlags_None;
    DisplaySize = ImVec2(-1.0f, -1.0f);
    DeltaTime = 1.0f/60.0f;
    IniSavingRate = 5.0f;
    IniFilename = "imgui.ini";
    LogFilename = "imgui_log.txt";
    MouseDoubleClickTime = 0.30f;
    MouseDoubleClickMaxDist = 6.0f;
    for (int i = 0; i < ImGuiKey_COUNT; i++)
        KeyMap[i] = -1;
    KeyRepeatDelay = 0.250f;
    KeyRepeatRate = 0.050f;
    UserData = NULL;

    Fonts = NULL;
    FontGlobalScale = 1.0f;
    FontDefault = NULL;
    FontAllowUserScaling = false;
    DisplayFramebufferScale = ImVec2(1.0f, 1.0f);

    // Miscellaneous options
    MouseDrawCursor = false;
#ifdef __APPLE__
    ConfigMacOSXBehaviors = true;  // Set Mac OS X style defaults based on __APPLE__ compile time flag
#else
    ConfigMacOSXBehaviors = false;
#endif
    ConfigInputTextCursorBlink = true;
    ConfigWindowsResizeFromEdges = true;
    ConfigWindowsMoveFromTitleBarOnly = false;

    // Platform Functions
    BackendPlatformName = BackendRendererName = NULL;
    BackendPlatformUserData = BackendRendererUserData = BackendLanguageUserData = NULL;
    GetClipboardTextFn = GetClipboardTextFn_DefaultImpl;   // Platform dependent default implementations
    SetClipboardTextFn = SetClipboardTextFn_DefaultImpl;
    ClipboardUserData = NULL;
    ImeSetInputScreenPosFn = ImeSetInputScreenPosFn_DefaultImpl;
    ImeWindowHandle = NULL;

#ifndef IMGUI_DISABLE_OBSOLETE_FUNCTIONS
    RenderDrawListsFn = NULL;
#endif

    // Input (NB: we already have memset zero the entire structure!)
    MousePos = ImVec2(-FLT_MAX, -FLT_MAX);
    MousePosPrev = ImVec2(-FLT_MAX, -FLT_MAX);
    MouseDragThreshold = 6.0f;
    for (int i = 0; i < IM_ARRAYSIZE(MouseDownDuration); i++) MouseDownDuration[i] = MouseDownDurationPrev[i] = -1.0f;
    for (int i = 0; i < IM_ARRAYSIZE(KeysDownDuration); i++) KeysDownDuration[i]  = KeysDownDurationPrev[i] = -1.0f;
    for (int i = 0; i < IM_ARRAYSIZE(NavInputsDownDuration); i++) NavInputsDownDuration[i] = -1.0f;
}

// Pass in translated ASCII characters for text input.
// - with glfw you can get those from the callback set in glfwSetCharCallback()
// - on Windows you can get those using ToAscii+keyboard state, or via the WM_CHAR message
void ImGuiIO::AddInputCharacter(ImWchar c)
{
    InputQueueCharacters.push_back(c);
}

void ImGuiIO::AddInputCharactersUTF8(const char* utf8_chars)
{
    while (*utf8_chars != 0)
    {
        unsigned int c = 0;
        utf8_chars += ImTextCharFromUtf8(&c, utf8_chars, NULL);
        if (c > 0 && c <= 0xFFFF)
            InputQueueCharacters.push_back((ImWchar)c);
    }
}

void ImGuiIO::ClearInputCharacters()
{
    InputQueueCharacters.resize(0);
}

//-----------------------------------------------------------------------------
// [SECTION] MISC HELPERS/UTILITIES (Maths, String, Format, Hash, File functions)
//-----------------------------------------------------------------------------

ImVec2 ImLineClosestPoint(const ImVec2& a, const ImVec2& b, const ImVec2& p)
{
    ImVec2 ap = p - a;
    ImVec2 ab_dir = b - a;
    float dot = ap.x * ab_dir.x + ap.y * ab_dir.y;
    if (dot < 0.0f)
        return a;
    float ab_len_sqr = ab_dir.x * ab_dir.x + ab_dir.y * ab_dir.y;
    if (dot > ab_len_sqr)
        return b;
    return a + ab_dir * dot / ab_len_sqr;
}

bool ImTriangleContainsPoint(const ImVec2& a, const ImVec2& b, const ImVec2& c, const ImVec2& p)
{
    bool b1 = ((p.x - b.x) * (a.y - b.y) - (p.y - b.y) * (a.x - b.x)) < 0.0f;
    bool b2 = ((p.x - c.x) * (b.y - c.y) - (p.y - c.y) * (b.x - c.x)) < 0.0f;
    bool b3 = ((p.x - a.x) * (c.y - a.y) - (p.y - a.y) * (c.x - a.x)) < 0.0f;
    return ((b1 == b2) && (b2 == b3));
}

void ImTriangleBarycentricCoords(const ImVec2& a, const ImVec2& b, const ImVec2& c, const ImVec2& p, float& out_u, float& out_v, float& out_w)
{
    ImVec2 v0 = b - a;
    ImVec2 v1 = c - a;
    ImVec2 v2 = p - a;
    const float denom = v0.x * v1.y - v1.x * v0.y;
    out_v = (v2.x * v1.y - v1.x * v2.y) / denom;
    out_w = (v0.x * v2.y - v2.x * v0.y) / denom;
    out_u = 1.0f - out_v - out_w;
}

ImVec2 ImTriangleClosestPoint(const ImVec2& a, const ImVec2& b, const ImVec2& c, const ImVec2& p)
{
    ImVec2 proj_ab = ImLineClosestPoint(a, b, p);
    ImVec2 proj_bc = ImLineClosestPoint(b, c, p);
    ImVec2 proj_ca = ImLineClosestPoint(c, a, p);
    float dist2_ab = ImLengthSqr(p - proj_ab);
    float dist2_bc = ImLengthSqr(p - proj_bc);
    float dist2_ca = ImLengthSqr(p - proj_ca);
    float m = ImMin(dist2_ab, ImMin(dist2_bc, dist2_ca));
    if (m == dist2_ab)
        return proj_ab;
    if (m == dist2_bc)
        return proj_bc;
    return proj_ca;
}

// Consider using _stricmp/_strnicmp under Windows or strcasecmp/strncasecmp. We don't actually use either ImStricmp/ImStrnicmp in the codebase any more.
int ImStricmp(const char* str1, const char* str2)
{
    int d;
    while ((d = toupper(*str2) - toupper(*str1)) == 0 && *str1) { str1++; str2++; }
    return d;
}

int ImStrnicmp(const char* str1, const char* str2, size_t count)
{
    int d = 0;
    while (count > 0 && (d = toupper(*str2) - toupper(*str1)) == 0 && *str1) { str1++; str2++; count--; }
    return d;
}

void ImStrncpy(char* dst, const char* src, size_t count)
{
    if (count < 1)
        return;
    if (count > 1)
        strncpy(dst, src, count - 1);
    dst[count - 1] = 0;
}

char* ImStrdup(const char* str)
{
    size_t len = strlen(str);
    void* buf = IM_ALLOC(len + 1);
    return (char*)memcpy(buf, (const void*)str, len + 1);
}

char* ImStrdupcpy(char* dst, size_t* p_dst_size, const char* src)
{
    size_t dst_buf_size = p_dst_size ? *p_dst_size : strlen(dst) + 1;
    size_t src_size = strlen(src) + 1;
    if (dst_buf_size < src_size)
    {
        IM_FREE(dst);
        dst = (char*)IM_ALLOC(src_size);
        if (p_dst_size)
            *p_dst_size = src_size;
    }
    return (char*)memcpy(dst, (const void*)src, src_size);
}

const char* ImStrchrRange(const char* str, const char* str_end, char c)
{
    const char* p = (const char*)memchr(str, (int)c, str_end - str);
    return p;
}

int ImStrlenW(const ImWchar* str)
{
    //return (int)wcslen((const wchar_t*)str);  // FIXME-OPT: Could use this when wchar_t are 16-bits
    int n = 0;
    while (*str++) n++;
    return n;
}

// Find end-of-line. Return pointer will point to either first \n, either str_end.
const char* ImStreolRange(const char* str, const char* str_end)
{
    const char* p = (const char*)memchr(str, '\n', str_end - str);
    return p ? p : str_end;
}

const ImWchar* ImStrbolW(const ImWchar* buf_mid_line, const ImWchar* buf_begin) // find beginning-of-line
{
    while (buf_mid_line > buf_begin && buf_mid_line[-1] != '\n')
        buf_mid_line--;
    return buf_mid_line;
}

const char* ImStristr(const char* haystack, const char* haystack_end, const char* needle, const char* needle_end)
{
    if (!needle_end)
        needle_end = needle + strlen(needle);

    const char un0 = (char)toupper(*needle);
    while ((!haystack_end && *haystack) || (haystack_end && haystack < haystack_end))
    {
        if (toupper(*haystack) == un0)
        {
            const char* b = needle + 1;
            for (const char* a = haystack + 1; b < needle_end; a++, b++)
                if (toupper(*a) != toupper(*b))
                    break;
            if (b == needle_end)
                return haystack;
        }
        haystack++;
    }
    return NULL;
}

// Trim str by offsetting contents when there's leading data + writing a \0 at the trailing position. We use this in situation where the cost is negligible.
void ImStrTrimBlanks(char* buf)
{
    char* p = buf;
    while (p[0] == ' ' || p[0] == '\t')     // Leading blanks
        p++;
    char* p_start = p;
    while (*p != 0)                         // Find end of string
        p++;
    while (p > p_start && (p[-1] == ' ' || p[-1] == '\t'))  // Trailing blanks
        p--;
    if (p_start != buf)                     // Copy memory if we had leading blanks
        memmove(buf, p_start, p - p_start);
    buf[p - p_start] = 0;                   // Zero terminate
}

// A) MSVC version appears to return -1 on overflow, whereas glibc appears to return total count (which may be >= buf_size).
// Ideally we would test for only one of those limits at runtime depending on the behavior the vsnprintf(), but trying to deduct it at compile time sounds like a pandora can of worm.
// B) When buf==NULL vsnprintf() will return the output size.
#ifndef IMGUI_DISABLE_FORMAT_STRING_FUNCTIONS

//#define IMGUI_USE_STB_SPRINTF
#ifdef IMGUI_USE_STB_SPRINTF
#define STB_SPRINTF_IMPLEMENTATION
#include "imstb_sprintf.h"
#endif

#if defined(_MSC_VER) && !defined(vsnprintf)
#define vsnprintf _vsnprintf
#endif

int ImFormatString(char* buf, size_t buf_size, const char* fmt, ...)
{
    va_list args;
    va_start(args, fmt);
#ifdef IMGUI_USE_STB_SPRINTF
    int w = stbsp_vsnprintf(buf, (int)buf_size, fmt, args);
#else
    int w = vsnprintf(buf, buf_size, fmt, args);
#endif
    va_end(args);
    if (buf == NULL)
        return w;
    if (w == -1 || w >= (int)buf_size)
        w = (int)buf_size - 1;
    buf[w] = 0;
    return w;
}

int ImFormatStringV(char* buf, size_t buf_size, const char* fmt, va_list args)
{
#ifdef IMGUI_USE_STB_SPRINTF
    int w = stbsp_vsnprintf(buf, (int)buf_size, fmt, args);
#else
    int w = vsnprintf(buf, buf_size, fmt, args);
#endif
    if (buf == NULL)
        return w;
    if (w == -1 || w >= (int)buf_size)
        w = (int)buf_size - 1;
    buf[w] = 0;
    return w;
}
#endif // #ifdef IMGUI_DISABLE_FORMAT_STRING_FUNCTIONS

// CRC32 needs a 1KB lookup table (not cache friendly)
// Although the code to generate the table is simple and shorter than the table itself, using a const table allows us to easily:
// - avoid an unnecessary branch/memory tap, - keep the ImHashXXX functions usable by static constructors, - make it thread-safe.
static const ImU32 GCrc32LookupTable[256] =
{
    0x00000000,0x77073096,0xEE0E612C,0x990951BA,0x076DC419,0x706AF48F,0xE963A535,0x9E6495A3,0x0EDB8832,0x79DCB8A4,0xE0D5E91E,0x97D2D988,0x09B64C2B,0x7EB17CBD,0xE7B82D07,0x90BF1D91,
    0x1DB71064,0x6AB020F2,0xF3B97148,0x84BE41DE,0x1ADAD47D,0x6DDDE4EB,0xF4D4B551,0x83D385C7,0x136C9856,0x646BA8C0,0xFD62F97A,0x8A65C9EC,0x14015C4F,0x63066CD9,0xFA0F3D63,0x8D080DF5,
    0x3B6E20C8,0x4C69105E,0xD56041E4,0xA2677172,0x3C03E4D1,0x4B04D447,0xD20D85FD,0xA50AB56B,0x35B5A8FA,0x42B2986C,0xDBBBC9D6,0xACBCF940,0x32D86CE3,0x45DF5C75,0xDCD60DCF,0xABD13D59,
    0x26D930AC,0x51DE003A,0xC8D75180,0xBFD06116,0x21B4F4B5,0x56B3C423,0xCFBA9599,0xB8BDA50F,0x2802B89E,0x5F058808,0xC60CD9B2,0xB10BE924,0x2F6F7C87,0x58684C11,0xC1611DAB,0xB6662D3D,
    0x76DC4190,0x01DB7106,0x98D220BC,0xEFD5102A,0x71B18589,0x06B6B51F,0x9FBFE4A5,0xE8B8D433,0x7807C9A2,0x0F00F934,0x9609A88E,0xE10E9818,0x7F6A0DBB,0x086D3D2D,0x91646C97,0xE6635C01,
    0x6B6B51F4,0x1C6C6162,0x856530D8,0xF262004E,0x6C0695ED,0x1B01A57B,0x8208F4C1,0xF50FC457,0x65B0D9C6,0x12B7E950,0x8BBEB8EA,0xFCB9887C,0x62DD1DDF,0x15DA2D49,0x8CD37CF3,0xFBD44C65,
    0x4DB26158,0x3AB551CE,0xA3BC0074,0xD4BB30E2,0x4ADFA541,0x3DD895D7,0xA4D1C46D,0xD3D6F4FB,0x4369E96A,0x346ED9FC,0xAD678846,0xDA60B8D0,0x44042D73,0x33031DE5,0xAA0A4C5F,0xDD0D7CC9,
    0x5005713C,0x270241AA,0xBE0B1010,0xC90C2086,0x5768B525,0x206F85B3,0xB966D409,0xCE61E49F,0x5EDEF90E,0x29D9C998,0xB0D09822,0xC7D7A8B4,0x59B33D17,0x2EB40D81,0xB7BD5C3B,0xC0BA6CAD,
    0xEDB88320,0x9ABFB3B6,0x03B6E20C,0x74B1D29A,0xEAD54739,0x9DD277AF,0x04DB2615,0x73DC1683,0xE3630B12,0x94643B84,0x0D6D6A3E,0x7A6A5AA8,0xE40ECF0B,0x9309FF9D,0x0A00AE27,0x7D079EB1,
    0xF00F9344,0x8708A3D2,0x1E01F268,0x6906C2FE,0xF762575D,0x806567CB,0x196C3671,0x6E6B06E7,0xFED41B76,0x89D32BE0,0x10DA7A5A,0x67DD4ACC,0xF9B9DF6F,0x8EBEEFF9,0x17B7BE43,0x60B08ED5,
    0xD6D6A3E8,0xA1D1937E,0x38D8C2C4,0x4FDFF252,0xD1BB67F1,0xA6BC5767,0x3FB506DD,0x48B2364B,0xD80D2BDA,0xAF0A1B4C,0x36034AF6,0x41047A60,0xDF60EFC3,0xA867DF55,0x316E8EEF,0x4669BE79,
    0xCB61B38C,0xBC66831A,0x256FD2A0,0x5268E236,0xCC0C7795,0xBB0B4703,0x220216B9,0x5505262F,0xC5BA3BBE,0xB2BD0B28,0x2BB45A92,0x5CB36A04,0xC2D7FFA7,0xB5D0CF31,0x2CD99E8B,0x5BDEAE1D,
    0x9B64C2B0,0xEC63F226,0x756AA39C,0x026D930A,0x9C0906A9,0xEB0E363F,0x72076785,0x05005713,0x95BF4A82,0xE2B87A14,0x7BB12BAE,0x0CB61B38,0x92D28E9B,0xE5D5BE0D,0x7CDCEFB7,0x0BDBDF21,
    0x86D3D2D4,0xF1D4E242,0x68DDB3F8,0x1FDA836E,0x81BE16CD,0xF6B9265B,0x6FB077E1,0x18B74777,0x88085AE6,0xFF0F6A70,0x66063BCA,0x11010B5C,0x8F659EFF,0xF862AE69,0x616BFFD3,0x166CCF45,
    0xA00AE278,0xD70DD2EE,0x4E048354,0x3903B3C2,0xA7672661,0xD06016F7,0x4969474D,0x3E6E77DB,0xAED16A4A,0xD9D65ADC,0x40DF0B66,0x37D83BF0,0xA9BCAE53,0xDEBB9EC5,0x47B2CF7F,0x30B5FFE9,
    0xBDBDF21C,0xCABAC28A,0x53B39330,0x24B4A3A6,0xBAD03605,0xCDD70693,0x54DE5729,0x23D967BF,0xB3667A2E,0xC4614AB8,0x5D681B02,0x2A6F2B94,0xB40BBE37,0xC30C8EA1,0x5A05DF1B,0x2D02EF8D,
};

// Known size hash
// It is ok to call ImHashData on a string with known length but the ### operator won't be supported.
// FIXME-OPT: Replace with e.g. FNV1a hash? CRC32 pretty much randomly access 1KB. Need to do proper measurements.
ImU32 ImHashData(const void* data_p, size_t data_size, ImU32 seed)
{
    ImU32 crc = ~seed;
    const unsigned char* data = (const unsigned char*)data_p;
    const ImU32* crc32_lut = GCrc32LookupTable;
    while (data_size-- != 0)
        crc = (crc >> 8) ^ crc32_lut[(crc & 0xFF) ^ *data++];
    return ~crc;
}

// Zero-terminated string hash, with support for ### to reset back to seed value
// We support a syntax of "label###id" where only "###id" is included in the hash, and only "label" gets displayed.
// Because this syntax is rarely used we are optimizing for the common case.
// - If we reach ### in the string we discard the hash so far and reset to the seed.
// - We don't do 'current += 2; continue;' after handling ### to keep the code smaller/faster (measured ~10% diff in Debug build)
// FIXME-OPT: Replace with e.g. FNV1a hash? CRC32 pretty much randomly access 1KB. Need to do proper measurements.
ImU32 ImHashStr(const char* data_p, size_t data_size, ImU32 seed)
{
    seed = ~seed;
    ImU32 crc = seed;
    const unsigned char* data = (const unsigned char*)data_p;
    const ImU32* crc32_lut = GCrc32LookupTable;
    if (data_size != 0)
    {
        while (data_size-- != 0)
        {
            unsigned char c = *data++;
            if (c == '#' && data_size >= 2 && data[0] == '#' && data[1] == '#')
                crc = seed;
            crc = (crc >> 8) ^ crc32_lut[(crc & 0xFF) ^ c];
        }
    }
    else
    {
        while (unsigned char c = *data++)
        {
            if (c == '#' && data[0] == '#' && data[1] == '#')
                crc = seed;
            crc = (crc >> 8) ^ crc32_lut[(crc & 0xFF) ^ c];
        }
    }
    return ~crc;
}

FILE* ImFileOpen(const char* filename, const char* mode)
{
#if defined(_WIN32) && !defined(__CYGWIN__) && !defined(__GNUC__)
    // We need a fopen() wrapper because MSVC/Windows fopen doesn't handle UTF-8 filenames. Converting both strings from UTF-8 to wchar format (using a single allocation, because we can)
    const int filename_wsize = ImTextCountCharsFromUtf8(filename, NULL) + 1;
    const int mode_wsize = ImTextCountCharsFromUtf8(mode, NULL) + 1;
    ImVector<ImWchar> buf;
    buf.resize(filename_wsize + mode_wsize);
    ImTextStrFromUtf8(&buf[0], filename_wsize, filename, NULL);
    ImTextStrFromUtf8(&buf[filename_wsize], mode_wsize, mode, NULL);
    return _wfopen((wchar_t*)&buf[0], (wchar_t*)&buf[filename_wsize]);
#else
    return fopen(filename, mode);
#endif
}

// Load file content into memory
// Memory allocated with IM_ALLOC(), must be freed by user using IM_FREE() == ImGui::MemFree()
void* ImFileLoadToMemory(const char* filename, const char* file_open_mode, size_t* out_file_size, int padding_bytes)
{
    IM_ASSERT(filename && file_open_mode);
    if (out_file_size)
        *out_file_size = 0;

    FILE* f;
    if ((f = ImFileOpen(filename, file_open_mode)) == NULL)
        return NULL;

    long file_size_signed;
    if (fseek(f, 0, SEEK_END) || (file_size_signed = ftell(f)) == -1 || fseek(f, 0, SEEK_SET))
    {
        fclose(f);
        return NULL;
    }

    size_t file_size = (size_t)file_size_signed;
    void* file_data = IM_ALLOC(file_size + padding_bytes);
    if (file_data == NULL)
    {
        fclose(f);
        return NULL;
    }
    if (fread(file_data, 1, file_size, f) != file_size)
    {
        fclose(f);
        IM_FREE(file_data);
        return NULL;
    }
    if (padding_bytes > 0)
        memset((void*)(((char*)file_data) + file_size), 0, (size_t)padding_bytes);

    fclose(f);
    if (out_file_size)
        *out_file_size = file_size;

    return file_data;
}

//-----------------------------------------------------------------------------
// [SECTION] MISC HELPERS/UTILITIES (ImText* functions)
//-----------------------------------------------------------------------------

// Convert UTF-8 to 32-bits character, process single character input.
// Based on stb_from_utf8() from github.com/nothings/stb/
// We handle UTF-8 decoding error by skipping forward.
int ImTextCharFromUtf8(unsigned int* out_char, const char* in_text, const char* in_text_end)
{
    unsigned int c = (unsigned int)-1;
    const unsigned char* str = (const unsigned char*)in_text;
    if (!(*str & 0x80))
    {
        c = (unsigned int)(*str++);
        *out_char = c;
        return 1;
    }
    if ((*str & 0xe0) == 0xc0)
    {
        *out_char = 0xFFFD; // will be invalid but not end of string
        if (in_text_end && in_text_end - (const char*)str < 2) return 1;
        if (*str < 0xc2) return 2;
        c = (unsigned int)((*str++ & 0x1f) << 6);
        if ((*str & 0xc0) != 0x80) return 2;
        c += (*str++ & 0x3f);
        *out_char = c;
        return 2;
    }
    if ((*str & 0xf0) == 0xe0)
    {
        *out_char = 0xFFFD; // will be invalid but not end of string
        if (in_text_end && in_text_end - (const char*)str < 3) return 1;
        if (*str == 0xe0 && (str[1] < 0xa0 || str[1] > 0xbf)) return 3;
        if (*str == 0xed && str[1] > 0x9f) return 3; // str[1] < 0x80 is checked below
        c = (unsigned int)((*str++ & 0x0f) << 12);
        if ((*str & 0xc0) != 0x80) return 3;
        c += (unsigned int)((*str++ & 0x3f) << 6);
        if ((*str & 0xc0) != 0x80) return 3;
        c += (*str++ & 0x3f);
        *out_char = c;
        return 3;
    }
    if ((*str & 0xf8) == 0xf0)
    {
        *out_char = 0xFFFD; // will be invalid but not end of string
        if (in_text_end && in_text_end - (const char*)str < 4) return 1;
        if (*str > 0xf4) return 4;
        if (*str == 0xf0 && (str[1] < 0x90 || str[1] > 0xbf)) return 4;
        if (*str == 0xf4 && str[1] > 0x8f) return 4; // str[1] < 0x80 is checked below
        c = (unsigned int)((*str++ & 0x07) << 18);
        if ((*str & 0xc0) != 0x80) return 4;
        c += (unsigned int)((*str++ & 0x3f) << 12);
        if ((*str & 0xc0) != 0x80) return 4;
        c += (unsigned int)((*str++ & 0x3f) << 6);
        if ((*str & 0xc0) != 0x80) return 4;
        c += (*str++ & 0x3f);
        // utf-8 encodings of values used in surrogate pairs are invalid
        if ((c & 0xFFFFF800) == 0xD800) return 4;
        *out_char = c;
        return 4;
    }
    *out_char = 0;
    return 0;
}

int ImTextStrFromUtf8(ImWchar* buf, int buf_size, const char* in_text, const char* in_text_end, const char** in_text_remaining)
{
    ImWchar* buf_out = buf;
    ImWchar* buf_end = buf + buf_size;
    while (buf_out < buf_end-1 && (!in_text_end || in_text < in_text_end) && *in_text)
    {
        unsigned int c;
        in_text += ImTextCharFromUtf8(&c, in_text, in_text_end);
        if (c == 0)
            break;
        if (c < 0x10000)    // FIXME: Losing characters that don't fit in 2 bytes
            *buf_out++ = (ImWchar)c;
    }
    *buf_out = 0;
    if (in_text_remaining)
        *in_text_remaining = in_text;
    return (int)(buf_out - buf);
}

int ImTextCountCharsFromUtf8(const char* in_text, const char* in_text_end)
{
    int char_count = 0;
    while ((!in_text_end || in_text < in_text_end) && *in_text)
    {
        unsigned int c;
        in_text += ImTextCharFromUtf8(&c, in_text, in_text_end);
        if (c == 0)
            break;
        if (c < 0x10000)
            char_count++;
    }
    return char_count;
}

// Based on stb_to_utf8() from github.com/nothings/stb/
static inline int ImTextCharToUtf8(char* buf, int buf_size, unsigned int c)
{
    if (c < 0x80)
    {
        buf[0] = (char)c;
        return 1;
    }
    if (c < 0x800)
    {
        if (buf_size < 2) return 0;
        buf[0] = (char)(0xc0 + (c >> 6));
        buf[1] = (char)(0x80 + (c & 0x3f));
        return 2;
    }
    if (c >= 0xdc00 && c < 0xe000)
    {
        return 0;
    }
    if (c >= 0xd800 && c < 0xdc00)
    {
        if (buf_size < 4) return 0;
        buf[0] = (char)(0xf0 + (c >> 18));
        buf[1] = (char)(0x80 + ((c >> 12) & 0x3f));
        buf[2] = (char)(0x80 + ((c >> 6) & 0x3f));
        buf[3] = (char)(0x80 + ((c ) & 0x3f));
        return 4;
    }
    //else if (c < 0x10000)
    {
        if (buf_size < 3) return 0;
        buf[0] = (char)(0xe0 + (c >> 12));
        buf[1] = (char)(0x80 + ((c>> 6) & 0x3f));
        buf[2] = (char)(0x80 + ((c ) & 0x3f));
        return 3;
    }
}

// Not optimal but we very rarely use this function.
int ImTextCountUtf8BytesFromChar(const char* in_text, const char* in_text_end)
{
    unsigned int dummy = 0;
    return ImTextCharFromUtf8(&dummy, in_text, in_text_end);
}

static inline int ImTextCountUtf8BytesFromChar(unsigned int c)
{
    if (c < 0x80) return 1;
    if (c < 0x800) return 2;
    if (c >= 0xdc00 && c < 0xe000) return 0;
    if (c >= 0xd800 && c < 0xdc00) return 4;
    return 3;
}

int ImTextStrToUtf8(char* buf, int buf_size, const ImWchar* in_text, const ImWchar* in_text_end)
{
    char* buf_out = buf;
    const char* buf_end = buf + buf_size;
    while (buf_out < buf_end-1 && (!in_text_end || in_text < in_text_end) && *in_text)
    {
        unsigned int c = (unsigned int)(*in_text++);
        if (c < 0x80)
            *buf_out++ = (char)c;
        else
            buf_out += ImTextCharToUtf8(buf_out, (int)(buf_end-buf_out-1), c);
    }
    *buf_out = 0;
    return (int)(buf_out - buf);
}

int ImTextCountUtf8BytesFromStr(const ImWchar* in_text, const ImWchar* in_text_end)
{
    int bytes_count = 0;
    while ((!in_text_end || in_text < in_text_end) && *in_text)
    {
        unsigned int c = (unsigned int)(*in_text++);
        if (c < 0x80)
            bytes_count++;
        else
            bytes_count += ImTextCountUtf8BytesFromChar(c);
    }
    return bytes_count;
}

//-----------------------------------------------------------------------------
// [SECTION] MISC HELPERS/UTILTIES (Color functions)
// Note: The Convert functions are early design which are not consistent with other API.
//-----------------------------------------------------------------------------

ImVec4 ImGui::ColorConvertU32ToFloat4(ImU32 in)
{
    float s = 1.0f/255.0f;
    return ImVec4(
        ((in >> IM_COL32_R_SHIFT) & 0xFF) * s,
        ((in >> IM_COL32_G_SHIFT) & 0xFF) * s,
        ((in >> IM_COL32_B_SHIFT) & 0xFF) * s,
        ((in >> IM_COL32_A_SHIFT) & 0xFF) * s);
}

ImU32 ImGui::ColorConvertFloat4ToU32(const ImVec4& in)
{
    ImU32 out;
    out  = ((ImU32)IM_F32_TO_INT8_SAT(in.x)) << IM_COL32_R_SHIFT;
    out |= ((ImU32)IM_F32_TO_INT8_SAT(in.y)) << IM_COL32_G_SHIFT;
    out |= ((ImU32)IM_F32_TO_INT8_SAT(in.z)) << IM_COL32_B_SHIFT;
    out |= ((ImU32)IM_F32_TO_INT8_SAT(in.w)) << IM_COL32_A_SHIFT;
    return out;
}

// Convert rgb floats ([0-1],[0-1],[0-1]) to hsv floats ([0-1],[0-1],[0-1]), from Foley & van Dam p592
// Optimized http://lolengine.net/blog/2013/01/13/fast-rgb-to-hsv
void ImGui::ColorConvertRGBtoHSV(float r, float g, float b, float& out_h, float& out_s, float& out_v)
{
    float K = 0.f;
    if (g < b)
    {
        ImSwap(g, b);
        K = -1.f;
    }
    if (r < g)
    {
        ImSwap(r, g);
        K = -2.f / 6.f - K;
    }

    const float chroma = r - (g < b ? g : b);
    out_h = ImFabs(K + (g - b) / (6.f * chroma + 1e-20f));
    out_s = chroma / (r + 1e-20f);
    out_v = r;
}

// Convert hsv floats ([0-1],[0-1],[0-1]) to rgb floats ([0-1],[0-1],[0-1]), from Foley & van Dam p593
// also http://en.wikipedia.org/wiki/HSL_and_HSV
void ImGui::ColorConvertHSVtoRGB(float h, float s, float v, float& out_r, float& out_g, float& out_b)
{
    if (s == 0.0f)
    {
        // gray
        out_r = out_g = out_b = v;
        return;
    }

    h = ImFmod(h, 1.0f) / (60.0f/360.0f);
    int   i = (int)h;
    float f = h - (float)i;
    float p = v * (1.0f - s);
    float q = v * (1.0f - s * f);
    float t = v * (1.0f - s * (1.0f - f));

    switch (i)
    {
    case 0: out_r = v; out_g = t; out_b = p; break;
    case 1: out_r = q; out_g = v; out_b = p; break;
    case 2: out_r = p; out_g = v; out_b = t; break;
    case 3: out_r = p; out_g = q; out_b = v; break;
    case 4: out_r = t; out_g = p; out_b = v; break;
    case 5: default: out_r = v; out_g = p; out_b = q; break;
    }
}

ImU32 ImGui::GetColorU32(ImGuiCol idx, float alpha_mul)
{
    ImGuiStyle& style = GImGui->Style;
    ImVec4 c = style.Colors[idx];
    c.w *= style.Alpha * alpha_mul;
    return ColorConvertFloat4ToU32(c);
}

ImU32 ImGui::GetColorU32(const ImVec4& col)
{
    ImGuiStyle& style = GImGui->Style;
    ImVec4 c = col;
    c.w *= style.Alpha;
    return ColorConvertFloat4ToU32(c);
}

const ImVec4& ImGui::GetStyleColorVec4(ImGuiCol idx)
{
    ImGuiStyle& style = GImGui->Style;
    return style.Colors[idx];
}

ImU32 ImGui::GetColorU32(ImU32 col)
{
    float style_alpha = GImGui->Style.Alpha;
    if (style_alpha >= 1.0f)
        return col;
    ImU32 a = (col & IM_COL32_A_MASK) >> IM_COL32_A_SHIFT;
    a = (ImU32)(a * style_alpha); // We don't need to clamp 0..255 because Style.Alpha is in 0..1 range.
    return (col & ~IM_COL32_A_MASK) | (a << IM_COL32_A_SHIFT);
}

//-----------------------------------------------------------------------------
// [SECTION] ImGuiStorage
// Helper: Key->value storage
//-----------------------------------------------------------------------------

// std::lower_bound but without the bullshit
static ImGuiStorage::Pair* LowerBound(ImVector<ImGuiStorage::Pair>& data, ImGuiID key)
{
    ImGuiStorage::Pair* first = data.Data;
    ImGuiStorage::Pair* last = data.Data + data.Size;
    size_t count = (size_t)(last - first);
    while (count > 0)
    {
        size_t count2 = count >> 1;
        ImGuiStorage::Pair* mid = first + count2;
        if (mid->key < key)
        {
            first = ++mid;
            count -= count2 + 1;
        }
        else
        {
            count = count2;
        }
    }
    return first;
}

// For quicker full rebuild of a storage (instead of an incremental one), you may add all your contents and then sort once.
void ImGuiStorage::BuildSortByKey()
{
    struct StaticFunc
    {
        static int IMGUI_CDECL PairCompareByID(const void* lhs, const void* rhs)
        {
            // We can't just do a subtraction because qsort uses signed integers and subtracting our ID doesn't play well with that.
            if (((const Pair*)lhs)->key > ((const Pair*)rhs)->key) return +1;
            if (((const Pair*)lhs)->key < ((const Pair*)rhs)->key) return -1;
            return 0;
        }
    };
    if (Data.Size > 1)
        ImQsort(Data.Data, (size_t)Data.Size, sizeof(Pair), StaticFunc::PairCompareByID);
}

int ImGuiStorage::GetInt(ImGuiID key, int default_val) const
{
    ImGuiStorage::Pair* it = LowerBound(const_cast<ImVector<ImGuiStorage::Pair>&>(Data), key);
    if (it == Data.end() || it->key != key)
        return default_val;
    return it->val_i;
}

bool ImGuiStorage::GetBool(ImGuiID key, bool default_val) const
{
    return GetInt(key, default_val ? 1 : 0) != 0;
}

float ImGuiStorage::GetFloat(ImGuiID key, float default_val) const
{
    ImGuiStorage::Pair* it = LowerBound(const_cast<ImVector<ImGuiStorage::Pair>&>(Data), key);
    if (it == Data.end() || it->key != key)
        return default_val;
    return it->val_f;
}

void* ImGuiStorage::GetVoidPtr(ImGuiID key) const
{
    ImGuiStorage::Pair* it = LowerBound(const_cast<ImVector<ImGuiStorage::Pair>&>(Data), key);
    if (it == Data.end() || it->key != key)
        return NULL;
    return it->val_p;
}

// References are only valid until a new value is added to the storage. Calling a Set***() function or a Get***Ref() function invalidates the pointer.
int* ImGuiStorage::GetIntRef(ImGuiID key, int default_val)
{
    ImGuiStorage::Pair* it = LowerBound(Data, key);
    if (it == Data.end() || it->key != key)
        it = Data.insert(it, Pair(key, default_val));
    return &it->val_i;
}

bool* ImGuiStorage::GetBoolRef(ImGuiID key, bool default_val)
{
    return (bool*)GetIntRef(key, default_val ? 1 : 0);
}

float* ImGuiStorage::GetFloatRef(ImGuiID key, float default_val)
{
    ImGuiStorage::Pair* it = LowerBound(Data, key);
    if (it == Data.end() || it->key != key)
        it = Data.insert(it, Pair(key, default_val));
    return &it->val_f;
}

void** ImGuiStorage::GetVoidPtrRef(ImGuiID key, void* default_val)
{
    ImGuiStorage::Pair* it = LowerBound(Data, key);
    if (it == Data.end() || it->key != key)
        it = Data.insert(it, Pair(key, default_val));
    return &it->val_p;
}

// FIXME-OPT: Need a way to reuse the result of lower_bound when doing GetInt()/SetInt() - not too bad because it only happens on explicit interaction (maximum one a frame)
void ImGuiStorage::SetInt(ImGuiID key, int val)
{
    ImGuiStorage::Pair* it = LowerBound(Data, key);
    if (it == Data.end() || it->key != key)
    {
        Data.insert(it, Pair(key, val));
        return;
    }
    it->val_i = val;
}

void ImGuiStorage::SetBool(ImGuiID key, bool val)
{
    SetInt(key, val ? 1 : 0);
}

void ImGuiStorage::SetFloat(ImGuiID key, float val)
{
    ImGuiStorage::Pair* it = LowerBound(Data, key);
    if (it == Data.end() || it->key != key)
    {
        Data.insert(it, Pair(key, val));
        return;
    }
    it->val_f = val;
}

void ImGuiStorage::SetVoidPtr(ImGuiID key, void* val)
{
    ImGuiStorage::Pair* it = LowerBound(Data, key);
    if (it == Data.end() || it->key != key)
    {
        Data.insert(it, Pair(key, val));
        return;
    }
    it->val_p = val;
}

void ImGuiStorage::SetAllInt(int v)
{
    for (int i = 0; i < Data.Size; i++)
        Data[i].val_i = v;
}

//-----------------------------------------------------------------------------
// [SECTION] ImGuiTextFilter
//-----------------------------------------------------------------------------

// Helper: Parse and apply text filters. In format "aaaaa[,bbbb][,ccccc]"
ImGuiTextFilter::ImGuiTextFilter(const char* default_filter)
{
    if (default_filter)
    {
        ImStrncpy(InputBuf, default_filter, IM_ARRAYSIZE(InputBuf));
        Build();
    }
    else
    {
        InputBuf[0] = 0;
        CountGrep = 0;
    }
}

bool ImGuiTextFilter::Draw(const char* label, float width)
{
    if (width != 0.0f)
        ImGui::SetNextItemWidth(width);
    bool value_changed = ImGui::InputText(label, InputBuf, IM_ARRAYSIZE(InputBuf));
    if (value_changed)
        Build();
    return value_changed;
}

void ImGuiTextFilter::TextRange::split(char separator, ImVector<TextRange>* out) const
{
    out->resize(0);
    const char* wb = b;
    const char* we = wb;
    while (we < e)
    {
        if (*we == separator)
        {
            out->push_back(TextRange(wb, we));
            wb = we + 1;
        }
        we++;
    }
    if (wb != we)
        out->push_back(TextRange(wb, we));
}

void ImGuiTextFilter::Build()
{
    Filters.resize(0);
    TextRange input_range(InputBuf, InputBuf+strlen(InputBuf));
    input_range.split(',', &Filters);

    CountGrep = 0;
    for (int i = 0; i != Filters.Size; i++)
    {
        TextRange& f = Filters[i];
        while (f.b < f.e && ImCharIsBlankA(f.b[0]))
            f.b++;
        while (f.e > f.b && ImCharIsBlankA(f.e[-1]))
            f.e--;
        if (f.empty())
            continue;
        if (Filters[i].b[0] != '-')
            CountGrep += 1;
    }
}

bool ImGuiTextFilter::PassFilter(const char* text, const char* text_end) const
{
    if (Filters.empty())
        return true;

    if (text == NULL)
        text = "";

    for (int i = 0; i != Filters.Size; i++)
    {
        const TextRange& f = Filters[i];
        if (f.empty())
            continue;
        if (f.b[0] == '-')
        {
            // Subtract
            if (ImStristr(text, text_end, f.begin()+1, f.end()) != NULL)
                return false;
        }
        else
        {
            // Grep
            if (ImStristr(text, text_end, f.begin(), f.end()) != NULL)
                return true;
        }
    }

    // Implicit * grep
    if (CountGrep == 0)
        return true;

    return false;
}

//-----------------------------------------------------------------------------
// [SECTION] ImGuiTextBuffer
//-----------------------------------------------------------------------------

// On some platform vsnprintf() takes va_list by reference and modifies it.
// va_copy is the 'correct' way to copy a va_list but Visual Studio prior to 2013 doesn't have it.
#ifndef va_copy
#if defined(__GNUC__) || defined(__clang__)
#define va_copy(dest, src) __builtin_va_copy(dest, src)
#else
#define va_copy(dest, src) (dest = src)
#endif
#endif

char ImGuiTextBuffer::EmptyString[1] = { 0 };

void ImGuiTextBuffer::append(const char* str, const char* str_end)
{
    int len = str_end ? (int)(str_end - str) : (int)strlen(str);

    // Add zero-terminator the first time
    const int write_off = (Buf.Size != 0) ? Buf.Size : 1;
    const int needed_sz = write_off + len;
    if (write_off + len >= Buf.Capacity)
    {
        int new_capacity = Buf.Capacity * 2;
        Buf.reserve(needed_sz > new_capacity ? needed_sz : new_capacity);
    }

    Buf.resize(needed_sz);
    memcpy(&Buf[write_off - 1], str, (size_t)len);
    Buf[write_off - 1 + len] = 0;
}

void ImGuiTextBuffer::appendf(const char* fmt, ...)
{
    va_list args;
    va_start(args, fmt);
    appendfv(fmt, args);
    va_end(args);
}

// Helper: Text buffer for logging/accumulating text
void ImGuiTextBuffer::appendfv(const char* fmt, va_list args)
{
    va_list args_copy;
    va_copy(args_copy, args);

    int len = ImFormatStringV(NULL, 0, fmt, args);         // FIXME-OPT: could do a first pass write attempt, likely successful on first pass.
    if (len <= 0)
    {
        va_end(args_copy);
        return;
    }

    // Add zero-terminator the first time
    const int write_off = (Buf.Size != 0) ? Buf.Size : 1;
    const int needed_sz = write_off + len;
    if (write_off + len >= Buf.Capacity)
    {
        int new_capacity = Buf.Capacity * 2;
        Buf.reserve(needed_sz > new_capacity ? needed_sz : new_capacity);
    }

    Buf.resize(needed_sz);
    ImFormatStringV(&Buf[write_off - 1], (size_t)len + 1, fmt, args_copy);
    va_end(args_copy);
}

//-----------------------------------------------------------------------------
// [SECTION] ImGuiListClipper
// This is currently not as flexible/powerful as it should be, needs some rework (see TODO)
//-----------------------------------------------------------------------------

static void SetCursorPosYAndSetupDummyPrevLine(float pos_y, float line_height)
{
    // Set cursor position and a few other things so that SetScrollHereY() and Columns() can work when seeking cursor.
    // FIXME: It is problematic that we have to do that here, because custom/equivalent end-user code would stumble on the same issue.
    // The clipper should probably have a 4th step to display the last item in a regular manner.
    ImGui::SetCursorPosY(pos_y);
    ImGuiWindow* window = ImGui::GetCurrentWindow();
    window->DC.CursorPosPrevLine.y = window->DC.CursorPos.y - line_height;      // Setting those fields so that SetScrollHereY() can properly function after the end of our clipper usage.
    window->DC.PrevLineSize.y = (line_height - GImGui->Style.ItemSpacing.y);    // If we end up needing more accurate data (to e.g. use SameLine) we may as well make the clipper have a fourth step to let user process and display the last item in their list.
    if (window->DC.CurrentColumns)
        window->DC.CurrentColumns->LineMinY = window->DC.CursorPos.y;           // Setting this so that cell Y position are set properly
}

// Use case A: Begin() called from constructor with items_height<0, then called again from Sync() in StepNo 1
// Use case B: Begin() called from constructor with items_height>0
// FIXME-LEGACY: Ideally we should remove the Begin/End functions but they are part of the legacy API we still support. This is why some of the code in Step() calling Begin() and reassign some fields, spaghetti style.
void ImGuiListClipper::Begin(int count, float items_height)
{
    StartPosY = ImGui::GetCursorPosY();
    ItemsHeight = items_height;
    ItemsCount = count;
    StepNo = 0;
    DisplayEnd = DisplayStart = -1;
    if (ItemsHeight > 0.0f)
    {
        ImGui::CalcListClipping(ItemsCount, ItemsHeight, &DisplayStart, &DisplayEnd); // calculate how many to clip/display
        if (DisplayStart > 0)
            SetCursorPosYAndSetupDummyPrevLine(StartPosY + DisplayStart * ItemsHeight, ItemsHeight); // advance cursor
        StepNo = 2;
    }
}

void ImGuiListClipper::End()
{
    if (ItemsCount < 0)
        return;
    // In theory here we should assert that ImGui::GetCursorPosY() == StartPosY + DisplayEnd * ItemsHeight, but it feels saner to just seek at the end and not assert/crash the user.
    if (ItemsCount < INT_MAX)
        SetCursorPosYAndSetupDummyPrevLine(StartPosY + ItemsCount * ItemsHeight, ItemsHeight); // advance cursor
    ItemsCount = -1;
    StepNo = 3;
}

bool ImGuiListClipper::Step()
{
    if (ItemsCount == 0 || ImGui::GetCurrentWindowRead()->SkipItems)
    {
        ItemsCount = -1;
        return false;
    }
    if (StepNo == 0) // Step 0: the clipper let you process the first element, regardless of it being visible or not, so we can measure the element height.
    {
        DisplayStart = 0;
        DisplayEnd = 1;
        StartPosY = ImGui::GetCursorPosY();
        StepNo = 1;
        return true;
    }
    if (StepNo == 1) // Step 1: the clipper infer height from first element, calculate the actual range of elements to display, and position the cursor before the first element.
    {
        if (ItemsCount == 1) { ItemsCount = -1; return false; }
        float items_height = ImGui::GetCursorPosY() - StartPosY;
        IM_ASSERT(items_height > 0.0f);   // If this triggers, it means Item 0 hasn't moved the cursor vertically
        Begin(ItemsCount-1, items_height);
        DisplayStart++;
        DisplayEnd++;
        StepNo = 3;
        return true;
    }
    if (StepNo == 2) // Step 2: dummy step only required if an explicit items_height was passed to constructor or Begin() and user still call Step(). Does nothing and switch to Step 3.
    {
        IM_ASSERT(DisplayStart >= 0 && DisplayEnd >= 0);
        StepNo = 3;
        return true;
    }
    if (StepNo == 3) // Step 3: the clipper validate that we have reached the expected Y position (corresponding to element DisplayEnd), advance the cursor to the end of the list and then returns 'false' to end the loop.
        End();
    return false;
}

//-----------------------------------------------------------------------------
// [SECTION] RENDER HELPERS
// Those (internal) functions are currently quite a legacy mess - their signature and behavior will change.
// Also see imgui_draw.cpp for some more which have been reworked to not rely on ImGui:: state.
//-----------------------------------------------------------------------------

const char* ImGui::FindRenderedTextEnd(const char* text, const char* text_end)
{
    const char* text_display_end = text;
    if (!text_end)
        text_end = (const char*)-1;

    while (text_display_end < text_end && *text_display_end != '\0' && (text_display_end[0] != '#' || text_display_end[1] != '#'))
        text_display_end++;
    return text_display_end;
}

// Internal ImGui functions to render text
// RenderText***() functions calls ImDrawList::AddText() calls ImBitmapFont::RenderText()
void ImGui::RenderText(ImVec2 pos, const char* text, const char* text_end, bool hide_text_after_hash)
{
    ImGuiContext& g = *GImGui;
    ImGuiWindow* window = g.CurrentWindow;

    // Hide anything after a '##' string
    const char* text_display_end;
    if (hide_text_after_hash)
    {
        text_display_end = FindRenderedTextEnd(text, text_end);
    }
    else
    {
        if (!text_end)
            text_end = text + strlen(text); // FIXME-OPT
        text_display_end = text_end;
    }

    if (text != text_display_end)
    {
        window->DrawList->AddText(g.Font, g.FontSize, pos, GetColorU32(ImGuiCol_Text), text, text_display_end);
        if (g.LogEnabled)
            LogRenderedText(&pos, text, text_display_end);
    }
}

void ImGui::RenderTextWrapped(ImVec2 pos, const char* text, const char* text_end, float wrap_width)
{
    ImGuiContext& g = *GImGui;
    ImGuiWindow* window = g.CurrentWindow;

    if (!text_end)
        text_end = text + strlen(text); // FIXME-OPT

    if (text != text_end)
    {
        window->DrawList->AddText(g.Font, g.FontSize, pos, GetColorU32(ImGuiCol_Text), text, text_end, wrap_width);
        if (g.LogEnabled)
            LogRenderedText(&pos, text, text_end);
    }
}

// Default clip_rect uses (pos_min,pos_max)
// Handle clipping on CPU immediately (vs typically let the GPU clip the triangles that are overlapping the clipping rectangle edges)
void ImGui::RenderTextClippedTabs(const ImVec2& pos_min, const ImVec2& pos_max, const char* text, const char* text_end, const ImVec2* text_size_if_known, bool is_hovered, bool is_selected, const ImVec2& align, const ImRect* clip_rect)
{
	// Hide anything after a '##' string
	const char* text_display_end = FindRenderedTextEnd(text, text_end);
	const int text_len = (int)(text_display_end - text);
	if (text_len == 0)
		return;

	ImGuiContext& g = *GImGui;
	ImGuiWindow* window = g.CurrentWindow;

	// Perform CPU side clipping for single clipped element to avoid using scissor state
	ImVec2 pos = pos_min;
	const ImVec2 text_size = text_size_if_known ? *text_size_if_known : CalcTextSize(text, text_display_end, false, 0.0f);

	const ImVec2* clip_min = clip_rect ? &clip_rect->Min : &pos_min;
	const ImVec2* clip_max = clip_rect ? &clip_rect->Max : &pos_max;
	bool need_clipping = (pos.x + text_size.x >= clip_max->x) || (pos.y + text_size.y >= clip_max->y);
	if (clip_rect) // If we had no explicit clipping rectangle then pos==clip_min
		need_clipping |= (pos.x < clip_min->x) || (pos.y < clip_min->y);

	// Align whole block. We should defer that to the better rendering function when we'll have support for individual line alignment.
	if (align.x > 0.0f) pos.x = ImMax(pos.x, pos.x + (pos_max.x - pos.x - text_size.x) * align.x);
	if (align.y > 0.0f) pos.y = ImMax(pos.y, pos.y + (pos_max.y - pos.y - text_size.y) * align.y);

	// Render
	if (need_clipping)
	{
		ImVec4 fine_clip_rect(clip_min->x, clip_min->y, clip_max->x, clip_max->y);
		window->DrawList->AddText(g.Font, g.FontSize, pos, GetColorU32(ImGuiCol_Text), text, text_display_end, 0.0f, &fine_clip_rect);
	}
	else
	{
		window->DrawList->AddText(g.Font, g.FontSize, pos, GetColorU32(ImGuiCol_Text), text, text_display_end, 0.0f, NULL);
	}
	if (g.LogEnabled)
		LogRenderedText(&pos, text, text_display_end);
}


// Default clip_rect uses (pos_min,pos_max)
// Handle clipping on CPU immediately (vs typically let the GPU clip the triangles that are overlapping the clipping rectangle edges)
void ImGui::RenderTextClippedEx(ImDrawList* draw_list, const ImVec2& pos_min, const ImVec2& pos_max, const char* text, const char* text_display_end, const ImVec2* text_size_if_known, const ImVec2& align, const ImRect* clip_rect)
{
    // Perform CPU side clipping for single clipped element to avoid using scissor state
    ImVec2 pos = pos_min;
    const ImVec2 text_size = text_size_if_known ? *text_size_if_known : CalcTextSize(text, text_display_end, false, 0.0f);

    const ImVec2* clip_min = clip_rect ? &clip_rect->Min : &pos_min;
    const ImVec2* clip_max = clip_rect ? &clip_rect->Max : &pos_max;
    bool need_clipping = (pos.x + text_size.x >= clip_max->x) || (pos.y + text_size.y >= clip_max->y);
    if (clip_rect) // If we had no explicit clipping rectangle then pos==clip_min
        need_clipping |= (pos.x < clip_min->x) || (pos.y < clip_min->y);

    // Align whole block. We should defer that to the better rendering function when we'll have support for individual line alignment.
    if (align.x > 0.0f) pos.x = ImMax(pos.x, pos.x + (pos_max.x - pos.x - text_size.x) * align.x);
    if (align.y > 0.0f) pos.y = ImMax(pos.y, pos.y + (pos_max.y - pos.y - text_size.y) * align.y);

    // Render
    if (need_clipping)
    {
        ImVec4 fine_clip_rect(clip_min->x, clip_min->y, clip_max->x, clip_max->y);
        draw_list->AddText(NULL, 0.0f, pos, GetColorU32(ImGuiCol_Text), text, text_display_end, 0.0f, &fine_clip_rect);
    }
    else
    {
        draw_list->AddText(NULL, 0.0f, pos, GetColorU32(ImGuiCol_Text), text, text_display_end, 0.0f, NULL);
    }
}

void ImGui::RenderTextClipped(const ImVec2& pos_min, const ImVec2& pos_max, const char* text, const char* text_end, const ImVec2* text_size_if_known, const ImVec2& align, const ImRect* clip_rect)
{
    // Hide anything after a '##' string
    const char* text_display_end = FindRenderedTextEnd(text, text_end);
    const int text_len = (int)(text_display_end - text);
    if (text_len == 0)
        return;

    ImGuiContext& g = *GImGui;
    ImGuiWindow* window = g.CurrentWindow;
    RenderTextClippedEx(window->DrawList, pos_min, pos_max, text, text_display_end, text_size_if_known, align, clip_rect);
    if (g.LogEnabled)
        LogRenderedText(&pos_min, text, text_display_end);
}

// Render a rectangle shaped with optional rounding and borders
void ImGui::RenderFrame(ImVec2 p_min, ImVec2 p_max, ImU32 fill_col, bool border, float rounding)
{
    ImGuiContext& g = *GImGui;
    ImGuiWindow* window = g.CurrentWindow;
    window->DrawList->AddRectFilled(p_min, p_max, fill_col, rounding);
    const float border_size = g.Style.FrameBorderSize;
    if (border && border_size > 0.0f)
    {
        window->DrawList->AddRect(p_min+ImVec2(1,1), p_max+ImVec2(1,1), GetColorU32(ImGuiCol_BorderShadow), rounding, ImDrawCornerFlags_All, border_size);
        window->DrawList->AddRect(p_min, p_max, GetColorU32(ImGuiCol_Border), rounding, ImDrawCornerFlags_All, border_size);
    }
}

void ImGui::RenderFrameBorder(ImVec2 p_min, ImVec2 p_max, float rounding)
{
    ImGuiContext& g = *GImGui;
    ImGuiWindow* window = g.CurrentWindow;
    const float border_size = g.Style.FrameBorderSize;
    if (border_size > 0.0f)
    {
        window->DrawList->AddRect(p_min+ImVec2(1,1), p_max+ImVec2(1,1), GetColorU32(ImGuiCol_BorderShadow), rounding, ImDrawCornerFlags_All, border_size);
        window->DrawList->AddRect(p_min, p_max, GetColorU32(ImGuiCol_Border), rounding, ImDrawCornerFlags_All, border_size);
    }
}

// Render an arrow aimed to be aligned with text (p_min is a position in the same space text would be positioned). To e.g. denote expanded/collapsed state
void ImGui::RenderArrow(ImVec2 p_min, ImGuiDir dir, float scale)
{
    ImGuiContext& g = *GImGui;

    const float h = g.FontSize * 1.00f;
    float r = h * 0.40f * scale;
    ImVec2 center = p_min + ImVec2(h * 0.50f, h * 0.50f * scale);

    ImVec2 a, b, c;
    switch (dir)
    {
    case ImGuiDir_Up:
    case ImGuiDir_Down:
        if (dir == ImGuiDir_Up) r = -r;
        a = ImVec2(+0.000f,+0.750f) * r;
        b = ImVec2(-0.866f,-0.750f) * r;
        c = ImVec2(+0.866f,-0.750f) * r;
        break;
    case ImGuiDir_Left:
    case ImGuiDir_Right:
        if (dir == ImGuiDir_Left) r = -r;
        a = ImVec2(+0.750f,+0.000f) * r;
        b = ImVec2(-0.750f,+0.866f) * r;
        c = ImVec2(-0.750f,-0.866f) * r;
        break;
    case ImGuiDir_None:
    case ImGuiDir_COUNT:
        IM_ASSERT(0);
        break;
    }

    g.CurrentWindow->DrawList->AddTriangleFilled(center + a, center + b, center + c, GetColorU32(ImGuiCol_Text));
}

void ImGui::RenderBullet(ImVec2 pos)
{
    ImGuiContext& g = *GImGui;
    ImGuiWindow* window = g.CurrentWindow;
    window->DrawList->AddCircleFilled(pos, g.FontSize*0.20f, GetColorU32(ImGuiCol_Text), 8);
}

void ImGui::RenderCheckMark(ImVec2 pos, ImU32 col, float sz)
{
    ImGuiContext& g = *GImGui;
    ImGuiWindow* window = g.CurrentWindow;

    float thickness = ImMax(sz / 5.0f, 1.0f);
    sz -= thickness*0.5f;
    pos += ImVec2(thickness*0.25f, thickness*0.25f);

    float third = sz / 3.0f;
    float bx = pos.x + third;
    float by = pos.y + sz - third*0.5f;
    window->DrawList->PathLineTo(ImVec2(bx - third, by - third));
    window->DrawList->PathLineTo(ImVec2(bx, by));
    window->DrawList->PathLineTo(ImVec2(bx + third*2, by - third*2));
    window->DrawList->PathStroke(col, false, thickness);
}

void ImGui::RenderNavHighlight(const ImRect& bb, ImGuiID id, ImGuiNavHighlightFlags flags)
{
    ImGuiContext& g = *GImGui;
    if (id != g.NavId)
        return;
    if (g.NavDisableHighlight && !(flags & ImGuiNavHighlightFlags_AlwaysDraw))
        return;
    ImGuiWindow* window = g.CurrentWindow;
    if (window->DC.NavHideHighlightOneFrame)
        return;

    float rounding = (flags & ImGuiNavHighlightFlags_NoRounding) ? 0.0f : g.Style.FrameRounding;
    ImRect display_rect = bb;
    display_rect.ClipWith(window->ClipRect);
    if (flags & ImGuiNavHighlightFlags_TypeDefault)
    {
        const float THICKNESS = 2.0f;
        const float DISTANCE = 3.0f + THICKNESS * 0.5f;
        display_rect.Expand(ImVec2(DISTANCE,DISTANCE));
        bool fully_visible = window->ClipRect.Contains(display_rect);
        if (!fully_visible)
            window->DrawList->PushClipRect(display_rect.Min, display_rect.Max);
        window->DrawList->AddRect(display_rect.Min + ImVec2(THICKNESS*0.5f,THICKNESS*0.5f), display_rect.Max - ImVec2(THICKNESS*0.5f,THICKNESS*0.5f), GetColorU32(ImGuiCol_NavHighlight), rounding, ImDrawCornerFlags_All, THICKNESS);
        if (!fully_visible)
            window->DrawList->PopClipRect();
    }
    if (flags & ImGuiNavHighlightFlags_TypeThin)
    {
        window->DrawList->AddRect(display_rect.Min, display_rect.Max, GetColorU32(ImGuiCol_NavHighlight), rounding, ~0, 1.0f);
    }
}

//-----------------------------------------------------------------------------
// [SECTION] MAIN CODE (most of the code! lots of stuff, needs tidying up!)
//-----------------------------------------------------------------------------

// ImGuiWindow is mostly a dumb struct. It merely has a constructor and a few helper methods
ImGuiWindow::ImGuiWindow(ImGuiContext* context, const char* name)
    : DrawListInst(&context->DrawListSharedData)
{
    Name = ImStrdup(name);
    ID = ImHashStr(name);
    IDStack.push_back(ID);
    Flags = ImGuiWindowFlags_None;
    Pos = ImVec2(0.0f, 0.0f);
    Size = SizeFull = ImVec2(0.0f, 0.0f);
    SizeContents = SizeContentsExplicit = ImVec2(0.0f, 0.0f);
    WindowPadding = ImVec2(0.0f, 0.0f);
    WindowRounding = 0.0f;
    WindowBorderSize = 0.0f;
    NameBufLen = (int)strlen(name) + 1;
    MoveId = GetID("#MOVE");
    ChildId = 0;
    Scroll = ImVec2(0.0f, 0.0f);
    ScrollTarget = ImVec2(FLT_MAX, FLT_MAX);
    ScrollTargetCenterRatio = ImVec2(0.5f, 0.5f);
    ScrollbarSizes = ImVec2(0.0f, 0.0f);
    ScrollbarX = ScrollbarY = false;
    Active = WasActive = false;
    WriteAccessed = false;
    Collapsed = false;
    WantCollapseToggle = false;
    SkipItems = false;
    Appearing = false;
    Hidden = false;
    HasCloseButton = false;
    ResizeBorderHeld = -1;
    BeginCount = 0;
    BeginOrderWithinParent = -1;
    BeginOrderWithinContext = -1;
    PopupId = 0;
    AutoFitFramesX = AutoFitFramesY = -1;
    AutoFitOnlyGrows = false;
    AutoFitChildAxises = 0x00;
    AutoPosLastDirection = ImGuiDir_None;
    HiddenFramesCanSkipItems = HiddenFramesCannotSkipItems = 0;
    SetWindowPosAllowFlags = SetWindowSizeAllowFlags = SetWindowCollapsedAllowFlags = ImGuiCond_Always | ImGuiCond_Once | ImGuiCond_FirstUseEver | ImGuiCond_Appearing;
    SetWindowPosVal = SetWindowPosPivot = ImVec2(FLT_MAX, FLT_MAX);

    LastFrameActive = -1;
    ItemWidthDefault = 0.0f;
    FontWindowScale = 1.0f;
    SettingsIdx = -1;

    DrawList = &DrawListInst;
    DrawList->_OwnerName = Name;
    ParentWindow = NULL;
    RootWindow = NULL;
    RootWindowForTitleBarHighlight = NULL;
    RootWindowForNav = NULL;

    NavLastIds[0] = NavLastIds[1] = 0;
    NavRectRel[0] = NavRectRel[1] = ImRect();
    NavLastChildNavWindow = NULL;
}

ImGuiWindow::~ImGuiWindow()
{
    IM_ASSERT(DrawList == &DrawListInst);
    IM_DELETE(Name);
    for (int i = 0; i != ColumnsStorage.Size; i++)
        ColumnsStorage[i].~ImGuiColumns();
}

ImGuiID ImGuiWindow::GetID(const char* str, const char* str_end)
{
    ImGuiID seed = IDStack.back();
    ImGuiID id = ImHashStr(str, str_end ? (str_end - str) : 0, seed);
    ImGui::KeepAliveID(id);
    return id;
}

ImGuiID ImGuiWindow::GetID(const void* ptr)
{
    ImGuiID seed = IDStack.back();
    ImGuiID id = ImHashData(&ptr, sizeof(void*), seed);
    ImGui::KeepAliveID(id);
    return id;
}

ImGuiID ImGuiWindow::GetIDNoKeepAlive(const char* str, const char* str_end)
{
    ImGuiID seed = IDStack.back();
    return ImHashStr(str, str_end ? (str_end - str) : 0, seed);
}

ImGuiID ImGuiWindow::GetIDNoKeepAlive(const void* ptr)
{
    ImGuiID seed = IDStack.back();
    return ImHashData(&ptr, sizeof(void*), seed);
}

// This is only used in rare/specific situations to manufacture an ID out of nowhere.
ImGuiID ImGuiWindow::GetIDFromRectangle(const ImRect& r_abs)
{
    ImGuiID seed = IDStack.back();
    const int r_rel[4] = { (int)(r_abs.Min.x - Pos.x), (int)(r_abs.Min.y - Pos.y), (int)(r_abs.Max.x - Pos.x), (int)(r_abs.Max.y - Pos.y) };
    ImGuiID id = ImHashData(&r_rel, sizeof(r_rel), seed);
    ImGui::KeepAliveID(id);
    return id;
}

static void SetCurrentWindow(ImGuiWindow* window)
{
    ImGuiContext& g = *GImGui;
    g.CurrentWindow = window;
    if (window)
        g.FontSize = g.DrawListSharedData.FontSize = window->CalcFontSize();
}

void ImGui::SetNavID(ImGuiID id, int nav_layer)
{
    ImGuiContext& g = *GImGui;
    IM_ASSERT(g.NavWindow);
    IM_ASSERT(nav_layer == 0 || nav_layer == 1);
    g.NavId = id;
    g.NavWindow->NavLastIds[nav_layer] = id;
}

void ImGui::SetNavIDWithRectRel(ImGuiID id, int nav_layer, const ImRect& rect_rel)
{
    ImGuiContext& g = *GImGui;
    SetNavID(id, nav_layer);
    g.NavWindow->NavRectRel[nav_layer] = rect_rel;
    g.NavMousePosDirty = true;
    g.NavDisableHighlight = false;
    g.NavDisableMouseHover = true;
}

void ImGui::SetActiveID(ImGuiID id, ImGuiWindow* window)
{
    ImGuiContext& g = *GImGui;
    g.ActiveIdIsJustActivated = (g.ActiveId != id);
    if (g.ActiveIdIsJustActivated)
    {
        g.ActiveIdTimer = 0.0f;
        g.ActiveIdHasBeenPressed = false;
        g.ActiveIdHasBeenEdited = false;
        if (id != 0)
        {
            g.LastActiveId = id;
            g.LastActiveIdTimer = 0.0f;
        }
    }
    g.ActiveId = id;
    g.ActiveIdAllowNavDirFlags = 0;
    g.ActiveIdBlockNavInputFlags = 0;
    g.ActiveIdAllowOverlap = false;
    g.ActiveIdWindow = window;
    if (id)
    {
        g.ActiveIdIsAlive = id;
        g.ActiveIdSource = (g.NavActivateId == id || g.NavInputId == id || g.NavJustTabbedId == id || g.NavJustMovedToId == id) ? ImGuiInputSource_Nav : ImGuiInputSource_Mouse;
    }
}

// FIXME-NAV: The existence of SetNavID/SetNavIDWithRectRel/SetFocusID is incredibly messy and confusing and needs some explanation or refactoring.
void ImGui::SetFocusID(ImGuiID id, ImGuiWindow* window)
{
    ImGuiContext& g = *GImGui;
    IM_ASSERT(id != 0);

    // Assume that SetFocusID() is called in the context where its NavLayer is the current layer, which is the case everywhere we call it.
    const ImGuiNavLayer nav_layer = window->DC.NavLayerCurrent;
    if (g.NavWindow != window)
        g.NavInitRequest = false;
    g.NavId = id;
    g.NavWindow = window;
    g.NavLayer = nav_layer;
    window->NavLastIds[nav_layer] = id;
    if (window->DC.LastItemId == id)
        window->NavRectRel[nav_layer] = ImRect(window->DC.LastItemRect.Min - window->Pos, window->DC.LastItemRect.Max - window->Pos);

    if (g.ActiveIdSource == ImGuiInputSource_Nav)
        g.NavDisableMouseHover = true;
    else
        g.NavDisableHighlight = true;
}

void ImGui::ClearActiveID()
{
    SetActiveID(0, NULL);
}

void ImGui::SetHoveredID(ImGuiID id)
{
    ImGuiContext& g = *GImGui;
    g.HoveredId = id;
    g.HoveredIdAllowOverlap = false;
    if (id != 0 && g.HoveredIdPreviousFrame != id)
        g.HoveredIdTimer = g.HoveredIdNotActiveTimer = 0.0f;
}

ImGuiID ImGui::GetHoveredID()
{
    ImGuiContext& g = *GImGui;
    return g.HoveredId ? g.HoveredId : g.HoveredIdPreviousFrame;
}

void ImGui::KeepAliveID(ImGuiID id)
{
    ImGuiContext& g = *GImGui;
    if (g.ActiveId == id)
        g.ActiveIdIsAlive = id;
    if (g.ActiveIdPreviousFrame == id)
        g.ActiveIdPreviousFrameIsAlive = true;
}

void ImGui::MarkItemEdited(ImGuiID id)
{
    // This marking is solely to be able to provide info for IsItemDeactivatedAfterEdit().
    // ActiveId might have been released by the time we call this (as in the typical press/release button behavior) but still need need to fill the data.
    ImGuiContext& g = *GImGui;
    IM_ASSERT(g.ActiveId == id || g.ActiveId == 0 || g.DragDropActive);
    IM_UNUSED(id); // Avoid unused variable warnings when asserts are compiled out.
    //IM_ASSERT(g.CurrentWindow->DC.LastItemId == id);
    g.ActiveIdHasBeenEdited = true;
    g.CurrentWindow->DC.LastItemStatusFlags |= ImGuiItemStatusFlags_Edited;
}

static inline bool IsWindowContentHoverable(ImGuiWindow* window, ImGuiHoveredFlags flags)
{
    // An active popup disable hovering on other windows (apart from its own children)
    // FIXME-OPT: This could be cached/stored within the window.
    ImGuiContext& g = *GImGui;
    if (g.NavWindow)
        if (ImGuiWindow* focused_root_window = g.NavWindow->RootWindow)
            if (focused_root_window->WasActive && focused_root_window != window->RootWindow)
            {
                // For the purpose of those flags we differentiate "standard popup" from "modal popup"
                // NB: The order of those two tests is important because Modal windows are also Popups.
                if (focused_root_window->Flags & ImGuiWindowFlags_Modal)
                    return false;
                if ((focused_root_window->Flags & ImGuiWindowFlags_Popup) && !(flags & ImGuiHoveredFlags_AllowWhenBlockedByPopup))
                    return false;
            }

    return true;
}

// Advance cursor given item size for layout.
void ImGui::ItemSize(const ImVec2& size, float text_offset_y)
{
    ImGuiContext& g = *GImGui;
    ImGuiWindow* window = g.CurrentWindow;
    if (window->SkipItems)
        return;

    // Always align ourselves on pixel boundaries
    const float line_height = ImMax(window->DC.CurrentLineSize.y, size.y);
    const float text_base_offset = ImMax(window->DC.CurrentLineTextBaseOffset, text_offset_y);
    //if (g.IO.KeyAlt) window->DrawList->AddRect(window->DC.CursorPos, window->DC.CursorPos + ImVec2(size.x, line_height), IM_COL32(255,0,0,200)); // [DEBUG]
    window->DC.CursorPosPrevLine = ImVec2(window->DC.CursorPos.x + size.x, window->DC.CursorPos.y);
    window->DC.CursorPos.x = (float)(int)(window->Pos.x + window->DC.Indent.x + window->DC.ColumnsOffset.x);
    window->DC.CursorPos.y = (float)(int)(window->DC.CursorPos.y + line_height + g.Style.ItemSpacing.y);
    window->DC.CursorMaxPos.x = ImMax(window->DC.CursorMaxPos.x, window->DC.CursorPosPrevLine.x);
    window->DC.CursorMaxPos.y = ImMax(window->DC.CursorMaxPos.y, window->DC.CursorPos.y - g.Style.ItemSpacing.y);
    //if (g.IO.KeyAlt) window->DrawList->AddCircle(window->DC.CursorMaxPos, 3.0f, IM_COL32(255,0,0,255), 4); // [DEBUG]

    window->DC.PrevLineSize.y = line_height;
    window->DC.PrevLineTextBaseOffset = text_base_offset;
    window->DC.CurrentLineSize.y = window->DC.CurrentLineTextBaseOffset = 0.0f;

    // Horizontal layout mode
    if (window->DC.LayoutType == ImGuiLayoutType_Horizontal)
        SameLine();
}

void ImGui::ItemSize(const ImRect& bb, float text_offset_y)
{
    ItemSize(bb.GetSize(), text_offset_y);
}

// Declare item bounding box for clipping and interaction.
// Note that the size can be different than the one provided to ItemSize(). Typically, widgets that spread over available surface
// declare their minimum size requirement to ItemSize() and then use a larger region for drawing/interaction, which is passed to ItemAdd().
bool ImGui::ItemAdd(const ImRect& bb, ImGuiID id, const ImRect* nav_bb_arg)
{
    ImGuiContext& g = *GImGui;
    ImGuiWindow* window = g.CurrentWindow;

    if (id != 0)
    {
        // Navigation processing runs prior to clipping early-out
        //  (a) So that NavInitRequest can be honored, for newly opened windows to select a default widget
        //  (b) So that we can scroll up/down past clipped items. This adds a small O(N) cost to regular navigation requests unfortunately, but it is still limited to one window.
        //      it may not scale very well for windows with ten of thousands of item, but at least NavMoveRequest is only set on user interaction, aka maximum once a frame.
        //      We could early out with "if (is_clipped && !g.NavInitRequest) return false;" but when we wouldn't be able to reach unclipped widgets. This would work if user had explicit scrolling control (e.g. mapped on a stick)
        window->DC.NavLayerActiveMaskNext |= window->DC.NavLayerCurrentMask;
        if (g.NavId == id || g.NavAnyRequest)
            if (g.NavWindow->RootWindowForNav == window->RootWindowForNav)
                if (window == g.NavWindow || ((window->Flags | g.NavWindow->Flags) & ImGuiWindowFlags_NavFlattened))
                    NavProcessItem(window, nav_bb_arg ? *nav_bb_arg : bb, id);
    }

    window->DC.LastItemId = id;
    window->DC.LastItemRect = bb;
    window->DC.LastItemStatusFlags = ImGuiItemStatusFlags_None;

#ifdef IMGUI_ENABLE_TEST_ENGINE
    if (id != 0)
        IMGUI_TEST_ENGINE_ITEM_ADD(nav_bb_arg ? *nav_bb_arg : bb, id);
#endif

    // Clipping test
    const bool is_clipped = IsClippedEx(bb, id, false);
    if (is_clipped)
        return false;
    //if (g.IO.KeyAlt) window->DrawList->AddRect(bb.Min, bb.Max, IM_COL32(255,255,0,120)); // [DEBUG]

    // We need to calculate this now to take account of the current clipping rectangle (as items like Selectable may change them)
    if (IsMouseHoveringRect(bb.Min, bb.Max))
        window->DC.LastItemStatusFlags |= ImGuiItemStatusFlags_HoveredRect;
    return true;
}

// This is roughly matching the behavior of internal-facing ItemHoverable()
// - we allow hovering to be true when ActiveId==window->MoveID, so that clicking on non-interactive items such as a Text() item still returns true with IsItemHovered()
// - this should work even for non-interactive items that have no ID, so we cannot use LastItemId
bool ImGui::IsItemHovered(ImGuiHoveredFlags flags)
{
    ImGuiContext& g = *GImGui;
    ImGuiWindow* window = g.CurrentWindow;
    if (g.NavDisableMouseHover && !g.NavDisableHighlight)
        return IsItemFocused();

    // Test for bounding box overlap, as updated as ItemAdd()
    if (!(window->DC.LastItemStatusFlags & ImGuiItemStatusFlags_HoveredRect))
        return false;
    IM_ASSERT((flags & (ImGuiHoveredFlags_RootWindow | ImGuiHoveredFlags_ChildWindows)) == 0);   // Flags not supported by this function

    // Test if we are hovering the right window (our window could be behind another window)
    // [2017/10/16] Reverted commit 344d48be3 and testing RootWindow instead. I believe it is correct to NOT test for RootWindow but this leaves us unable to use IsItemHovered() after EndChild() itself.
    // Until a solution is found I believe reverting to the test from 2017/09/27 is safe since this was the test that has been running for a long while.
    //if (g.HoveredWindow != window)
    //    return false;
    if (g.HoveredRootWindow != window->RootWindow && !(flags & ImGuiHoveredFlags_AllowWhenOverlapped))
        return false;

    // Test if another item is active (e.g. being dragged)
    if (!(flags & ImGuiHoveredFlags_AllowWhenBlockedByActiveItem))
        if (g.ActiveId != 0 && g.ActiveId != window->DC.LastItemId && !g.ActiveIdAllowOverlap && g.ActiveId != window->MoveId)
            return false;

    // Test if interactions on this window are blocked by an active popup or modal
    if (!IsWindowContentHoverable(window, flags))
        return false;

    // Test if the item is disabled
    if ((window->DC.ItemFlags & ImGuiItemFlags_Disabled) && !(flags & ImGuiHoveredFlags_AllowWhenDisabled))
        return false;

    // Special handling for the dummy item after Begin() which represent the title bar or tab.
    // When the window is collapsed (SkipItems==true) that last item will never be overwritten so we need to detect the case.
    if (window->DC.LastItemId == window->MoveId && window->WriteAccessed)
        return false;
    return true;
}

// Internal facing ItemHoverable() used when submitting widgets. Differs slightly from IsItemHovered().
bool ImGui::ItemHoverable(const ImRect& bb, ImGuiID id)
{
    ImGuiContext& g = *GImGui;
    if (g.HoveredId != 0 && g.HoveredId != id && !g.HoveredIdAllowOverlap)
        return false;

    ImGuiWindow* window = g.CurrentWindow;
    if (g.HoveredWindow != window)
        return false;
    if (g.ActiveId != 0 && g.ActiveId != id && !g.ActiveIdAllowOverlap)
        return false;
    if (!IsMouseHoveringRect(bb.Min, bb.Max))
        return false;
    if (g.NavDisableMouseHover || !IsWindowContentHoverable(window, ImGuiHoveredFlags_None))
        return false;
    if (window->DC.ItemFlags & ImGuiItemFlags_Disabled)
        return false;

    SetHoveredID(id);
    return true;
}

bool ImGui::IsClippedEx(const ImRect& bb, ImGuiID id, bool clip_even_when_logged)
{
    ImGuiContext& g = *GImGui;
    ImGuiWindow* window = g.CurrentWindow;
    if (!bb.Overlaps(window->ClipRect))
        if (id == 0 || id != g.ActiveId)
            if (clip_even_when_logged || !g.LogEnabled)
                return true;
    return false;
}

// Process TAB/Shift+TAB. Be mindful that this function may _clear_ the ActiveID when tabbing out.
bool ImGui::FocusableItemRegister(ImGuiWindow* window, ImGuiID id)
{
    ImGuiContext& g = *GImGui;

    // Increment counters
    const bool is_tab_stop = (window->DC.ItemFlags & (ImGuiItemFlags_NoTabStop | ImGuiItemFlags_Disabled)) == 0;
    window->DC.FocusCounterAll++;
    if (is_tab_stop)
        window->DC.FocusCounterTab++;

    // Process TAB/Shift-TAB to tab *OUT* of the currently focused item.
    // (Note that we can always TAB out of a widget that doesn't allow tabbing in)
    if (g.ActiveId == id && g.FocusTabPressed && !(g.ActiveIdBlockNavInputFlags & (1 << ImGuiNavInput_KeyTab_)) && g.FocusRequestNextWindow == NULL)
    {
        g.FocusRequestNextWindow = window;
        g.FocusRequestNextCounterTab = window->DC.FocusCounterTab + (g.IO.KeyShift ? (is_tab_stop ? -1 : 0) : +1); // Modulo on index will be applied at the end of frame once we've got the total counter of items.
    }

    // Handle focus requests
    if (g.FocusRequestCurrWindow == window)
    {
        if (window->DC.FocusCounterAll == g.FocusRequestCurrCounterAll)
            return true;
        if (is_tab_stop && window->DC.FocusCounterTab == g.FocusRequestCurrCounterTab)
        {
            g.NavJustTabbedId = id;
            return true;
        }

        // If another item is about to be focused, we clear our own active id
        if (g.ActiveId == id)
            ClearActiveID();
    }

    return false;
}

void ImGui::FocusableItemUnregister(ImGuiWindow* window)
{
    window->DC.FocusCounterAll--;
    window->DC.FocusCounterTab--;
}

float ImGui::CalcWrapWidthForPos(const ImVec2& pos, float wrap_pos_x)
{
    if (wrap_pos_x < 0.0f)
        return 0.0f;

    ImGuiWindow* window = GImGui->CurrentWindow;
    if (wrap_pos_x == 0.0f)
        wrap_pos_x = GetContentRegionMaxScreen().x;
    else if (wrap_pos_x > 0.0f)
        wrap_pos_x += window->Pos.x - window->Scroll.x; // wrap_pos_x is provided is window local space

    return ImMax(wrap_pos_x - pos.x, 1.0f);
}

// IM_ALLOC() == ImGui::MemAlloc()
void* ImGui::MemAlloc(size_t size)
{
    if (ImGuiContext* ctx = GImGui)
        ctx->IO.MetricsActiveAllocations++;
    return GImAllocatorAllocFunc(size, GImAllocatorUserData);
}

// IM_FREE() == ImGui::MemFree()
void ImGui::MemFree(void* ptr)
{
    if (ptr)
        if (ImGuiContext* ctx = GImGui)
            ctx->IO.MetricsActiveAllocations--;
    return GImAllocatorFreeFunc(ptr, GImAllocatorUserData);
}

const char* ImGui::GetClipboardText()
{
    return GImGui->IO.GetClipboardTextFn ? GImGui->IO.GetClipboardTextFn(GImGui->IO.ClipboardUserData) : "";
}

void ImGui::SetClipboardText(const char* text)
{
    if (GImGui->IO.SetClipboardTextFn)
        GImGui->IO.SetClipboardTextFn(GImGui->IO.ClipboardUserData, text);
}

const char* ImGui::GetVersion()
{
    return IMGUI_VERSION;
}

// Internal state access - if you want to share ImGui state between modules (e.g. DLL) or allocate it yourself
// Note that we still point to some static data and members (such as GFontAtlas), so the state instance you end up using will point to the static data within its module
ImGuiContext* ImGui::GetCurrentContext()
{
    return GImGui;
}

void ImGui::SetCurrentContext(ImGuiContext* ctx)
{
#ifdef IMGUI_SET_CURRENT_CONTEXT_FUNC
    IMGUI_SET_CURRENT_CONTEXT_FUNC(ctx); // For custom thread-based hackery you may want to have control over this.
#else
    GImGui = ctx;
#endif
}

// Helper function to verify that the type sizes are matching between the calling file's compilation unit and imgui.cpp's compilation unit
// If the user has inconsistent compilation settings, imgui configuration #define, packing pragma, etc. you may see different structures from what imgui.cpp sees which is highly problematic.
bool ImGui::DebugCheckVersionAndDataLayout(const char* version, size_t sz_io, size_t sz_style, size_t sz_vec2, size_t sz_vec4, size_t sz_vert)
{
    bool error = false;
    if (strcmp(version, IMGUI_VERSION)!=0) { error = true; IM_ASSERT(strcmp(version,IMGUI_VERSION)==0 && "Mismatched version string!");  }
    if (sz_io    != sizeof(ImGuiIO))       { error = true; IM_ASSERT(sz_io    == sizeof(ImGuiIO)      && "Mismatched struct layout!"); }
    if (sz_style != sizeof(ImGuiStyle))    { error = true; IM_ASSERT(sz_style == sizeof(ImGuiStyle)   && "Mismatched struct layout!"); }
    if (sz_vec2  != sizeof(ImVec2))        { error = true; IM_ASSERT(sz_vec2  == sizeof(ImVec2)       && "Mismatched struct layout!"); }
    if (sz_vec4  != sizeof(ImVec4))        { error = true; IM_ASSERT(sz_vec4  == sizeof(ImVec4)       && "Mismatched struct layout!"); }
    if (sz_vert  != sizeof(ImDrawVert))    { error = true; IM_ASSERT(sz_vert  == sizeof(ImDrawVert)   && "Mismatched struct layout!"); }
    return !error;
}

void ImGui::SetAllocatorFunctions(void* (*alloc_func)(size_t sz, void* user_data), void (*free_func)(void* ptr, void* user_data), void* user_data)
{
    GImAllocatorAllocFunc = alloc_func;
    GImAllocatorFreeFunc = free_func;
    GImAllocatorUserData = user_data;
}

ImGuiContext* ImGui::CreateContext(ImFontAtlas* shared_font_atlas)
{
    ImGuiContext* ctx = IM_NEW(ImGuiContext)(shared_font_atlas);
    if (GImGui == NULL)
        SetCurrentContext(ctx);
    Initialize(ctx);
    return ctx;
}

void ImGui::DestroyContext(ImGuiContext* ctx)
{
    if (ctx == NULL)
        ctx = GImGui;
    Shutdown(ctx);
    if (GImGui == ctx)
        SetCurrentContext(NULL);
    IM_DELETE(ctx);
}

ImGuiIO& ImGui::GetIO()
{
    IM_ASSERT(GImGui != NULL && "No current context. Did you call ImGui::CreateContext() and ImGui::SetCurrentContext() ?");
    return GImGui->IO;
}

ImGuiStyle& ImGui::GetStyle()
{
    IM_ASSERT(GImGui != NULL && "No current context. Did you call ImGui::CreateContext() and ImGui::SetCurrentContext() ?");
    return GImGui->Style;
}

// Same value as passed to the old io.RenderDrawListsFn function. Valid after Render() and until the next call to NewFrame()
ImDrawData* ImGui::GetDrawData()
{
    ImGuiContext& g = *GImGui;
    return g.DrawData.Valid ? &g.DrawData : NULL;
}

double ImGui::GetTime()
{
    return GImGui->Time;
}

int ImGui::GetFrameCount()
{
    return GImGui->FrameCount;
}

ImDrawList* ImGui::GetBackgroundDrawList()
{
    return &GImGui->BackgroundDrawList;
}

static ImDrawList* GetForegroundDrawList(ImGuiWindow*)
{
    // This seemingly unnecessary wrapper simplifies compatibility between the 'master' and 'docking' branches.
    return &GImGui->ForegroundDrawList;
}

ImDrawList* ImGui::GetForegroundDrawList()
{
    return &GImGui->ForegroundDrawList;
}

ImDrawListSharedData* ImGui::GetDrawListSharedData()
{
    return &GImGui->DrawListSharedData;
}

void ImGui::StartMouseMovingWindow(ImGuiWindow* window)
{
    // Set ActiveId even if the _NoMove flag is set. Without it, dragging away from a window with _NoMove would activate hover on other windows.
    // We _also_ call this when clicking in a window empty space when io.ConfigWindowsMoveFromTitleBarOnly is set, but clear g.MovingWindow afterward.
    // This is because we want ActiveId to be set even when the window is not permitted to move.
    ImGuiContext& g = *GImGui;
    FocusWindow(window);
    SetActiveID(window->MoveId, window);
    g.NavDisableHighlight = true;
    g.ActiveIdClickOffset = g.IO.MousePos - window->RootWindow->Pos;

    bool can_move_window = true;
    if ((window->Flags & ImGuiWindowFlags_NoMove) || (window->RootWindow->Flags & ImGuiWindowFlags_NoMove))
        can_move_window = false;
    if (can_move_window)
        g.MovingWindow = window;
}

// Handle mouse moving window
// Note: moving window with the navigation keys (Square + d-pad / CTRL+TAB + Arrows) are processed in NavUpdateWindowing()
void ImGui::UpdateMouseMovingWindowNewFrame()
{
    ImGuiContext& g = *GImGui;
    if (g.MovingWindow != NULL)
    {
        // We actually want to move the root window. g.MovingWindow == window we clicked on (could be a child window).
        // We track it to preserve Focus and so that generally ActiveIdWindow == MovingWindow and ActiveId == MovingWindow->MoveId for consistency.
        KeepAliveID(g.ActiveId);
        IM_ASSERT(g.MovingWindow && g.MovingWindow->RootWindow);
        ImGuiWindow* moving_window = g.MovingWindow->RootWindow;
        if (g.IO.MouseDown[0] && IsMousePosValid(&g.IO.MousePos))
        {
            ImVec2 pos = g.IO.MousePos - g.ActiveIdClickOffset;
            if (moving_window->Pos.x != pos.x || moving_window->Pos.y != pos.y)
            {
                MarkIniSettingsDirty(moving_window);
                SetWindowPos(moving_window, pos, ImGuiCond_Always);
            }
            FocusWindow(g.MovingWindow);
        }
        else
        {
            ClearActiveID();
            g.MovingWindow = NULL;
        }
    }
    else
    {
        // When clicking/dragging from a window that has the _NoMove flag, we still set the ActiveId in order to prevent hovering others.
        if (g.ActiveIdWindow && g.ActiveIdWindow->MoveId == g.ActiveId)
        {
            KeepAliveID(g.ActiveId);
            if (!g.IO.MouseDown[0])
                ClearActiveID();
        }
    }
}

// Initiate moving window, handle left-click and right-click focus
void ImGui::UpdateMouseMovingWindowEndFrame()
{
    // Initiate moving window
    ImGuiContext& g = *GImGui;
    if (g.ActiveId != 0 || g.HoveredId != 0)
        return;

    // Unless we just made a window/popup appear
    if (g.NavWindow && g.NavWindow->Appearing)
        return;

    // Click to focus window and start moving (after we're done with all our widgets)
    if (g.IO.MouseClicked[0])
    {
        if (g.HoveredRootWindow != NULL)
        {
            StartMouseMovingWindow(g.HoveredWindow);
            if (g.IO.ConfigWindowsMoveFromTitleBarOnly && !(g.HoveredRootWindow->Flags & ImGuiWindowFlags_NoTitleBar))
                if (!g.HoveredRootWindow->TitleBarRect().Contains(g.IO.MouseClickedPos[0]))
                    g.MovingWindow = NULL;
        }
        else if (g.NavWindow != NULL && GetFrontMostPopupModal() == NULL)
        {
            // Clicking on void disable focus
            FocusWindow(NULL);
        }
    }

    // With right mouse button we close popups without changing focus
    // (The left mouse button path calls FocusWindow which will lead NewFrame->ClosePopupsOverWindow to trigger)
    if (g.IO.MouseClicked[1])
    {
        // Find the top-most window between HoveredWindow and the front most Modal Window.
        // This is where we can trim the popup stack.
        ImGuiWindow* modal = GetFrontMostPopupModal();
        bool hovered_window_above_modal = false;
        if (modal == NULL)
            hovered_window_above_modal = true;
        for (int i = g.Windows.Size - 1; i >= 0 && hovered_window_above_modal == false; i--)
        {
            ImGuiWindow* window = g.Windows[i];
            if (window == modal)
                break;
            if (window == g.HoveredWindow)
                hovered_window_above_modal = true;
        }
        ClosePopupsOverWindow(hovered_window_above_modal ? g.HoveredWindow : modal);
    }
}

static bool IsWindowActiveAndVisible(ImGuiWindow* window)
{
    return (window->Active) && (!window->Hidden);
}

static void ImGui::UpdateMouseInputs()
{
    ImGuiContext& g = *GImGui;

    // Round mouse position to avoid spreading non-rounded position (e.g. UpdateManualResize doesn't support them well)
    if (IsMousePosValid(&g.IO.MousePos))
        g.IO.MousePos = g.LastValidMousePos = ImFloor(g.IO.MousePos);

    // If mouse just appeared or disappeared (usually denoted by -FLT_MAX components) we cancel out movement in MouseDelta
    if (IsMousePosValid(&g.IO.MousePos) && IsMousePosValid(&g.IO.MousePosPrev))
        g.IO.MouseDelta = g.IO.MousePos - g.IO.MousePosPrev;
    else
        g.IO.MouseDelta = ImVec2(0.0f, 0.0f);
    if (g.IO.MouseDelta.x != 0.0f || g.IO.MouseDelta.y != 0.0f)
        g.NavDisableMouseHover = false;

    g.IO.MousePosPrev = g.IO.MousePos;
    for (int i = 0; i < IM_ARRAYSIZE(g.IO.MouseDown); i++)
    {
        g.IO.MouseClicked[i] = g.IO.MouseDown[i] && g.IO.MouseDownDuration[i] < 0.0f;
        g.IO.MouseReleased[i] = !g.IO.MouseDown[i] && g.IO.MouseDownDuration[i] >= 0.0f;
        g.IO.MouseDownDurationPrev[i] = g.IO.MouseDownDuration[i];
        g.IO.MouseDownDuration[i] = g.IO.MouseDown[i] ? (g.IO.MouseDownDuration[i] < 0.0f ? 0.0f : g.IO.MouseDownDuration[i] + g.IO.DeltaTime) : -1.0f;
        g.IO.MouseDoubleClicked[i] = false;
        if (g.IO.MouseClicked[i])
        {
            if ((float)(g.Time - g.IO.MouseClickedTime[i]) < g.IO.MouseDoubleClickTime)
            {
                ImVec2 delta_from_click_pos = IsMousePosValid(&g.IO.MousePos) ? (g.IO.MousePos - g.IO.MouseClickedPos[i]) : ImVec2(0.0f, 0.0f);
                if (ImLengthSqr(delta_from_click_pos) < g.IO.MouseDoubleClickMaxDist * g.IO.MouseDoubleClickMaxDist)
                    g.IO.MouseDoubleClicked[i] = true;
                g.IO.MouseClickedTime[i] = -FLT_MAX;    // so the third click isn't turned into a double-click
            }
            else
            {
                g.IO.MouseClickedTime[i] = g.Time;
            }
            g.IO.MouseClickedPos[i] = g.IO.MousePos;
            g.IO.MouseDragMaxDistanceAbs[i] = ImVec2(0.0f, 0.0f);
            g.IO.MouseDragMaxDistanceSqr[i] = 0.0f;
        }
        else if (g.IO.MouseDown[i])
        {
            // Maintain the maximum distance we reaching from the initial click position, which is used with dragging threshold
            ImVec2 delta_from_click_pos = IsMousePosValid(&g.IO.MousePos) ? (g.IO.MousePos - g.IO.MouseClickedPos[i]) : ImVec2(0.0f, 0.0f);
            g.IO.MouseDragMaxDistanceSqr[i] = ImMax(g.IO.MouseDragMaxDistanceSqr[i], ImLengthSqr(delta_from_click_pos));
            g.IO.MouseDragMaxDistanceAbs[i].x = ImMax(g.IO.MouseDragMaxDistanceAbs[i].x, delta_from_click_pos.x < 0.0f ? -delta_from_click_pos.x : delta_from_click_pos.x);
            g.IO.MouseDragMaxDistanceAbs[i].y = ImMax(g.IO.MouseDragMaxDistanceAbs[i].y, delta_from_click_pos.y < 0.0f ? -delta_from_click_pos.y : delta_from_click_pos.y);
        }
        if (g.IO.MouseClicked[i]) // Clicking any mouse button reactivate mouse hovering which may have been deactivated by gamepad/keyboard navigation
            g.NavDisableMouseHover = false;
    }
}

void ImGui::UpdateMouseWheel()
{
    ImGuiContext& g = *GImGui;
    if (!g.HoveredWindow || g.HoveredWindow->Collapsed)
        return;
    if (g.IO.MouseWheel == 0.0f && g.IO.MouseWheelH == 0.0f)
        return;
    ImGuiWindow* window = g.HoveredWindow;

    // Zoom / Scale window
    // FIXME-OBSOLETE: This is an old feature, it still works but pretty much nobody is using it and may be best redesigned.
    if (g.IO.MouseWheel != 0.0f && g.IO.KeyCtrl && g.IO.FontAllowUserScaling)
    {
        const float new_font_scale = ImClamp(window->FontWindowScale + g.IO.MouseWheel * 0.10f, 0.50f, 2.50f);
        const float scale = new_font_scale / window->FontWindowScale;
        window->FontWindowScale = new_font_scale;
        if (!(window->Flags & ImGuiWindowFlags_ChildWindow))
        {
            const ImVec2 offset = window->Size * (1.0f - scale) * (g.IO.MousePos - window->Pos) / window->Size;
            window->Pos = ImFloor(window->Pos + offset);
            window->Size = ImFloor(window->Size * scale);
            window->SizeFull = ImFloor(window->SizeFull * scale);
        }
        return;
    }

    // Mouse wheel scrolling
    // If a child window has the ImGuiWindowFlags_NoScrollWithMouse flag, we give a chance to scroll its parent (unless either ImGuiWindowFlags_NoInputs or ImGuiWindowFlags_NoScrollbar are also set).
    while ((window->Flags & ImGuiWindowFlags_ChildWindow) && (window->Flags & ImGuiWindowFlags_NoScrollWithMouse) && !(window->Flags & ImGuiWindowFlags_NoScrollbar) && !(window->Flags & ImGuiWindowFlags_NoMouseInputs) && window->ParentWindow)
        window = window->ParentWindow;
    const bool scroll_allowed = !(window->Flags & ImGuiWindowFlags_NoScrollWithMouse) && !(window->Flags & ImGuiWindowFlags_NoMouseInputs);
    if (scroll_allowed && (g.IO.MouseWheel != 0.0f || g.IO.MouseWheelH != 0.0f) && !g.IO.KeyCtrl)
    {
        ImVec2 max_step = (window->ContentsRegionRect.GetSize() + window->WindowPadding * 2.0f) * 0.67f;

        // Vertical Mouse Wheel Scrolling (hold Shift to scroll horizontally)
        if (g.IO.MouseWheel != 0.0f && !g.IO.KeyShift)
        {
            float scroll_step = ImFloor(ImMin(5 * window->CalcFontSize(), max_step.y));
            SetWindowScrollY(window, window->Scroll.y - g.IO.MouseWheel * scroll_step);
        }
        else if (g.IO.MouseWheel != 0.0f && g.IO.KeyShift)
        {
            float scroll_step = ImFloor(ImMin(2 * window->CalcFontSize(), max_step.x));
            SetWindowScrollX(window, window->Scroll.x - g.IO.MouseWheel * scroll_step);
        }

        // Horizontal Mouse Wheel Scrolling (for hardware that supports it)
        if (g.IO.MouseWheelH != 0.0f && !g.IO.KeyShift)
        {
            float scroll_step = ImFloor(ImMin(2 * window->CalcFontSize(), max_step.x));
            SetWindowScrollX(window, window->Scroll.x - g.IO.MouseWheelH * scroll_step);
        }
    }
}

// The reason this is exposed in imgui_internal.h is: on touch-based system that don't have hovering, we want to dispatch inputs to the right target (imgui vs imgui+app)
void ImGui::UpdateHoveredWindowAndCaptureFlags()
{
    ImGuiContext& g = *GImGui;

    // Find the window hovered by mouse:
    // - Child windows can extend beyond the limit of their parent so we need to derive HoveredRootWindow from HoveredWindow.
    // - When moving a window we can skip the search, which also conveniently bypasses the fact that window->WindowRectClipped is lagging as this point of the frame.
    // - We also support the moved window toggling the NoInputs flag after moving has started in order to be able to detect windows below it, which is useful for e.g. docking mechanisms.
    FindHoveredWindow();

    // Modal windows prevents cursor from hovering behind them.
    ImGuiWindow* modal_window = GetFrontMostPopupModal();
    if (modal_window)
        if (g.HoveredRootWindow && !IsWindowChildOf(g.HoveredRootWindow, modal_window))
            g.HoveredRootWindow = g.HoveredWindow = NULL;

    // Disabled mouse?
    if (g.IO.ConfigFlags & ImGuiConfigFlags_NoMouse)
        g.HoveredWindow = g.HoveredRootWindow = NULL;

    // We track click ownership. When clicked outside of a window the click is owned by the application and won't report hovering nor request capture even while dragging over our windows afterward.
    int mouse_earliest_button_down = -1;
    bool mouse_any_down = false;
    for (int i = 0; i < IM_ARRAYSIZE(g.IO.MouseDown); i++)
    {
        if (g.IO.MouseClicked[i])
            g.IO.MouseDownOwned[i] = (g.HoveredWindow != NULL) || (!g.OpenPopupStack.empty());
        mouse_any_down |= g.IO.MouseDown[i];
        if (g.IO.MouseDown[i])
            if (mouse_earliest_button_down == -1 || g.IO.MouseClickedTime[i] < g.IO.MouseClickedTime[mouse_earliest_button_down])
                mouse_earliest_button_down = i;
    }
    const bool mouse_avail_to_imgui = (mouse_earliest_button_down == -1) || g.IO.MouseDownOwned[mouse_earliest_button_down];

    // If mouse was first clicked outside of ImGui bounds we also cancel out hovering.
    // FIXME: For patterns of drag and drop across OS windows, we may need to rework/remove this test (first committed 311c0ca9 on 2015/02)
    const bool mouse_dragging_extern_payload = g.DragDropActive && (g.DragDropSourceFlags & ImGuiDragDropFlags_SourceExtern) != 0;
    if (!mouse_avail_to_imgui && !mouse_dragging_extern_payload)
        g.HoveredWindow = g.HoveredRootWindow = NULL;

    // Update io.WantCaptureMouse for the user application (true = dispatch mouse info to imgui, false = dispatch mouse info to imgui + app)
    if (g.WantCaptureMouseNextFrame != -1)
        g.IO.WantCaptureMouse = (g.WantCaptureMouseNextFrame != 0);
    else
        g.IO.WantCaptureMouse = (mouse_avail_to_imgui && (g.HoveredWindow != NULL || mouse_any_down)) || (!g.OpenPopupStack.empty());

    // Update io.WantCaptureKeyboard for the user application (true = dispatch keyboard info to imgui, false = dispatch keyboard info to imgui + app)
    if (g.WantCaptureKeyboardNextFrame != -1)
        g.IO.WantCaptureKeyboard = (g.WantCaptureKeyboardNextFrame != 0);
    else
        g.IO.WantCaptureKeyboard = (g.ActiveId != 0) || (modal_window != NULL);
    if (g.IO.NavActive && (g.IO.ConfigFlags & ImGuiConfigFlags_NavEnableKeyboard) && !(g.IO.ConfigFlags & ImGuiConfigFlags_NavNoCaptureKeyboard))
        g.IO.WantCaptureKeyboard = true;

    // Update io.WantTextInput flag, this is to allow systems without a keyboard (e.g. mobile, hand-held) to show a software keyboard if possible
    g.IO.WantTextInput = (g.WantTextInputNextFrame != -1) ? (g.WantTextInputNextFrame != 0) : false;
}

void ImGui::NewFrame()
{
    IM_ASSERT(GImGui != NULL && "No current context. Did you call ImGui::CreateContext() and ImGui::SetCurrentContext() ?");
    ImGuiContext& g = *GImGui;

#ifdef IMGUI_ENABLE_TEST_ENGINE
    ImGuiTestEngineHook_PreNewFrame(&g);
#endif

    // Check user data
    // (We pass an error message in the assert expression to make it visible to programmers who are not using a debugger, as most assert handlers display their argument)
    IM_ASSERT(g.Initialized);
    IM_ASSERT((g.IO.DeltaTime > 0.0f || g.FrameCount == 0)              && "Need a positive DeltaTime!");
    IM_ASSERT((g.FrameCount == 0 || g.FrameCountEnded == g.FrameCount)  && "Forgot to call Render() or EndFrame() at the end of the previous frame?");
    IM_ASSERT(g.IO.DisplaySize.x >= 0.0f && g.IO.DisplaySize.y >= 0.0f  && "Invalid DisplaySize value!");
    IM_ASSERT(g.IO.Fonts->Fonts.Size > 0                                && "Font Atlas not built. Did you call io.Fonts->GetTexDataAsRGBA32() / GetTexDataAsAlpha8() ?");
    IM_ASSERT(g.IO.Fonts->Fonts[0]->IsLoaded()                          && "Font Atlas not built. Did you call io.Fonts->GetTexDataAsRGBA32() / GetTexDataAsAlpha8() ?");
    IM_ASSERT(g.Style.CurveTessellationTol > 0.0f                       && "Invalid style setting!");
    IM_ASSERT(g.Style.Alpha >= 0.0f && g.Style.Alpha <= 1.0f            && "Invalid style setting. Alpha cannot be negative (allows us to avoid a few clamps in color computations)!");
    IM_ASSERT(g.Style.WindowMinSize.x >= 1.0f && g.Style.WindowMinSize.y >= 1.0f && "Invalid style setting.");
    for (int n = 0; n < ImGuiKey_COUNT; n++)
        IM_ASSERT(g.IO.KeyMap[n] >= -1 && g.IO.KeyMap[n] < IM_ARRAYSIZE(g.IO.KeysDown) && "io.KeyMap[] contains an out of bound value (need to be 0..512, or -1 for unmapped key)");

    // Perform simple check: required key mapping (we intentionally do NOT check all keys to not pressure user into setting up everything, but Space is required and was only recently added in 1.60 WIP)
    if (g.IO.ConfigFlags & ImGuiConfigFlags_NavEnableKeyboard)
        IM_ASSERT(g.IO.KeyMap[ImGuiKey_Space] != -1 && "ImGuiKey_Space is not mapped, required for keyboard navigation.");

    // Perform simple check: the beta io.ConfigWindowsResizeFromEdges option requires back-end to honor mouse cursor changes and set the ImGuiBackendFlags_HasMouseCursors flag accordingly.
    if (g.IO.ConfigWindowsResizeFromEdges && !(g.IO.BackendFlags & ImGuiBackendFlags_HasMouseCursors))
        g.IO.ConfigWindowsResizeFromEdges = false;

    // Load settings on first frame (if not explicitly loaded manually before)
    if (!g.SettingsLoaded)
    {
        IM_ASSERT(g.SettingsWindows.empty());
        if (g.IO.IniFilename)
            LoadIniSettingsFromDisk(g.IO.IniFilename);
        g.SettingsLoaded = true;
    }

    // Save settings (with a delay after the last modification, so we don't spam disk too much)
    if (g.SettingsDirtyTimer > 0.0f)
    {
        g.SettingsDirtyTimer -= g.IO.DeltaTime;
        if (g.SettingsDirtyTimer <= 0.0f)
        {
            if (g.IO.IniFilename != NULL)
                SaveIniSettingsToDisk(g.IO.IniFilename);
            else
                g.IO.WantSaveIniSettings = true;  // Let user know they can call SaveIniSettingsToMemory(). user will need to clear io.WantSaveIniSettings themselves.
            g.SettingsDirtyTimer = 0.0f;
        }
    }

    g.Time += g.IO.DeltaTime;
    g.FrameScopeActive = true;
    g.FrameCount += 1;
    g.TooltipOverrideCount = 0;
    g.WindowsActiveCount = 0;

    // Setup current font and draw list shared data
    g.IO.Fonts->Locked = true;
    SetCurrentFont(GetDefaultFont());
    IM_ASSERT(g.Font->IsLoaded());
    g.DrawListSharedData.ClipRectFullscreen = ImVec4(0.0f, 0.0f, g.IO.DisplaySize.x, g.IO.DisplaySize.y);
    g.DrawListSharedData.CurveTessellationTol = g.Style.CurveTessellationTol;

    g.BackgroundDrawList.Clear();
    g.BackgroundDrawList.PushTextureID(g.IO.Fonts->TexID);
    g.BackgroundDrawList.PushClipRectFullScreen();
    g.BackgroundDrawList.Flags = (g.Style.AntiAliasedLines ? ImDrawListFlags_AntiAliasedLines : 0) | (g.Style.AntiAliasedFill ? ImDrawListFlags_AntiAliasedFill : 0);

    g.ForegroundDrawList.Clear();
    g.ForegroundDrawList.PushTextureID(g.IO.Fonts->TexID);
    g.ForegroundDrawList.PushClipRectFullScreen();
    g.ForegroundDrawList.Flags = (g.Style.AntiAliasedLines ? ImDrawListFlags_AntiAliasedLines : 0) | (g.Style.AntiAliasedFill ? ImDrawListFlags_AntiAliasedFill : 0);

    // Mark rendering data as invalid to prevent user who may have a handle on it to use it.
    g.DrawData.Clear();

    // Drag and drop keep the source ID alive so even if the source disappear our state is consistent
    if (g.DragDropActive && g.DragDropPayload.SourceId == g.ActiveId)
        KeepAliveID(g.DragDropPayload.SourceId);

    // Clear reference to active widget if the widget isn't alive anymore
    if (!g.HoveredIdPreviousFrame)
        g.HoveredIdTimer = 0.0f;
    if (!g.HoveredIdPreviousFrame || (g.HoveredId && g.ActiveId == g.HoveredId))
        g.HoveredIdNotActiveTimer = 0.0f;
    if (g.HoveredId)
        g.HoveredIdTimer += g.IO.DeltaTime;
    if (g.HoveredId && g.ActiveId != g.HoveredId)
        g.HoveredIdNotActiveTimer += g.IO.DeltaTime;
    g.HoveredIdPreviousFrame = g.HoveredId;
    g.HoveredId = 0;
    g.HoveredIdAllowOverlap = false;
    if (g.ActiveIdIsAlive != g.ActiveId && g.ActiveIdPreviousFrame == g.ActiveId && g.ActiveId != 0)
        ClearActiveID();
    if (g.ActiveId)
        g.ActiveIdTimer += g.IO.DeltaTime;
    g.LastActiveIdTimer += g.IO.DeltaTime;
    g.ActiveIdPreviousFrame = g.ActiveId;
    g.ActiveIdPreviousFrameWindow = g.ActiveIdWindow;
    g.ActiveIdPreviousFrameHasBeenEdited = g.ActiveIdHasBeenEdited;
    g.ActiveIdIsAlive = 0;
    g.ActiveIdPreviousFrameIsAlive = false;
    g.ActiveIdIsJustActivated = false;
    if (g.TempInputTextId != 0 && g.ActiveId != g.TempInputTextId)
        g.TempInputTextId = 0;

    // Drag and drop
    g.DragDropAcceptIdPrev = g.DragDropAcceptIdCurr;
    g.DragDropAcceptIdCurr = 0;
    g.DragDropAcceptIdCurrRectSurface = FLT_MAX;
    g.DragDropWithinSourceOrTarget = false;

    // Update keyboard input state
    memcpy(g.IO.KeysDownDurationPrev, g.IO.KeysDownDuration, sizeof(g.IO.KeysDownDuration));
    for (int i = 0; i < IM_ARRAYSIZE(g.IO.KeysDown); i++)
        g.IO.KeysDownDuration[i] = g.IO.KeysDown[i] ? (g.IO.KeysDownDuration[i] < 0.0f ? 0.0f : g.IO.KeysDownDuration[i] + g.IO.DeltaTime) : -1.0f;

    // Update gamepad/keyboard directional navigation
    NavUpdate();

    // Update mouse input state
    UpdateMouseInputs();

    // Calculate frame-rate for the user, as a purely luxurious feature
    g.FramerateSecPerFrameAccum += g.IO.DeltaTime - g.FramerateSecPerFrame[g.FramerateSecPerFrameIdx];
    g.FramerateSecPerFrame[g.FramerateSecPerFrameIdx] = g.IO.DeltaTime;
    g.FramerateSecPerFrameIdx = (g.FramerateSecPerFrameIdx + 1) % IM_ARRAYSIZE(g.FramerateSecPerFrame);
    g.IO.Framerate = (g.FramerateSecPerFrameAccum > 0.0f) ? (1.0f / (g.FramerateSecPerFrameAccum / (float)IM_ARRAYSIZE(g.FramerateSecPerFrame))) : FLT_MAX;

    // Handle user moving window with mouse (at the beginning of the frame to avoid input lag or sheering)
    UpdateMouseMovingWindowNewFrame();
    UpdateHoveredWindowAndCaptureFlags();

    // Background darkening/whitening
    if (GetFrontMostPopupModal() != NULL || (g.NavWindowingTarget != NULL && g.NavWindowingHighlightAlpha > 0.0f))
        g.DimBgRatio = ImMin(g.DimBgRatio + g.IO.DeltaTime * 6.0f, 1.0f);
    else
        g.DimBgRatio = ImMax(g.DimBgRatio - g.IO.DeltaTime * 10.0f, 0.0f);

    g.MouseCursor = ImGuiMouseCursor_Arrow;
    g.WantCaptureMouseNextFrame = g.WantCaptureKeyboardNextFrame = g.WantTextInputNextFrame = -1;
    g.PlatformImePos = ImVec2(1.0f, 1.0f); // OS Input Method Editor showing on top-left of our window by default

    // Mouse wheel scrolling, scale
    UpdateMouseWheel();

    // Pressing TAB activate widget focus
    g.FocusTabPressed = (g.NavWindow && g.NavWindow->Active && !(g.NavWindow->Flags & ImGuiWindowFlags_NoNavInputs) && !g.IO.KeyCtrl && IsKeyPressedMap(ImGuiKey_Tab));
    if (g.ActiveId == 0 && g.FocusTabPressed)
    {
        // Note that SetKeyboardFocusHere() sets the Next fields mid-frame. To be consistent we also
        // manipulate the Next fields even, even though they will be turned into Curr fields by the code below.
        g.FocusRequestNextWindow = g.NavWindow;
        g.FocusRequestNextCounterAll = INT_MAX;
        if (g.NavId != 0 && g.NavIdTabCounter != INT_MAX)
            g.FocusRequestNextCounterTab = g.NavIdTabCounter + 1 + (g.IO.KeyShift ? -1 : 1);
        else
            g.FocusRequestNextCounterTab = g.IO.KeyShift ? -1 : 0;
    }

    // Turn queued focus request into current one
    g.FocusRequestCurrWindow = NULL;
    g.FocusRequestCurrCounterAll = g.FocusRequestCurrCounterTab = INT_MAX;
    if (g.FocusRequestNextWindow != NULL)
    {
        ImGuiWindow* window = g.FocusRequestNextWindow;
        g.FocusRequestCurrWindow = window;
        if (g.FocusRequestNextCounterAll != INT_MAX && window->DC.FocusCounterAll != -1)
            g.FocusRequestCurrCounterAll = ImModPositive(g.FocusRequestNextCounterAll, window->DC.FocusCounterAll + 1);
        if (g.FocusRequestNextCounterTab != INT_MAX && window->DC.FocusCounterTab != -1)
            g.FocusRequestCurrCounterTab = ImModPositive(g.FocusRequestNextCounterTab, window->DC.FocusCounterTab + 1);
        g.FocusRequestNextWindow = NULL;
        g.FocusRequestNextCounterAll = g.FocusRequestNextCounterTab = INT_MAX;
    }

    g.NavIdTabCounter = INT_MAX;

    // Mark all windows as not visible
    IM_ASSERT(g.WindowsFocusOrder.Size == g.Windows.Size);
    for (int i = 0; i != g.Windows.Size; i++)
    {
        ImGuiWindow* window = g.Windows[i];
        window->WasActive = window->Active;
        window->BeginCount = 0;
        window->Active = false;
        window->WriteAccessed = false;
    }

    // Closing the focused window restore focus to the first active root window in descending z-order
    if (g.NavWindow && !g.NavWindow->WasActive)
        FocusPreviousWindowIgnoringOne(NULL);

    // No window should be open at the beginning of the frame.
    // But in order to allow the user to call NewFrame() multiple times without calling Render(), we are doing an explicit clear.
    g.CurrentWindowStack.resize(0);
    g.BeginPopupStack.resize(0);
    ClosePopupsOverWindow(g.NavWindow);

    // Create implicit/fallback window - which we will only render it if the user has added something to it.
    // We don't use "Debug" to avoid colliding with user trying to create a "Debug" window with custom flags.
    // This fallback is particularly important as it avoid ImGui:: calls from crashing.
    SetNextWindowSize(ImVec2(400,400), ImGuiCond_FirstUseEver);
    Begin("Debug##Default");
    g.FrameScopePushedImplicitWindow = true;

#ifdef IMGUI_ENABLE_TEST_ENGINE
    ImGuiTestEngineHook_PostNewFrame(&g);
#endif
}

void ImGui::Initialize(ImGuiContext* context)
{
    ImGuiContext& g = *context;
    IM_ASSERT(!g.Initialized && !g.SettingsLoaded);

    // Add .ini handle for ImGuiWindow type
    ImGuiSettingsHandler ini_handler;
    ini_handler.TypeName = "Window";
    ini_handler.TypeHash = ImHashStr("Window");
    ini_handler.ReadOpenFn = SettingsHandlerWindow_ReadOpen;
    ini_handler.ReadLineFn = SettingsHandlerWindow_ReadLine;
    ini_handler.WriteAllFn = SettingsHandlerWindow_WriteAll;
    g.SettingsHandlers.push_back(ini_handler);

    g.Initialized = true;
}

// This function is merely here to free heap allocations.
void ImGui::Shutdown(ImGuiContext* context)
{
    // The fonts atlas can be used prior to calling NewFrame(), so we clear it even if g.Initialized is FALSE (which would happen if we never called NewFrame)
    ImGuiContext& g = *context;
    if (g.IO.Fonts && g.FontAtlasOwnedByContext)
    {
        g.IO.Fonts->Locked = false;
        IM_DELETE(g.IO.Fonts);
    }
    g.IO.Fonts = NULL;

    // Cleanup of other data are conditional on actually having initialized ImGui.
    if (!g.Initialized)
        return;

    // Save settings (unless we haven't attempted to load them: CreateContext/DestroyContext without a call to NewFrame shouldn't save an empty file)
    if (g.SettingsLoaded && g.IO.IniFilename != NULL)
    {
        ImGuiContext* backup_context = GImGui;
        SetCurrentContext(context);
        SaveIniSettingsToDisk(g.IO.IniFilename);
        SetCurrentContext(backup_context);
    }

    // Clear everything else
    for (int i = 0; i < g.Windows.Size; i++)
        IM_DELETE(g.Windows[i]);
    g.Windows.clear();
    g.WindowsFocusOrder.clear();
    g.WindowsSortBuffer.clear();
    g.CurrentWindow = NULL;
    g.CurrentWindowStack.clear();
    g.WindowsById.Clear();
    g.NavWindow = NULL;
    g.HoveredWindow = g.HoveredRootWindow = NULL;
    g.ActiveIdWindow = g.ActiveIdPreviousFrameWindow = NULL;
    g.MovingWindow = NULL;
    g.ColorModifiers.clear();
    g.StyleModifiers.clear();
    g.FontStack.clear();
    g.OpenPopupStack.clear();
    g.BeginPopupStack.clear();
    g.DrawDataBuilder.ClearFreeMemory();
    g.BackgroundDrawList.ClearFreeMemory();
    g.ForegroundDrawList.ClearFreeMemory();
    g.PrivateClipboard.clear();
    g.InputTextState.ClearFreeMemory();

    for (int i = 0; i < g.SettingsWindows.Size; i++)
        IM_DELETE(g.SettingsWindows[i].Name);
    g.SettingsWindows.clear();
    g.SettingsHandlers.clear();

    if (g.LogFile && g.LogFile != stdout)
    {
        fclose(g.LogFile);
        g.LogFile = NULL;
    }
    g.LogBuffer.clear();

    g.Initialized = false;
}

// FIXME: Add a more explicit sort order in the window structure.
static int IMGUI_CDECL ChildWindowComparer(const void* lhs, const void* rhs)
{
    const ImGuiWindow* const a = *(const ImGuiWindow* const *)lhs;
    const ImGuiWindow* const b = *(const ImGuiWindow* const *)rhs;
    if (int d = (a->Flags & ImGuiWindowFlags_Popup) - (b->Flags & ImGuiWindowFlags_Popup))
        return d;
    if (int d = (a->Flags & ImGuiWindowFlags_Tooltip) - (b->Flags & ImGuiWindowFlags_Tooltip))
        return d;
    return (a->BeginOrderWithinParent - b->BeginOrderWithinParent);
}

static void AddWindowToSortBuffer(ImVector<ImGuiWindow*>* out_sorted_windows, ImGuiWindow* window)
{
    out_sorted_windows->push_back(window);
    if (window->Active)
    {
        int count = window->DC.ChildWindows.Size;
        if (count > 1)
            ImQsort(window->DC.ChildWindows.begin(), (size_t)count, sizeof(ImGuiWindow*), ChildWindowComparer);
        for (int i = 0; i < count; i++)
        {
            ImGuiWindow* child = window->DC.ChildWindows[i];
            if (child->Active)
                AddWindowToSortBuffer(out_sorted_windows, child);
        }
    }
}

static void AddDrawListToDrawData(ImVector<ImDrawList*>* out_list, ImDrawList* draw_list)
{
    if (draw_list->CmdBuffer.empty())
        return;

    // Remove trailing command if unused
    ImDrawCmd& last_cmd = draw_list->CmdBuffer.back();
    if (last_cmd.ElemCount == 0 && last_cmd.UserCallback == NULL)
    {
        draw_list->CmdBuffer.pop_back();
        if (draw_list->CmdBuffer.empty())
            return;
    }

    // Draw list sanity check. Detect mismatch between PrimReserve() calls and incrementing _VtxCurrentIdx, _VtxWritePtr etc. May trigger for you if you are using PrimXXX functions incorrectly.
    IM_ASSERT(draw_list->VtxBuffer.Size == 0 || draw_list->_VtxWritePtr == draw_list->VtxBuffer.Data + draw_list->VtxBuffer.Size);
    IM_ASSERT(draw_list->IdxBuffer.Size == 0 || draw_list->_IdxWritePtr == draw_list->IdxBuffer.Data + draw_list->IdxBuffer.Size);
    IM_ASSERT((int)draw_list->_VtxCurrentIdx == draw_list->VtxBuffer.Size);

    // Check that draw_list doesn't use more vertices than indexable (default ImDrawIdx = unsigned short = 2 bytes = 64K vertices per ImDrawList = per window)
    // If this assert triggers because you are drawing lots of stuff manually:
    // A) Make sure you are coarse clipping, because ImDrawList let all your vertices pass. You can use the Metrics window to inspect draw list contents.
    // B) If you need/want meshes with more than 64K vertices, uncomment the '#define ImDrawIdx unsigned int' line in imconfig.h to set the index size to 4 bytes.
    //    You'll need to handle the 4-bytes indices to your renderer. For example, the OpenGL example code detect index size at compile-time by doing:
    //      glDrawElements(GL_TRIANGLES, (GLsizei)pcmd->ElemCount, sizeof(ImDrawIdx) == 2 ? GL_UNSIGNED_SHORT : GL_UNSIGNED_INT, idx_buffer_offset);
    //    Your own engine or render API may use different parameters or function calls to specify index sizes. 2 and 4 bytes indices are generally supported by most API.
    // C) If for some reason you cannot use 4 bytes indices or don't want to, a workaround is to call BeginChild()/EndChild() before reaching the 64K limit to split your draw commands in multiple draw lists.
    if (sizeof(ImDrawIdx) == 2)
        IM_ASSERT(draw_list->_VtxCurrentIdx < (1 << 16) && "Too many vertices in ImDrawList using 16-bit indices. Read comment above");

    out_list->push_back(draw_list);
}

static void AddWindowToDrawData(ImVector<ImDrawList*>* out_render_list, ImGuiWindow* window)
{
    ImGuiContext& g = *GImGui;
    g.IO.MetricsRenderWindows++;
    AddDrawListToDrawData(out_render_list, window->DrawList);
    for (int i = 0; i < window->DC.ChildWindows.Size; i++)
    {
        ImGuiWindow* child = window->DC.ChildWindows[i];
        if (IsWindowActiveAndVisible(child)) // clipped children may have been marked not active
            AddWindowToDrawData(out_render_list, child);
    }
}

// Layer is locked for the root window, however child windows may use a different viewport (e.g. extruding menu)
static void AddRootWindowToDrawData(ImGuiWindow* window)
{
    ImGuiContext& g = *GImGui;
    if (window->Flags & ImGuiWindowFlags_Tooltip)
        AddWindowToDrawData(&g.DrawDataBuilder.Layers[1], window);
    else
        AddWindowToDrawData(&g.DrawDataBuilder.Layers[0], window);
}

void ImDrawDataBuilder::FlattenIntoSingleLayer()
{
    int n = Layers[0].Size;
    int size = n;
    for (int i = 1; i < IM_ARRAYSIZE(Layers); i++)
        size += Layers[i].Size;
    Layers[0].resize(size);
    for (int layer_n = 1; layer_n < IM_ARRAYSIZE(Layers); layer_n++)
    {
        ImVector<ImDrawList*>& layer = Layers[layer_n];
        if (layer.empty())
            continue;
        memcpy(&Layers[0][n], &layer[0], layer.Size * sizeof(ImDrawList*));
        n += layer.Size;
        layer.resize(0);
    }
}

static void SetupDrawData(ImVector<ImDrawList*>* draw_lists, ImDrawData* draw_data)
{
    ImGuiIO& io = ImGui::GetIO();
    draw_data->Valid = true;
    draw_data->CmdLists = (draw_lists->Size > 0) ? draw_lists->Data : NULL;
    draw_data->CmdListsCount = draw_lists->Size;
    draw_data->TotalVtxCount = draw_data->TotalIdxCount = 0;
    draw_data->DisplayPos = ImVec2(0.0f, 0.0f);
    draw_data->DisplaySize = io.DisplaySize;
    draw_data->FramebufferScale = io.DisplayFramebufferScale;
    for (int n = 0; n < draw_lists->Size; n++)
    {
        draw_data->TotalVtxCount += draw_lists->Data[n]->VtxBuffer.Size;
        draw_data->TotalIdxCount += draw_lists->Data[n]->IdxBuffer.Size;
    }
}

// When using this function it is sane to ensure that float are perfectly rounded to integer values, to that e.g. (int)(max.x-min.x) in user's render produce correct result.
void ImGui::PushClipRect(const ImVec2& clip_rect_min, const ImVec2& clip_rect_max, bool intersect_with_current_clip_rect)
{
    ImGuiWindow* window = GetCurrentWindow();
    window->DrawList->PushClipRect(clip_rect_min, clip_rect_max, intersect_with_current_clip_rect);
    window->ClipRect = window->DrawList->_ClipRectStack.back();
}

void ImGui::PopClipRect()
{
    ImGuiWindow* window = GetCurrentWindow();
    window->DrawList->PopClipRect();
    window->ClipRect = window->DrawList->_ClipRectStack.back();
}

// This is normally called by Render(). You may want to call it directly if you want to avoid calling Render() but the gain will be very minimal.
void ImGui::EndFrame()
{
    ImGuiContext& g = *GImGui;
    IM_ASSERT(g.Initialized);
    if (g.FrameCountEnded == g.FrameCount)          // Don't process EndFrame() multiple times.
        return;
    IM_ASSERT(g.FrameScopeActive && "Forgot to call ImGui::NewFrame()?");

    // Notify OS when our Input Method Editor cursor has moved (e.g. CJK inputs using Microsoft IME)
    if (g.IO.ImeSetInputScreenPosFn && (g.PlatformImeLastPos.x == FLT_MAX || ImLengthSqr(g.PlatformImeLastPos - g.PlatformImePos) > 0.0001f))
    {
        g.IO.ImeSetInputScreenPosFn((int)g.PlatformImePos.x, (int)g.PlatformImePos.y);
        g.PlatformImeLastPos = g.PlatformImePos;
    }

    // Report when there is a mismatch of Begin/BeginChild vs End/EndChild calls. Important: Remember that the Begin/BeginChild API requires you
    // to always call End/EndChild even if Begin/BeginChild returns false! (this is unfortunately inconsistent with most other Begin* API).
    if (g.CurrentWindowStack.Size != 1)
    {
        if (g.CurrentWindowStack.Size > 1)
        {
            IM_ASSERT(g.CurrentWindowStack.Size == 1 && "Mismatched Begin/BeginChild vs End/EndChild calls: did you forget to call End/EndChild?");
            while (g.CurrentWindowStack.Size > 1) // FIXME-ERRORHANDLING
                End();
        }
        else
        {
            IM_ASSERT(g.CurrentWindowStack.Size == 1 && "Mismatched Begin/BeginChild vs End/EndChild calls: did you call End/EndChild too much?");
        }
    }

    // Hide implicit/fallback "Debug" window if it hasn't been used
    g.FrameScopePushedImplicitWindow = false;
    if (g.CurrentWindow && !g.CurrentWindow->WriteAccessed)
        g.CurrentWindow->Active = false;
    End();

    // Show CTRL+TAB list window
    if (g.NavWindowingTarget)
        NavUpdateWindowingList();

    // Drag and Drop: Elapse payload (if delivered, or if source stops being submitted)
    if (g.DragDropActive)
    {
        bool is_delivered = g.DragDropPayload.Delivery;
        bool is_elapsed = (g.DragDropPayload.DataFrameCount + 1 < g.FrameCount) && ((g.DragDropSourceFlags & ImGuiDragDropFlags_SourceAutoExpirePayload) || !IsMouseDown(g.DragDropMouseButton));
        if (is_delivered || is_elapsed)
            ClearDragDrop();
    }

    // Drag and Drop: Fallback for source tooltip. This is not ideal but better than nothing.
    if (g.DragDropActive && g.DragDropSourceFrameCount < g.FrameCount)
    {
        g.DragDropWithinSourceOrTarget = true;
        SetTooltip("...");
        g.DragDropWithinSourceOrTarget = false;
    }

    // End frame
    g.FrameScopeActive = false;
    g.FrameCountEnded = g.FrameCount;

    // Initiate moving window + handle left-click and right-click focus
    UpdateMouseMovingWindowEndFrame();

    // Sort the window list so that all child windows are after their parent
    // We cannot do that on FocusWindow() because childs may not exist yet
    g.WindowsSortBuffer.resize(0);
    g.WindowsSortBuffer.reserve(g.Windows.Size);
    for (int i = 0; i != g.Windows.Size; i++)
    {
        ImGuiWindow* window = g.Windows[i];
        if (window->Active && (window->Flags & ImGuiWindowFlags_ChildWindow))       // if a child is active its parent will add it
            continue;
        AddWindowToSortBuffer(&g.WindowsSortBuffer, window);
    }

    // This usually assert if there is a mismatch between the ImGuiWindowFlags_ChildWindow / ParentWindow values and DC.ChildWindows[] in parents, aka we've done something wrong.
    IM_ASSERT(g.Windows.Size == g.WindowsSortBuffer.Size);
    g.Windows.swap(g.WindowsSortBuffer);
    g.IO.MetricsActiveWindows = g.WindowsActiveCount;

    // Unlock font atlas
    g.IO.Fonts->Locked = false;

    // Clear Input data for next frame
    g.IO.MouseWheel = g.IO.MouseWheelH = 0.0f;
    g.IO.InputQueueCharacters.resize(0);
    memset(g.IO.NavInputs, 0, sizeof(g.IO.NavInputs));
}

void ImGui::Render()
{
    ImGuiContext& g = *GImGui;
    IM_ASSERT(g.Initialized);

    if (g.FrameCountEnded != g.FrameCount)
        EndFrame();
    g.FrameCountRendered = g.FrameCount;

    // Gather ImDrawList to render (for each active window)
    g.IO.MetricsRenderVertices = g.IO.MetricsRenderIndices = g.IO.MetricsRenderWindows = 0;
    g.DrawDataBuilder.Clear();
    if (!g.BackgroundDrawList.VtxBuffer.empty())
        AddDrawListToDrawData(&g.DrawDataBuilder.Layers[0], &g.BackgroundDrawList);

    ImGuiWindow* windows_to_render_front_most[2];
    windows_to_render_front_most[0] = (g.NavWindowingTarget && !(g.NavWindowingTarget->Flags & ImGuiWindowFlags_NoBringToFrontOnFocus)) ? g.NavWindowingTarget->RootWindow : NULL;
    windows_to_render_front_most[1] = g.NavWindowingTarget ? g.NavWindowingList : NULL;
    for (int n = 0; n != g.Windows.Size; n++)
    {
        ImGuiWindow* window = g.Windows[n];
        if (IsWindowActiveAndVisible(window) && (window->Flags & ImGuiWindowFlags_ChildWindow) == 0 && window != windows_to_render_front_most[0] && window != windows_to_render_front_most[1])
            AddRootWindowToDrawData(window);
    }
    for (int n = 0; n < IM_ARRAYSIZE(windows_to_render_front_most); n++)
        if (windows_to_render_front_most[n] && IsWindowActiveAndVisible(windows_to_render_front_most[n])) // NavWindowingTarget is always temporarily displayed as the front-most window
            AddRootWindowToDrawData(windows_to_render_front_most[n]);
    g.DrawDataBuilder.FlattenIntoSingleLayer();

    // Draw software mouse cursor if requested
    if (g.IO.MouseDrawCursor)
        RenderMouseCursor(&g.ForegroundDrawList, g.IO.MousePos, g.Style.MouseCursorScale, g.MouseCursor);

    if (!g.ForegroundDrawList.VtxBuffer.empty())
        AddDrawListToDrawData(&g.DrawDataBuilder.Layers[0], &g.ForegroundDrawList);

    // Setup ImDrawData structure for end-user
    SetupDrawData(&g.DrawDataBuilder.Layers[0], &g.DrawData);
    g.IO.MetricsRenderVertices = g.DrawData.TotalVtxCount;
    g.IO.MetricsRenderIndices = g.DrawData.TotalIdxCount;

    // (Legacy) Call the Render callback function. The current prefer way is to let the user retrieve GetDrawData() and call the render function themselves.
#ifndef IMGUI_DISABLE_OBSOLETE_FUNCTIONS
    if (g.DrawData.CmdListsCount > 0 && g.IO.RenderDrawListsFn != NULL)
        g.IO.RenderDrawListsFn(&g.DrawData);
#endif
}

// Calculate text size. Text can be multi-line. Optionally ignore text after a ## marker.
// CalcTextSize("") should return ImVec2(0.0f, GImGui->FontSize)
ImVec2 ImGui::CalcTextSize(const char* text, const char* text_end, bool hide_text_after_double_hash, float wrap_width)
{
    ImGuiContext& g = *GImGui;

    const char* text_display_end;
    if (hide_text_after_double_hash)
        text_display_end = FindRenderedTextEnd(text, text_end);      // Hide anything after a '##' string
    else
        text_display_end = text_end;

    ImFont* font = g.Font;
    const float font_size = g.FontSize;
    if (text == text_display_end)
        return ImVec2(0.0f, font_size);
    ImVec2 text_size = font->CalcTextSizeA(font_size, FLT_MAX, wrap_width, text, text_display_end, NULL);

    // Round
    text_size.x = (float)(int)(text_size.x + 0.95f);

    return text_size;
}

// Helper to calculate coarse clipping of large list of evenly sized items.
// NB: Prefer using the ImGuiListClipper higher-level helper if you can! Read comments and instructions there on how those use this sort of pattern.
// NB: 'items_count' is only used to clamp the result, if you don't know your count you can use INT_MAX
void ImGui::CalcListClipping(int items_count, float items_height, int* out_items_display_start, int* out_items_display_end)
{
    ImGuiContext& g = *GImGui;
    ImGuiWindow* window = g.CurrentWindow;
    if (g.LogEnabled)
    {
        // If logging is active, do not perform any clipping
        *out_items_display_start = 0;
        *out_items_display_end = items_count;
        return;
    }
    if (window->SkipItems)
    {
        *out_items_display_start = *out_items_display_end = 0;
        return;
    }

    // We create the union of the ClipRect and the NavScoringRect which at worst should be 1 page away from ClipRect
    ImRect unclipped_rect = window->ClipRect;
    if (g.NavMoveRequest)
        unclipped_rect.Add(g.NavScoringRectScreen);

    const ImVec2 pos = window->DC.CursorPos;
    int start = (int)((unclipped_rect.Min.y - pos.y) / items_height);
    int end = (int)((unclipped_rect.Max.y - pos.y) / items_height);

    // When performing a navigation request, ensure we have one item extra in the direction we are moving to
    if (g.NavMoveRequest && g.NavMoveClipDir == ImGuiDir_Up)
        start--;
    if (g.NavMoveRequest && g.NavMoveClipDir == ImGuiDir_Down)
        end++;

    start = ImClamp(start, 0, items_count);
    end = ImClamp(end + 1, start, items_count);
    *out_items_display_start = start;
    *out_items_display_end = end;
}

// Find window given position, search front-to-back
// FIXME: Note that we have an inconsequential lag here: OuterRectClipped is updated in Begin(), so windows moved programatically
// with SetWindowPos() and not SetNextWindowPos() will have that rectangle lagging by a frame at the time FindHoveredWindow() is
// called, aka before the next Begin(). Moving window isn't affected.
static void FindHoveredWindow()
{
    ImGuiContext& g = *GImGui;

    ImGuiWindow* hovered_window = NULL;
    if (g.MovingWindow && !(g.MovingWindow->Flags & ImGuiWindowFlags_NoMouseInputs))
        hovered_window = g.MovingWindow;

    ImVec2 padding_regular = g.Style.TouchExtraPadding;
    ImVec2 padding_for_resize_from_edges = g.IO.ConfigWindowsResizeFromEdges ? ImMax(g.Style.TouchExtraPadding, ImVec2(WINDOWS_RESIZE_FROM_EDGES_HALF_THICKNESS, WINDOWS_RESIZE_FROM_EDGES_HALF_THICKNESS)) : padding_regular;
    for (int i = g.Windows.Size - 1; i >= 0; i--)
    {
        ImGuiWindow* window = g.Windows[i];
        if (!window->Active || window->Hidden)
            continue;
        if (window->Flags & ImGuiWindowFlags_NoMouseInputs)
            continue;

        // Using the clipped AABB, a child window will typically be clipped by its parent (not always)
        ImRect bb(window->OuterRectClipped);
        if (window->Flags & (ImGuiWindowFlags_ChildWindow | ImGuiWindowFlags_NoResize | ImGuiWindowFlags_AlwaysAutoResize))
            bb.Expand(padding_regular);
        else
            bb.Expand(padding_for_resize_from_edges);
        if (!bb.Contains(g.IO.MousePos))
            continue;

        // Those seemingly unnecessary extra tests are because the code here is a little different in viewport/docking branches.
        if (hovered_window == NULL)
            hovered_window = window;
        if (hovered_window)
            break;
    }

    g.HoveredWindow = hovered_window;
    g.HoveredRootWindow = g.HoveredWindow ? g.HoveredWindow->RootWindow : NULL;

}

// Test if mouse cursor is hovering given rectangle
// NB- Rectangle is clipped by our current clip setting
// NB- Expand the rectangle to be generous on imprecise inputs systems (g.Style.TouchExtraPadding)
bool ImGui::IsMouseHoveringRect(const ImVec2& r_min, const ImVec2& r_max, bool clip)
{
    ImGuiContext& g = *GImGui;

    // Clip
    ImRect rect_clipped(r_min, r_max);
    if (clip)
        rect_clipped.ClipWith(g.CurrentWindow->ClipRect);

    // Expand for touch input
    const ImRect rect_for_touch(rect_clipped.Min - g.Style.TouchExtraPadding, rect_clipped.Max + g.Style.TouchExtraPadding);
    if (!rect_for_touch.Contains(g.IO.MousePos))
        return false;
    return true;
}

int ImGui::GetKeyIndex(ImGuiKey imgui_key)
{
    IM_ASSERT(imgui_key >= 0 && imgui_key < ImGuiKey_COUNT);
    return GImGui->IO.KeyMap[imgui_key];
}

// Note that imgui doesn't know the semantic of each entry of io.KeysDown[]. Use your own indices/enums according to how your back-end/engine stored them into io.KeysDown[]!
bool ImGui::IsKeyDown(int user_key_index)
{
    if (user_key_index < 0) return false;
    IM_ASSERT(user_key_index >= 0 && user_key_index < IM_ARRAYSIZE(GImGui->IO.KeysDown));
    return GImGui->IO.KeysDown[user_key_index];
}

int ImGui::CalcTypematicPressedRepeatAmount(float t, float t_prev, float repeat_delay, float repeat_rate)
{
    if (t == 0.0f)
        return 1;
    if (t <= repeat_delay || repeat_rate <= 0.0f)
        return 0;
    const int count = (int)((t - repeat_delay) / repeat_rate) - (int)((t_prev - repeat_delay) / repeat_rate);
    return (count > 0) ? count : 0;
}

int ImGui::GetKeyPressedAmount(int key_index, float repeat_delay, float repeat_rate)
{
    ImGuiContext& g = *GImGui;
    if (key_index < 0)
        return 0;
    IM_ASSERT(key_index >= 0 && key_index < IM_ARRAYSIZE(g.IO.KeysDown));
    const float t = g.IO.KeysDownDuration[key_index];
    return CalcTypematicPressedRepeatAmount(t, t - g.IO.DeltaTime, repeat_delay, repeat_rate);
}

bool ImGui::IsKeyPressed(int user_key_index, bool repeat)
{
    ImGuiContext& g = *GImGui;
    if (user_key_index < 0)
        return false;
    IM_ASSERT(user_key_index >= 0 && user_key_index < IM_ARRAYSIZE(g.IO.KeysDown));
    const float t = g.IO.KeysDownDuration[user_key_index];
    if (t == 0.0f)
        return true;
    if (repeat && t > g.IO.KeyRepeatDelay)
        return GetKeyPressedAmount(user_key_index, g.IO.KeyRepeatDelay, g.IO.KeyRepeatRate) > 0;
    return false;
}

bool ImGui::IsKeyReleased(int user_key_index)
{
    ImGuiContext& g = *GImGui;
    if (user_key_index < 0) return false;
    IM_ASSERT(user_key_index >= 0 && user_key_index < IM_ARRAYSIZE(g.IO.KeysDown));
    return g.IO.KeysDownDurationPrev[user_key_index] >= 0.0f && !g.IO.KeysDown[user_key_index];
}

bool ImGui::IsMouseDown(int button)
{
    ImGuiContext& g = *GImGui;
    IM_ASSERT(button >= 0 && button < IM_ARRAYSIZE(g.IO.MouseDown));
    return g.IO.MouseDown[button];
}

bool ImGui::IsAnyMouseDown()
{
    ImGuiContext& g = *GImGui;
    for (int n = 0; n < IM_ARRAYSIZE(g.IO.MouseDown); n++)
        if (g.IO.MouseDown[n])
            return true;
    return false;
}

bool ImGui::IsMouseClicked(int button, bool repeat)
{
    ImGuiContext& g = *GImGui;
    IM_ASSERT(button >= 0 && button < IM_ARRAYSIZE(g.IO.MouseDown));
    const float t = g.IO.MouseDownDuration[button];
    if (t == 0.0f)
        return true;

    if (repeat && t > g.IO.KeyRepeatDelay)
    {
        float delay = g.IO.KeyRepeatDelay, rate = g.IO.KeyRepeatRate;
        if ((ImFmod(t - delay, rate) > rate*0.5f) != (ImFmod(t - delay - g.IO.DeltaTime, rate) > rate*0.5f))
            return true;
    }

    return false;
}

bool ImGui::IsMouseReleased(int button)
{
    ImGuiContext& g = *GImGui;
    IM_ASSERT(button >= 0 && button < IM_ARRAYSIZE(g.IO.MouseDown));
    return g.IO.MouseReleased[button];
}

bool ImGui::IsMouseDoubleClicked(int button)
{
    ImGuiContext& g = *GImGui;
    IM_ASSERT(button >= 0 && button < IM_ARRAYSIZE(g.IO.MouseDown));
    return g.IO.MouseDoubleClicked[button];
}

bool ImGui::IsMouseDragging(int button, float lock_threshold)
{
    ImGuiContext& g = *GImGui;
    IM_ASSERT(button >= 0 && button < IM_ARRAYSIZE(g.IO.MouseDown));
    if (!g.IO.MouseDown[button])
        return false;
    if (lock_threshold < 0.0f)
        lock_threshold = g.IO.MouseDragThreshold;
    return g.IO.MouseDragMaxDistanceSqr[button] >= lock_threshold * lock_threshold;
}

ImVec2 ImGui::GetMousePos()
{
    return GImGui->IO.MousePos;
}

// NB: prefer to call right after BeginPopup(). At the time Selectable/MenuItem is activated, the popup is already closed!
ImVec2 ImGui::GetMousePosOnOpeningCurrentPopup()
{
    ImGuiContext& g = *GImGui;
    if (g.BeginPopupStack.Size > 0)
        return g.OpenPopupStack[g.BeginPopupStack.Size-1].OpenMousePos;
    return g.IO.MousePos;
}

// We typically use ImVec2(-FLT_MAX,-FLT_MAX) to denote an invalid mouse position.
bool ImGui::IsMousePosValid(const ImVec2* mouse_pos)
{
    // The assert is only to silence a false-positive in XCode Static Analysis.
    // Because GImGui is not dereferenced in every code path, the static analyzer assume that it may be NULL (which it doesn't for other functions).
    IM_ASSERT(GImGui != NULL);
    const float MOUSE_INVALID = -256000.0f;
    ImVec2 p = mouse_pos ? *mouse_pos : GImGui->IO.MousePos;
    return p.x >= MOUSE_INVALID && p.y >= MOUSE_INVALID;
}

// Return the delta from the initial clicking position while the mouse button is clicked or was just released.
// This is locked and return 0.0f until the mouse moves past a distance threshold at least once.
// NB: This is only valid if IsMousePosValid(). Back-ends in theory should always keep mouse position valid when dragging even outside the client window.
ImVec2 ImGui::GetMouseDragDelta(int button, float lock_threshold)
{
    ImGuiContext& g = *GImGui;
    IM_ASSERT(button >= 0 && button < IM_ARRAYSIZE(g.IO.MouseDown));
    if (lock_threshold < 0.0f)
        lock_threshold = g.IO.MouseDragThreshold;
    if (g.IO.MouseDown[button] || g.IO.MouseReleased[button])
        if (g.IO.MouseDragMaxDistanceSqr[button] >= lock_threshold * lock_threshold)
            if (IsMousePosValid(&g.IO.MousePos) && IsMousePosValid(&g.IO.MouseClickedPos[button]))
                return g.IO.MousePos - g.IO.MouseClickedPos[button];
    return ImVec2(0.0f, 0.0f);
}

void ImGui::ResetMouseDragDelta(int button)
{
    ImGuiContext& g = *GImGui;
    IM_ASSERT(button >= 0 && button < IM_ARRAYSIZE(g.IO.MouseDown));
    // NB: We don't need to reset g.IO.MouseDragMaxDistanceSqr
    g.IO.MouseClickedPos[button] = g.IO.MousePos;
}

ImGuiMouseCursor ImGui::GetMouseCursor()
{
    return GImGui->MouseCursor;
}

void ImGui::SetMouseCursor(ImGuiMouseCursor cursor_type)
{
    GImGui->MouseCursor = cursor_type;
}

void ImGui::CaptureKeyboardFromApp(bool capture)
{
    GImGui->WantCaptureKeyboardNextFrame = capture ? 1 : 0;
}

void ImGui::CaptureMouseFromApp(bool capture)
{
    GImGui->WantCaptureMouseNextFrame = capture ? 1 : 0;
}

bool ImGui::IsItemActive()
{
    ImGuiContext& g = *GImGui;
    if (g.ActiveId)
    {
        ImGuiWindow* window = g.CurrentWindow;
        return g.ActiveId == window->DC.LastItemId;
    }
    return false;
}

bool ImGui::IsItemActivated()
{
    ImGuiContext& g = *GImGui;
    if (g.ActiveId)
    {
        ImGuiWindow* window = g.CurrentWindow;
        if (g.ActiveId == window->DC.LastItemId && g.ActiveIdPreviousFrame != window->DC.LastItemId)
            return true;
    }
    return false;
}

bool ImGui::IsItemDeactivated()
{
    ImGuiContext& g = *GImGui;
    ImGuiWindow* window = g.CurrentWindow;
    return (g.ActiveIdPreviousFrame == window->DC.LastItemId && g.ActiveIdPreviousFrame != 0 && g.ActiveId != window->DC.LastItemId);
}

bool ImGui::IsItemDeactivatedAfterEdit()
{
    ImGuiContext& g = *GImGui;
    return IsItemDeactivated() && (g.ActiveIdPreviousFrameHasBeenEdited || (g.ActiveId == 0 && g.ActiveIdHasBeenEdited));
}

bool ImGui::IsItemFocused()
{
    ImGuiContext& g = *GImGui;
    ImGuiWindow* window = g.CurrentWindow;

    if (g.NavId == 0 || g.NavDisableHighlight || g.NavId != window->DC.LastItemId)
        return false;
    return true;
}

bool ImGui::IsItemClicked(int mouse_button)
{
    return IsMouseClicked(mouse_button) && IsItemHovered(ImGuiHoveredFlags_None);
}

bool ImGui::IsItemToggledSelection()
{
    ImGuiContext& g = *GImGui;
    return (g.CurrentWindow->DC.LastItemStatusFlags & ImGuiItemStatusFlags_ToggledSelection) ? true : false;
}

bool ImGui::IsAnyItemHovered()
{
    ImGuiContext& g = *GImGui;
    return g.HoveredId != 0 || g.HoveredIdPreviousFrame != 0;
}

bool ImGui::IsAnyItemActive()
{
    ImGuiContext& g = *GImGui;
    return g.ActiveId != 0;
}

bool ImGui::IsAnyItemFocused()
{
    ImGuiContext& g = *GImGui;
    return g.NavId != 0 && !g.NavDisableHighlight;
}

bool ImGui::IsItemVisible()
{
    ImGuiWindow* window = GetCurrentWindowRead();
    return window->ClipRect.Overlaps(window->DC.LastItemRect);
}

bool ImGui::IsItemEdited()
{
    ImGuiWindow* window = GetCurrentWindowRead();
    return (window->DC.LastItemStatusFlags & ImGuiItemStatusFlags_Edited) != 0;
}

// Allow last item to be overlapped by a subsequent item. Both may be activated during the same frame before the later one takes priority.
void ImGui::SetItemAllowOverlap()
{
    ImGuiContext& g = *GImGui;
    if (g.HoveredId == g.CurrentWindow->DC.LastItemId)
        g.HoveredIdAllowOverlap = true;
    if (g.ActiveId == g.CurrentWindow->DC.LastItemId)
        g.ActiveIdAllowOverlap = true;
}

ImVec2 ImGui::GetItemRectMin()
{
    ImGuiWindow* window = GetCurrentWindowRead();
    return window->DC.LastItemRect.Min;
}

ImVec2 ImGui::GetItemRectMax()
{
    ImGuiWindow* window = GetCurrentWindowRead();
    return window->DC.LastItemRect.Max;
}

ImVec2 ImGui::GetItemRectSize()
{
    ImGuiWindow* window = GetCurrentWindowRead();
    return window->DC.LastItemRect.GetSize();
}

static ImRect GetViewportRect()
{
    ImGuiContext& g = *GImGui;
    return ImRect(0.0f, 0.0f, g.IO.DisplaySize.x, g.IO.DisplaySize.y);
}

static bool ImGui::BeginChildEx(const char* name, ImGuiID id, const ImVec2& size_arg, bool border, ImGuiWindowFlags flags)
{
    ImGuiContext& g = *GImGui;
    ImGuiWindow* parent_window = g.CurrentWindow;

    flags |= ImGuiWindowFlags_NoTitleBar | ImGuiWindowFlags_NoSavedSettings | ImGuiWindowFlags_ChildWindow | ImGuiWindowFlags_NoResize;

    // Size
    const ImVec2 content_avail = GetContentRegionAvail();
    ImVec2 size = ImFloor(size_arg);
    const int auto_fit_axises = ((size.x == 0.0f) ? (1 << ImGuiAxis_X) : 0x00) | ((size.y == 0.0f) ? (1 << ImGuiAxis_Y) : 0x00);
    if (size.x <= 0.0f)
        size.x = ImMax(content_avail.x + size.x, 4.0f); // Arbitrary minimum child size (0.0f causing too much issues)
    if (size.y <= 0.0f)
        size.y = ImMax(content_avail.y + size.y, 4.0f);
    SetNextWindowSize(size);

    // Build up name. If you need to append to a same child from multiple location in the ID stack, use BeginChild(ImGuiID id) with a stable value.
    char title[256];
    if (name)
        ImFormatString(title, IM_ARRAYSIZE(title), "%s/%s_%08X", parent_window->Name, name, id);
    else
        ImFormatString(title, IM_ARRAYSIZE(title), "%s/%08X", parent_window->Name, id);

    const float backup_border_size = g.Style.ChildBorderSize;
    if (!border)
        g.Style.ChildBorderSize = 0.0f;
    bool ret = Begin(title, NULL, flags);
    g.Style.ChildBorderSize = backup_border_size;

    ImGuiWindow* child_window = g.CurrentWindow;
    child_window->ChildId = id;
    child_window->AutoFitChildAxises = auto_fit_axises;

    // Set the cursor to handle case where the user called SetNextWindowPos()+BeginChild() manually.
    // While this is not really documented/defined, it seems that the expected thing to do.
    if (child_window->BeginCount == 1)
        parent_window->DC.CursorPos = child_window->Pos;

    // Process navigation-in immediately so NavInit can run on first frame
    if (g.NavActivateId == id && !(flags & ImGuiWindowFlags_NavFlattened) && (child_window->DC.NavLayerActiveMask != 0 || child_window->DC.NavHasScroll))
    {
        FocusWindow(child_window);
        NavInitWindow(child_window, false);
        SetActiveID(id+1, child_window); // Steal ActiveId with a dummy id so that key-press won't activate child item
        g.ActiveIdSource = ImGuiInputSource_Nav;
    }
    return ret;
}

bool ImGui::BeginChild(const char* str_id, const ImVec2& size_arg, bool border, ImGuiWindowFlags extra_flags)
{
    ImGuiWindow* window = GetCurrentWindow();
    return BeginChildEx(str_id, window->GetID(str_id), size_arg, border, extra_flags);
}

bool ImGui::BeginChild(ImGuiID id, const ImVec2& size_arg, bool border, ImGuiWindowFlags extra_flags)
{
    IM_ASSERT(id != 0);
    return BeginChildEx(NULL, id, size_arg, border, extra_flags);
}

void ImGui::EndChild()
{
    ImGuiContext& g = *GImGui;
    ImGuiWindow* window = g.CurrentWindow;

    IM_ASSERT(window->Flags & ImGuiWindowFlags_ChildWindow);   // Mismatched BeginChild()/EndChild() callss
    if (window->BeginCount > 1)
    {
        End();
    }
    else
    {
        ImVec2 sz = window->Size;
        if (window->AutoFitChildAxises & (1 << ImGuiAxis_X)) // Arbitrary minimum zero-ish child size of 4.0f causes less trouble than a 0.0f
            sz.x = ImMax(4.0f, sz.x);
        if (window->AutoFitChildAxises & (1 << ImGuiAxis_Y))
            sz.y = ImMax(4.0f, sz.y);
        End();

        ImGuiWindow* parent_window = g.CurrentWindow;
        ImRect bb(parent_window->DC.CursorPos, parent_window->DC.CursorPos + sz);
        ItemSize(sz);
        if ((window->DC.NavLayerActiveMask != 0 || window->DC.NavHasScroll) && !(window->Flags & ImGuiWindowFlags_NavFlattened))
        {
            ItemAdd(bb, window->ChildId);
            RenderNavHighlight(bb, window->ChildId);

            // When browsing a window that has no activable items (scroll only) we keep a highlight on the child
            if (window->DC.NavLayerActiveMask == 0 && window == g.NavWindow)
                RenderNavHighlight(ImRect(bb.Min - ImVec2(2,2), bb.Max + ImVec2(2,2)), g.NavId, ImGuiNavHighlightFlags_TypeThin);
        }
        else
        {
            // Not navigable into
            ItemAdd(bb, 0);
        }
    }
}

// Helper to create a child window / scrolling region that looks like a normal widget frame.
bool ImGui::BeginChildFrame(ImGuiID id, const ImVec2& size, ImGuiWindowFlags extra_flags)
{
    ImGuiContext& g = *GImGui;
    const ImGuiStyle& style = g.Style;
    PushStyleColor(ImGuiCol_ChildBg, style.Colors[ImGuiCol_FrameBg]);
    PushStyleVar(ImGuiStyleVar_ChildRounding, style.FrameRounding);
    PushStyleVar(ImGuiStyleVar_ChildBorderSize, style.FrameBorderSize);
    PushStyleVar(ImGuiStyleVar_WindowPadding, style.FramePadding);
    bool ret = BeginChild(id, size, true, ImGuiWindowFlags_NoMove | ImGuiWindowFlags_AlwaysUseWindowPadding | extra_flags);
    PopStyleVar(3);
    PopStyleColor();
    return ret;
}

void ImGui::EndChildFrame()
{
    EndChild();
}

// Save and compare stack sizes on Begin()/End() to detect usage errors
static void CheckStacksSize(ImGuiWindow* window, bool write)
{
    // NOT checking: DC.ItemWidth, DC.AllowKeyboardFocus, DC.ButtonRepeat, DC.TextWrapPos (per window) to allow user to conveniently push once and not pop (they are cleared on Begin)
    ImGuiContext& g = *GImGui;
    short* p_backup = &window->DC.StackSizesBackup[0];
    { int current = window->IDStack.Size;       if (write) *p_backup = (short)current; else IM_ASSERT(*p_backup == current && "PushID/PopID or TreeNode/TreePop Mismatch!");   p_backup++; }    // Too few or too many PopID()/TreePop()
    { int current = window->DC.GroupStack.Size; if (write) *p_backup = (short)current; else IM_ASSERT(*p_backup == current && "BeginGroup/EndGroup Mismatch!");                p_backup++; }    // Too few or too many EndGroup()
    { int current = g.BeginPopupStack.Size;     if (write) *p_backup = (short)current; else IM_ASSERT(*p_backup == current && "BeginMenu/EndMenu or BeginPopup/EndPopup Mismatch"); p_backup++;}// Too few or too many EndMenu()/EndPopup()
    // For color, style and font stacks there is an incentive to use Push/Begin/Pop/.../End patterns, so we relax our checks a little to allow them.
    { int current = g.ColorModifiers.Size;      if (write) *p_backup = (short)current; else IM_ASSERT(*p_backup >= current && "PushStyleColor/PopStyleColor Mismatch!");       p_backup++; }    // Too few or too many PopStyleColor()
    { int current = g.StyleModifiers.Size;      if (write) *p_backup = (short)current; else IM_ASSERT(*p_backup >= current && "PushStyleVar/PopStyleVar Mismatch!");           p_backup++; }    // Too few or too many PopStyleVar()
    { int current = g.FontStack.Size;           if (write) *p_backup = (short)current; else IM_ASSERT(*p_backup >= current && "PushFont/PopFont Mismatch!");                   p_backup++; }    // Too few or too many PopFont()
    IM_ASSERT(p_backup == window->DC.StackSizesBackup + IM_ARRAYSIZE(window->DC.StackSizesBackup));
}

static void SetWindowConditionAllowFlags(ImGuiWindow* window, ImGuiCond flags, bool enabled)
{
    window->SetWindowPosAllowFlags       = enabled ? (window->SetWindowPosAllowFlags       | flags) : (window->SetWindowPosAllowFlags       & ~flags);
    window->SetWindowSizeAllowFlags      = enabled ? (window->SetWindowSizeAllowFlags      | flags) : (window->SetWindowSizeAllowFlags      & ~flags);
    window->SetWindowCollapsedAllowFlags = enabled ? (window->SetWindowCollapsedAllowFlags | flags) : (window->SetWindowCollapsedAllowFlags & ~flags);
}

ImGuiWindow* ImGui::FindWindowByID(ImGuiID id)
{
    ImGuiContext& g = *GImGui;
    return (ImGuiWindow*)g.WindowsById.GetVoidPtr(id);
}

ImGuiWindow* ImGui::FindWindowByName(const char* name)
{
    ImGuiID id = ImHashStr(name);
    return FindWindowByID(id);
}

static ImGuiWindow* CreateNewWindow(const char* name, ImVec2 size, ImGuiWindowFlags flags)
{
    ImGuiContext& g = *GImGui;

    // Create window the first time
    ImGuiWindow* window = IM_NEW(ImGuiWindow)(&g, name);
    window->Flags = flags;
    g.WindowsById.SetVoidPtr(window->ID, window);

    // Default/arbitrary window position. Use SetNextWindowPos() with the appropriate condition flag to change the initial position of a window.
    window->Pos = ImVec2(60, 60);

    // User can disable loading and saving of settings. Tooltip and child windows also don't store settings.
    if (!(flags & ImGuiWindowFlags_NoSavedSettings))
        if (ImGuiWindowSettings* settings = ImGui::FindWindowSettings(window->ID))
        {
            // Retrieve settings from .ini file
            window->SettingsIdx = g.SettingsWindows.index_from_ptr(settings);
            SetWindowConditionAllowFlags(window, ImGuiCond_FirstUseEver, false);
            window->Pos = ImFloor(settings->Pos);
            window->Collapsed = settings->Collapsed;
            if (ImLengthSqr(settings->Size) > 0.00001f)
                size = ImFloor(settings->Size);
        }
    window->Size = window->SizeFull = window->SizeFullAtLastBegin = ImFloor(size);
    window->DC.CursorMaxPos = window->Pos; // So first call to CalcSizeContents() doesn't return crazy values

    if ((flags & ImGuiWindowFlags_AlwaysAutoResize) != 0)
    {
        window->AutoFitFramesX = window->AutoFitFramesY = 2;
        window->AutoFitOnlyGrows = false;
    }
    else
    {
        if (window->Size.x <= 0.0f)
            window->AutoFitFramesX = 2;
        if (window->Size.y <= 0.0f)
            window->AutoFitFramesY = 2;
        window->AutoFitOnlyGrows = (window->AutoFitFramesX > 0) || (window->AutoFitFramesY > 0);
    }

    g.WindowsFocusOrder.push_back(window);
    if (flags & ImGuiWindowFlags_NoBringToFrontOnFocus)
        g.Windows.push_front(window); // Quite slow but rare and only once
    else
        g.Windows.push_back(window);
    return window;
}

static ImVec2 CalcSizeAfterConstraint(ImGuiWindow* window, ImVec2 new_size)
{
    ImGuiContext& g = *GImGui;
    if (g.NextWindowData.SizeConstraintCond != 0)
    {
        // Using -1,-1 on either X/Y axis to preserve the current size.
        ImRect cr = g.NextWindowData.SizeConstraintRect;
        new_size.x = (cr.Min.x >= 0 && cr.Max.x >= 0) ? ImClamp(new_size.x, cr.Min.x, cr.Max.x) : window->SizeFull.x;
        new_size.y = (cr.Min.y >= 0 && cr.Max.y >= 0) ? ImClamp(new_size.y, cr.Min.y, cr.Max.y) : window->SizeFull.y;
        if (g.NextWindowData.SizeCallback)
        {
            ImGuiSizeCallbackData data;
            data.UserData = g.NextWindowData.SizeCallbackUserData;
            data.Pos = window->Pos;
            data.CurrentSize = window->SizeFull;
            data.DesiredSize = new_size;
            g.NextWindowData.SizeCallback(&data);
            new_size = data.DesiredSize;
        }
    }

    // Minimum size
    if (!(window->Flags & (ImGuiWindowFlags_ChildWindow | ImGuiWindowFlags_AlwaysAutoResize)))
    {
        new_size = ImMax(new_size, g.Style.WindowMinSize);
        new_size.y = ImMax(new_size.y, window->TitleBarHeight() + window->MenuBarHeight() + ImMax(0.0f, g.Style.WindowRounding - 1.0f)); // Reduce artifacts with very small windows
    }
    return new_size;
}

static ImVec2 CalcSizeContents(ImGuiWindow* window)
{
    if (window->Collapsed)
        if (window->AutoFitFramesX <= 0 && window->AutoFitFramesY <= 0)
            return window->SizeContents;
    if (window->Hidden && window->HiddenFramesCannotSkipItems == 0 && window->HiddenFramesCanSkipItems > 0)
        return window->SizeContents;

    ImVec2 sz;
    sz.x = (float)(int)((window->SizeContentsExplicit.x != 0.0f) ? window->SizeContentsExplicit.x : (window->DC.CursorMaxPos.x - window->Pos.x + window->Scroll.x));
    sz.y = (float)(int)((window->SizeContentsExplicit.y != 0.0f) ? window->SizeContentsExplicit.y : (window->DC.CursorMaxPos.y - window->Pos.y + window->Scroll.y));
    return sz + window->WindowPadding;
}

static ImVec2 CalcSizeAutoFit(ImGuiWindow* window, const ImVec2& size_contents)
{
    ImGuiContext& g = *GImGui;
    ImGuiStyle& style = g.Style;
    if (window->Flags & ImGuiWindowFlags_Tooltip)
    {
        // Tooltip always resize
        return size_contents;
    }
    else
    {
        // Maximum window size is determined by the display size
        const bool is_popup = (window->Flags & ImGuiWindowFlags_Popup) != 0;
        const bool is_menu = (window->Flags & ImGuiWindowFlags_ChildMenu) != 0;
        ImVec2 size_min = style.WindowMinSize;
        if (is_popup || is_menu) // Popups and menus bypass style.WindowMinSize by default, but we give then a non-zero minimum size to facilitate understanding problematic cases (e.g. empty popups)
            size_min = ImMin(size_min, ImVec2(4.0f, 4.0f));
        ImVec2 size_auto_fit = ImClamp(size_contents, size_min, ImMax(size_min, g.IO.DisplaySize - style.DisplaySafeAreaPadding * 2.0f));

        // When the window cannot fit all contents (either because of constraints, either because screen is too small),
        // we are growing the size on the other axis to compensate for expected scrollbar. FIXME: Might turn bigger than ViewportSize-WindowPadding.
        ImVec2 size_auto_fit_after_constraint = CalcSizeAfterConstraint(window, size_auto_fit);
        if (size_auto_fit_after_constraint.x < size_contents.x && !(window->Flags & ImGuiWindowFlags_NoScrollbar) && (window->Flags & ImGuiWindowFlags_HorizontalScrollbar))
            size_auto_fit.y += style.ScrollbarSize;
        if (size_auto_fit_after_constraint.y < size_contents.y && !(window->Flags & ImGuiWindowFlags_NoScrollbar))
            size_auto_fit.x += style.ScrollbarSize;
        return size_auto_fit;
    }
}

ImVec2 ImGui::CalcWindowExpectedSize(ImGuiWindow* window)
{
    ImVec2 size_contents = CalcSizeContents(window);
    return CalcSizeAfterConstraint(window, CalcSizeAutoFit(window, size_contents));
}

float ImGui::GetWindowScrollMaxX(ImGuiWindow* window)
{
    return ImMax(0.0f, window->SizeContents.x - (window->SizeFull.x - window->ScrollbarSizes.x));
}

float ImGui::GetWindowScrollMaxY(ImGuiWindow* window)
{
    return ImMax(0.0f, window->SizeContents.y - (window->SizeFull.y - window->ScrollbarSizes.y));
}

static ImVec2 CalcNextScrollFromScrollTargetAndClamp(ImGuiWindow* window, bool snap_on_edges)
{
    ImGuiContext& g = *GImGui;
    ImVec2 scroll = window->Scroll;
    if (window->ScrollTarget.x < FLT_MAX)
    {
        float cr_x = window->ScrollTargetCenterRatio.x;
        scroll.x = window->ScrollTarget.x - cr_x * (window->SizeFull.x - window->ScrollbarSizes.x);
    }
    if (window->ScrollTarget.y < FLT_MAX)
    {
        // 'snap_on_edges' allows for a discontinuity at the edge of scrolling limits to take account of WindowPadding so that scrolling to make the last item visible scroll far enough to see the padding.
        float cr_y = window->ScrollTargetCenterRatio.y;
        float target_y = window->ScrollTarget.y;
        if (snap_on_edges && cr_y <= 0.0f && target_y <= window->WindowPadding.y)
            target_y = 0.0f;
        if (snap_on_edges && cr_y >= 1.0f && target_y >= window->SizeContents.y - window->WindowPadding.y + g.Style.ItemSpacing.y)
            target_y = window->SizeContents.y;
        scroll.y = target_y - (1.0f - cr_y) * (window->TitleBarHeight() + window->MenuBarHeight()) - cr_y * (window->SizeFull.y - window->ScrollbarSizes.y);
    }
    scroll = ImMax(scroll, ImVec2(0.0f, 0.0f));
    if (!window->Collapsed && !window->SkipItems)
    {
        scroll.x = ImMin(scroll.x, ImGui::GetWindowScrollMaxX(window));
        scroll.y = ImMin(scroll.y, ImGui::GetWindowScrollMaxY(window));
    }
    return scroll;
}

static ImGuiCol GetWindowBgColorIdxFromFlags(ImGuiWindowFlags flags)
{
    if (flags & (ImGuiWindowFlags_Tooltip | ImGuiWindowFlags_Popup))
        return ImGuiCol_PopupBg;
    if (flags & ImGuiWindowFlags_ChildWindow)
        return ImGuiCol_ChildBg;
    return ImGuiCol_WindowBg;
}

static void CalcResizePosSizeFromAnyCorner(ImGuiWindow* window, const ImVec2& corner_target, const ImVec2& corner_norm, ImVec2* out_pos, ImVec2* out_size)
{
    ImVec2 pos_min = ImLerp(corner_target, window->Pos, corner_norm);                // Expected window upper-left
    ImVec2 pos_max = ImLerp(window->Pos + window->Size, corner_target, corner_norm); // Expected window lower-right
    ImVec2 size_expected = pos_max - pos_min;
    ImVec2 size_constrained = CalcSizeAfterConstraint(window, size_expected);
    *out_pos = pos_min;
    if (corner_norm.x == 0.0f)
        out_pos->x -= (size_constrained.x - size_expected.x);
    if (corner_norm.y == 0.0f)
        out_pos->y -= (size_constrained.y - size_expected.y);
    *out_size = size_constrained;
}

struct ImGuiResizeGripDef
{
    ImVec2  CornerPosN;
    ImVec2  InnerDir;
    int     AngleMin12, AngleMax12;
};

static const ImGuiResizeGripDef resize_grip_def[4] =
{
    { ImVec2(1,1), ImVec2(-1,-1), 0, 3 }, // Lower right
    { ImVec2(0,1), ImVec2(+1,-1), 3, 6 }, // Lower left
    { ImVec2(0,0), ImVec2(+1,+1), 6, 9 }, // Upper left
    { ImVec2(1,0), ImVec2(-1,+1), 9,12 }, // Upper right
};

static ImRect GetResizeBorderRect(ImGuiWindow* window, int border_n, float perp_padding, float thickness)
{
    ImRect rect = window->Rect();
    if (thickness == 0.0f) rect.Max -= ImVec2(1,1);
    if (border_n == 0) return ImRect(rect.Min.x + perp_padding, rect.Min.y - thickness,    rect.Max.x - perp_padding, rect.Min.y + thickness);      // Top
    if (border_n == 1) return ImRect(rect.Max.x - thickness,    rect.Min.y + perp_padding, rect.Max.x + thickness,    rect.Max.y - perp_padding);   // Right
    if (border_n == 2) return ImRect(rect.Min.x + perp_padding, rect.Max.y - thickness,    rect.Max.x - perp_padding, rect.Max.y + thickness);      // Bottom
    if (border_n == 3) return ImRect(rect.Min.x - thickness,    rect.Min.y + perp_padding, rect.Min.x + thickness,    rect.Max.y - perp_padding);   // Left
    IM_ASSERT(0);
    return ImRect();
}

// Handle resize for: Resize Grips, Borders, Gamepad
static void ImGui::UpdateManualResize(ImGuiWindow* window, const ImVec2& size_auto_fit, int* border_held, int resize_grip_count, ImU32 resize_grip_col[4])
{
    ImGuiContext& g = *GImGui;
    ImGuiWindowFlags flags = window->Flags;
    if ((flags & ImGuiWindowFlags_NoResize) || (flags & ImGuiWindowFlags_AlwaysAutoResize) || window->AutoFitFramesX > 0 || window->AutoFitFramesY > 0)
        return;
    if (window->WasActive == false) // Early out to avoid running this code for e.g. an hidden implicit/fallback Debug window.
        return;

    const int resize_border_count = g.IO.ConfigWindowsResizeFromEdges ? 4 : 0;
    const float grip_draw_size = (float)(int)ImMax(g.FontSize * 1.35f, window->WindowRounding + 1.0f + g.FontSize * 0.2f);
    const float grip_hover_inner_size = (float)(int)(grip_draw_size * 0.75f);
    const float grip_hover_outer_size = g.IO.ConfigWindowsResizeFromEdges ? WINDOWS_RESIZE_FROM_EDGES_HALF_THICKNESS : 0.0f;

    ImVec2 pos_target(FLT_MAX, FLT_MAX);
    ImVec2 size_target(FLT_MAX, FLT_MAX);

    // Resize grips and borders are on layer 1
    window->DC.NavLayerCurrent = ImGuiNavLayer_Menu;
    window->DC.NavLayerCurrentMask = (1 << ImGuiNavLayer_Menu);

    // Manual resize grips
    PushID("#RESIZE");
    for (int resize_grip_n = 0; resize_grip_n < resize_grip_count; resize_grip_n++)
    {
        const ImGuiResizeGripDef& grip = resize_grip_def[resize_grip_n];
        const ImVec2 corner = ImLerp(window->Pos, window->Pos + window->Size, grip.CornerPosN);

        // Using the FlattenChilds button flag we make the resize button accessible even if we are hovering over a child window
        ImRect resize_rect(corner - grip.InnerDir * grip_hover_outer_size, corner + grip.InnerDir * grip_hover_inner_size);
        if (resize_rect.Min.x > resize_rect.Max.x) ImSwap(resize_rect.Min.x, resize_rect.Max.x);
        if (resize_rect.Min.y > resize_rect.Max.y) ImSwap(resize_rect.Min.y, resize_rect.Max.y);
        bool hovered, held;
        ButtonBehavior(resize_rect, window->GetID((void*)(intptr_t)resize_grip_n), &hovered, &held, ImGuiButtonFlags_FlattenChildren | ImGuiButtonFlags_NoNavFocus);
        //GetForegroundDrawList(window)->AddRect(resize_rect.Min, resize_rect.Max, IM_COL32(255, 255, 0, 255));
        if (hovered || held)
            g.MouseCursor = (resize_grip_n & 1) ? ImGuiMouseCursor_ResizeNESW : ImGuiMouseCursor_ResizeNWSE;

        if (held && g.IO.MouseDoubleClicked[0] && resize_grip_n == 0)
        {
            // Manual auto-fit when double-clicking
            size_target = CalcSizeAfterConstraint(window, size_auto_fit);
            ClearActiveID();
        }
        else if (held)
        {
            // Resize from any of the four corners
            // We don't use an incremental MouseDelta but rather compute an absolute target size based on mouse position
            ImVec2 corner_target = g.IO.MousePos - g.ActiveIdClickOffset + ImLerp(grip.InnerDir * grip_hover_outer_size, grip.InnerDir * -grip_hover_inner_size, grip.CornerPosN); // Corner of the window corresponding to our corner grip
            CalcResizePosSizeFromAnyCorner(window, corner_target, grip.CornerPosN, &pos_target, &size_target);
        }
        if (resize_grip_n == 0 || held || hovered)
            resize_grip_col[resize_grip_n] = GetColorU32(held ? ImGuiCol_ResizeGripActive : hovered ? ImGuiCol_ResizeGripHovered : ImGuiCol_ResizeGrip);
    }
    for (int border_n = 0; border_n < resize_border_count; border_n++)
    {
        bool hovered, held;
        ImRect border_rect = GetResizeBorderRect(window, border_n, grip_hover_inner_size, WINDOWS_RESIZE_FROM_EDGES_HALF_THICKNESS);
        ButtonBehavior(border_rect, window->GetID((void*)(intptr_t)(border_n + 4)), &hovered, &held, ImGuiButtonFlags_FlattenChildren);
        //GetForegroundDrawLists(window)->AddRect(border_rect.Min, border_rect.Max, IM_COL32(255, 255, 0, 255));
        if ((hovered && g.HoveredIdTimer > WINDOWS_RESIZE_FROM_EDGES_FEEDBACK_TIMER) || held)
        {
            g.MouseCursor = (border_n & 1) ? ImGuiMouseCursor_ResizeEW : ImGuiMouseCursor_ResizeNS;
            if (held)
                *border_held = border_n;
        }
        if (held)
        {
            ImVec2 border_target = window->Pos;
            ImVec2 border_posn;
            if (border_n == 0) { border_posn = ImVec2(0, 0); border_target.y = (g.IO.MousePos.y - g.ActiveIdClickOffset.y + WINDOWS_RESIZE_FROM_EDGES_HALF_THICKNESS); } // Top
            if (border_n == 1) { border_posn = ImVec2(1, 0); border_target.x = (g.IO.MousePos.x - g.ActiveIdClickOffset.x + WINDOWS_RESIZE_FROM_EDGES_HALF_THICKNESS); } // Right
            if (border_n == 2) { border_posn = ImVec2(0, 1); border_target.y = (g.IO.MousePos.y - g.ActiveIdClickOffset.y + WINDOWS_RESIZE_FROM_EDGES_HALF_THICKNESS); } // Bottom
            if (border_n == 3) { border_posn = ImVec2(0, 0); border_target.x = (g.IO.MousePos.x - g.ActiveIdClickOffset.x + WINDOWS_RESIZE_FROM_EDGES_HALF_THICKNESS); } // Left
            CalcResizePosSizeFromAnyCorner(window, border_target, border_posn, &pos_target, &size_target);
        }
    }
    PopID();

    // Navigation resize (keyboard/gamepad)
    if (g.NavWindowingTarget && g.NavWindowingTarget->RootWindow == window)
    {
        ImVec2 nav_resize_delta;
        if (g.NavInputSource == ImGuiInputSource_NavKeyboard && g.IO.KeyShift)
            nav_resize_delta = GetNavInputAmount2d(ImGuiNavDirSourceFlags_Keyboard, ImGuiInputReadMode_Down);
        if (g.NavInputSource == ImGuiInputSource_NavGamepad)
            nav_resize_delta = GetNavInputAmount2d(ImGuiNavDirSourceFlags_PadDPad, ImGuiInputReadMode_Down);
        if (nav_resize_delta.x != 0.0f || nav_resize_delta.y != 0.0f)
        {
            const float NAV_RESIZE_SPEED = 600.0f;
            nav_resize_delta *= ImFloor(NAV_RESIZE_SPEED * g.IO.DeltaTime * ImMin(g.IO.DisplayFramebufferScale.x, g.IO.DisplayFramebufferScale.y));
            g.NavWindowingToggleLayer = false;
            g.NavDisableMouseHover = true;
            resize_grip_col[0] = GetColorU32(ImGuiCol_ResizeGripActive);
            // FIXME-NAV: Should store and accumulate into a separate size buffer to handle sizing constraints properly, right now a constraint will make us stuck.
            size_target = CalcSizeAfterConstraint(window, window->SizeFull + nav_resize_delta);
        }
    }

    // Apply back modified position/size to window
    if (size_target.x != FLT_MAX)
    {
        window->SizeFull = size_target;
        MarkIniSettingsDirty(window);
    }
    if (pos_target.x != FLT_MAX)
    {
        window->Pos = ImFloor(pos_target);
        MarkIniSettingsDirty(window);
    }

    // Resize nav layer
    window->DC.NavLayerCurrent = ImGuiNavLayer_Main;
    window->DC.NavLayerCurrentMask = (1 << ImGuiNavLayer_Main);

    window->Size = window->SizeFull;
}

static inline void ClampWindowRect(ImGuiWindow* window, const ImRect& rect, const ImVec2& padding)
{
    ImGuiContext& g = *GImGui;
    ImVec2 size_for_clamping = (g.IO.ConfigWindowsMoveFromTitleBarOnly && !(window->Flags & ImGuiWindowFlags_NoTitleBar)) ? ImVec2(window->Size.x, window->TitleBarHeight()) : window->Size;
    window->Pos = ImMin(rect.Max - padding, ImMax(window->Pos + size_for_clamping, rect.Min + padding) - size_for_clamping);
}

static void ImGui::RenderOuterBorders(ImGuiWindow* window)
{
    ImGuiContext& g = *GImGui;
    float rounding = window->WindowRounding;
    float border_size = window->WindowBorderSize;
    if (border_size > 0.0f && !(window->Flags & ImGuiWindowFlags_NoBackground))
        window->DrawList->AddRect(window->Pos, window->Pos + window->Size, GetColorU32(ImGuiCol_Border), rounding, ImDrawCornerFlags_All, border_size);

    int border_held = window->ResizeBorderHeld;
    if (border_held != -1)
    {
        struct ImGuiResizeBorderDef
        {
            ImVec2 InnerDir;
            ImVec2 CornerPosN1, CornerPosN2;
            float  OuterAngle;
        };
        static const ImGuiResizeBorderDef resize_border_def[4] =
        {
            { ImVec2(0,+1), ImVec2(0,0), ImVec2(1,0), IM_PI*1.50f }, // Top
            { ImVec2(-1,0), ImVec2(1,0), ImVec2(1,1), IM_PI*0.00f }, // Right
            { ImVec2(0,-1), ImVec2(1,1), ImVec2(0,1), IM_PI*0.50f }, // Bottom
            { ImVec2(+1,0), ImVec2(0,1), ImVec2(0,0), IM_PI*1.00f }  // Left
        };
        const ImGuiResizeBorderDef& def = resize_border_def[border_held];
        ImRect border_r = GetResizeBorderRect(window, border_held, rounding, 0.0f);
        window->DrawList->PathArcTo(ImLerp(border_r.Min, border_r.Max, def.CornerPosN1) + ImVec2(0.5f, 0.5f) + def.InnerDir * rounding, rounding, def.OuterAngle - IM_PI*0.25f, def.OuterAngle);
        window->DrawList->PathArcTo(ImLerp(border_r.Min, border_r.Max, def.CornerPosN2) + ImVec2(0.5f, 0.5f) + def.InnerDir * rounding, rounding, def.OuterAngle, def.OuterAngle + IM_PI*0.25f);
        window->DrawList->PathStroke(GetColorU32(ImGuiCol_SeparatorActive), false, ImMax(2.0f, border_size)); // Thicker than usual
    }
    if (g.Style.FrameBorderSize > 0 && !(window->Flags & ImGuiWindowFlags_NoTitleBar))
    {
        float y = window->Pos.y + window->TitleBarHeight() - 1;
        window->DrawList->AddLine(ImVec2(window->Pos.x + border_size, y), ImVec2(window->Pos.x + window->Size.x - border_size, y), GetColorU32(ImGuiCol_Border), g.Style.FrameBorderSize);
    }
}

void ImGui::UpdateWindowParentAndRootLinks(ImGuiWindow* window, ImGuiWindowFlags flags, ImGuiWindow* parent_window)
{
    window->ParentWindow = parent_window;
    window->RootWindow = window->RootWindowForTitleBarHighlight = window->RootWindowForNav = window;
    if (parent_window && (flags & ImGuiWindowFlags_ChildWindow) && !(flags & ImGuiWindowFlags_Tooltip))
        window->RootWindow = parent_window->RootWindow;
    if (parent_window && !(flags & ImGuiWindowFlags_Modal) && (flags & (ImGuiWindowFlags_ChildWindow | ImGuiWindowFlags_Popup)))
        window->RootWindowForTitleBarHighlight = parent_window->RootWindowForTitleBarHighlight;
    while (window->RootWindowForNav->Flags & ImGuiWindowFlags_NavFlattened)
    {
        IM_ASSERT(window->RootWindowForNav->ParentWindow != NULL);
        window->RootWindowForNav = window->RootWindowForNav->ParentWindow;
    }
}

// Push a new ImGui window to add widgets to.
// - A default window called "Debug" is automatically stacked at the beginning of every frame so you can use widgets without explicitly calling a Begin/End pair.
// - Begin/End can be called multiple times during the frame with the same window name to append content.
// - The window name is used as a unique identifier to preserve window information across frames (and save rudimentary information to the .ini file).
//   You can use the "##" or "###" markers to use the same label with different id, or same id with different label. See documentation at the top of this file.
// - Return false when window is collapsed, so you can early out in your code. You always need to call ImGui::End() even if false is returned.
// - Passing 'bool* p_open' displays a Close button on the upper-right corner of the window, the pointed value will be set to false when the button is pressed.
bool ImGui::Begin(const char* name, bool* p_open, ImGuiWindowFlags flags)
{
    ImGuiContext& g = *GImGui;
    const ImGuiStyle& style = g.Style;
    IM_ASSERT(name != NULL && name[0] != '\0');     // Window name required
    IM_ASSERT(g.FrameScopeActive);                  // Forgot to call ImGui::NewFrame()
    IM_ASSERT(g.FrameCountEnded != g.FrameCount);   // Called ImGui::Render() or ImGui::EndFrame() and haven't called ImGui::NewFrame() again yet

    // Find or create
    ImGuiWindow* window = FindWindowByName(name);
    const bool window_just_created = (window == NULL);
    if (window_just_created)
    {
        ImVec2 size_on_first_use = (g.NextWindowData.SizeCond != 0) ? g.NextWindowData.SizeVal : ImVec2(0.0f, 0.0f); // Any condition flag will do since we are creating a new window here.
        window = CreateNewWindow(name, size_on_first_use, flags);
    }

    // Automatically disable manual moving/resizing when NoInputs is set
    if ((flags & ImGuiWindowFlags_NoInputs) == ImGuiWindowFlags_NoInputs)
        flags |= ImGuiWindowFlags_NoMove | ImGuiWindowFlags_NoResize;

    if (flags & ImGuiWindowFlags_NavFlattened)
        IM_ASSERT(flags & ImGuiWindowFlags_ChildWindow);

    const int current_frame = g.FrameCount;
    const bool first_begin_of_the_frame = (window->LastFrameActive != current_frame);

    // Update the Appearing flag
    bool window_just_activated_by_user = (window->LastFrameActive < current_frame - 1);   // Not using !WasActive because the implicit "Debug" window would always toggle off->on
    const bool window_just_appearing_after_hidden_for_resize = (window->HiddenFramesCannotSkipItems > 0);
    if (flags & ImGuiWindowFlags_Popup)
    {
        ImGuiPopupRef& popup_ref = g.OpenPopupStack[g.BeginPopupStack.Size];
        window_just_activated_by_user |= (window->PopupId != popup_ref.PopupId); // We recycle popups so treat window as activated if popup id changed
        window_just_activated_by_user |= (window != popup_ref.Window);
    }
    window->Appearing = (window_just_activated_by_user || window_just_appearing_after_hidden_for_resize);
    if (window->Appearing)
        SetWindowConditionAllowFlags(window, ImGuiCond_Appearing, true);

    // Update Flags, LastFrameActive, BeginOrderXXX fields
    if (first_begin_of_the_frame)
    {
        window->Flags = (ImGuiWindowFlags)flags;
        window->LastFrameActive = current_frame;
        window->BeginOrderWithinParent = 0;
        window->BeginOrderWithinContext = (short)(g.WindowsActiveCount++);
    }
    else
    {
        flags = window->Flags;
    }

    // Parent window is latched only on the first call to Begin() of the frame, so further append-calls can be done from a different window stack
    ImGuiWindow* parent_window_in_stack = g.CurrentWindowStack.empty() ? NULL : g.CurrentWindowStack.back();
    ImGuiWindow* parent_window = first_begin_of_the_frame ? ((flags & (ImGuiWindowFlags_ChildWindow | ImGuiWindowFlags_Popup)) ? parent_window_in_stack : NULL) : window->ParentWindow;
    IM_ASSERT(parent_window != NULL || !(flags & ImGuiWindowFlags_ChildWindow));

    // Add to stack
    // We intentionally set g.CurrentWindow to NULL to prevent usage until when the viewport is set, then will call SetCurrentWindow()
    g.CurrentWindowStack.push_back(window);
    g.CurrentWindow = NULL;
    CheckStacksSize(window, true);
    if (flags & ImGuiWindowFlags_Popup)
    {
        ImGuiPopupRef& popup_ref = g.OpenPopupStack[g.BeginPopupStack.Size];
        popup_ref.Window = window;
        g.BeginPopupStack.push_back(popup_ref);
        window->PopupId = popup_ref.PopupId;
    }

    if (window_just_appearing_after_hidden_for_resize && !(flags & ImGuiWindowFlags_ChildWindow))
        window->NavLastIds[0] = 0;

    // Process SetNextWindow***() calls
    bool window_pos_set_by_api = false;
    bool window_size_x_set_by_api = false, window_size_y_set_by_api = false;
    if (g.NextWindowData.PosCond)
    {
        window_pos_set_by_api = (window->SetWindowPosAllowFlags & g.NextWindowData.PosCond) != 0;
        if (window_pos_set_by_api && ImLengthSqr(g.NextWindowData.PosPivotVal) > 0.00001f)
        {
            // May be processed on the next frame if this is our first frame and we are measuring size
            // FIXME: Look into removing the branch so everything can go through this same code path for consistency.
            window->SetWindowPosVal = g.NextWindowData.PosVal;
            window->SetWindowPosPivot = g.NextWindowData.PosPivotVal;
            window->SetWindowPosAllowFlags &= ~(ImGuiCond_Once | ImGuiCond_FirstUseEver | ImGuiCond_Appearing);
        }
        else
        {
            SetWindowPos(window, g.NextWindowData.PosVal, g.NextWindowData.PosCond);
        }
    }
    if (g.NextWindowData.SizeCond)
    {
        window_size_x_set_by_api = (window->SetWindowSizeAllowFlags & g.NextWindowData.SizeCond) != 0 && (g.NextWindowData.SizeVal.x > 0.0f);
        window_size_y_set_by_api = (window->SetWindowSizeAllowFlags & g.NextWindowData.SizeCond) != 0 && (g.NextWindowData.SizeVal.y > 0.0f);
        SetWindowSize(window, g.NextWindowData.SizeVal, g.NextWindowData.SizeCond);
    }
    if (g.NextWindowData.ContentSizeCond)
    {
        // Adjust passed "client size" to become a "window size"
        window->SizeContentsExplicit = g.NextWindowData.ContentSizeVal;
        if (window->SizeContentsExplicit.y != 0.0f)
            window->SizeContentsExplicit.y += window->TitleBarHeight() + window->MenuBarHeight();
    }
    else if (first_begin_of_the_frame)
    {
        window->SizeContentsExplicit = ImVec2(0.0f, 0.0f);
    }
    if (g.NextWindowData.CollapsedCond)
        SetWindowCollapsed(window, g.NextWindowData.CollapsedVal, g.NextWindowData.CollapsedCond);
    if (g.NextWindowData.FocusCond)
        FocusWindow(window);
    if (window->Appearing)
        SetWindowConditionAllowFlags(window, ImGuiCond_Appearing, false);

    // When reusing window again multiple times a frame, just append content (don't need to setup again)
    if (first_begin_of_the_frame)
    {
        // Initialize
        const bool window_is_child_tooltip = (flags & ImGuiWindowFlags_ChildWindow) && (flags & ImGuiWindowFlags_Tooltip); // FIXME-WIP: Undocumented behavior of Child+Tooltip for pinned tooltip (#1345)
        UpdateWindowParentAndRootLinks(window, flags, parent_window);

        window->Active = true;
        window->HasCloseButton = (p_open != NULL);
        window->ClipRect = ImVec4(-FLT_MAX,-FLT_MAX,+FLT_MAX,+FLT_MAX);
        window->IDStack.resize(1);

        // Update stored window name when it changes (which can _only_ happen with the "###" operator, so the ID would stay unchanged).
        // The title bar always display the 'name' parameter, so we only update the string storage if it needs to be visible to the end-user elsewhere.
        bool window_title_visible_elsewhere = false;
        if (g.NavWindowingList != NULL && (window->Flags & ImGuiWindowFlags_NoNavFocus) == 0)   // Window titles visible when using CTRL+TAB
            window_title_visible_elsewhere = true;
        if (window_title_visible_elsewhere && !window_just_created && strcmp(name, window->Name) != 0)
        {
            size_t buf_len = (size_t)window->NameBufLen;
            window->Name = ImStrdupcpy(window->Name, &buf_len, name);
            window->NameBufLen = (int)buf_len;
        }

        // UPDATE CONTENTS SIZE, UPDATE HIDDEN STATUS

        // Update contents size from last frame for auto-fitting (or use explicit size)
        window->SizeContents = CalcSizeContents(window);
        if (window->HiddenFramesCanSkipItems > 0)
            window->HiddenFramesCanSkipItems--;
        if (window->HiddenFramesCannotSkipItems > 0)
            window->HiddenFramesCannotSkipItems--;

        // Hide new windows for one frame until they calculate their size
        if (window_just_created && (!window_size_x_set_by_api || !window_size_y_set_by_api))
            window->HiddenFramesCannotSkipItems = 1;

        // Hide popup/tooltip window when re-opening while we measure size (because we recycle the windows)
        // We reset Size/SizeContents for reappearing popups/tooltips early in this function, so further code won't be tempted to use the old size.
        if (window_just_activated_by_user && (flags & (ImGuiWindowFlags_Popup | ImGuiWindowFlags_Tooltip)) != 0)
        {
            window->HiddenFramesCannotSkipItems = 1;
            if (flags & ImGuiWindowFlags_AlwaysAutoResize)
            {
                if (!window_size_x_set_by_api)
                    window->Size.x = window->SizeFull.x = 0.f;
                if (!window_size_y_set_by_api)
                    window->Size.y = window->SizeFull.y = 0.f;
                window->SizeContents = ImVec2(0.f, 0.f);
            }
        }

        SetCurrentWindow(window);

        // Lock border size and padding for the frame (so that altering them doesn't cause inconsistencies)
        if (flags & ImGuiWindowFlags_ChildWindow)
            window->WindowBorderSize = style.ChildBorderSize;
        else
            window->WindowBorderSize = ((flags & (ImGuiWindowFlags_Popup | ImGuiWindowFlags_Tooltip)) && !(flags & ImGuiWindowFlags_Modal)) ? style.PopupBorderSize : style.WindowBorderSize;
        window->WindowPadding = style.WindowPadding;
        if ((flags & ImGuiWindowFlags_ChildWindow) && !(flags & (ImGuiWindowFlags_AlwaysUseWindowPadding | ImGuiWindowFlags_Popup)) && window->WindowBorderSize == 0.0f)
            window->WindowPadding = ImVec2(0.0f, (flags & ImGuiWindowFlags_MenuBar) ? style.WindowPadding.y : 0.0f);
        window->DC.MenuBarOffset.x = ImMax(ImMax(window->WindowPadding.x, style.ItemSpacing.x), g.NextWindowData.MenuBarOffsetMinVal.x);
        window->DC.MenuBarOffset.y = g.NextWindowData.MenuBarOffsetMinVal.y;

        // Collapse window by double-clicking on title bar
        // At this point we don't have a clipping rectangle setup yet, so we can use the title bar area for hit detection and drawing
        if (!(flags & ImGuiWindowFlags_NoTitleBar) && !(flags & ImGuiWindowFlags_NoCollapse))
        {
            // We don't use a regular button+id to test for double-click on title bar (mostly due to legacy reason, could be fixed), so verify that we don't have items over the title bar.
            ImRect title_bar_rect = window->TitleBarRect();
            if (g.HoveredWindow == window && g.HoveredId == 0 && g.HoveredIdPreviousFrame == 0 && IsMouseHoveringRect(title_bar_rect.Min, title_bar_rect.Max) && g.IO.MouseDoubleClicked[0])
                window->WantCollapseToggle = true;
            if (window->WantCollapseToggle)
            {
                window->Collapsed = !window->Collapsed;
                MarkIniSettingsDirty(window);
                FocusWindow(window);
            }
        }
        else
        {
            window->Collapsed = false;
        }
        window->WantCollapseToggle = false;

        // SIZE

        // Calculate auto-fit size, handle automatic resize
        const ImVec2 size_auto_fit = CalcSizeAutoFit(window, window->SizeContents);
        ImVec2 size_full_modified(FLT_MAX, FLT_MAX);
        if ((flags & ImGuiWindowFlags_AlwaysAutoResize) && !window->Collapsed)
        {
            // Using SetNextWindowSize() overrides ImGuiWindowFlags_AlwaysAutoResize, so it can be used on tooltips/popups, etc.
            if (!window_size_x_set_by_api)
                window->SizeFull.x = size_full_modified.x = size_auto_fit.x;
            if (!window_size_y_set_by_api)
                window->SizeFull.y = size_full_modified.y = size_auto_fit.y;
        }
        else if (window->AutoFitFramesX > 0 || window->AutoFitFramesY > 0)
        {
            // Auto-fit may only grow window during the first few frames
            // We still process initial auto-fit on collapsed windows to get a window width, but otherwise don't honor ImGuiWindowFlags_AlwaysAutoResize when collapsed.
            if (!window_size_x_set_by_api && window->AutoFitFramesX > 0)
                window->SizeFull.x = size_full_modified.x = window->AutoFitOnlyGrows ? ImMax(window->SizeFull.x, size_auto_fit.x) : size_auto_fit.x;
            if (!window_size_y_set_by_api && window->AutoFitFramesY > 0)
                window->SizeFull.y = size_full_modified.y = window->AutoFitOnlyGrows ? ImMax(window->SizeFull.y, size_auto_fit.y) : size_auto_fit.y;
            if (!window->Collapsed)
                MarkIniSettingsDirty(window);
        }

        // Apply minimum/maximum window size constraints and final size
        window->SizeFull = CalcSizeAfterConstraint(window, window->SizeFull);
        window->Size = window->Collapsed && !(flags & ImGuiWindowFlags_ChildWindow) ? window->TitleBarRect().GetSize() : window->SizeFull;

        // SCROLLBAR STATUS

        // Update scrollbar status (based on the Size that was effective during last frame or the auto-resized Size).
        if (!window->Collapsed)
        {
            // When reading the current size we need to read it after size constraints have been applied
            float size_x_for_scrollbars = size_full_modified.x != FLT_MAX ? window->SizeFull.x : window->SizeFullAtLastBegin.x;
            float size_y_for_scrollbars = size_full_modified.y != FLT_MAX ? window->SizeFull.y : window->SizeFullAtLastBegin.y;
            window->ScrollbarY = (flags & ImGuiWindowFlags_AlwaysVerticalScrollbar) || ((window->SizeContents.y > size_y_for_scrollbars) && !(flags & ImGuiWindowFlags_NoScrollbar));
            window->ScrollbarX = (flags & ImGuiWindowFlags_AlwaysHorizontalScrollbar) || ((window->SizeContents.x > size_x_for_scrollbars - (window->ScrollbarY ? style.ScrollbarSize : 0.0f)) && !(flags & ImGuiWindowFlags_NoScrollbar) && (flags & ImGuiWindowFlags_HorizontalScrollbar));
            if (window->ScrollbarX && !window->ScrollbarY)
                window->ScrollbarY = (window->SizeContents.y > size_y_for_scrollbars - style.ScrollbarSize) && !(flags & ImGuiWindowFlags_NoScrollbar);
            window->ScrollbarSizes = ImVec2(window->ScrollbarY ? style.ScrollbarSize : 0.0f, window->ScrollbarX ? style.ScrollbarSize : 0.0f);
        }

        // POSITION

        // Popup latch its initial position, will position itself when it appears next frame
        if (window_just_activated_by_user)
        {
            window->AutoPosLastDirection = ImGuiDir_None;
            if ((flags & ImGuiWindowFlags_Popup) != 0 && !window_pos_set_by_api)
                window->Pos = g.BeginPopupStack.back().OpenPopupPos;
        }

        // Position child window
        if (flags & ImGuiWindowFlags_ChildWindow)
        {
            IM_ASSERT(parent_window && parent_window->Active);
            window->BeginOrderWithinParent = (short)parent_window->DC.ChildWindows.Size;
            parent_window->DC.ChildWindows.push_back(window);
            if (!(flags & ImGuiWindowFlags_Popup) && !window_pos_set_by_api && !window_is_child_tooltip)
                window->Pos = parent_window->DC.CursorPos;
        }

        const bool window_pos_with_pivot = (window->SetWindowPosVal.x != FLT_MAX && window->HiddenFramesCannotSkipItems == 0);
        if (window_pos_with_pivot)
            SetWindowPos(window, ImMax(style.DisplaySafeAreaPadding, window->SetWindowPosVal - window->SizeFull * window->SetWindowPosPivot), 0); // Position given a pivot (e.g. for centering)
        else if ((flags & ImGuiWindowFlags_ChildMenu) != 0)
            window->Pos = FindBestWindowPosForPopup(window);
        else if ((flags & ImGuiWindowFlags_Popup) != 0 && !window_pos_set_by_api && window_just_appearing_after_hidden_for_resize)
            window->Pos = FindBestWindowPosForPopup(window);
        else if ((flags & ImGuiWindowFlags_Tooltip) != 0 && !window_pos_set_by_api && !window_is_child_tooltip)
            window->Pos = FindBestWindowPosForPopup(window);

        // Clamp position so it stays visible
        // Ignore zero-sized display explicitly to avoid losing positions if a window manager reports zero-sized window when initializing or minimizing.
        ImRect viewport_rect(GetViewportRect());
        if (!window_pos_set_by_api && !(flags & ImGuiWindowFlags_ChildWindow) && window->AutoFitFramesX <= 0 && window->AutoFitFramesY <= 0)
        {
            if (g.IO.DisplaySize.x > 0.0f && g.IO.DisplaySize.y > 0.0f) // Ignore zero-sized display explicitly to avoid losing positions if a window manager reports zero-sized window when initializing or minimizing.
            {
                ImVec2 clamp_padding = ImMax(style.DisplayWindowPadding, style.DisplaySafeAreaPadding);
                ClampWindowRect(window, viewport_rect, clamp_padding);
            }
        }
        window->Pos = ImFloor(window->Pos);

        // Lock window rounding for the frame (so that altering them doesn't cause inconsistencies)
        window->WindowRounding = (flags & ImGuiWindowFlags_ChildWindow) ? style.ChildRounding : ((flags & ImGuiWindowFlags_Popup) && !(flags & ImGuiWindowFlags_Modal)) ? style.PopupRounding : style.WindowRounding;

        // Apply scrolling
        window->Scroll = CalcNextScrollFromScrollTargetAndClamp(window, true);
        window->ScrollTarget = ImVec2(FLT_MAX, FLT_MAX);

        // Apply window focus (new and reactivated windows are moved to front)
        bool want_focus = false;
        if (window_just_activated_by_user && !(flags & ImGuiWindowFlags_NoFocusOnAppearing))
        {
            if (flags & ImGuiWindowFlags_Popup)
                want_focus = true;
            else if ((flags & (ImGuiWindowFlags_ChildWindow | ImGuiWindowFlags_Tooltip)) == 0)
                want_focus = true;
        }

        // Handle manual resize: Resize Grips, Borders, Gamepad
        int border_held = -1;
        ImU32 resize_grip_col[4] = { 0 };
        const int resize_grip_count = g.IO.ConfigWindowsResizeFromEdges ? 2 : 1; // 4
        const float grip_draw_size = (float)(int)ImMax(g.FontSize * 1.35f, window->WindowRounding + 1.0f + g.FontSize * 0.2f);
        if (!window->Collapsed)
            UpdateManualResize(window, size_auto_fit, &border_held, resize_grip_count, &resize_grip_col[0]);
        window->ResizeBorderHeld = (signed char)border_held;

        // Default item width. Make it proportional to window size if window manually resizes
        if (window->Size.x > 0.0f && !(flags & ImGuiWindowFlags_Tooltip) && !(flags & ImGuiWindowFlags_AlwaysAutoResize))
            window->ItemWidthDefault = (float)(int)(window->Size.x * 0.65f);
        else
            window->ItemWidthDefault = (float)(int)(g.FontSize * 16.0f);

        // DRAWING

        // Setup draw list and outer clipping rectangle
        window->DrawList->Clear();
        window->DrawList->Flags = (g.Style.AntiAliasedLines ? ImDrawListFlags_AntiAliasedLines : 0) | (g.Style.AntiAliasedFill ? ImDrawListFlags_AntiAliasedFill : 0);
        window->DrawList->PushTextureID(g.Font->ContainerAtlas->TexID);
        if ((flags & ImGuiWindowFlags_ChildWindow) && !(flags & ImGuiWindowFlags_Popup) && !window_is_child_tooltip)
            PushClipRect(parent_window->ClipRect.Min, parent_window->ClipRect.Max, true);
        else
            PushClipRect(viewport_rect.Min, viewport_rect.Max, true);

        // Draw modal window background (darkens what is behind them, all viewports)
        const bool dim_bg_for_modal = (flags & ImGuiWindowFlags_Modal) && window == GetFrontMostPopupModal() && window->HiddenFramesCannotSkipItems <= 0;
        const bool dim_bg_for_window_list = g.NavWindowingTargetAnim && (window == g.NavWindowingTargetAnim->RootWindow);
        if (dim_bg_for_modal || dim_bg_for_window_list)
        {
            const ImU32 dim_bg_col = GetColorU32(dim_bg_for_modal ? ImGuiCol_ModalWindowDimBg : ImGuiCol_NavWindowingDimBg, g.DimBgRatio);
            window->DrawList->AddRectFilled(viewport_rect.Min, viewport_rect.Max, dim_bg_col);
        }

        // Draw navigation selection/windowing rectangle background
        if (dim_bg_for_window_list && window == g.NavWindowingTargetAnim)
        {
            ImRect bb = window->Rect();
            bb.Expand(g.FontSize);
            if (!bb.Contains(viewport_rect)) // Avoid drawing if the window covers all the viewport anyway
                window->DrawList->AddRectFilled(bb.Min, bb.Max, GetColorU32(ImGuiCol_NavWindowingHighlight, g.NavWindowingHighlightAlpha * 0.25f), g.Style.WindowRounding);
        }

        // Draw window + handle manual resize
        // As we highlight the title bar when want_focus is set, multiple reappearing windows will have have their title bar highlighted on their reappearing frame.
        const float window_rounding = window->WindowRounding;
        const float window_border_size = window->WindowBorderSize;
        const ImGuiWindow* window_to_highlight = g.NavWindowingTarget ? g.NavWindowingTarget : g.NavWindow;
        const bool title_bar_is_highlight = want_focus || (window_to_highlight && window->RootWindowForTitleBarHighlight == window_to_highlight->RootWindowForTitleBarHighlight);
        const ImRect title_bar_rect = window->TitleBarRect();
        if (window->Collapsed)
        {
            // Title bar only
            float backup_border_size = style.FrameBorderSize;
            g.Style.FrameBorderSize = window->WindowBorderSize;
            ImU32 title_bar_col = GetColorU32((title_bar_is_highlight && !g.NavDisableHighlight) ? ImGuiCol_TitleBgActive : ImGuiCol_TitleBgCollapsed);
            RenderFrame(title_bar_rect.Min, title_bar_rect.Max, title_bar_col, true, window_rounding);
            g.Style.FrameBorderSize = backup_border_size;
        }
        else
        {
            // Window background
            if (!(flags & ImGuiWindowFlags_NoBackground))
            {
                ImU32 bg_col = GetColorU32(GetWindowBgColorIdxFromFlags(flags));
                float alpha = 1.0f;
                if (g.NextWindowData.BgAlphaCond != 0)
                    alpha = g.NextWindowData.BgAlphaVal;
                if (alpha != 1.0f)
                    bg_col = (bg_col & ~IM_COL32_A_MASK) | (IM_F32_TO_INT8_SAT(alpha) << IM_COL32_A_SHIFT);
                window->DrawList->AddRectFilled(window->Pos + ImVec2(0, window->TitleBarHeight()), window->Pos + window->Size, bg_col, window_rounding, (flags & ImGuiWindowFlags_NoTitleBar) ? ImDrawCornerFlags_All : ImDrawCornerFlags_Bot);
            }
            g.NextWindowData.BgAlphaCond = 0;

            // Title bar
            if (!(flags & ImGuiWindowFlags_NoTitleBar))
            {
                ImU32 title_bar_col = GetColorU32(title_bar_is_highlight ? ImGuiCol_TitleBgActive : ImGuiCol_TitleBg);
                window->DrawList->AddRectFilled(title_bar_rect.Min, title_bar_rect.Max, title_bar_col, window_rounding, ImDrawCornerFlags_Top);
            }

            // Menu bar
            if (flags & ImGuiWindowFlags_MenuBar)
            {
                ImRect menu_bar_rect = window->MenuBarRect();
                menu_bar_rect.ClipWith(window->Rect());  // Soft clipping, in particular child window don't have minimum size covering the menu bar so this is useful for them.
                window->DrawList->AddRectFilled(menu_bar_rect.Min+ImVec2(window_border_size,0), menu_bar_rect.Max-ImVec2(window_border_size,0), GetColorU32(ImGuiCol_MenuBarBg), (flags & ImGuiWindowFlags_NoTitleBar) ? window_rounding : 0.0f, ImDrawCornerFlags_Top);
                if (style.FrameBorderSize > 0.0f && menu_bar_rect.Max.y < window->Pos.y + window->Size.y)
                    window->DrawList->AddLine(menu_bar_rect.GetBL(), menu_bar_rect.GetBR(), GetColorU32(ImGuiCol_Border), style.FrameBorderSize);
            }

            // Scrollbars
            if (window->ScrollbarX)
                Scrollbar(ImGuiAxis_X);
            if (window->ScrollbarY)
                Scrollbar(ImGuiAxis_Y);

            // Render resize grips (after their input handling so we don't have a frame of latency)
            if (!(flags & ImGuiWindowFlags_NoResize))
            {
                for (int resize_grip_n = 0; resize_grip_n < resize_grip_count; resize_grip_n++)
                {
                    const ImGuiResizeGripDef& grip = resize_grip_def[resize_grip_n];
                    const ImVec2 corner = ImLerp(window->Pos, window->Pos + window->Size, grip.CornerPosN);
                    window->DrawList->PathLineTo(corner + grip.InnerDir * ((resize_grip_n & 1) ? ImVec2(window_border_size, grip_draw_size) : ImVec2(grip_draw_size, window_border_size)));
                    window->DrawList->PathLineTo(corner + grip.InnerDir * ((resize_grip_n & 1) ? ImVec2(grip_draw_size, window_border_size) : ImVec2(window_border_size, grip_draw_size)));
                    window->DrawList->PathArcToFast(ImVec2(corner.x + grip.InnerDir.x * (window_rounding + window_border_size), corner.y + grip.InnerDir.y * (window_rounding + window_border_size)), window_rounding, grip.AngleMin12, grip.AngleMax12);
                    window->DrawList->PathFillConvex(resize_grip_col[resize_grip_n]);
                }
            }

            // Borders
            RenderOuterBorders(window);
        }

        // Draw navigation selection/windowing rectangle border
        if (g.NavWindowingTargetAnim == window)
        {
            float rounding = ImMax(window->WindowRounding, g.Style.WindowRounding);
            ImRect bb = window->Rect();
            bb.Expand(g.FontSize);
            if (bb.Contains(viewport_rect)) // If a window fits the entire viewport, adjust its highlight inward
            {
                bb.Expand(-g.FontSize - 1.0f);
                rounding = window->WindowRounding;
            }
            window->DrawList->AddRect(bb.Min, bb.Max, GetColorU32(ImGuiCol_NavWindowingHighlight, g.NavWindowingHighlightAlpha), rounding, ~0, 3.0f);
        }

        // Store a backup of SizeFull which we will use next frame to decide if we need scrollbars.
        window->SizeFullAtLastBegin = window->SizeFull;

        // Update various regions. Variables they depends on are set above in this function.
        // FIXME: window->ContentsRegionRect.Max is currently very misleading / partly faulty, but some BeginChild() patterns relies on it.
        window->ContentsRegionRect.Min.x = window->Pos.x - window->Scroll.x + window->WindowPadding.x;
        window->ContentsRegionRect.Min.y = window->Pos.y - window->Scroll.y + window->WindowPadding.y + window->TitleBarHeight() + window->MenuBarHeight();
        window->ContentsRegionRect.Max.x = window->Pos.x - window->Scroll.x - window->WindowPadding.x + (window->SizeContentsExplicit.x != 0.0f ? window->SizeContentsExplicit.x : (window->Size.x - window->ScrollbarSizes.x));
        window->ContentsRegionRect.Max.y = window->Pos.y - window->Scroll.y - window->WindowPadding.y + (window->SizeContentsExplicit.y != 0.0f ? window->SizeContentsExplicit.y : (window->Size.y - window->ScrollbarSizes.y));

        // Setup drawing context
        // (NB: That term "drawing context / DC" lost its meaning a long time ago. Initially was meant to hold transient data only. Nowadays difference between window-> and window->DC-> is dubious.)
        window->DC.Indent.x = 0.0f + window->WindowPadding.x - window->Scroll.x;
        window->DC.GroupOffset.x = 0.0f;
        window->DC.ColumnsOffset.x = 0.0f;
        window->DC.CursorStartPos = window->Pos + ImVec2(window->DC.Indent.x + window->DC.ColumnsOffset.x, window->TitleBarHeight() + window->MenuBarHeight() + window->WindowPadding.y - window->Scroll.y);
        window->DC.CursorPos = window->DC.CursorStartPos;
        window->DC.CursorPosPrevLine = window->DC.CursorPos;
        window->DC.CursorMaxPos = window->DC.CursorStartPos;
        window->DC.CurrentLineSize = window->DC.PrevLineSize = ImVec2(0.0f, 0.0f);
        window->DC.CurrentLineTextBaseOffset = window->DC.PrevLineTextBaseOffset = 0.0f;
        window->DC.NavHideHighlightOneFrame = false;
        window->DC.NavHasScroll = (GetWindowScrollMaxY(window) > 0.0f);
        window->DC.NavLayerActiveMask = window->DC.NavLayerActiveMaskNext;
        window->DC.NavLayerActiveMaskNext = 0x00;
        window->DC.MenuBarAppending = false;
        window->DC.ChildWindows.resize(0);
        window->DC.LayoutType = ImGuiLayoutType_Vertical;
        window->DC.ParentLayoutType = parent_window ? parent_window->DC.LayoutType : ImGuiLayoutType_Vertical;
        window->DC.FocusCounterAll = window->DC.FocusCounterTab = -1;
        window->DC.ItemFlags = parent_window ? parent_window->DC.ItemFlags : ImGuiItemFlags_Default_;
        window->DC.ItemWidth = window->ItemWidthDefault;
        window->DC.TextWrapPos = -1.0f; // disabled
        window->DC.ItemFlagsStack.resize(0);
        window->DC.ItemWidthStack.resize(0);
        window->DC.TextWrapPosStack.resize(0);
        window->DC.CurrentColumns = NULL;
        window->DC.TreeDepth = 0;
        window->DC.TreeStoreMayJumpToParentOnPop = 0x00;
        window->DC.StateStorage = &window->StateStorage;
        window->DC.GroupStack.resize(0);
        window->MenuColumns.Update(3, style.ItemSpacing.x, window_just_activated_by_user);

        if ((flags & ImGuiWindowFlags_ChildWindow) && (window->DC.ItemFlags != parent_window->DC.ItemFlags))
        {
            window->DC.ItemFlags = parent_window->DC.ItemFlags;
            window->DC.ItemFlagsStack.push_back(window->DC.ItemFlags);
        }

        if (window->AutoFitFramesX > 0)
            window->AutoFitFramesX--;
        if (window->AutoFitFramesY > 0)
            window->AutoFitFramesY--;

        // Apply focus (we need to call FocusWindow() AFTER setting DC.CursorStartPos so our initial navigation reference rectangle can start around there)
        if (want_focus)
        {
            FocusWindow(window);
            NavInitWindow(window, false);
        }

        // Title bar
        if (!(flags & ImGuiWindowFlags_NoTitleBar))
        {
            // Close & collapse button are on layer 1 (same as menus) and don't default focus
            const ImGuiItemFlags item_flags_backup = window->DC.ItemFlags;
            window->DC.ItemFlags |= ImGuiItemFlags_NoNavDefaultFocus;
            window->DC.NavLayerCurrent = ImGuiNavLayer_Menu;
            window->DC.NavLayerCurrentMask = (1 << ImGuiNavLayer_Menu);

            // Collapse button
            if (!(flags & ImGuiWindowFlags_NoCollapse))
                if (CollapseButton(window->GetID("#COLLAPSE"), window->Pos))
                    window->WantCollapseToggle = true; // Defer collapsing to next frame as we are too far in the Begin() function

            // Close button
            if (p_open != NULL)
            {
                const float rad = g.FontSize * 0.5f;
                if (CloseButton(window->GetID("#CLOSE"), ImVec2(window->Pos.x + window->Size.x - style.FramePadding.x - rad, window->Pos.y + style.FramePadding.y + rad), rad + 1))
                    *p_open = false;

				CloseButton(window->GetID("#CLOSE"), ImVec2(window->Pos.x + window->Size.x - style.FramePadding.x - rad, window->Pos.y + style.FramePadding.y + rad + 1), rad + 1);
				
            }

            window->DC.NavLayerCurrent = ImGuiNavLayer_Main;
            window->DC.NavLayerCurrentMask = (1 << ImGuiNavLayer_Main);
            window->DC.ItemFlags = item_flags_backup;

            // Title bar text (with: horizontal alignment, avoiding collapse/close button, optional "unsaved document" marker)
            // FIXME: Refactor text alignment facilities along with RenderText helpers, this is too much code..
            const char* UNSAVED_DOCUMENT_MARKER = "*";
            float marker_size_x = (flags & ImGuiWindowFlags_UnsavedDocument) ? CalcTextSize(UNSAVED_DOCUMENT_MARKER, NULL, false).x : 0.0f;
            ImVec2 text_size = CalcTextSize(name, NULL, true) + ImVec2(marker_size_x, 0.0f);
            ImRect text_r = title_bar_rect;
            float pad_left = (flags & ImGuiWindowFlags_NoCollapse) ? style.FramePadding.x : (style.FramePadding.x + g.FontSize + style.ItemInnerSpacing.x);
            float pad_right = (p_open == NULL)                     ? style.FramePadding.x : (style.FramePadding.x + g.FontSize + style.ItemInnerSpacing.x);
            if (style.WindowTitleAlign.x > 0.0f)
                pad_right = ImLerp(pad_right, pad_left, style.WindowTitleAlign.x);
            text_r.Min.x += pad_left;
            text_r.Max.x -= pad_right;
            ImRect clip_rect = text_r;
            clip_rect.Max.x = window->Pos.x + window->Size.x - (p_open ? title_bar_rect.GetHeight() - 3 : style.FramePadding.x); // Match the size of CloseButton()
            
			RenderTextClipped(ImVec2(text_r.Min.x - 300, text_r.Min.y), ImVec2(text_r.Max.x - 260, text_r.Max.y), name, NULL, &text_size, style.WindowTitleAlign, &clip_rect);

            if (flags & ImGuiWindowFlags_UnsavedDocument)
            {
                ImVec2 marker_pos = ImVec2(ImMax(text_r.Min.x, text_r.Min.x + (text_r.GetWidth() - text_size.x) * style.WindowTitleAlign.x) + text_size.x, text_r.Min.y) + ImVec2(2 - marker_size_x, 0.0f);
                ImVec2 off = ImVec2(0.0f, (float)(int)(-g.FontSize * 0.25f));
                RenderTextClipped(marker_pos + off, text_r.Max + off, UNSAVED_DOCUMENT_MARKER, NULL, NULL, ImVec2(0, style.WindowTitleAlign.y), &clip_rect);
            }
        }

        // Save clipped aabb so we can access it in constant-time in FindHoveredWindow()
        window->OuterRectClipped = window->Rect();
        window->OuterRectClipped.ClipWith(window->ClipRect);

        // Pressing CTRL+C while holding on a window copy its content to the clipboard
        // This works but 1. doesn't handle multiple Begin/End pairs, 2. recursing into another Begin/End pair - so we need to work that out and add better logging scope.
        // Maybe we can support CTRL+C on every element?
        /*
        if (g.ActiveId == move_id)
            if (g.IO.KeyCtrl && IsKeyPressedMap(ImGuiKey_C))
                LogToClipboard();
        */

        // Inner rectangle
        // We set this up after processing the resize grip so that our clip rectangle doesn't lag by a frame
        // Note that if our window is collapsed we will end up with an inverted (~null) clipping rectangle which is the correct behavior.
        window->InnerMainRect.Min.x = title_bar_rect.Min.x + window->WindowBorderSize;
        window->InnerMainRect.Min.y = title_bar_rect.Max.y + window->MenuBarHeight() + (((flags & ImGuiWindowFlags_MenuBar) || !(flags & ImGuiWindowFlags_NoTitleBar)) ? style.FrameBorderSize : window->WindowBorderSize);
        window->InnerMainRect.Max.x = window->Pos.x + window->Size.x - window->ScrollbarSizes.x - window->WindowBorderSize;
        window->InnerMainRect.Max.y = window->Pos.y + window->Size.y - window->ScrollbarSizes.y - window->WindowBorderSize;
        //window->DrawList->AddRect(window->InnerRect.Min, window->InnerRect.Max, IM_COL32_WHITE);

        // Inner clipping rectangle
        // Force round operator last to ensure that e.g. (int)(max.x-min.x) in user's render code produce correct result.
        window->InnerClipRect.Min.x = ImFloor(0.5f + window->InnerMainRect.Min.x + ImMax(0.0f, ImFloor(window->WindowPadding.x*0.5f - window->WindowBorderSize)));
        window->InnerClipRect.Min.y = ImFloor(0.5f + window->InnerMainRect.Min.y);
        window->InnerClipRect.Max.x = ImFloor(0.5f + window->InnerMainRect.Max.x - ImMax(0.0f, ImFloor(window->WindowPadding.x*0.5f - window->WindowBorderSize)));
        window->InnerClipRect.Max.y = ImFloor(0.5f + window->InnerMainRect.Max.y);

        // We fill last item data based on Title Bar/Tab, in order for IsItemHovered() and IsItemActive() to be usable after Begin().
        // This is useful to allow creating context menus on title bar only, etc.
        window->DC.LastItemId = window->MoveId;
        window->DC.LastItemStatusFlags = IsMouseHoveringRect(title_bar_rect.Min, title_bar_rect.Max, false) ? ImGuiItemStatusFlags_HoveredRect : 0;
        window->DC.LastItemRect = title_bar_rect;
#ifdef IMGUI_ENABLE_TEST_ENGINE
        if (!(window->Flags & ImGuiWindowFlags_NoTitleBar))
            IMGUI_TEST_ENGINE_ITEM_ADD(window->DC.LastItemRect, window->DC.LastItemId);
#endif
    }
    else
    {
        // Append
        SetCurrentWindow(window);
    }

    PushClipRect(window->InnerClipRect.Min, window->InnerClipRect.Max, true);

    // Clear 'accessed' flag last thing (After PushClipRect which will set the flag. We want the flag to stay false when the default "Debug" window is unused)
    if (first_begin_of_the_frame)
        window->WriteAccessed = false;

    window->BeginCount++;
    g.NextWindowData.Clear();

    if (flags & ImGuiWindowFlags_ChildWindow)
    {
        // Child window can be out of sight and have "negative" clip windows.
        // Mark them as collapsed so commands are skipped earlier (we can't manually collapse them because they have no title bar).
        IM_ASSERT((flags & ImGuiWindowFlags_NoTitleBar) != 0);
        if (!(flags & ImGuiWindowFlags_AlwaysAutoResize) && window->AutoFitFramesX <= 0 && window->AutoFitFramesY <= 0)
            if (window->OuterRectClipped.Min.x >= window->OuterRectClipped.Max.x || window->OuterRectClipped.Min.y >= window->OuterRectClipped.Max.y)
                window->HiddenFramesCanSkipItems = 1;

        // Completely hide along with parent or if parent is collapsed
        if (parent_window && (parent_window->Collapsed || parent_window->Hidden))
            window->HiddenFramesCanSkipItems = 1;
    }

    // Don't render if style alpha is 0.0 at the time of Begin(). This is arbitrary and inconsistent but has been there for a long while (may remove at some point)
    if (style.Alpha <= 0.0f)
        window->HiddenFramesCanSkipItems = 1;

    // Update the Hidden flag
    window->Hidden = (window->HiddenFramesCanSkipItems > 0) || (window->HiddenFramesCannotSkipItems > 0);

    // Update the SkipItems flag, used to early out of all items functions (no layout required)
    bool skip_items = false;
    if (window->Collapsed || !window->Active || window->Hidden)
        if (window->AutoFitFramesX <= 0 && window->AutoFitFramesY <= 0 && window->HiddenFramesCannotSkipItems <= 0)
            skip_items = true;
    window->SkipItems = skip_items;

    return !skip_items;
}

// Old Begin() API with 5 parameters, avoid calling this version directly! Use SetNextWindowSize()/SetNextWindowBgAlpha() + Begin() instead.
#ifndef IMGUI_DISABLE_OBSOLETE_FUNCTIONS
bool ImGui::Begin(const char* name, bool* p_open, const ImVec2& size_first_use, float bg_alpha_override, ImGuiWindowFlags flags)
{
    // Old API feature: we could pass the initial window size as a parameter. This was misleading because it only had an effect if the window didn't have data in the .ini file.
    if (size_first_use.x != 0.0f || size_first_use.y != 0.0f)
        SetNextWindowSize(size_first_use, ImGuiCond_FirstUseEver);

    // Old API feature: override the window background alpha with a parameter.
    if (bg_alpha_override >= 0.0f)
        SetNextWindowBgAlpha(bg_alpha_override);

    return Begin(name, p_open, flags);
}
#endif // IMGUI_DISABLE_OBSOLETE_FUNCTIONS

void ImGui::End()
{
    ImGuiContext& g = *GImGui;

    if (g.CurrentWindowStack.Size <= 1 && g.FrameScopePushedImplicitWindow)
    {
        IM_ASSERT(g.CurrentWindowStack.Size > 1 && "Calling End() too many times!");
        return; // FIXME-ERRORHANDLING
    }
    IM_ASSERT(g.CurrentWindowStack.Size > 0);

    ImGuiWindow* window = g.CurrentWindow;

    if (window->DC.CurrentColumns != NULL)
        EndColumns();
    PopClipRect();   // Inner window clip rectangle

    // Stop logging
    if (!(window->Flags & ImGuiWindowFlags_ChildWindow))    // FIXME: add more options for scope of logging
        LogFinish();

    // Pop from window stack
    g.CurrentWindowStack.pop_back();
    if (window->Flags & ImGuiWindowFlags_Popup)
        g.BeginPopupStack.pop_back();
    CheckStacksSize(window, false);
    SetCurrentWindow(g.CurrentWindowStack.empty() ? NULL : g.CurrentWindowStack.back());
}

void ImGui::BringWindowToFocusFront(ImGuiWindow* window)
{
    ImGuiContext& g = *GImGui;
    if (g.WindowsFocusOrder.back() == window)
        return;
    for (int i = g.WindowsFocusOrder.Size - 2; i >= 0; i--) // We can ignore the front most window
        if (g.WindowsFocusOrder[i] == window)
        {
            memmove(&g.WindowsFocusOrder[i], &g.WindowsFocusOrder[i + 1], (size_t)(g.WindowsFocusOrder.Size - i - 1) * sizeof(ImGuiWindow*));
            g.WindowsFocusOrder[g.WindowsFocusOrder.Size - 1] = window;
            break;
        }
}

void ImGui::BringWindowToDisplayFront(ImGuiWindow* window)
{
    ImGuiContext& g = *GImGui;
    ImGuiWindow* current_front_window = g.Windows.back();
    if (current_front_window == window || current_front_window->RootWindow == window)
        return;
    for (int i = g.Windows.Size - 2; i >= 0; i--) // We can ignore the front most window
        if (g.Windows[i] == window)
        {
            memmove(&g.Windows[i], &g.Windows[i + 1], (size_t)(g.Windows.Size - i - 1) * sizeof(ImGuiWindow*));
            g.Windows[g.Windows.Size - 1] = window;
            break;
        }
}

void ImGui::BringWindowToDisplayBack(ImGuiWindow* window)
{
    ImGuiContext& g = *GImGui;
    if (g.Windows[0] == window)
        return;
    for (int i = 0; i < g.Windows.Size; i++)
        if (g.Windows[i] == window)
        {
            memmove(&g.Windows[1], &g.Windows[0], (size_t)i * sizeof(ImGuiWindow*));
            g.Windows[0] = window;
            break;
        }
}


// Moving window to front of display and set focus (which happens to be back of our sorted list)
void ImGui::FocusWindow(ImGuiWindow* window)
{
    ImGuiContext& g = *GImGui;

    if (g.NavWindow != window)
    {
        g.NavWindow = window;
        if (window && g.NavDisableMouseHover)
            g.NavMousePosDirty = true;
        g.NavInitRequest = false;
        g.NavId = window ? window->NavLastIds[0] : 0; // Restore NavId
        g.NavIdIsAlive = false;
        g.NavLayer = ImGuiNavLayer_Main;
        //IMGUI_DEBUG_LOG("FocusWindow(\"%s\")\n", window ? window->Name : NULL);
    }

    // Passing NULL allow to disable keyboard focus
    if (!window)
        return;

    // Move the root window to the top of the pile
    if (window->RootWindow)
        window = window->RootWindow;

    // Steal focus on active widgets
    if (window->Flags & ImGuiWindowFlags_Popup) // FIXME: This statement should be unnecessary. Need further testing before removing it..
        if (g.ActiveId != 0 && g.ActiveIdWindow && g.ActiveIdWindow->RootWindow != window)
            ClearActiveID();

    // Bring to front
    BringWindowToFocusFront(window);
    if (!(window->Flags & ImGuiWindowFlags_NoBringToFrontOnFocus))
        BringWindowToDisplayFront(window);
}

void ImGui::FocusPreviousWindowIgnoringOne(ImGuiWindow* ignore_window)
{
    ImGuiContext& g = *GImGui;
    for (int i = g.WindowsFocusOrder.Size - 1; i >= 0; i--)
    {
        // We may later decide to test for different NoXXXInputs based on the active navigation input (mouse vs nav) but that may feel more confusing to the user.
        ImGuiWindow* window = g.WindowsFocusOrder[i];
        if (window != ignore_window && window->WasActive && !(window->Flags & ImGuiWindowFlags_ChildWindow))
            if ((window->Flags & (ImGuiWindowFlags_NoMouseInputs | ImGuiWindowFlags_NoNavInputs)) != (ImGuiWindowFlags_NoMouseInputs | ImGuiWindowFlags_NoNavInputs))
            {
                ImGuiWindow* focus_window = NavRestoreLastChildNavWindow(window);
                FocusWindow(focus_window);
                return;
            }
    }
}

void ImGui::SetNextItemWidth(float item_width)
{
    ImGuiWindow* window = GetCurrentWindow();
    window->DC.NextItemWidth = item_width;
}

void ImGui::PushItemWidth(float item_width)
{
    ImGuiWindow* window = GetCurrentWindow();
    window->DC.ItemWidth = (item_width == 0.0f ? window->ItemWidthDefault : item_width);
    window->DC.ItemWidthStack.push_back(window->DC.ItemWidth);
}

void ImGui::PushMultiItemsWidths(int components, float w_full)
{
    ImGuiWindow* window = GetCurrentWindow();
    const ImGuiStyle& style = GImGui->Style;
    const float w_item_one  = ImMax(1.0f, (float)(int)((w_full - (style.ItemInnerSpacing.x) * (components-1)) / (float)components));
    const float w_item_last = ImMax(1.0f, (float)(int)(w_full - (w_item_one + style.ItemInnerSpacing.x) * (components-1)));
    window->DC.ItemWidthStack.push_back(w_item_last);
    for (int i = 0; i < components-1; i++)
        window->DC.ItemWidthStack.push_back(w_item_one);
    window->DC.ItemWidth = window->DC.ItemWidthStack.back();
}

void ImGui::PopItemWidth()
{
    ImGuiWindow* window = GetCurrentWindow();
    window->DC.ItemWidthStack.pop_back();
    window->DC.ItemWidth = window->DC.ItemWidthStack.empty() ? window->ItemWidthDefault : window->DC.ItemWidthStack.back();
}

// Calculate default item width given value passed to PushItemWidth() or SetNextItemWidth(),
// Then consume the 
float ImGui::GetNextItemWidth()
{
    ImGuiWindow* window = GImGui->CurrentWindow;
    float w;
    if (window->DC.NextItemWidth != FLT_MAX)
    {
        w = window->DC.NextItemWidth;
        window->DC.NextItemWidth = FLT_MAX;
    }
    else
    {
        w = window->DC.ItemWidth;
    }
    if (w < 0.0f)
    {
        float region_max_x = GetContentRegionMaxScreen().x;
        w = ImMax(1.0f, region_max_x - window->DC.CursorPos.x + w);
    }
    w = (float)(int)w;
    return w;
}

// Calculate item width *without* popping/consuming NextItemWidth if it was set.
// (rarely used, which is why we avoid calling this from GetNextItemWidth() and instead do a backup/restore here)
float ImGui::CalcItemWidth()
{
    ImGuiWindow* window = GImGui->CurrentWindow;
    float backup_next_item_width = window->DC.NextItemWidth;
    float w = GetNextItemWidth();
    window->DC.NextItemWidth = backup_next_item_width;
    return w;
}

// [Internal] Calculate full item size given user provided 'size' parameter and default width/height. Default width is often == GetNextItemWidth().
// Those two functions CalcItemWidth vs CalcItemSize are awkwardly named because they are not fully symmetrical.
// Note that only CalcItemWidth() is publicly exposed.
// The 4.0f here may be changed to match GetNextItemWidth() and/or BeginChild() (right now we have a mismatch which is harmless but undesirable)
ImVec2 ImGui::CalcItemSize(ImVec2 size, float default_w, float default_h)
{
    ImGuiWindow* window = GImGui->CurrentWindow;

    ImVec2 region_max;
    if (size.x < 0.0f || size.y < 0.0f)
        region_max = GetContentRegionMaxScreen();

    if (size.x == 0.0f)
        size.x = default_w;
    else if (size.x < 0.0f)
        size.x = ImMax(4.0f, region_max.x - window->DC.CursorPos.x + size.x);

    if (size.y == 0.0f)
        size.y = default_h;
    else if (size.y < 0.0f)
        size.y = ImMax(4.0f, region_max.y - window->DC.CursorPos.y + size.y);

    return size;
}

void ImGui::SetCurrentFont(ImFont* font)
{
    ImGuiContext& g = *GImGui;
    IM_ASSERT(font && font->IsLoaded());    // Font Atlas not created. Did you call io.Fonts->GetTexDataAsRGBA32 / GetTexDataAsAlpha8 ?
    IM_ASSERT(font->Scale > 0.0f);
    g.Font = font;
    g.FontBaseSize = ImMax(1.0f, g.IO.FontGlobalScale * g.Font->FontSize * g.Font->Scale);
    g.FontSize = g.CurrentWindow ? g.CurrentWindow->CalcFontSize() : 0.0f;

    ImFontAtlas* atlas = g.Font->ContainerAtlas;
    g.DrawListSharedData.TexUvWhitePixel = atlas->TexUvWhitePixel;
    g.DrawListSharedData.Font = g.Font;
    g.DrawListSharedData.FontSize = g.FontSize;
}

void ImGui::PushFont(ImFont* font)
{
    ImGuiContext& g = *GImGui;
    if (!font)
        font = GetDefaultFont();
    SetCurrentFont(font);
    g.FontStack.push_back(font);
    g.CurrentWindow->DrawList->PushTextureID(font->ContainerAtlas->TexID);
}

void  ImGui::PopFont()
{
    ImGuiContext& g = *GImGui;
    g.CurrentWindow->DrawList->PopTextureID();
    g.FontStack.pop_back();
    SetCurrentFont(g.FontStack.empty() ? GetDefaultFont() : g.FontStack.back());
}

void ImGui::PushItemFlag(ImGuiItemFlags option, bool enabled)
{
    ImGuiWindow* window = GetCurrentWindow();
    if (enabled)
        window->DC.ItemFlags |= option;
    else
        window->DC.ItemFlags &= ~option;
    window->DC.ItemFlagsStack.push_back(window->DC.ItemFlags);
}

void ImGui::PopItemFlag()
{
    ImGuiWindow* window = GetCurrentWindow();
    window->DC.ItemFlagsStack.pop_back();
    window->DC.ItemFlags = window->DC.ItemFlagsStack.empty() ? ImGuiItemFlags_Default_ : window->DC.ItemFlagsStack.back();
}

// FIXME: Look into renaming this once we have settled the new Focus/Activation/TabStop system.
void ImGui::PushAllowKeyboardFocus(bool allow_keyboard_focus)
{
    PushItemFlag(ImGuiItemFlags_NoTabStop, !allow_keyboard_focus);
}

void ImGui::PopAllowKeyboardFocus()
{
    PopItemFlag();
}

void ImGui::PushButtonRepeat(bool repeat)
{
    PushItemFlag(ImGuiItemFlags_ButtonRepeat, repeat);
}

void ImGui::PopButtonRepeat()
{
    PopItemFlag();
}

void ImGui::PushTextWrapPos(float wrap_pos_x)
{
    ImGuiWindow* window = GetCurrentWindow();
    window->DC.TextWrapPos = wrap_pos_x;
    window->DC.TextWrapPosStack.push_back(wrap_pos_x);
}

void ImGui::PopTextWrapPos()
{
    ImGuiWindow* window = GetCurrentWindow();
    window->DC.TextWrapPosStack.pop_back();
    window->DC.TextWrapPos = window->DC.TextWrapPosStack.empty() ? -1.0f : window->DC.TextWrapPosStack.back();
}

// FIXME: This may incur a round-trip (if the end user got their data from a float4) but eventually we aim to store the in-flight colors as ImU32
void ImGui::PushStyleColor(ImGuiCol idx, ImU32 col)
{
    ImGuiContext& g = *GImGui;
    ImGuiColorMod backup;
    backup.Col = idx;
    backup.BackupValue = g.Style.Colors[idx];
    g.ColorModifiers.push_back(backup);
    g.Style.Colors[idx] = ColorConvertU32ToFloat4(col);
}

void ImGui::PushStyleColor(ImGuiCol idx, const ImVec4& col)
{
    ImGuiContext& g = *GImGui;
    ImGuiColorMod backup;
    backup.Col = idx;
    backup.BackupValue = g.Style.Colors[idx];
    g.ColorModifiers.push_back(backup);
    g.Style.Colors[idx] = col;
}

void ImGui::PopStyleColor(int count)
{
    ImGuiContext& g = *GImGui;
    while (count > 0)
    {
        ImGuiColorMod& backup = g.ColorModifiers.back();
        g.Style.Colors[backup.Col] = backup.BackupValue;
        g.ColorModifiers.pop_back();
        count--;
    }
}

struct ImGuiStyleVarInfo
{
    ImGuiDataType   Type;
    ImU32           Count;
    ImU32           Offset;
    void*           GetVarPtr(ImGuiStyle* style) const { return (void*)((unsigned char*)style + Offset); }
};

static const ImGuiStyleVarInfo GStyleVarInfo[] =
{
    { ImGuiDataType_Float, 1, (ImU32)IM_OFFSETOF(ImGuiStyle, Alpha) },               // ImGuiStyleVar_Alpha
    { ImGuiDataType_Float, 2, (ImU32)IM_OFFSETOF(ImGuiStyle, WindowPadding) },       // ImGuiStyleVar_WindowPadding
    { ImGuiDataType_Float, 1, (ImU32)IM_OFFSETOF(ImGuiStyle, WindowRounding) },      // ImGuiStyleVar_WindowRounding
    { ImGuiDataType_Float, 1, (ImU32)IM_OFFSETOF(ImGuiStyle, WindowBorderSize) },    // ImGuiStyleVar_WindowBorderSize
    { ImGuiDataType_Float, 2, (ImU32)IM_OFFSETOF(ImGuiStyle, WindowMinSize) },       // ImGuiStyleVar_WindowMinSize
    { ImGuiDataType_Float, 2, (ImU32)IM_OFFSETOF(ImGuiStyle, WindowTitleAlign) },    // ImGuiStyleVar_WindowTitleAlign
    { ImGuiDataType_Float, 1, (ImU32)IM_OFFSETOF(ImGuiStyle, ChildRounding) },       // ImGuiStyleVar_ChildRounding
    { ImGuiDataType_Float, 1, (ImU32)IM_OFFSETOF(ImGuiStyle, ChildBorderSize) },     // ImGuiStyleVar_ChildBorderSize
    { ImGuiDataType_Float, 1, (ImU32)IM_OFFSETOF(ImGuiStyle, PopupRounding) },       // ImGuiStyleVar_PopupRounding
    { ImGuiDataType_Float, 1, (ImU32)IM_OFFSETOF(ImGuiStyle, PopupBorderSize) },     // ImGuiStyleVar_PopupBorderSize
    { ImGuiDataType_Float, 2, (ImU32)IM_OFFSETOF(ImGuiStyle, FramePadding) },        // ImGuiStyleVar_FramePadding
    { ImGuiDataType_Float, 1, (ImU32)IM_OFFSETOF(ImGuiStyle, FrameRounding) },       // ImGuiStyleVar_FrameRounding
    { ImGuiDataType_Float, 1, (ImU32)IM_OFFSETOF(ImGuiStyle, FrameBorderSize) },     // ImGuiStyleVar_FrameBorderSize
    { ImGuiDataType_Float, 2, (ImU32)IM_OFFSETOF(ImGuiStyle, ItemSpacing) },         // ImGuiStyleVar_ItemSpacing
    { ImGuiDataType_Float, 2, (ImU32)IM_OFFSETOF(ImGuiStyle, ItemInnerSpacing) },    // ImGuiStyleVar_ItemInnerSpacing
    { ImGuiDataType_Float, 1, (ImU32)IM_OFFSETOF(ImGuiStyle, IndentSpacing) },       // ImGuiStyleVar_IndentSpacing
    { ImGuiDataType_Float, 1, (ImU32)IM_OFFSETOF(ImGuiStyle, ScrollbarSize) },       // ImGuiStyleVar_ScrollbarSize
    { ImGuiDataType_Float, 1, (ImU32)IM_OFFSETOF(ImGuiStyle, ScrollbarRounding) },   // ImGuiStyleVar_ScrollbarRounding
    { ImGuiDataType_Float, 1, (ImU32)IM_OFFSETOF(ImGuiStyle, GrabMinSize) },         // ImGuiStyleVar_GrabMinSize
    { ImGuiDataType_Float, 1, (ImU32)IM_OFFSETOF(ImGuiStyle, GrabRounding) },        // ImGuiStyleVar_GrabRounding
    { ImGuiDataType_Float, 1, (ImU32)IM_OFFSETOF(ImGuiStyle, TabRounding) },         // ImGuiStyleVar_TabRounding
    { ImGuiDataType_Float, 2, (ImU32)IM_OFFSETOF(ImGuiStyle, ButtonTextAlign) },     // ImGuiStyleVar_ButtonTextAlign
    { ImGuiDataType_Float, 2, (ImU32)IM_OFFSETOF(ImGuiStyle, SelectableTextAlign) }, // ImGuiStyleVar_SelectableTextAlign
};

static const ImGuiStyleVarInfo* GetStyleVarInfo(ImGuiStyleVar idx)
{
    IM_ASSERT(idx >= 0 && idx < ImGuiStyleVar_COUNT);
    IM_ASSERT(IM_ARRAYSIZE(GStyleVarInfo) == ImGuiStyleVar_COUNT);
    return &GStyleVarInfo[idx];
}

void ImGui::PushStyleVar(ImGuiStyleVar idx, float val)
{
    const ImGuiStyleVarInfo* var_info = GetStyleVarInfo(idx);
    if (var_info->Type == ImGuiDataType_Float && var_info->Count == 1)
    {
        ImGuiContext& g = *GImGui;
        float* pvar = (float*)var_info->GetVarPtr(&g.Style);
        g.StyleModifiers.push_back(ImGuiStyleMod(idx, *pvar));
        *pvar = val;
        return;
    }
    IM_ASSERT(0 && "Called PushStyleVar() float variant but variable is not a float!");
}

void ImGui::PushStyleVar(ImGuiStyleVar idx, const ImVec2& val)
{
    const ImGuiStyleVarInfo* var_info = GetStyleVarInfo(idx);
    if (var_info->Type == ImGuiDataType_Float && var_info->Count == 2)
    {
        ImGuiContext& g = *GImGui;
        ImVec2* pvar = (ImVec2*)var_info->GetVarPtr(&g.Style);
        g.StyleModifiers.push_back(ImGuiStyleMod(idx, *pvar));
        *pvar = val;
        return;
    }
    IM_ASSERT(0 && "Called PushStyleVar() ImVec2 variant but variable is not a ImVec2!");
}

void ImGui::PopStyleVar(int count)
{
    ImGuiContext& g = *GImGui;
    while (count > 0)
    {
        // We avoid a generic memcpy(data, &backup.Backup.., GDataTypeSize[info->Type] * info->Count), the overhead in Debug is not worth it.
        ImGuiStyleMod& backup = g.StyleModifiers.back();
        const ImGuiStyleVarInfo* info = GetStyleVarInfo(backup.VarIdx);
        void* data = info->GetVarPtr(&g.Style);
        if (info->Type == ImGuiDataType_Float && info->Count == 1)      { ((float*)data)[0] = backup.BackupFloat[0]; }
        else if (info->Type == ImGuiDataType_Float && info->Count == 2) { ((float*)data)[0] = backup.BackupFloat[0]; ((float*)data)[1] = backup.BackupFloat[1]; }
        g.StyleModifiers.pop_back();
        count--;
    }
}

const char* ImGui::GetStyleColorName(ImGuiCol idx)
{
    // Create switch-case from enum with regexp: ImGuiCol_{.*}, --> case ImGuiCol_\1: return "\1";
    switch (idx)
    {
    case ImGuiCol_Text: return "Text";
    case ImGuiCol_TextDisabled: return "TextDisabled";
    case ImGuiCol_WindowBg: return "WindowBg";
    case ImGuiCol_ChildBg: return "ChildBg";
    case ImGuiCol_PopupBg: return "PopupBg";
    case ImGuiCol_Border: return "Border";
    case ImGuiCol_BorderShadow: return "BorderShadow";
    case ImGuiCol_FrameBg: return "FrameBg";
    case ImGuiCol_FrameBgHovered: return "FrameBgHovered";
    case ImGuiCol_FrameBgActive: return "FrameBgActive";
    case ImGuiCol_TitleBg: return "TitleBg";
    case ImGuiCol_TitleBgActive: return "TitleBgActive";
    case ImGuiCol_TitleBgCollapsed: return "TitleBgCollapsed";
    case ImGuiCol_MenuBarBg: return "MenuBarBg";
    case ImGuiCol_ScrollbarBg: return "ScrollbarBg";
    case ImGuiCol_ScrollbarGrab: return "ScrollbarGrab";
    case ImGuiCol_ScrollbarGrabHovered: return "ScrollbarGrabHovered";
    case ImGuiCol_ScrollbarGrabActive: return "ScrollbarGrabActive";
    case ImGuiCol_CheckMark: return "CheckMark";
    case ImGuiCol_SliderGrab: return "SliderGrab";
    case ImGuiCol_SliderGrabActive: return "SliderGrabActive";
    case ImGuiCol_Button: return "Button";
    case ImGuiCol_ButtonHovered: return "ButtonHovered";
    case ImGuiCol_ButtonActive: return "ButtonActive";
    case ImGuiCol_Header: return "Header";
    case ImGuiCol_HeaderHovered: return "HeaderHovered";
    case ImGuiCol_HeaderActive: return "HeaderActive";
    case ImGuiCol_Separator: return "Separator";
    case ImGuiCol_SeparatorHovered: return "SeparatorHovered";
    case ImGuiCol_SeparatorActive: return "SeparatorActive";
    case ImGuiCol_ResizeGrip: return "ResizeGrip";
    case ImGuiCol_ResizeGripHovered: return "ResizeGripHovered";
    case ImGuiCol_ResizeGripActive: return "ResizeGripActive";
    case ImGuiCol_Tab: return "Tab";
    case ImGuiCol_TabHovered: return "TabHovered";
    case ImGuiCol_TabActive: return "TabActive";
    case ImGuiCol_TabUnfocused: return "TabUnfocused";
    case ImGuiCol_TabUnfocusedActive: return "TabUnfocusedActive";
    case ImGuiCol_PlotLines: return "PlotLines";
    case ImGuiCol_PlotLinesHovered: return "PlotLinesHovered";
    case ImGuiCol_PlotHistogram: return "PlotHistogram";
    case ImGuiCol_PlotHistogramHovered: return "PlotHistogramHovered";
    case ImGuiCol_TextSelectedBg: return "TextSelectedBg";
    case ImGuiCol_DragDropTarget: return "DragDropTarget";
    case ImGuiCol_NavHighlight: return "NavHighlight";
    case ImGuiCol_NavWindowingHighlight: return "NavWindowingHighlight";
    case ImGuiCol_NavWindowingDimBg: return "NavWindowingDimBg";
    case ImGuiCol_ModalWindowDimBg: return "ModalWindowDimBg";
    }
    IM_ASSERT(0);
    return "Unknown";
}

bool ImGui::IsWindowChildOf(ImGuiWindow* window, ImGuiWindow* potential_parent)
{
    if (window->RootWindow == potential_parent)
        return true;
    while (window != NULL)
    {
        if (window == potential_parent)
            return true;
        window = window->ParentWindow;
    }
    return false;
}

bool ImGui::IsWindowHovered(ImGuiHoveredFlags flags)
{
    IM_ASSERT((flags & ImGuiHoveredFlags_AllowWhenOverlapped) == 0);   // Flags not supported by this function
    ImGuiContext& g = *GImGui;

    if (flags & ImGuiHoveredFlags_AnyWindow)
    {
        if (g.HoveredWindow == NULL)
            return false;
    }
    else
    {
        switch (flags & (ImGuiHoveredFlags_RootWindow | ImGuiHoveredFlags_ChildWindows))
        {
        case ImGuiHoveredFlags_RootWindow | ImGuiHoveredFlags_ChildWindows:
            if (g.HoveredRootWindow != g.CurrentWindow->RootWindow)
                return false;
            break;
        case ImGuiHoveredFlags_RootWindow:
            if (g.HoveredWindow != g.CurrentWindow->RootWindow)
                return false;
            break;
        case ImGuiHoveredFlags_ChildWindows:
            if (g.HoveredWindow == NULL || !IsWindowChildOf(g.HoveredWindow, g.CurrentWindow))
                return false;
            break;
        default:
            if (g.HoveredWindow != g.CurrentWindow)
                return false;
            break;
        }
    }

    if (!IsWindowContentHoverable(g.HoveredWindow, flags))
        return false;
    if (!(flags & ImGuiHoveredFlags_AllowWhenBlockedByActiveItem))
        if (g.ActiveId != 0 && !g.ActiveIdAllowOverlap && g.ActiveId != g.HoveredWindow->MoveId)
            return false;
    return true;
}

bool ImGui::IsWindowFocused(ImGuiFocusedFlags flags)
{
    ImGuiContext& g = *GImGui;

    if (flags & ImGuiFocusedFlags_AnyWindow)
        return g.NavWindow != NULL;

    IM_ASSERT(g.CurrentWindow);     // Not inside a Begin()/End()
    switch (flags & (ImGuiFocusedFlags_RootWindow | ImGuiFocusedFlags_ChildWindows))
    {
    case ImGuiFocusedFlags_RootWindow | ImGuiFocusedFlags_ChildWindows:
        return g.NavWindow && g.NavWindow->RootWindow == g.CurrentWindow->RootWindow;
    case ImGuiFocusedFlags_RootWindow:
        return g.NavWindow == g.CurrentWindow->RootWindow;
    case ImGuiFocusedFlags_ChildWindows:
        return g.NavWindow && IsWindowChildOf(g.NavWindow, g.CurrentWindow);
    default:
        return g.NavWindow == g.CurrentWindow;
    }
}

// Can we focus this window with CTRL+TAB (or PadMenu + PadFocusPrev/PadFocusNext)
// Note that NoNavFocus makes the window not reachable with CTRL+TAB but it can still be focused with mouse or programmaticaly.
// If you want a window to never be focused, you may use the e.g. NoInputs flag.
bool ImGui::IsWindowNavFocusable(ImGuiWindow* window)
{
    return window->Active && window == window->RootWindow && !(window->Flags & ImGuiWindowFlags_NoNavFocus);
}

float ImGui::GetWindowWidth()
{
    ImGuiWindow* window = GImGui->CurrentWindow;
    return window->Size.x;
}

float ImGui::GetWindowHeight()
{
    ImGuiWindow* window = GImGui->CurrentWindow;
    return window->Size.y;
}

ImVec2 ImGui::GetWindowPos()
{
    ImGuiContext& g = *GImGui;
    ImGuiWindow* window = g.CurrentWindow;
    return window->Pos;
}

void ImGui::SetWindowScrollX(ImGuiWindow* window, float new_scroll_x)
{
    window->DC.CursorMaxPos.x += window->Scroll.x; // SizeContents is generally computed based on CursorMaxPos which is affected by scroll position, so we need to apply our change to it.
    window->Scroll.x = new_scroll_x;
    window->DC.CursorMaxPos.x -= window->Scroll.x;
}

void ImGui::SetWindowScrollY(ImGuiWindow* window, float new_scroll_y)
{
    window->DC.CursorMaxPos.y += window->Scroll.y; // SizeContents is generally computed based on CursorMaxPos which is affected by scroll position, so we need to apply our change to it.
    window->Scroll.y = new_scroll_y;
    window->DC.CursorMaxPos.y -= window->Scroll.y;
}

void ImGui::SetWindowPos(ImGuiWindow* window, const ImVec2& pos, ImGuiCond cond)
{
    // Test condition (NB: bit 0 is always true) and clear flags for next time
    if (cond && (window->SetWindowPosAllowFlags & cond) == 0)
        return;

    IM_ASSERT(cond == 0 || ImIsPowerOfTwo(cond)); // Make sure the user doesn't attempt to combine multiple condition flags.
    window->SetWindowPosAllowFlags &= ~(ImGuiCond_Once | ImGuiCond_FirstUseEver | ImGuiCond_Appearing);
    window->SetWindowPosVal = ImVec2(FLT_MAX, FLT_MAX);

    // Set
    const ImVec2 old_pos = window->Pos;
    window->Pos = ImFloor(pos);
    window->DC.CursorPos += (window->Pos - old_pos);    // As we happen to move the window while it is being appended to (which is a bad idea - will smear) let's at least offset the cursor
    window->DC.CursorMaxPos += (window->Pos - old_pos); // And more importantly we need to adjust this so size calculation doesn't get affected.
}

void ImGui::SetWindowPos(const ImVec2& pos, ImGuiCond cond)
{
    ImGuiWindow* window = GetCurrentWindowRead();
    SetWindowPos(window, pos, cond);
}

void ImGui::SetWindowPos(const char* name, const ImVec2& pos, ImGuiCond cond)
{
    if (ImGuiWindow* window = FindWindowByName(name))
        SetWindowPos(window, pos, cond);
}

ImVec2 ImGui::GetWindowSize()
{
    ImGuiWindow* window = GetCurrentWindowRead();
    return window->Size;
}

void ImGui::SetWindowSize(ImGuiWindow* window, const ImVec2& size, ImGuiCond cond)
{
    // Test condition (NB: bit 0 is always true) and clear flags for next time
    if (cond && (window->SetWindowSizeAllowFlags & cond) == 0)
        return;

    IM_ASSERT(cond == 0 || ImIsPowerOfTwo(cond)); // Make sure the user doesn't attempt to combine multiple condition flags.
    window->SetWindowSizeAllowFlags &= ~(ImGuiCond_Once | ImGuiCond_FirstUseEver | ImGuiCond_Appearing);

    // Set
    if (size.x > 0.0f)
    {
        window->AutoFitFramesX = 0;
        window->SizeFull.x = ImFloor(size.x);
    }
    else
    {
        window->AutoFitFramesX = 2;
        window->AutoFitOnlyGrows = false;
    }
    if (size.y > 0.0f)
    {
        window->AutoFitFramesY = 0;
        window->SizeFull.y = ImFloor(size.y);
    }
    else
    {
        window->AutoFitFramesY = 2;
        window->AutoFitOnlyGrows = false;
    }
}

void ImGui::SetWindowSize(const ImVec2& size, ImGuiCond cond)
{
    SetWindowSize(GImGui->CurrentWindow, size, cond);
}

void ImGui::SetWindowSize(const char* name, const ImVec2& size, ImGuiCond cond)
{
    if (ImGuiWindow* window = FindWindowByName(name))
        SetWindowSize(window, size, cond);
}

void ImGui::SetWindowCollapsed(ImGuiWindow* window, bool collapsed, ImGuiCond cond)
{
    // Test condition (NB: bit 0 is always true) and clear flags for next time
    if (cond && (window->SetWindowCollapsedAllowFlags & cond) == 0)
        return;
    window->SetWindowCollapsedAllowFlags &= ~(ImGuiCond_Once | ImGuiCond_FirstUseEver | ImGuiCond_Appearing);

    // Set
    window->Collapsed = collapsed;
}

void ImGui::SetWindowCollapsed(bool collapsed, ImGuiCond cond)
{
    SetWindowCollapsed(GImGui->CurrentWindow, collapsed, cond);
}

bool ImGui::IsWindowCollapsed()
{
    ImGuiWindow* window = GetCurrentWindowRead();
    return window->Collapsed;
}

bool ImGui::IsWindowAppearing()
{
    ImGuiWindow* window = GetCurrentWindowRead();
    return window->Appearing;
}

void ImGui::SetWindowCollapsed(const char* name, bool collapsed, ImGuiCond cond)
{
    if (ImGuiWindow* window = FindWindowByName(name))
        SetWindowCollapsed(window, collapsed, cond);
}

void ImGui::SetWindowFocus()
{
    FocusWindow(GImGui->CurrentWindow);
}

void ImGui::SetWindowFocus(const char* name)
{
    if (name)
    {
        if (ImGuiWindow* window = FindWindowByName(name))
            FocusWindow(window);
    }
    else
    {
        FocusWindow(NULL);
    }
}

void ImGui::SetNextWindowPos(const ImVec2& pos, ImGuiCond cond, const ImVec2& pivot)
{
    ImGuiContext& g = *GImGui;
    IM_ASSERT(cond == 0 || ImIsPowerOfTwo(cond)); // Make sure the user doesn't attempt to combine multiple condition flags.
    g.NextWindowData.PosVal = pos;
    g.NextWindowData.PosPivotVal = pivot;
    g.NextWindowData.PosCond = cond ? cond : ImGuiCond_Always;
}

void ImGui::SetNextWindowSize(const ImVec2& size, ImGuiCond cond)
{
    ImGuiContext& g = *GImGui;
    IM_ASSERT(cond == 0 || ImIsPowerOfTwo(cond)); // Make sure the user doesn't attempt to combine multiple condition flags.
    g.NextWindowData.SizeVal = size;
    g.NextWindowData.SizeCond = cond ? cond : ImGuiCond_Always;
}

void ImGui::SetNextWindowSizeConstraints(const ImVec2& size_min, const ImVec2& size_max, ImGuiSizeCallback custom_callback, void* custom_callback_user_data)
{
    ImGuiContext& g = *GImGui;
    g.NextWindowData.SizeConstraintCond = ImGuiCond_Always;
    g.NextWindowData.SizeConstraintRect = ImRect(size_min, size_max);
    g.NextWindowData.SizeCallback = custom_callback;
    g.NextWindowData.SizeCallbackUserData = custom_callback_user_data;
}

void ImGui::SetNextWindowContentSize(const ImVec2& size)
{
    ImGuiContext& g = *GImGui;
    g.NextWindowData.ContentSizeVal = size;  // In Begin() we will add the size of window decorations (title bar, menu etc.) to that to form a SizeContents value.
    g.NextWindowData.ContentSizeCond = ImGuiCond_Always;
}

void ImGui::SetNextWindowCollapsed(bool collapsed, ImGuiCond cond)
{
    ImGuiContext& g = *GImGui;
    IM_ASSERT(cond == 0 || ImIsPowerOfTwo(cond)); // Make sure the user doesn't attempt to combine multiple condition flags.
    g.NextWindowData.CollapsedVal = collapsed;
    g.NextWindowData.CollapsedCond = cond ? cond : ImGuiCond_Always;
}

void ImGui::SetNextWindowFocus()
{
    ImGuiContext& g = *GImGui;
    g.NextWindowData.FocusCond = ImGuiCond_Always;   // Using a Cond member for consistency (may transition all of them to single flag set for fast Clear() op)
}

void ImGui::SetNextWindowBgAlpha(float alpha)
{
    ImGuiContext& g = *GImGui;
    g.NextWindowData.BgAlphaVal = alpha;
    g.NextWindowData.BgAlphaCond = ImGuiCond_Always; // Using a Cond member for consistency (may transition all of them to single flag set for fast Clear() op)
}

// FIXME: This is in window space (not screen space!). We should try to obsolete all those functions.
ImVec2 ImGui::GetContentRegionMax()
{
    ImGuiWindow* window = GImGui->CurrentWindow;
    ImVec2 mx = window->ContentsRegionRect.Max - window->Pos;
    if (window->DC.CurrentColumns)
        mx.x = GetColumnOffset(window->DC.CurrentColumns->Current + 1) - window->WindowPadding.x;
    return mx;
}

// [Internal] Absolute coordinate. Saner. This is not exposed until we finishing refactoring work rect features.
ImVec2 ImGui::GetContentRegionMaxScreen()
{
    ImGuiWindow* window = GImGui->CurrentWindow;
    ImVec2 mx = window->ContentsRegionRect.Max;
    if (window->DC.CurrentColumns)
        mx.x = window->Pos.x + GetColumnOffset(window->DC.CurrentColumns->Current + 1) - window->WindowPadding.x;
    return mx;
}

ImVec2 ImGui::GetContentRegionAvail()
{
    ImGuiWindow* window = GImGui->CurrentWindow;
    return GetContentRegionMaxScreen() - window->DC.CursorPos;
}

float ImGui::GetContentRegionAvailWidth()
{
    return GetContentRegionAvail().x;
}

// In window space (not screen space!)
ImVec2 ImGui::GetWindowContentRegionMin()
{
    ImGuiWindow* window = GetCurrentWindowRead();
    return window->ContentsRegionRect.Min - window->Pos;
}

ImVec2 ImGui::GetWindowContentRegionMax()
{
    ImGuiWindow* window = GetCurrentWindowRead();
    return window->ContentsRegionRect.Max - window->Pos;
}

float ImGui::GetWindowContentRegionWidth()
{
    ImGuiWindow* window = GetCurrentWindowRead();
    return window->ContentsRegionRect.GetWidth();
}

float ImGui::GetTextLineHeight()
{
    ImGuiContext& g = *GImGui;
    return g.FontSize;
}

float ImGui::GetTextLineHeightWithSpacing()
{
    ImGuiContext& g = *GImGui;
    return g.FontSize + g.Style.ItemSpacing.y;
}

float ImGui::GetFrameHeight()
{
    ImGuiContext& g = *GImGui;
    return g.FontSize + g.Style.FramePadding.y * 2.0f;
}

float ImGui::GetFrameHeightWithSpacing()
{
    ImGuiContext& g = *GImGui;
    return g.FontSize + g.Style.FramePadding.y * 2.0f + g.Style.ItemSpacing.y;
}

ImDrawList* ImGui::GetWindowDrawList()
{
    ImGuiWindow* window = GetCurrentWindow();
    return window->DrawList;
}

ImFont* ImGui::GetFont()
{
    return GImGui->Font;
}

float ImGui::GetFontSize()
{
    return GImGui->FontSize;
}

ImVec2 ImGui::GetFontTexUvWhitePixel()
{
    return GImGui->DrawListSharedData.TexUvWhitePixel;
}

void ImGui::SetWindowFontScale(float scale)
{
    ImGuiContext& g = *GImGui;
    ImGuiWindow* window = GetCurrentWindow();
    window->FontWindowScale = scale;
    g.FontSize = g.DrawListSharedData.FontSize = window->CalcFontSize();
}

// User generally sees positions in window coordinates. Internally we store CursorPos in absolute screen coordinates because it is more convenient.
// Conversion happens as we pass the value to user, but it makes our naming convention confusing because GetCursorPos() == (DC.CursorPos - window.Pos). May want to rename 'DC.CursorPos'.
ImVec2 ImGui::GetCursorPos()
{
    ImGuiWindow* window = GetCurrentWindowRead();
    return window->DC.CursorPos - window->Pos + window->Scroll;
}

float ImGui::GetCursorPosX()
{
    ImGuiWindow* window = GetCurrentWindowRead();
    return window->DC.CursorPos.x - window->Pos.x + window->Scroll.x;
}

float ImGui::GetCursorPosY()
{
    ImGuiWindow* window = GetCurrentWindowRead();
    return window->DC.CursorPos.y - window->Pos.y + window->Scroll.y;
}

void ImGui::SetCursorPos(const ImVec2& local_pos)
{
    ImGuiWindow* window = GetCurrentWindow();
    window->DC.CursorPos = window->Pos - window->Scroll + local_pos;
    window->DC.CursorMaxPos = ImMax(window->DC.CursorMaxPos, window->DC.CursorPos);
}

void ImGui::SetCursorPosX(float x)
{
    ImGuiWindow* window = GetCurrentWindow();
    window->DC.CursorPos.x = window->Pos.x - window->Scroll.x + x;
    window->DC.CursorMaxPos.x = ImMax(window->DC.CursorMaxPos.x, window->DC.CursorPos.x);
}

void ImGui::SetCursorPosY(float y)
{
    ImGuiWindow* window = GetCurrentWindow();
    window->DC.CursorPos.y = window->Pos.y - window->Scroll.y + y;
    window->DC.CursorMaxPos.y = ImMax(window->DC.CursorMaxPos.y, window->DC.CursorPos.y);
}

ImVec2 ImGui::GetCursorStartPos()
{
    ImGuiWindow* window = GetCurrentWindowRead();
    return window->DC.CursorStartPos - window->Pos;
}

ImVec2 ImGui::GetCursorScreenPos()
{
    ImGuiWindow* window = GetCurrentWindowRead();
    return window->DC.CursorPos;
}

void ImGui::SetCursorScreenPos(const ImVec2& pos)
{
    ImGuiWindow* window = GetCurrentWindow();
    window->DC.CursorPos = pos;
    window->DC.CursorMaxPos = ImMax(window->DC.CursorMaxPos, window->DC.CursorPos);
}

float ImGui::GetScrollX()
{
    return GImGui->CurrentWindow->Scroll.x;
}

float ImGui::GetScrollY()
{
    return GImGui->CurrentWindow->Scroll.y;
}

float ImGui::GetScrollMaxX()
{
    return GetWindowScrollMaxX(GImGui->CurrentWindow);
}

float ImGui::GetScrollMaxY()
{
    return GetWindowScrollMaxY(GImGui->CurrentWindow);
}

void ImGui::SetScrollX(float scroll_x)
{
    ImGuiWindow* window = GetCurrentWindow();
    window->ScrollTarget.x = scroll_x;
    window->ScrollTargetCenterRatio.x = 0.0f;
}

void ImGui::SetScrollY(float scroll_y)
{
    ImGuiWindow* window = GetCurrentWindow();
    window->ScrollTarget.y = scroll_y + window->TitleBarHeight() + window->MenuBarHeight(); // title bar height canceled out when using ScrollTargetRelY
    window->ScrollTargetCenterRatio.y = 0.0f;
}

void ImGui::SetScrollFromPosY(float local_y, float center_y_ratio)
{
    // We store a target position so centering can occur on the next frame when we are guaranteed to have a known window size
    ImGuiWindow* window = GetCurrentWindow();
    IM_ASSERT(center_y_ratio >= 0.0f && center_y_ratio <= 1.0f);
    window->ScrollTarget.y = (float)(int)(local_y + window->Scroll.y);
    window->ScrollTargetCenterRatio.y = center_y_ratio;
}

// center_y_ratio: 0.0f top of last item, 0.5f vertical center of last item, 1.0f bottom of last item.
void ImGui::SetScrollHereY(float center_y_ratio)
{
    ImGuiWindow* window = GetCurrentWindow();
    float target_y = window->DC.CursorPosPrevLine.y - window->Pos.y; // Top of last item, in window space
    target_y += (window->DC.PrevLineSize.y * center_y_ratio) + (GImGui->Style.ItemSpacing.y * (center_y_ratio - 0.5f) * 2.0f); // Precisely aim above, in the middle or below the last line.
    SetScrollFromPosY(target_y, center_y_ratio);
}

void ImGui::ActivateItem(ImGuiID id)
{
    ImGuiContext& g = *GImGui;
    g.NavNextActivateId = id;
}

void ImGui::SetKeyboardFocusHere(int offset)
{
    IM_ASSERT(offset >= -1);    // -1 is allowed but not below
    ImGuiContext& g = *GImGui;
    ImGuiWindow* window = g.CurrentWindow;
    g.FocusRequestNextWindow = window;
    g.FocusRequestNextCounterAll = window->DC.FocusCounterAll + 1 + offset;
    g.FocusRequestNextCounterTab = INT_MAX;
}

void ImGui::SetItemDefaultFocus()
{
    ImGuiContext& g = *GImGui;
    ImGuiWindow* window = g.CurrentWindow;
    if (!window->Appearing)
        return;
    if (g.NavWindow == window->RootWindowForNav && (g.NavInitRequest || g.NavInitResultId != 0) && g.NavLayer == g.NavWindow->DC.NavLayerCurrent)
    {
        g.NavInitRequest = false;
        g.NavInitResultId = g.NavWindow->DC.LastItemId;
        g.NavInitResultRectRel = ImRect(g.NavWindow->DC.LastItemRect.Min - g.NavWindow->Pos, g.NavWindow->DC.LastItemRect.Max - g.NavWindow->Pos);
        NavUpdateAnyRequestFlag();
        if (!IsItemVisible())
            SetScrollHereY();
    }
}

void ImGui::SetStateStorage(ImGuiStorage* tree)
{
    ImGuiWindow* window = GImGui->CurrentWindow;
    window->DC.StateStorage = tree ? tree : &window->StateStorage;
}

ImGuiStorage* ImGui::GetStateStorage()
{
    ImGuiWindow* window = GImGui->CurrentWindow;
    return window->DC.StateStorage;
}

void ImGui::PushID(const char* str_id)
{
    ImGuiWindow* window = GImGui->CurrentWindow;
    window->IDStack.push_back(window->GetIDNoKeepAlive(str_id));
}

void ImGui::PushID(const char* str_id_begin, const char* str_id_end)
{
    ImGuiWindow* window = GImGui->CurrentWindow;
    window->IDStack.push_back(window->GetIDNoKeepAlive(str_id_begin, str_id_end));
}

void ImGui::PushID(const void* ptr_id)
{
    ImGuiWindow* window = GImGui->CurrentWindow;
    window->IDStack.push_back(window->GetIDNoKeepAlive(ptr_id));
}

void ImGui::PushID(int int_id)
{
    const void* ptr_id = (void*)(intptr_t)int_id;
    ImGuiWindow* window = GImGui->CurrentWindow;
    window->IDStack.push_back(window->GetIDNoKeepAlive(ptr_id));
}

// Push a given id value ignoring the ID stack as a seed.
void ImGui::PushOverrideID(ImGuiID id)
{
    ImGuiWindow* window = GImGui->CurrentWindow;
    window->IDStack.push_back(id);
}

void ImGui::PopID()
{
    ImGuiWindow* window = GImGui->CurrentWindow;
    window->IDStack.pop_back();
}

ImGuiID ImGui::GetID(const char* str_id)
{
    ImGuiWindow* window = GImGui->CurrentWindow;
    return window->GetID(str_id);
}

ImGuiID ImGui::GetID(const char* str_id_begin, const char* str_id_end)
{
    ImGuiWindow* window = GImGui->CurrentWindow;
    return window->GetID(str_id_begin, str_id_end);
}

ImGuiID ImGui::GetID(const void* ptr_id)
{
    ImGuiWindow* window = GImGui->CurrentWindow;
    return window->GetID(ptr_id);
}

bool ImGui::IsRectVisible(const ImVec2& size)
{
    ImGuiWindow* window = GImGui->CurrentWindow;
    return window->ClipRect.Overlaps(ImRect(window->DC.CursorPos, window->DC.CursorPos + size));
}

bool ImGui::IsRectVisible(const ImVec2& rect_min, const ImVec2& rect_max)
{
    ImGuiWindow* window = GImGui->CurrentWindow;
    return window->ClipRect.Overlaps(ImRect(rect_min, rect_max));
}

// Lock horizontal starting position + capture group bounding box into one "item" (so you can use IsItemHovered() or layout primitives such as SameLine() on whole group, etc.)
void ImGui::BeginGroup()
{
    ImGuiContext& g = *GImGui;
    ImGuiWindow* window = GetCurrentWindow();

    window->DC.GroupStack.resize(window->DC.GroupStack.Size + 1);
    ImGuiGroupData& group_data = window->DC.GroupStack.back();
    group_data.BackupCursorPos = window->DC.CursorPos;
    group_data.BackupCursorMaxPos = window->DC.CursorMaxPos;
    group_data.BackupIndent = window->DC.Indent;
    group_data.BackupGroupOffset = window->DC.GroupOffset;
    group_data.BackupCurrentLineSize = window->DC.CurrentLineSize;
    group_data.BackupCurrentLineTextBaseOffset = window->DC.CurrentLineTextBaseOffset;
    group_data.BackupActiveIdIsAlive = g.ActiveIdIsAlive;
    group_data.BackupActiveIdPreviousFrameIsAlive = g.ActiveIdPreviousFrameIsAlive;
    group_data.AdvanceCursor = true;

    window->DC.GroupOffset.x = window->DC.CursorPos.x - window->Pos.x - window->DC.ColumnsOffset.x;
    window->DC.Indent = window->DC.GroupOffset;
    window->DC.CursorMaxPos = window->DC.CursorPos;
    window->DC.CurrentLineSize = ImVec2(0.0f, 0.0f);
    if (g.LogEnabled)
        g.LogLinePosY = -FLT_MAX; // To enforce Log carriage return
}

void ImGui::EndGroup()
{
    ImGuiContext& g = *GImGui;
    ImGuiWindow* window = GetCurrentWindow();
    IM_ASSERT(!window->DC.GroupStack.empty());  // Mismatched BeginGroup()/EndGroup() calls

    ImGuiGroupData& group_data = window->DC.GroupStack.back();

    ImRect group_bb(group_data.BackupCursorPos, window->DC.CursorMaxPos);
    group_bb.Max = ImMax(group_bb.Min, group_bb.Max);

    window->DC.CursorPos = group_data.BackupCursorPos;
    window->DC.CursorMaxPos = ImMax(group_data.BackupCursorMaxPos, window->DC.CursorMaxPos);
    window->DC.Indent = group_data.BackupIndent;
    window->DC.GroupOffset = group_data.BackupGroupOffset;
    window->DC.CurrentLineSize = group_data.BackupCurrentLineSize;
    window->DC.CurrentLineTextBaseOffset = group_data.BackupCurrentLineTextBaseOffset;
    if (g.LogEnabled)
        g.LogLinePosY = -FLT_MAX; // To enforce Log carriage return

    if (group_data.AdvanceCursor)
    {
        window->DC.CurrentLineTextBaseOffset = ImMax(window->DC.PrevLineTextBaseOffset, group_data.BackupCurrentLineTextBaseOffset);      // FIXME: Incorrect, we should grab the base offset from the *first line* of the group but it is hard to obtain now.
        ItemSize(group_bb.GetSize(), 0.0f);
        ItemAdd(group_bb, 0);
    }

    // If the current ActiveId was declared within the boundary of our group, we copy it to LastItemId so IsItemActive(), IsItemDeactivated() etc. will be functional on the entire group.
    // It would be be neater if we replaced window.DC.LastItemId by e.g. 'bool LastItemIsActive', but would put a little more burden on individual widgets.
    // (and if you grep for LastItemId you'll notice it is only used in that context.
    if ((group_data.BackupActiveIdIsAlive != g.ActiveId) && (g.ActiveIdIsAlive == g.ActiveId) && g.ActiveId) // && g.ActiveIdWindow->RootWindow == window->RootWindow)
        window->DC.LastItemId = g.ActiveId;
    else if (!group_data.BackupActiveIdPreviousFrameIsAlive && g.ActiveIdPreviousFrameIsAlive) // && g.ActiveIdPreviousFrameWindow->RootWindow == window->RootWindow)
        window->DC.LastItemId = g.ActiveIdPreviousFrame;
    window->DC.LastItemRect = group_bb;

    window->DC.GroupStack.pop_back();

    //window->DrawList->AddRect(group_bb.Min, group_bb.Max, IM_COL32(255,0,255,255));   // [Debug]
}

// Gets back to previous line and continue with horizontal layout
//      offset_from_start_x == 0 : follow right after previous item
//      offset_from_start_x != 0 : align to specified x position (relative to window/group left)
//      spacing_w < 0            : use default spacing if pos_x == 0, no spacing if pos_x != 0
//      spacing_w >= 0           : enforce spacing amount
void ImGui::SameLine(float offset_from_start_x, float spacing_w)
{
    ImGuiWindow* window = GetCurrentWindow();
    if (window->SkipItems)
        return;

    ImGuiContext& g = *GImGui;
    if (offset_from_start_x != 0.0f)
    {
        if (spacing_w < 0.0f) spacing_w = 0.0f;
        window->DC.CursorPos.x = window->Pos.x - window->Scroll.x + offset_from_start_x + spacing_w + window->DC.GroupOffset.x + window->DC.ColumnsOffset.x;
        window->DC.CursorPos.y = window->DC.CursorPosPrevLine.y;
    }
    else
    {
        if (spacing_w < 0.0f) spacing_w = g.Style.ItemSpacing.x;
        window->DC.CursorPos.x = window->DC.CursorPosPrevLine.x + spacing_w;
        window->DC.CursorPos.y = window->DC.CursorPosPrevLine.y;
    }
    window->DC.CurrentLineSize = window->DC.PrevLineSize;
    window->DC.CurrentLineTextBaseOffset = window->DC.PrevLineTextBaseOffset;
}

void ImGui::Indent(float indent_w)
{
    ImGuiContext& g = *GImGui;
    ImGuiWindow* window = GetCurrentWindow();
    window->DC.Indent.x += (indent_w != 0.0f) ? indent_w : g.Style.IndentSpacing;
    window->DC.CursorPos.x = window->Pos.x + window->DC.Indent.x + window->DC.ColumnsOffset.x;
}

void ImGui::Unindent(float indent_w)
{
    ImGuiContext& g = *GImGui;
    ImGuiWindow* window = GetCurrentWindow();
    window->DC.Indent.x -= (indent_w != 0.0f) ? indent_w : g.Style.IndentSpacing;
    window->DC.CursorPos.x = window->Pos.x + window->DC.Indent.x + window->DC.ColumnsOffset.x;
}

//-----------------------------------------------------------------------------
// [SECTION] TOOLTIPS
//-----------------------------------------------------------------------------

void ImGui::BeginTooltip()
{
    ImGuiContext& g = *GImGui;
    if (g.DragDropWithinSourceOrTarget)
    {
        // The default tooltip position is a little offset to give space to see the context menu (it's also clamped within the current viewport/monitor)
        // In the context of a dragging tooltip we try to reduce that offset and we enforce following the cursor.
        // Whatever we do we want to call SetNextWindowPos() to enforce a tooltip position and disable clipping the tooltip without our display area, like regular tooltip do.
        //ImVec2 tooltip_pos = g.IO.MousePos - g.ActiveIdClickOffset - g.Style.WindowPadding;
        ImVec2 tooltip_pos = g.IO.MousePos + ImVec2(16 * g.Style.MouseCursorScale, 8 * g.Style.MouseCursorScale);
        SetNextWindowPos(tooltip_pos);
        SetNextWindowBgAlpha(g.Style.Colors[ImGuiCol_PopupBg].w * 0.60f);
        //PushStyleVar(ImGuiStyleVar_Alpha, g.Style.Alpha * 0.60f); // This would be nice but e.g ColorButton with checkboard has issue with transparent colors :(
        BeginTooltipEx(0, true);
    }
    else
    {
        BeginTooltipEx(0, false);
    }
}

// Not exposed publicly as BeginTooltip() because bool parameters are evil. Let's see if other needs arise first.
void ImGui::BeginTooltipEx(ImGuiWindowFlags extra_flags, bool override_previous_tooltip)
{
    ImGuiContext& g = *GImGui;
    char window_name[16];
    ImFormatString(window_name, IM_ARRAYSIZE(window_name), "##Tooltip_%02d", g.TooltipOverrideCount);
    if (override_previous_tooltip)
        if (ImGuiWindow* window = FindWindowByName(window_name))
            if (window->Active)
            {
                // Hide previous tooltip from being displayed. We can't easily "reset" the content of a window so we create a new one.
                window->Hidden = true;
                window->HiddenFramesCanSkipItems = 1;
                ImFormatString(window_name, IM_ARRAYSIZE(window_name), "##Tooltip_%02d", ++g.TooltipOverrideCount);
            }
    ImGuiWindowFlags flags = ImGuiWindowFlags_Tooltip|ImGuiWindowFlags_NoInputs|ImGuiWindowFlags_NoTitleBar|ImGuiWindowFlags_NoMove|ImGuiWindowFlags_NoResize|ImGuiWindowFlags_NoSavedSettings|ImGuiWindowFlags_AlwaysAutoResize;
    Begin(window_name, NULL, flags | extra_flags);
}

void ImGui::EndTooltip()
{
    IM_ASSERT(GetCurrentWindowRead()->Flags & ImGuiWindowFlags_Tooltip);   // Mismatched BeginTooltip()/EndTooltip() calls
    End();
}

void ImGui::SetTooltipV(const char* fmt, va_list args)
{
    ImGuiContext& g = *GImGui;
    if (g.DragDropWithinSourceOrTarget)
        BeginTooltip();
    else
        BeginTooltipEx(0, true);
    TextV(fmt, args);
    EndTooltip();
}

void ImGui::SetTooltip(const char* fmt, ...)
{
    va_list args;
    va_start(args, fmt);
    SetTooltipV(fmt, args);
    va_end(args);
}

//-----------------------------------------------------------------------------
// [SECTION] POPUPS
//-----------------------------------------------------------------------------

bool ImGui::IsPopupOpen(ImGuiID id)
{
    ImGuiContext& g = *GImGui;
    return g.OpenPopupStack.Size > g.BeginPopupStack.Size && g.OpenPopupStack[g.BeginPopupStack.Size].PopupId == id;
}

bool ImGui::IsPopupOpen(const char* str_id)
{
    ImGuiContext& g = *GImGui;
    return g.OpenPopupStack.Size > g.BeginPopupStack.Size && g.OpenPopupStack[g.BeginPopupStack.Size].PopupId == g.CurrentWindow->GetID(str_id);
}

ImGuiWindow* ImGui::GetFrontMostPopupModal()
{
    ImGuiContext& g = *GImGui;
    for (int n = g.OpenPopupStack.Size-1; n >= 0; n--)
        if (ImGuiWindow* popup = g.OpenPopupStack.Data[n].Window)
            if (popup->Flags & ImGuiWindowFlags_Modal)
                return popup;
    return NULL;
}

void ImGui::OpenPopup(const char* str_id)
{
    ImGuiContext& g = *GImGui;
    OpenPopupEx(g.CurrentWindow->GetID(str_id));
}

// Mark popup as open (toggle toward open state).
// Popups are closed when user click outside, or activate a pressable item, or CloseCurrentPopup() is called within a BeginPopup()/EndPopup() block.
// Popup identifiers are relative to the current ID-stack (so OpenPopup and BeginPopup needs to be at the same level).
// One open popup per level of the popup hierarchy (NB: when assigning we reset the Window member of ImGuiPopupRef to NULL)
void ImGui::OpenPopupEx(ImGuiID id)
{
    ImGuiContext& g = *GImGui;
    ImGuiWindow* parent_window = g.CurrentWindow;
    int current_stack_size = g.BeginPopupStack.Size;
    ImGuiPopupRef popup_ref; // Tagged as new ref as Window will be set back to NULL if we write this into OpenPopupStack.
    popup_ref.PopupId = id;
    popup_ref.Window = NULL;
    popup_ref.ParentWindow = parent_window;
    popup_ref.OpenFrameCount = g.FrameCount;
    popup_ref.OpenParentId = parent_window->IDStack.back();
    popup_ref.OpenPopupPos = NavCalcPreferredRefPos();
    popup_ref.OpenMousePos = IsMousePosValid(&g.IO.MousePos) ? g.IO.MousePos : popup_ref.OpenPopupPos;

    //IMGUI_DEBUG_LOG("OpenPopupEx(0x%08X)\n", g.FrameCount, id);
    if (g.OpenPopupStack.Size < current_stack_size + 1)
    {
        g.OpenPopupStack.push_back(popup_ref);
    }
    else
    {
        // Gently handle the user mistakenly calling OpenPopup() every frame. It is a programming mistake! However, if we were to run the regular code path, the ui
        // would become completely unusable because the popup will always be in hidden-while-calculating-size state _while_ claiming focus. Which would be a very confusing
        // situation for the programmer. Instead, we silently allow the popup to proceed, it will keep reappearing and the programming error will be more obvious to understand.
        if (g.OpenPopupStack[current_stack_size].PopupId == id && g.OpenPopupStack[current_stack_size].OpenFrameCount == g.FrameCount - 1)
        {
            g.OpenPopupStack[current_stack_size].OpenFrameCount = popup_ref.OpenFrameCount;
        }
        else
        {
            // Close child popups if any, then flag popup for open/reopen
            g.OpenPopupStack.resize(current_stack_size + 1);
            g.OpenPopupStack[current_stack_size] = popup_ref;
        }

        // When reopening a popup we first refocus its parent, otherwise if its parent is itself a popup it would get closed by ClosePopupsOverWindow().
        // This is equivalent to what ClosePopupToLevel() does.
        //if (g.OpenPopupStack[current_stack_size].PopupId == id)
        //    FocusWindow(parent_window);
    }
}

bool ImGui::OpenPopupOnItemClick(const char* str_id, int mouse_button)
{
    ImGuiWindow* window = GImGui->CurrentWindow;
    if (IsMouseReleased(mouse_button) && IsItemHovered(ImGuiHoveredFlags_AllowWhenBlockedByPopup))
    {
        ImGuiID id = str_id ? window->GetID(str_id) : window->DC.LastItemId; // If user hasn't passed an ID, we can use the LastItemID. Using LastItemID as a Popup ID won't conflict!
        IM_ASSERT(id != 0);                                                  // You cannot pass a NULL str_id if the last item has no identifier (e.g. a Text() item)
        OpenPopupEx(id);
        return true;
    }
    return false;
}

void ImGui::ClosePopupsOverWindow(ImGuiWindow* ref_window)
{
    ImGuiContext& g = *GImGui;
    if (g.OpenPopupStack.empty())
        return;

    // When popups are stacked, clicking on a lower level popups puts focus back to it and close popups above it.
    // Don't close our own child popup windows.
    int popup_count_to_keep = 0;
    if (ref_window)
    {
        // Find the highest popup which is a descendant of the reference window (generally reference window = NavWindow)
        for (; popup_count_to_keep < g.OpenPopupStack.Size; popup_count_to_keep++)
        {
            ImGuiPopupRef& popup = g.OpenPopupStack[popup_count_to_keep];
            if (!popup.Window)
                continue;
            IM_ASSERT((popup.Window->Flags & ImGuiWindowFlags_Popup) != 0);
            if (popup.Window->Flags & ImGuiWindowFlags_ChildWindow)
                continue;

            // Trim the stack if popups are not direct descendant of the reference window (which is often the NavWindow)
            bool popup_or_descendent_has_focus = false;
            for (int m = popup_count_to_keep; m < g.OpenPopupStack.Size && !popup_or_descendent_has_focus; m++)
                if (g.OpenPopupStack[m].Window && g.OpenPopupStack[m].Window->RootWindow == ref_window->RootWindow)
                    popup_or_descendent_has_focus = true;
            if (!popup_or_descendent_has_focus)
                break;
        }
    }
    if (popup_count_to_keep < g.OpenPopupStack.Size) // This test is not required but it allows to set a convenient breakpoint on the statement below
    {
        //IMGUI_DEBUG_LOG("ClosePopupsOverWindow(%s) -> ClosePopupToLevel(%d)\n", ref_window->Name, popup_count_to_keep);
        ClosePopupToLevel(popup_count_to_keep, false);
    }
}

void ImGui::ClosePopupToLevel(int remaining, bool apply_focus_to_window_under)
{
    IM_ASSERT(remaining >= 0);
    ImGuiContext& g = *GImGui;
    ImGuiWindow* focus_window = (remaining > 0) ? g.OpenPopupStack[remaining-1].Window : g.OpenPopupStack[0].ParentWindow;
    g.OpenPopupStack.resize(remaining);

    // FIXME: This code is faulty and we may want to eventually to replace or remove the 'apply_focus_to_window_under=true' path completely.
    // Instead of using g.OpenPopupStack[remaining-1].Window etc. we should find the highest root window that is behind the popups we are closing.
    // The current code will set focus to the parent of the popup window which is incorrect.
    // It rarely manifested until now because UpdateMouseMovingWindowNewFrame() would call FocusWindow() again on the clicked window,
    // leading to a chain of focusing A (clicked window) then B (parent window of the popup) then A again.
    // However if the clicked window has the _NoMove flag set we would be left with B focused.
    // For now, we have disabled this path when called from ClosePopupsOverWindow() because the users of ClosePopupsOverWindow() don't need to alter focus anyway,
    // but we should inspect and fix this properly.
    if (apply_focus_to_window_under)
    {
        if (g.NavLayer == 0)
            focus_window = NavRestoreLastChildNavWindow(focus_window);
        FocusWindow(focus_window);
    }
}

// Close the popup we have begin-ed into.
void ImGui::CloseCurrentPopup()
{
    ImGuiContext& g = *GImGui;
    int popup_idx = g.BeginPopupStack.Size - 1;
    if (popup_idx < 0 || popup_idx >= g.OpenPopupStack.Size || g.BeginPopupStack[popup_idx].PopupId != g.OpenPopupStack[popup_idx].PopupId)
        return;

    // Closing a menu closes its top-most parent popup (unless a modal)
    while (popup_idx > 0)
    {
        ImGuiWindow* popup_window = g.OpenPopupStack[popup_idx].Window;
        ImGuiWindow* parent_popup_window = g.OpenPopupStack[popup_idx - 1].Window;
        bool close_parent = false;
        if (popup_window && (popup_window->Flags & ImGuiWindowFlags_ChildMenu))
            if (parent_popup_window == NULL || !(parent_popup_window->Flags & ImGuiWindowFlags_Modal))
                close_parent = true;
        if (!close_parent)
            break;
        popup_idx--;
    }
    //IMGUI_DEBUG_LOG("CloseCurrentPopup %d -> %d\n", g.BeginPopupStack.Size - 1, popup_idx);
    ClosePopupToLevel(popup_idx, true);

    // A common pattern is to close a popup when selecting a menu item/selectable that will open another window.
    // To improve this usage pattern, we avoid nav highlight for a single frame in the parent window.
    // Similarly, we could avoid mouse hover highlight in this window but it is less visually problematic.
    if (ImGuiWindow* window = g.NavWindow)
        window->DC.NavHideHighlightOneFrame = true;
}

bool ImGui::BeginPopupEx(ImGuiID id, ImGuiWindowFlags extra_flags)
{
    ImGuiContext& g = *GImGui;
    if (!IsPopupOpen(id))
    {
        g.NextWindowData.Clear(); // We behave like Begin() and need to consume those values
        return false;
    }

    char name[20];
    if (extra_flags & ImGuiWindowFlags_ChildMenu)
        ImFormatString(name, IM_ARRAYSIZE(name), "##Menu_%02d", g.BeginPopupStack.Size); // Recycle windows based on depth
    else
        ImFormatString(name, IM_ARRAYSIZE(name), "##Popup_%08x", id); // Not recycling, so we can close/open during the same frame

    bool is_open = Begin(name, NULL, extra_flags | ImGuiWindowFlags_Popup);
    if (!is_open) // NB: Begin can return false when the popup is completely clipped (e.g. zero size display)
        EndPopup();

    return is_open;
}

bool ImGui::BeginPopup(const char* str_id, ImGuiWindowFlags flags)
{
    ImGuiContext& g = *GImGui;
    if (g.OpenPopupStack.Size <= g.BeginPopupStack.Size) // Early out for performance
    {
        g.NextWindowData.Clear(); // We behave like Begin() and need to consume those values
        return false;
    }
    flags |= ImGuiWindowFlags_AlwaysAutoResize | ImGuiWindowFlags_NoTitleBar | ImGuiWindowFlags_NoSavedSettings;
    return BeginPopupEx(g.CurrentWindow->GetID(str_id), flags);
}

// If 'p_open' is specified for a modal popup window, the popup will have a regular close button which will close the popup.
// Note that popup visibility status is owned by imgui (and manipulated with e.g. OpenPopup) so the actual value of *p_open is meaningless here.
bool ImGui::BeginPopupModal(const char* name, bool* p_open, ImGuiWindowFlags flags)
{
    ImGuiContext& g = *GImGui;
    ImGuiWindow* window = g.CurrentWindow;
    const ImGuiID id = window->GetID(name);
    if (!IsPopupOpen(id))
    {
        g.NextWindowData.Clear(); // We behave like Begin() and need to consume those values
        return false;
    }

    // Center modal windows by default
    // FIXME: Should test for (PosCond & window->SetWindowPosAllowFlags) with the upcoming window.
    if (g.NextWindowData.PosCond == 0)
        SetNextWindowPos(g.IO.DisplaySize * 0.5f, ImGuiCond_Appearing, ImVec2(0.5f, 0.5f));

    flags |= ImGuiWindowFlags_Popup | ImGuiWindowFlags_Modal | ImGuiWindowFlags_NoCollapse | ImGuiWindowFlags_NoSavedSettings;
    const bool is_open = Begin(name, p_open, flags);
    if (!is_open || (p_open && !*p_open)) // NB: is_open can be 'false' when the popup is completely clipped (e.g. zero size display)
    {
        EndPopup();
        if (is_open)
            ClosePopupToLevel(g.BeginPopupStack.Size, true);
        return false;
    }
    return is_open;
}

void ImGui::EndPopup()
{
    ImGuiContext& g = *GImGui;
    IM_ASSERT(g.CurrentWindow->Flags & ImGuiWindowFlags_Popup);  // Mismatched BeginPopup()/EndPopup() calls
    IM_ASSERT(g.BeginPopupStack.Size > 0);

    // Make all menus and popups wrap around for now, may need to expose that policy.
    NavMoveRequestTryWrapping(g.CurrentWindow, ImGuiNavMoveFlags_LoopY);

    End();
}

// This is a helper to handle the simplest case of associating one named popup to one given widget.
// You may want to handle this on user side if you have specific needs (e.g. tweaking IsItemHovered() parameters).
// You can pass a NULL str_id to use the identifier of the last item.
bool ImGui::BeginPopupContextItem(const char* str_id, int mouse_button)
{
    ImGuiWindow* window = GImGui->CurrentWindow;
    ImGuiID id = str_id ? window->GetID(str_id) : window->DC.LastItemId; // If user hasn't passed an ID, we can use the LastItemID. Using LastItemID as a Popup ID won't conflict!
    IM_ASSERT(id != 0);                                                  // You cannot pass a NULL str_id if the last item has no identifier (e.g. a Text() item)
    if (IsMouseReleased(mouse_button) && IsItemHovered(ImGuiHoveredFlags_AllowWhenBlockedByPopup))
        OpenPopupEx(id);
    return BeginPopupEx(id, ImGuiWindowFlags_AlwaysAutoResize|ImGuiWindowFlags_NoTitleBar|ImGuiWindowFlags_NoSavedSettings);
}

bool ImGui::BeginPopupContextWindow(const char* str_id, int mouse_button, bool also_over_items)
{
    if (!str_id)
        str_id = "window_context";
    ImGuiID id = GImGui->CurrentWindow->GetID(str_id);
    if (IsMouseReleased(mouse_button) && IsWindowHovered(ImGuiHoveredFlags_AllowWhenBlockedByPopup))
        if (also_over_items || !IsAnyItemHovered())
            OpenPopupEx(id);
    return BeginPopupEx(id, ImGuiWindowFlags_AlwaysAutoResize|ImGuiWindowFlags_NoTitleBar|ImGuiWindowFlags_NoSavedSettings);
}

bool ImGui::BeginPopupContextVoid(const char* str_id, int mouse_button)
{
    if (!str_id)
        str_id = "void_context";
    ImGuiID id = GImGui->CurrentWindow->GetID(str_id);
    if (IsMouseReleased(mouse_button) && !IsWindowHovered(ImGuiHoveredFlags_AnyWindow))
        OpenPopupEx(id);
    return BeginPopupEx(id, ImGuiWindowFlags_AlwaysAutoResize|ImGuiWindowFlags_NoTitleBar|ImGuiWindowFlags_NoSavedSettings);
}

// r_avoid = the rectangle to avoid (e.g. for tooltip it is a rectangle around the mouse cursor which we want to avoid. for popups it's a small point around the cursor.)
// r_outer = the visible area rectangle, minus safe area padding. If our popup size won't fit because of safe area padding we ignore it.
ImVec2 ImGui::FindBestWindowPosForPopupEx(const ImVec2& ref_pos, const ImVec2& size, ImGuiDir* last_dir, const ImRect& r_outer, const ImRect& r_avoid, ImGuiPopupPositionPolicy policy)
{
    ImVec2 base_pos_clamped = ImClamp(ref_pos, r_outer.Min, r_outer.Max - size);
    //GetForegroundDrawList()->AddRect(r_avoid.Min, r_avoid.Max, IM_COL32(255,0,0,255));
    //GetForegroundDrawList()->AddRect(r_outer.Min, r_outer.Max, IM_COL32(0,255,0,255));

    // Combo Box policy (we want a connecting edge)
    if (policy == ImGuiPopupPositionPolicy_ComboBox)
    {
        const ImGuiDir dir_prefered_order[ImGuiDir_COUNT] = { ImGuiDir_Down, ImGuiDir_Right, ImGuiDir_Left, ImGuiDir_Up };
        for (int n = (*last_dir != ImGuiDir_None) ? -1 : 0; n < ImGuiDir_COUNT; n++)
        {
            const ImGuiDir dir = (n == -1) ? *last_dir : dir_prefered_order[n];
            if (n != -1 && dir == *last_dir) // Already tried this direction?
                continue;
            ImVec2 pos;
            if (dir == ImGuiDir_Down)  pos = ImVec2(r_avoid.Min.x, r_avoid.Max.y);          // Below, Toward Right (default)
            if (dir == ImGuiDir_Right) pos = ImVec2(r_avoid.Min.x, r_avoid.Min.y - size.y); // Above, Toward Right
            if (dir == ImGuiDir_Left)  pos = ImVec2(r_avoid.Max.x - size.x, r_avoid.Max.y); // Below, Toward Left
            if (dir == ImGuiDir_Up)    pos = ImVec2(r_avoid.Max.x - size.x, r_avoid.Min.y - size.y); // Above, Toward Left
            if (!r_outer.Contains(ImRect(pos, pos + size)))
                continue;
            *last_dir = dir;
            return pos;
        }
    }

    // Default popup policy
    const ImGuiDir dir_prefered_order[ImGuiDir_COUNT] = { ImGuiDir_Right, ImGuiDir_Down, ImGuiDir_Up, ImGuiDir_Left };
    for (int n = (*last_dir != ImGuiDir_None) ? -1 : 0; n < ImGuiDir_COUNT; n++)
    {
        const ImGuiDir dir = (n == -1) ? *last_dir : dir_prefered_order[n];
        if (n != -1 && dir == *last_dir) // Already tried this direction?
            continue;
        float avail_w = (dir == ImGuiDir_Left ? r_avoid.Min.x : r_outer.Max.x) - (dir == ImGuiDir_Right ? r_avoid.Max.x : r_outer.Min.x);
        float avail_h = (dir == ImGuiDir_Up ? r_avoid.Min.y : r_outer.Max.y) - (dir == ImGuiDir_Down ? r_avoid.Max.y : r_outer.Min.y);
        if (avail_w < size.x || avail_h < size.y)
            continue;
        ImVec2 pos;
        pos.x = (dir == ImGuiDir_Left) ? r_avoid.Min.x - size.x : (dir == ImGuiDir_Right) ? r_avoid.Max.x : base_pos_clamped.x;
        pos.y = (dir == ImGuiDir_Up)   ? r_avoid.Min.y - size.y : (dir == ImGuiDir_Down)  ? r_avoid.Max.y : base_pos_clamped.y;
        *last_dir = dir;
        return pos;
    }

    // Fallback, try to keep within display
    *last_dir = ImGuiDir_None;
    ImVec2 pos = ref_pos;
    pos.x = ImMax(ImMin(pos.x + size.x, r_outer.Max.x) - size.x, r_outer.Min.x);
    pos.y = ImMax(ImMin(pos.y + size.y, r_outer.Max.y) - size.y, r_outer.Min.y);
    return pos;
}

ImRect ImGui::GetWindowAllowedExtentRect(ImGuiWindow* window)
{
    IM_UNUSED(window);
    ImVec2 padding = GImGui->Style.DisplaySafeAreaPadding;
    ImRect r_screen = GetViewportRect();
    r_screen.Expand(ImVec2((r_screen.GetWidth() > padding.x * 2) ? -padding.x : 0.0f, (r_screen.GetHeight() > padding.y * 2) ? -padding.y : 0.0f));
    return r_screen;
}

ImVec2 ImGui::FindBestWindowPosForPopup(ImGuiWindow* window)
{
    ImGuiContext& g = *GImGui;

    ImRect r_outer = GetWindowAllowedExtentRect(window);
    if (window->Flags & ImGuiWindowFlags_ChildMenu)
    {
        // Child menus typically request _any_ position within the parent menu item, and then we move the new menu outside the parent bounds.
        // This is how we end up with child menus appearing (most-commonly) on the right of the parent menu.
        IM_ASSERT(g.CurrentWindow == window);
        ImGuiWindow* parent_window = g.CurrentWindowStack[g.CurrentWindowStack.Size - 2];
        float horizontal_overlap = g.Style.ItemInnerSpacing.x; // We want some overlap to convey the relative depth of each menu (currently the amount of overlap is hard-coded to style.ItemSpacing.x).
        ImRect r_avoid;
        if (parent_window->DC.MenuBarAppending)
            r_avoid = ImRect(-FLT_MAX, parent_window->Pos.y + parent_window->TitleBarHeight(), FLT_MAX, parent_window->Pos.y + parent_window->TitleBarHeight() + parent_window->MenuBarHeight());
        else
            r_avoid = ImRect(parent_window->Pos.x + horizontal_overlap, -FLT_MAX, parent_window->Pos.x + parent_window->Size.x - horizontal_overlap - parent_window->ScrollbarSizes.x, FLT_MAX);
        return FindBestWindowPosForPopupEx(window->Pos, window->Size, &window->AutoPosLastDirection, r_outer, r_avoid);
    }
    if (window->Flags & ImGuiWindowFlags_Popup)
    {
        ImRect r_avoid = ImRect(window->Pos.x - 1, window->Pos.y - 1, window->Pos.x + 1, window->Pos.y + 1);
        return FindBestWindowPosForPopupEx(window->Pos, window->Size, &window->AutoPosLastDirection, r_outer, r_avoid);
    }
    if (window->Flags & ImGuiWindowFlags_Tooltip)
    {
        // Position tooltip (always follows mouse)
        float sc = g.Style.MouseCursorScale;
        ImVec2 ref_pos = NavCalcPreferredRefPos();
        ImRect r_avoid;
        if (!g.NavDisableHighlight && g.NavDisableMouseHover && !(g.IO.ConfigFlags & ImGuiConfigFlags_NavEnableSetMousePos))
            r_avoid = ImRect(ref_pos.x - 16, ref_pos.y - 8, ref_pos.x + 16, ref_pos.y + 8);
        else
            r_avoid = ImRect(ref_pos.x - 16, ref_pos.y - 8, ref_pos.x + 24 * sc, ref_pos.y + 24 * sc); // FIXME: Hard-coded based on mouse cursor shape expectation. Exact dimension not very important.
        ImVec2 pos = FindBestWindowPosForPopupEx(ref_pos, window->Size, &window->AutoPosLastDirection, r_outer, r_avoid);
        if (window->AutoPosLastDirection == ImGuiDir_None)
            pos = ref_pos + ImVec2(2, 2); // If there's not enough room, for tooltip we prefer avoiding the cursor at all cost even if it means that part of the tooltip won't be visible.
        return pos;
    }
    IM_ASSERT(0);
    return window->Pos;
}


//-----------------------------------------------------------------------------
// [SECTION] KEYBOARD/GAMEPAD NAVIGATION
//-----------------------------------------------------------------------------

ImGuiDir ImGetDirQuadrantFromDelta(float dx, float dy)
{
    if (ImFabs(dx) > ImFabs(dy))
        return (dx > 0.0f) ? ImGuiDir_Right : ImGuiDir_Left;
    return (dy > 0.0f) ? ImGuiDir_Down : ImGuiDir_Up;
}

static float inline NavScoreItemDistInterval(float a0, float a1, float b0, float b1)
{
    if (a1 < b0)
        return a1 - b0;
    if (b1 < a0)
        return a0 - b1;
    return 0.0f;
}

static void inline NavClampRectToVisibleAreaForMoveDir(ImGuiDir move_dir, ImRect& r, const ImRect& clip_rect)
{
    if (move_dir == ImGuiDir_Left || move_dir == ImGuiDir_Right)
    {
        r.Min.y = ImClamp(r.Min.y, clip_rect.Min.y, clip_rect.Max.y);
        r.Max.y = ImClamp(r.Max.y, clip_rect.Min.y, clip_rect.Max.y);
    }
    else
    {
        r.Min.x = ImClamp(r.Min.x, clip_rect.Min.x, clip_rect.Max.x);
        r.Max.x = ImClamp(r.Max.x, clip_rect.Min.x, clip_rect.Max.x);
    }
}

// Scoring function for directional navigation. Based on https://gist.github.com/rygorous/6981057
static bool NavScoreItem(ImGuiNavMoveResult* result, ImRect cand)
{
    ImGuiContext& g = *GImGui;
    ImGuiWindow* window = g.CurrentWindow;
    if (g.NavLayer != window->DC.NavLayerCurrent)
        return false;

    const ImRect& curr = g.NavScoringRectScreen; // Current modified source rect (NB: we've applied Max.x = Min.x in NavUpdate() to inhibit the effect of having varied item width)
    g.NavScoringCount++;

    // When entering through a NavFlattened border, we consider child window items as fully clipped for scoring
    if (window->ParentWindow == g.NavWindow)
    {
        IM_ASSERT((window->Flags | g.NavWindow->Flags) & ImGuiWindowFlags_NavFlattened);
        if (!window->ClipRect.Contains(cand))
            return false;
        cand.ClipWithFull(window->ClipRect); // This allows the scored item to not overlap other candidates in the parent window
    }

    // We perform scoring on items bounding box clipped by the current clipping rectangle on the other axis (clipping on our movement axis would give us equal scores for all clipped items)
    // For example, this ensure that items in one column are not reached when moving vertically from items in another column.
    NavClampRectToVisibleAreaForMoveDir(g.NavMoveClipDir, cand, window->ClipRect);

    // Compute distance between boxes
    // FIXME-NAV: Introducing biases for vertical navigation, needs to be removed.
    float dbx = NavScoreItemDistInterval(cand.Min.x, cand.Max.x, curr.Min.x, curr.Max.x);
    float dby = NavScoreItemDistInterval(ImLerp(cand.Min.y, cand.Max.y, 0.2f), ImLerp(cand.Min.y, cand.Max.y, 0.8f), ImLerp(curr.Min.y, curr.Max.y, 0.2f), ImLerp(curr.Min.y, curr.Max.y, 0.8f)); // Scale down on Y to keep using box-distance for vertically touching items
    if (dby != 0.0f && dbx != 0.0f)
       dbx = (dbx/1000.0f) + ((dbx > 0.0f) ? +1.0f : -1.0f);
    float dist_box = ImFabs(dbx) + ImFabs(dby);

    // Compute distance between centers (this is off by a factor of 2, but we only compare center distances with each other so it doesn't matter)
    float dcx = (cand.Min.x + cand.Max.x) - (curr.Min.x + curr.Max.x);
    float dcy = (cand.Min.y + cand.Max.y) - (curr.Min.y + curr.Max.y);
    float dist_center = ImFabs(dcx) + ImFabs(dcy); // L1 metric (need this for our connectedness guarantee)

    // Determine which quadrant of 'curr' our candidate item 'cand' lies in based on distance
    ImGuiDir quadrant;
    float dax = 0.0f, day = 0.0f, dist_axial = 0.0f;
    if (dbx != 0.0f || dby != 0.0f)
    {
        // For non-overlapping boxes, use distance between boxes
        dax = dbx;
        day = dby;
        dist_axial = dist_box;
        quadrant = ImGetDirQuadrantFromDelta(dbx, dby);
    }
    else if (dcx != 0.0f || dcy != 0.0f)
    {
        // For overlapping boxes with different centers, use distance between centers
        dax = dcx;
        day = dcy;
        dist_axial = dist_center;
        quadrant = ImGetDirQuadrantFromDelta(dcx, dcy);
    }
    else
    {
        // Degenerate case: two overlapping buttons with same center, break ties arbitrarily (note that LastItemId here is really the _previous_ item order, but it doesn't matter)
        quadrant = (window->DC.LastItemId < g.NavId) ? ImGuiDir_Left : ImGuiDir_Right;
    }

#if IMGUI_DEBUG_NAV_SCORING
    char buf[128];
    if (ImGui::IsMouseHoveringRect(cand.Min, cand.Max))
    {
        ImFormatString(buf, IM_ARRAYSIZE(buf), "dbox (%.2f,%.2f->%.4f)\ndcen (%.2f,%.2f->%.4f)\nd (%.2f,%.2f->%.4f)\nnav %c, quadrant %c", dbx, dby, dist_box, dcx, dcy, dist_center, dax, day, dist_axial, "WENS"[g.NavMoveDir], "WENS"[quadrant]);
        ImDrawList* draw_list = ImGui::GetForegroundDrawList(window);
        draw_list->AddRect(curr.Min, curr.Max, IM_COL32(255,200,0,100));
        draw_list->AddRect(cand.Min, cand.Max, IM_COL32(255,255,0,200));
        draw_list->AddRectFilled(cand.Max-ImVec2(4,4), cand.Max+ImGui::CalcTextSize(buf)+ImVec2(4,4), IM_COL32(40,0,0,150));
        draw_list->AddText(g.IO.FontDefault, 13.0f, cand.Max, ~0U, buf);
    }
    else if (g.IO.KeyCtrl) // Hold to preview score in matching quadrant. Press C to rotate.
    {
        if (ImGui::IsKeyPressedMap(ImGuiKey_C)) { g.NavMoveDirLast = (ImGuiDir)((g.NavMoveDirLast + 1) & 3); g.IO.KeysDownDuration[g.IO.KeyMap[ImGuiKey_C]] = 0.01f; }
        if (quadrant == g.NavMoveDir)
        {
            ImFormatString(buf, IM_ARRAYSIZE(buf), "%.0f/%.0f", dist_box, dist_center);
            ImDrawList* draw_list = ImGui::GetForegroundDrawList(window);
            draw_list->AddRectFilled(cand.Min, cand.Max, IM_COL32(255, 0, 0, 200));
            draw_list->AddText(g.IO.FontDefault, 13.0f, cand.Min, IM_COL32(255, 255, 255, 255), buf);
        }
    }
 #endif

    // Is it in the quadrant we're interesting in moving to?
    bool new_best = false;
    if (quadrant == g.NavMoveDir)
    {
        // Does it beat the current best candidate?
        if (dist_box < result->DistBox)
        {
            result->DistBox = dist_box;
            result->DistCenter = dist_center;
            return true;
        }
        if (dist_box == result->DistBox)
        {
            // Try using distance between center points to break ties
            if (dist_center < result->DistCenter)
            {
                result->DistCenter = dist_center;
                new_best = true;
            }
            else if (dist_center == result->DistCenter)
            {
                // Still tied! we need to be extra-careful to make sure everything gets linked properly. We consistently break ties by symbolically moving "later" items
                // (with higher index) to the right/downwards by an infinitesimal amount since we the current "best" button already (so it must have a lower index),
                // this is fairly easy. This rule ensures that all buttons with dx==dy==0 will end up being linked in order of appearance along the x axis.
                if (((g.NavMoveDir == ImGuiDir_Up || g.NavMoveDir == ImGuiDir_Down) ? dby : dbx) < 0.0f) // moving bj to the right/down decreases distance
                    new_best = true;
            }
        }
    }

    // Axial check: if 'curr' has no link at all in some direction and 'cand' lies roughly in that direction, add a tentative link. This will only be kept if no "real" matches
    // are found, so it only augments the graph produced by the above method using extra links. (important, since it doesn't guarantee strong connectedness)
    // This is just to avoid buttons having no links in a particular direction when there's a suitable neighbor. you get good graphs without this too.
    // 2017/09/29: FIXME: This now currently only enabled inside menu bars, ideally we'd disable it everywhere. Menus in particular need to catch failure. For general navigation it feels awkward.
    // Disabling it may lead to disconnected graphs when nodes are very spaced out on different axis. Perhaps consider offering this as an option?
    if (result->DistBox == FLT_MAX && dist_axial < result->DistAxial)  // Check axial match
        if (g.NavLayer == 1 && !(g.NavWindow->Flags & ImGuiWindowFlags_ChildMenu))
            if ((g.NavMoveDir == ImGuiDir_Left && dax < 0.0f) || (g.NavMoveDir == ImGuiDir_Right && dax > 0.0f) || (g.NavMoveDir == ImGuiDir_Up && day < 0.0f) || (g.NavMoveDir == ImGuiDir_Down && day > 0.0f))
            {
                result->DistAxial = dist_axial;
                new_best = true;
            }

    return new_best;
}

// We get there when either NavId == id, or when g.NavAnyRequest is set (which is updated by NavUpdateAnyRequestFlag above)
static void ImGui::NavProcessItem(ImGuiWindow* window, const ImRect& nav_bb, const ImGuiID id)
{
    ImGuiContext& g = *GImGui;
    //if (!g.IO.NavActive)  // [2017/10/06] Removed this possibly redundant test but I am not sure of all the side-effects yet. Some of the feature here will need to work regardless of using a _NoNavInputs flag.
    //    return;

    const ImGuiItemFlags item_flags = window->DC.ItemFlags;
    const ImRect nav_bb_rel(nav_bb.Min - window->Pos, nav_bb.Max - window->Pos);

    // Process Init Request
    if (g.NavInitRequest && g.NavLayer == window->DC.NavLayerCurrent)
    {
        // Even if 'ImGuiItemFlags_NoNavDefaultFocus' is on (typically collapse/close button) we record the first ResultId so they can be used as a fallback
        if (!(item_flags & ImGuiItemFlags_NoNavDefaultFocus) || g.NavInitResultId == 0)
        {
            g.NavInitResultId = id;
            g.NavInitResultRectRel = nav_bb_rel;
        }
        if (!(item_flags & ImGuiItemFlags_NoNavDefaultFocus))
        {
            g.NavInitRequest = false; // Found a match, clear request
            NavUpdateAnyRequestFlag();
        }
    }

    // Process Move Request (scoring for navigation)
    // FIXME-NAV: Consider policy for double scoring (scoring from NavScoringRectScreen + scoring from a rect wrapped according to current wrapping policy)
    if ((g.NavId != id || (g.NavMoveRequestFlags & ImGuiNavMoveFlags_AllowCurrentNavId)) && !(item_flags & (ImGuiItemFlags_Disabled|ImGuiItemFlags_NoNav)))
    {
        ImGuiNavMoveResult* result = (window == g.NavWindow) ? &g.NavMoveResultLocal : &g.NavMoveResultOther;
#if IMGUI_DEBUG_NAV_SCORING
        // [DEBUG] Score all items in NavWindow at all times
        if (!g.NavMoveRequest)
            g.NavMoveDir = g.NavMoveDirLast;
        bool new_best = NavScoreItem(result, nav_bb) && g.NavMoveRequest;
#else
        bool new_best = g.NavMoveRequest && NavScoreItem(result, nav_bb);
#endif
        if (new_best)
        {
            result->ID = id;
            result->SelectScopeId = g.MultiSelectScopeId;
            result->Window = window;
            result->RectRel = nav_bb_rel;
        }

        const float VISIBLE_RATIO = 0.70f;
        if ((g.NavMoveRequestFlags & ImGuiNavMoveFlags_AlsoScoreVisibleSet) && window->ClipRect.Overlaps(nav_bb))
            if (ImClamp(nav_bb.Max.y, window->ClipRect.Min.y, window->ClipRect.Max.y) - ImClamp(nav_bb.Min.y, window->ClipRect.Min.y, window->ClipRect.Max.y) >= (nav_bb.Max.y - nav_bb.Min.y) * VISIBLE_RATIO)
                if (NavScoreItem(&g.NavMoveResultLocalVisibleSet, nav_bb))
                {
                    result = &g.NavMoveResultLocalVisibleSet;
                    result->ID = id;
                    result->SelectScopeId = g.MultiSelectScopeId;
                    result->Window = window;
                    result->RectRel = nav_bb_rel;
                }
    }

    // Update window-relative bounding box of navigated item
    if (g.NavId == id)
    {
        g.NavWindow = window;                                           // Always refresh g.NavWindow, because some operations such as FocusItem() don't have a window.
        g.NavLayer = window->DC.NavLayerCurrent;
        g.NavIdIsAlive = true;
        g.NavIdTabCounter = window->DC.FocusCounterTab;
        window->NavRectRel[window->DC.NavLayerCurrent] = nav_bb_rel;    // Store item bounding box (relative to window position)
    }
}

bool ImGui::NavMoveRequestButNoResultYet()
{
    ImGuiContext& g = *GImGui;
    return g.NavMoveRequest && g.NavMoveResultLocal.ID == 0 && g.NavMoveResultOther.ID == 0;
}

void ImGui::NavMoveRequestCancel()
{
    ImGuiContext& g = *GImGui;
    g.NavMoveRequest = false;
    NavUpdateAnyRequestFlag();
}

void ImGui::NavMoveRequestForward(ImGuiDir move_dir, ImGuiDir clip_dir, const ImRect& bb_rel, ImGuiNavMoveFlags move_flags)
{
    ImGuiContext& g = *GImGui;
    IM_ASSERT(g.NavMoveRequestForward == ImGuiNavForward_None);
    ImGui::NavMoveRequestCancel();
    g.NavMoveDir = move_dir;
    g.NavMoveClipDir = clip_dir;
    g.NavMoveRequestForward = ImGuiNavForward_ForwardQueued;
    g.NavMoveRequestFlags = move_flags;
    g.NavWindow->NavRectRel[g.NavLayer] = bb_rel;
}

void ImGui::NavMoveRequestTryWrapping(ImGuiWindow* window, ImGuiNavMoveFlags move_flags)
{
    ImGuiContext& g = *GImGui;
    if (g.NavWindow != window || !NavMoveRequestButNoResultYet() || g.NavMoveRequestForward != ImGuiNavForward_None || g.NavLayer != 0)
        return;
    IM_ASSERT(move_flags != 0); // No points calling this with no wrapping
    ImRect bb_rel = window->NavRectRel[0];

    ImGuiDir clip_dir = g.NavMoveDir;
    if (g.NavMoveDir == ImGuiDir_Left && (move_flags & (ImGuiNavMoveFlags_WrapX | ImGuiNavMoveFlags_LoopX)))
    {
        bb_rel.Min.x = bb_rel.Max.x = ImMax(window->SizeFull.x, window->SizeContents.x) - window->Scroll.x;
        if (move_flags & ImGuiNavMoveFlags_WrapX) { bb_rel.TranslateY(-bb_rel.GetHeight()); clip_dir = ImGuiDir_Up; }
        NavMoveRequestForward(g.NavMoveDir, clip_dir, bb_rel, move_flags);
    }
    if (g.NavMoveDir == ImGuiDir_Right && (move_flags & (ImGuiNavMoveFlags_WrapX | ImGuiNavMoveFlags_LoopX)))
    {
        bb_rel.Min.x = bb_rel.Max.x = -window->Scroll.x;
        if (move_flags & ImGuiNavMoveFlags_WrapX) { bb_rel.TranslateY(+bb_rel.GetHeight()); clip_dir = ImGuiDir_Down; }
        NavMoveRequestForward(g.NavMoveDir, clip_dir, bb_rel, move_flags);
    }
    if (g.NavMoveDir == ImGuiDir_Up && (move_flags & (ImGuiNavMoveFlags_WrapY | ImGuiNavMoveFlags_LoopY)))
    {
        bb_rel.Min.y = bb_rel.Max.y = ImMax(window->SizeFull.y, window->SizeContents.y) - window->Scroll.y;
        if (move_flags & ImGuiNavMoveFlags_WrapY) { bb_rel.TranslateX(-bb_rel.GetWidth()); clip_dir = ImGuiDir_Left; }
        NavMoveRequestForward(g.NavMoveDir, clip_dir, bb_rel, move_flags);
    }
    if (g.NavMoveDir == ImGuiDir_Down && (move_flags & (ImGuiNavMoveFlags_WrapY | ImGuiNavMoveFlags_LoopY)))
    {
        bb_rel.Min.y = bb_rel.Max.y = -window->Scroll.y;
        if (move_flags & ImGuiNavMoveFlags_WrapY) { bb_rel.TranslateX(+bb_rel.GetWidth()); clip_dir = ImGuiDir_Right; }
        NavMoveRequestForward(g.NavMoveDir, clip_dir, bb_rel, move_flags);
    }
}

// FIXME: This could be replaced by updating a frame number in each window when (window == NavWindow) and (NavLayer == 0).
// This way we could find the last focused window among our children. It would be much less confusing this way?
static void ImGui::NavSaveLastChildNavWindowIntoParent(ImGuiWindow* nav_window)
{
    ImGuiWindow* parent_window = nav_window;
    while (parent_window && (parent_window->Flags & ImGuiWindowFlags_ChildWindow) != 0 && (parent_window->Flags & (ImGuiWindowFlags_Popup | ImGuiWindowFlags_ChildMenu)) == 0)
        parent_window = parent_window->ParentWindow;
    if (parent_window && parent_window != nav_window)
        parent_window->NavLastChildNavWindow = nav_window;
}

// Restore the last focused child.
// Call when we are expected to land on the Main Layer (0) after FocusWindow()
static ImGuiWindow* ImGui::NavRestoreLastChildNavWindow(ImGuiWindow* window)
{
    return window->NavLastChildNavWindow ? window->NavLastChildNavWindow : window;
}

static void NavRestoreLayer(ImGuiNavLayer layer)
{
    ImGuiContext& g = *GImGui;
    g.NavLayer = layer;
    if (layer == 0)
        g.NavWindow = ImGui::NavRestoreLastChildNavWindow(g.NavWindow);
    if (layer == 0 && g.NavWindow->NavLastIds[0] != 0)
        ImGui::SetNavIDWithRectRel(g.NavWindow->NavLastIds[0], layer, g.NavWindow->NavRectRel[0]);
    else
        ImGui::NavInitWindow(g.NavWindow, true);
}

static inline void ImGui::NavUpdateAnyRequestFlag()
{
    ImGuiContext& g = *GImGui;
    g.NavAnyRequest = g.NavMoveRequest || g.NavInitRequest || (IMGUI_DEBUG_NAV_SCORING && g.NavWindow != NULL);
    if (g.NavAnyRequest)
        IM_ASSERT(g.NavWindow != NULL);
}

// This needs to be called before we submit any widget (aka in or before Begin)
void ImGui::NavInitWindow(ImGuiWindow* window, bool force_reinit)
{
    ImGuiContext& g = *GImGui;
    IM_ASSERT(window == g.NavWindow);
    bool init_for_nav = false;
    if (!(window->Flags & ImGuiWindowFlags_NoNavInputs))
        if (!(window->Flags & ImGuiWindowFlags_ChildWindow) || (window->Flags & ImGuiWindowFlags_Popup) || (window->NavLastIds[0] == 0) || force_reinit)
            init_for_nav = true;
    if (init_for_nav)
    {
        SetNavID(0, g.NavLayer);
        g.NavInitRequest = true;
        g.NavInitRequestFromMove = false;
        g.NavInitResultId = 0;
        g.NavInitResultRectRel = ImRect();
        NavUpdateAnyRequestFlag();
    }
    else
    {
        g.NavId = window->NavLastIds[0];
    }
}

static ImVec2 ImGui::NavCalcPreferredRefPos()
{
    ImGuiContext& g = *GImGui;
    if (g.NavDisableHighlight || !g.NavDisableMouseHover || !g.NavWindow)
    {
        // Mouse (we need a fallback in case the mouse becomes invalid after being used)
        if (IsMousePosValid(&g.IO.MousePos))
            return g.IO.MousePos;
        return g.LastValidMousePos;
    }
    else
    {
        // When navigation is active and mouse is disabled, decide on an arbitrary position around the bottom left of the currently navigated item.
        const ImRect& rect_rel = g.NavWindow->NavRectRel[g.NavLayer];
        ImVec2 pos = g.NavWindow->Pos + ImVec2(rect_rel.Min.x + ImMin(g.Style.FramePadding.x * 4, rect_rel.GetWidth()), rect_rel.Max.y - ImMin(g.Style.FramePadding.y, rect_rel.GetHeight()));
        ImRect visible_rect = GetViewportRect();
        return ImFloor(ImClamp(pos, visible_rect.Min, visible_rect.Max));   // ImFloor() is important because non-integer mouse position application in back-end might be lossy and result in undesirable non-zero delta.
    }
}

float ImGui::GetNavInputAmount(ImGuiNavInput n, ImGuiInputReadMode mode)
{
    ImGuiContext& g = *GImGui;
    if (mode == ImGuiInputReadMode_Down)
        return g.IO.NavInputs[n];                         // Instant, read analog input (0.0f..1.0f, as provided by user)

    const float t = g.IO.NavInputsDownDuration[n];
    if (t < 0.0f && mode == ImGuiInputReadMode_Released)  // Return 1.0f when just released, no repeat, ignore analog input.
        return (g.IO.NavInputsDownDurationPrev[n] >= 0.0f ? 1.0f : 0.0f);
    if (t < 0.0f)
        return 0.0f;
    if (mode == ImGuiInputReadMode_Pressed)               // Return 1.0f when just pressed, no repeat, ignore analog input.
        return (t == 0.0f) ? 1.0f : 0.0f;
    if (mode == ImGuiInputReadMode_Repeat)
        return (float)CalcTypematicPressedRepeatAmount(t, t - g.IO.DeltaTime, g.IO.KeyRepeatDelay * 0.80f, g.IO.KeyRepeatRate * 0.80f);
    if (mode == ImGuiInputReadMode_RepeatSlow)
        return (float)CalcTypematicPressedRepeatAmount(t, t - g.IO.DeltaTime, g.IO.KeyRepeatDelay * 1.00f, g.IO.KeyRepeatRate * 2.00f);
    if (mode == ImGuiInputReadMode_RepeatFast)
        return (float)CalcTypematicPressedRepeatAmount(t, t - g.IO.DeltaTime, g.IO.KeyRepeatDelay * 0.80f, g.IO.KeyRepeatRate * 0.30f);
    return 0.0f;
}

ImVec2 ImGui::GetNavInputAmount2d(ImGuiNavDirSourceFlags dir_sources, ImGuiInputReadMode mode, float slow_factor, float fast_factor)
{
    ImVec2 delta(0.0f, 0.0f);
    if (dir_sources & ImGuiNavDirSourceFlags_Keyboard)
        delta += ImVec2(GetNavInputAmount(ImGuiNavInput_KeyRight_, mode)   - GetNavInputAmount(ImGuiNavInput_KeyLeft_,   mode), GetNavInputAmount(ImGuiNavInput_KeyDown_,   mode) - GetNavInputAmount(ImGuiNavInput_KeyUp_,   mode));
    if (dir_sources & ImGuiNavDirSourceFlags_PadDPad)
        delta += ImVec2(GetNavInputAmount(ImGuiNavInput_DpadRight, mode)   - GetNavInputAmount(ImGuiNavInput_DpadLeft,   mode), GetNavInputAmount(ImGuiNavInput_DpadDown,   mode) - GetNavInputAmount(ImGuiNavInput_DpadUp,   mode));
    if (dir_sources & ImGuiNavDirSourceFlags_PadLStick)
        delta += ImVec2(GetNavInputAmount(ImGuiNavInput_LStickRight, mode) - GetNavInputAmount(ImGuiNavInput_LStickLeft, mode), GetNavInputAmount(ImGuiNavInput_LStickDown, mode) - GetNavInputAmount(ImGuiNavInput_LStickUp, mode));
    if (slow_factor != 0.0f && IsNavInputDown(ImGuiNavInput_TweakSlow))
        delta *= slow_factor;
    if (fast_factor != 0.0f && IsNavInputDown(ImGuiNavInput_TweakFast))
        delta *= fast_factor;
    return delta;
}

// Scroll to keep newly navigated item fully into view
// NB: We modify rect_rel by the amount we scrolled for, so it is immediately updated.
static void NavScrollToBringItemIntoView(ImGuiWindow* window, const ImRect& item_rect)
{
    ImRect window_rect(window->InnerMainRect.Min - ImVec2(1, 1), window->InnerMainRect.Max + ImVec2(1, 1));
    //GetForegroundDrawList(window)->AddRect(window_rect.Min, window_rect.Max, IM_COL32_WHITE); // [DEBUG]
    if (window_rect.Contains(item_rect))
        return;

    ImGuiContext& g = *GImGui;
    if (window->ScrollbarX && item_rect.Min.x < window_rect.Min.x)
    {
        window->ScrollTarget.x = item_rect.Min.x - window->Pos.x + window->Scroll.x - g.Style.ItemSpacing.x;
        window->ScrollTargetCenterRatio.x = 0.0f;
    }
    else if (window->ScrollbarX && item_rect.Max.x >= window_rect.Max.x)
    {
        window->ScrollTarget.x = item_rect.Max.x - window->Pos.x + window->Scroll.x + g.Style.ItemSpacing.x;
        window->ScrollTargetCenterRatio.x = 1.0f;
    }
    if (item_rect.Min.y < window_rect.Min.y)
    {
        window->ScrollTarget.y = item_rect.Min.y - window->Pos.y + window->Scroll.y - g.Style.ItemSpacing.y;
        window->ScrollTargetCenterRatio.y = 0.0f;
    }
    else if (item_rect.Max.y >= window_rect.Max.y)
    {
        window->ScrollTarget.y = item_rect.Max.y - window->Pos.y + window->Scroll.y + g.Style.ItemSpacing.y;
        window->ScrollTargetCenterRatio.y = 1.0f;
    }
}

static void ImGui::NavUpdate()
{
    ImGuiContext& g = *GImGui;
    g.IO.WantSetMousePos = false;
#if 0
    if (g.NavScoringCount > 0) IMGUI_DEBUG_LOG("NavScoringCount %d for '%s' layer %d (Init:%d, Move:%d)\n", g.FrameCount, g.NavScoringCount, g.NavWindow ? g.NavWindow->Name : "NULL", g.NavLayer, g.NavInitRequest || g.NavInitResultId != 0, g.NavMoveRequest);
#endif

    // Set input source as Gamepad when buttons are pressed before we map Keyboard (some features differs when used with Gamepad vs Keyboard)
    bool nav_keyboard_active = (g.IO.ConfigFlags & ImGuiConfigFlags_NavEnableKeyboard) != 0;
    bool nav_gamepad_active = (g.IO.ConfigFlags & ImGuiConfigFlags_NavEnableGamepad) != 0 && (g.IO.BackendFlags & ImGuiBackendFlags_HasGamepad) != 0;
    if (nav_gamepad_active)
        if (g.IO.NavInputs[ImGuiNavInput_Activate] > 0.0f || g.IO.NavInputs[ImGuiNavInput_Input] > 0.0f || g.IO.NavInputs[ImGuiNavInput_Cancel] > 0.0f || g.IO.NavInputs[ImGuiNavInput_Menu] > 0.0f)
            g.NavInputSource = ImGuiInputSource_NavGamepad;

    // Update Keyboard->Nav inputs mapping
    if (nav_keyboard_active)
    {
        #define NAV_MAP_KEY(_KEY, _NAV_INPUT) if (IsKeyDown(g.IO.KeyMap[_KEY])) { g.IO.NavInputs[_NAV_INPUT] = 1.0f; g.NavInputSource = ImGuiInputSource_NavKeyboard; }
        NAV_MAP_KEY(ImGuiKey_Space,     ImGuiNavInput_Activate );
        NAV_MAP_KEY(ImGuiKey_Enter,     ImGuiNavInput_Input    );
        NAV_MAP_KEY(ImGuiKey_Escape,    ImGuiNavInput_Cancel   );
        NAV_MAP_KEY(ImGuiKey_LeftArrow, ImGuiNavInput_KeyLeft_ );
        NAV_MAP_KEY(ImGuiKey_RightArrow,ImGuiNavInput_KeyRight_);
        NAV_MAP_KEY(ImGuiKey_UpArrow,   ImGuiNavInput_KeyUp_   );
        NAV_MAP_KEY(ImGuiKey_DownArrow, ImGuiNavInput_KeyDown_ );
        NAV_MAP_KEY(ImGuiKey_Tab,       ImGuiNavInput_KeyTab_  );
        if (g.IO.KeyCtrl)
            g.IO.NavInputs[ImGuiNavInput_TweakSlow] = 1.0f;
        if (g.IO.KeyShift)
            g.IO.NavInputs[ImGuiNavInput_TweakFast] = 1.0f;
        if (g.IO.KeyAlt && !g.IO.KeyCtrl) // AltGR is Alt+Ctrl, also even on keyboards without AltGR we don't want Alt+Ctrl to open menu.
            g.IO.NavInputs[ImGuiNavInput_KeyMenu_]  = 1.0f;
        #undef NAV_MAP_KEY
    }
    memcpy(g.IO.NavInputsDownDurationPrev, g.IO.NavInputsDownDuration, sizeof(g.IO.NavInputsDownDuration));
    for (int i = 0; i < IM_ARRAYSIZE(g.IO.NavInputs); i++)
        g.IO.NavInputsDownDuration[i] = (g.IO.NavInputs[i] > 0.0f) ? (g.IO.NavInputsDownDuration[i] < 0.0f ? 0.0f : g.IO.NavInputsDownDuration[i] + g.IO.DeltaTime) : -1.0f;

    // Process navigation init request (select first/default focus)
    if (g.NavInitResultId != 0 && (!g.NavDisableHighlight || g.NavInitRequestFromMove))
    {
        // Apply result from previous navigation init request (will typically select the first item, unless SetItemDefaultFocus() has been called)
        IM_ASSERT(g.NavWindow);
        if (g.NavInitRequestFromMove)
            SetNavIDWithRectRel(g.NavInitResultId, g.NavLayer, g.NavInitResultRectRel);
        else
            SetNavID(g.NavInitResultId, g.NavLayer);
        g.NavWindow->NavRectRel[g.NavLayer] = g.NavInitResultRectRel;
    }
    g.NavInitRequest = false;
    g.NavInitRequestFromMove = false;
    g.NavInitResultId = 0;
    g.NavJustMovedToId = 0;

    // Process navigation move request
    if (g.NavMoveRequest)
        NavUpdateMoveResult();

    // When a forwarded move request failed, we restore the highlight that we disabled during the forward frame
    if (g.NavMoveRequestForward == ImGuiNavForward_ForwardActive)
    {
        IM_ASSERT(g.NavMoveRequest);
        if (g.NavMoveResultLocal.ID == 0 && g.NavMoveResultOther.ID == 0)
            g.NavDisableHighlight = false;
        g.NavMoveRequestForward = ImGuiNavForward_None;
    }

    // Apply application mouse position movement, after we had a chance to process move request result.
    if (g.NavMousePosDirty && g.NavIdIsAlive)
    {
        // Set mouse position given our knowledge of the navigated item position from last frame
        if ((g.IO.ConfigFlags & ImGuiConfigFlags_NavEnableSetMousePos) && (g.IO.BackendFlags & ImGuiBackendFlags_HasSetMousePos))
        {
            if (!g.NavDisableHighlight && g.NavDisableMouseHover && g.NavWindow)
            {
                g.IO.MousePos = g.IO.MousePosPrev = NavCalcPreferredRefPos();
                g.IO.WantSetMousePos = true;
            }
        }
        g.NavMousePosDirty = false;
    }
    g.NavIdIsAlive = false;
    g.NavJustTabbedId = 0;
    IM_ASSERT(g.NavLayer == 0 || g.NavLayer == 1);

    // Store our return window (for returning from Layer 1 to Layer 0) and clear it as soon as we step back in our own Layer 0
    if (g.NavWindow)
        NavSaveLastChildNavWindowIntoParent(g.NavWindow);
    if (g.NavWindow && g.NavWindow->NavLastChildNavWindow != NULL && g.NavLayer == 0)
        g.NavWindow->NavLastChildNavWindow = NULL;

    // Update CTRL+TAB and Windowing features (hold Square to move/resize/etc.)
    NavUpdateWindowing();

    // Set output flags for user application
    g.IO.NavActive = (nav_keyboard_active || nav_gamepad_active) && g.NavWindow && !(g.NavWindow->Flags & ImGuiWindowFlags_NoNavInputs);
    g.IO.NavVisible = (g.IO.NavActive && g.NavId != 0 && !g.NavDisableHighlight) || (g.NavWindowingTarget != NULL);

    // Process NavCancel input (to close a popup, get back to parent, clear focus)
    if (IsNavInputPressed(ImGuiNavInput_Cancel, ImGuiInputReadMode_Pressed))
    {
        if (g.ActiveId != 0)
        {
            if (!(g.ActiveIdBlockNavInputFlags & (1 << ImGuiNavInput_Cancel)))
                ClearActiveID();
        }
        else if (g.NavWindow && (g.NavWindow->Flags & ImGuiWindowFlags_ChildWindow) && !(g.NavWindow->Flags & ImGuiWindowFlags_Popup) && g.NavWindow->ParentWindow)
        {
            // Exit child window
            ImGuiWindow* child_window = g.NavWindow;
            ImGuiWindow* parent_window = g.NavWindow->ParentWindow;
            IM_ASSERT(child_window->ChildId != 0);
            FocusWindow(parent_window);
            SetNavID(child_window->ChildId, 0);
            g.NavIdIsAlive = false;
            if (g.NavDisableMouseHover)
                g.NavMousePosDirty = true;
        }
        else if (g.OpenPopupStack.Size > 0)
        {
            // Close open popup/menu
            if (!(g.OpenPopupStack.back().Window->Flags & ImGuiWindowFlags_Modal))
                ClosePopupToLevel(g.OpenPopupStack.Size - 1, true);
        }
        else if (g.NavLayer != 0)
        {
            // Leave the "menu" layer
            NavRestoreLayer(ImGuiNavLayer_Main);
        }
        else
        {
            // Clear NavLastId for popups but keep it for regular child window so we can leave one and come back where we were
            if (g.NavWindow && ((g.NavWindow->Flags & ImGuiWindowFlags_Popup) || !(g.NavWindow->Flags & ImGuiWindowFlags_ChildWindow)))
                g.NavWindow->NavLastIds[0] = 0;
            g.NavId = 0;
        }
    }

    // Process manual activation request
    g.NavActivateId = g.NavActivateDownId = g.NavActivatePressedId = g.NavInputId = 0;
    if (g.NavId != 0 && !g.NavDisableHighlight && !g.NavWindowingTarget && g.NavWindow && !(g.NavWindow->Flags & ImGuiWindowFlags_NoNavInputs))
    {
        bool activate_down = IsNavInputDown(ImGuiNavInput_Activate);
        bool activate_pressed = activate_down && IsNavInputPressed(ImGuiNavInput_Activate, ImGuiInputReadMode_Pressed);
        if (g.ActiveId == 0 && activate_pressed)
            g.NavActivateId = g.NavId;
        if ((g.ActiveId == 0 || g.ActiveId == g.NavId) && activate_down)
            g.NavActivateDownId = g.NavId;
        if ((g.ActiveId == 0 || g.ActiveId == g.NavId) && activate_pressed)
            g.NavActivatePressedId = g.NavId;
        if ((g.ActiveId == 0 || g.ActiveId == g.NavId) && IsNavInputPressed(ImGuiNavInput_Input, ImGuiInputReadMode_Pressed))
            g.NavInputId = g.NavId;
    }
    if (g.NavWindow && (g.NavWindow->Flags & ImGuiWindowFlags_NoNavInputs))
        g.NavDisableHighlight = true;
    if (g.NavActivateId != 0)
        IM_ASSERT(g.NavActivateDownId == g.NavActivateId);
    g.NavMoveRequest = false;

    // Process programmatic activation request
    if (g.NavNextActivateId != 0)
        g.NavActivateId = g.NavActivateDownId = g.NavActivatePressedId = g.NavInputId = g.NavNextActivateId;
    g.NavNextActivateId = 0;

    // Initiate directional inputs request
    const int allowed_dir_flags = (g.ActiveId == 0) ? ~0 : g.ActiveIdAllowNavDirFlags;
    if (g.NavMoveRequestForward == ImGuiNavForward_None)
    {
        g.NavMoveDir = ImGuiDir_None;
        g.NavMoveRequestFlags = ImGuiNavMoveFlags_None;
        if (g.NavWindow && !g.NavWindowingTarget && allowed_dir_flags && !(g.NavWindow->Flags & ImGuiWindowFlags_NoNavInputs))
        {
            if ((allowed_dir_flags & (1<<ImGuiDir_Left))  && IsNavInputPressedAnyOfTwo(ImGuiNavInput_DpadLeft, ImGuiNavInput_KeyLeft_, ImGuiInputReadMode_Repeat)) g.NavMoveDir = ImGuiDir_Left;
            if ((allowed_dir_flags & (1<<ImGuiDir_Right)) && IsNavInputPressedAnyOfTwo(ImGuiNavInput_DpadRight,ImGuiNavInput_KeyRight_,ImGuiInputReadMode_Repeat)) g.NavMoveDir = ImGuiDir_Right;
            if ((allowed_dir_flags & (1<<ImGuiDir_Up))    && IsNavInputPressedAnyOfTwo(ImGuiNavInput_DpadUp,   ImGuiNavInput_KeyUp_,   ImGuiInputReadMode_Repeat)) g.NavMoveDir = ImGuiDir_Up;
            if ((allowed_dir_flags & (1<<ImGuiDir_Down))  && IsNavInputPressedAnyOfTwo(ImGuiNavInput_DpadDown, ImGuiNavInput_KeyDown_, ImGuiInputReadMode_Repeat)) g.NavMoveDir = ImGuiDir_Down;
        }
        g.NavMoveClipDir = g.NavMoveDir;
    }
    else
    {
        // Forwarding previous request (which has been modified, e.g. wrap around menus rewrite the requests with a starting rectangle at the other side of the window)
        // (Preserve g.NavMoveRequestFlags, g.NavMoveClipDir which were set by the NavMoveRequestForward() function)
        IM_ASSERT(g.NavMoveDir != ImGuiDir_None && g.NavMoveClipDir != ImGuiDir_None);
        IM_ASSERT(g.NavMoveRequestForward == ImGuiNavForward_ForwardQueued);
        g.NavMoveRequestForward = ImGuiNavForward_ForwardActive;
    }

    // Update PageUp/PageDown scroll
    float nav_scoring_rect_offset_y = 0.0f;
    if (nav_keyboard_active)
        nav_scoring_rect_offset_y = NavUpdatePageUpPageDown(allowed_dir_flags);

    // If we initiate a movement request and have no current NavId, we initiate a InitDefautRequest that will be used as a fallback if the direction fails to find a match
    if (g.NavMoveDir != ImGuiDir_None)
    {
        g.NavMoveRequest = true;
        g.NavMoveDirLast = g.NavMoveDir;
    }
    if (g.NavMoveRequest && g.NavId == 0)
    {
        g.NavInitRequest = g.NavInitRequestFromMove = true;
        g.NavInitResultId = 0;
        g.NavDisableHighlight = false;
    }
    NavUpdateAnyRequestFlag();

    // Scrolling
    if (g.NavWindow && !(g.NavWindow->Flags & ImGuiWindowFlags_NoNavInputs) && !g.NavWindowingTarget)
    {
        // *Fallback* manual-scroll with Nav directional keys when window has no navigable item
        ImGuiWindow* window = g.NavWindow;
        const float scroll_speed = ImFloor(window->CalcFontSize() * 100 * g.IO.DeltaTime + 0.5f); // We need round the scrolling speed because sub-pixel scroll isn't reliably supported.
        if (window->DC.NavLayerActiveMask == 0x00 && window->DC.NavHasScroll && g.NavMoveRequest)
        {
            if (g.NavMoveDir == ImGuiDir_Left || g.NavMoveDir == ImGuiDir_Right)
                SetWindowScrollX(window, ImFloor(window->Scroll.x + ((g.NavMoveDir == ImGuiDir_Left) ? -1.0f : +1.0f) * scroll_speed));
            if (g.NavMoveDir == ImGuiDir_Up || g.NavMoveDir == ImGuiDir_Down)
                SetWindowScrollY(window, ImFloor(window->Scroll.y + ((g.NavMoveDir == ImGuiDir_Up) ? -1.0f : +1.0f) * scroll_speed));
        }

        // *Normal* Manual scroll with NavScrollXXX keys
        // Next movement request will clamp the NavId reference rectangle to the visible area, so navigation will resume within those bounds.
        ImVec2 scroll_dir = GetNavInputAmount2d(ImGuiNavDirSourceFlags_PadLStick, ImGuiInputReadMode_Down, 1.0f/10.0f, 10.0f);
        if (scroll_dir.x != 0.0f && window->ScrollbarX)
        {
            SetWindowScrollX(window, ImFloor(window->Scroll.x + scroll_dir.x * scroll_speed));
            g.NavMoveFromClampedRefRect = true;
        }
        if (scroll_dir.y != 0.0f)
        {
            SetWindowScrollY(window, ImFloor(window->Scroll.y + scroll_dir.y * scroll_speed));
            g.NavMoveFromClampedRefRect = true;
        }
    }

    // Reset search results
    g.NavMoveResultLocal.Clear();
    g.NavMoveResultLocalVisibleSet.Clear();
    g.NavMoveResultOther.Clear();

    // When we have manually scrolled (without using navigation) and NavId becomes out of bounds, we project its bounding box to the visible area to restart navigation within visible items
    if (g.NavMoveRequest && g.NavMoveFromClampedRefRect && g.NavLayer == 0)
    {
        ImGuiWindow* window = g.NavWindow;
        ImRect window_rect_rel(window->InnerMainRect.Min - window->Pos - ImVec2(1,1), window->InnerMainRect.Max - window->Pos + ImVec2(1,1));
        if (!window_rect_rel.Contains(window->NavRectRel[g.NavLayer]))
        {
            float pad = window->CalcFontSize() * 0.5f;
            window_rect_rel.Expand(ImVec2(-ImMin(window_rect_rel.GetWidth(), pad), -ImMin(window_rect_rel.GetHeight(), pad))); // Terrible approximation for the intent of starting navigation from first fully visible item
            window->NavRectRel[g.NavLayer].ClipWith(window_rect_rel);
            g.NavId = 0;
        }
        g.NavMoveFromClampedRefRect = false;
    }

    // For scoring we use a single segment on the left side our current item bounding box (not touching the edge to avoid box overlap with zero-spaced items)
    ImRect nav_rect_rel = (g.NavWindow && !g.NavWindow->NavRectRel[g.NavLayer].IsInverted()) ? g.NavWindow->NavRectRel[g.NavLayer] : ImRect(0,0,0,0);
    g.NavScoringRectScreen = g.NavWindow ? ImRect(g.NavWindow->Pos + nav_rect_rel.Min, g.NavWindow->Pos + nav_rect_rel.Max) : GetViewportRect();
    g.NavScoringRectScreen.TranslateY(nav_scoring_rect_offset_y);
    g.NavScoringRectScreen.Min.x = ImMin(g.NavScoringRectScreen.Min.x + 1.0f, g.NavScoringRectScreen.Max.x);
    g.NavScoringRectScreen.Max.x = g.NavScoringRectScreen.Min.x;
    IM_ASSERT(!g.NavScoringRectScreen.IsInverted()); // Ensure if we have a finite, non-inverted bounding box here will allows us to remove extraneous ImFabs() calls in NavScoreItem().
    //GetForegroundDrawList()->AddRect(g.NavScoringRectScreen.Min, g.NavScoringRectScreen.Max, IM_COL32(255,200,0,255)); // [DEBUG]
    g.NavScoringCount = 0;
#if IMGUI_DEBUG_NAV_RECTS
    if (g.NavWindow)
    {
        ImDrawList* draw_list = GetForegroundDrawList(g.NavWindow);
        if (1) { for (int layer = 0; layer < 2; layer++) draw_list->AddRect(g.NavWindow->Pos + g.NavWindow->NavRectRel[layer].Min, g.NavWindow->Pos + g.NavWindow->NavRectRel[layer].Max, IM_COL32(255,200,0,255)); } // [DEBUG]
        if (1) { ImU32 col = (!g.NavWindow->Hidden) ? IM_COL32(255,0,255,255) : IM_COL32(255,0,0,255); ImVec2 p = NavCalcPreferredRefPos(); char buf[32]; ImFormatString(buf, 32, "%d", g.NavLayer); draw_list->AddCircleFilled(p, 3.0f, col); draw_list->AddText(NULL, 13.0f, p + ImVec2(8,-4), col, buf); }
    }
#endif
}

// Apply result from previous frame navigation directional move request
static void ImGui::NavUpdateMoveResult()
{
    ImGuiContext& g = *GImGui;
    if (g.NavMoveResultLocal.ID == 0 && g.NavMoveResultOther.ID == 0)
    {
        // In a situation when there is no results but NavId != 0, re-enable the Navigation highlight (because g.NavId is not considered as a possible result)
        if (g.NavId != 0)
        {
            g.NavDisableHighlight = false;
            g.NavDisableMouseHover = true;
        }
        return;
    }

    // Select which result to use
    ImGuiNavMoveResult* result = (g.NavMoveResultLocal.ID != 0) ? &g.NavMoveResultLocal : &g.NavMoveResultOther;

    // PageUp/PageDown behavior first jumps to the bottom/top mostly visible item, _otherwise_ use the result from the previous/next page.
    if (g.NavMoveRequestFlags & ImGuiNavMoveFlags_AlsoScoreVisibleSet)
        if (g.NavMoveResultLocalVisibleSet.ID != 0 && g.NavMoveResultLocalVisibleSet.ID != g.NavId)
            result = &g.NavMoveResultLocalVisibleSet;

    // Maybe entering a flattened child from the outside? In this case solve the tie using the regular scoring rules.
    if (result != &g.NavMoveResultOther && g.NavMoveResultOther.ID != 0 && g.NavMoveResultOther.Window->ParentWindow == g.NavWindow)
        if ((g.NavMoveResultOther.DistBox < result->DistBox) || (g.NavMoveResultOther.DistBox == result->DistBox && g.NavMoveResultOther.DistCenter < result->DistCenter))
            result = &g.NavMoveResultOther;
    IM_ASSERT(g.NavWindow && result->Window);

    // Scroll to keep newly navigated item fully into view.
    if (g.NavLayer == 0)
    {
        ImRect rect_abs = ImRect(result->RectRel.Min + result->Window->Pos, result->RectRel.Max + result->Window->Pos);
        NavScrollToBringItemIntoView(result->Window, rect_abs);

        // Estimate upcoming scroll so we can offset our result position so mouse position can be applied immediately after in NavUpdate()
        ImVec2 next_scroll = CalcNextScrollFromScrollTargetAndClamp(result->Window, false);
        ImVec2 delta_scroll = result->Window->Scroll - next_scroll;
        result->RectRel.Translate(delta_scroll);

        // Also scroll parent window to keep us into view if necessary (we could/should technically recurse back the whole the parent hierarchy).
        if (result->Window->Flags & ImGuiWindowFlags_ChildWindow)
            NavScrollToBringItemIntoView(result->Window->ParentWindow, ImRect(rect_abs.Min + delta_scroll, rect_abs.Max + delta_scroll));
    }

    ClearActiveID();
    g.NavWindow = result->Window;
    if (g.NavId != result->ID)
    {
        // Don't set NavJustMovedToId if just landed on the same spot (which may happen with ImGuiNavMoveFlags_AllowCurrentNavId)
        g.NavJustMovedToId = result->ID;
        g.NavJustMovedToMultiSelectScopeId = result->SelectScopeId;
    }
    SetNavIDWithRectRel(result->ID, g.NavLayer, result->RectRel);
    g.NavMoveFromClampedRefRect = false;
}

static float ImGui::NavUpdatePageUpPageDown(int allowed_dir_flags)
{
    ImGuiContext& g = *GImGui;
    if (g.NavMoveDir == ImGuiDir_None && g.NavWindow && !(g.NavWindow->Flags & ImGuiWindowFlags_NoNavInputs) && !g.NavWindowingTarget && g.NavLayer == 0)
    {
        ImGuiWindow* window = g.NavWindow;
        bool page_up_held = IsKeyDown(g.IO.KeyMap[ImGuiKey_PageUp]) && (allowed_dir_flags & (1 << ImGuiDir_Up));
        bool page_down_held = IsKeyDown(g.IO.KeyMap[ImGuiKey_PageDown]) && (allowed_dir_flags & (1 << ImGuiDir_Down));
        if (page_up_held != page_down_held) // If either (not both) are pressed
        {
            if (window->DC.NavLayerActiveMask == 0x00 && window->DC.NavHasScroll)
            {
                // Fallback manual-scroll when window has no navigable item
                if (IsKeyPressed(g.IO.KeyMap[ImGuiKey_PageUp], true))
                    SetWindowScrollY(window, window->Scroll.y - window->InnerClipRect.GetHeight());
                else if (IsKeyPressed(g.IO.KeyMap[ImGuiKey_PageDown], true))
                    SetWindowScrollY(window, window->Scroll.y + window->InnerClipRect.GetHeight());
            }
            else
            {
                const ImRect& nav_rect_rel = window->NavRectRel[g.NavLayer];
                const float page_offset_y = ImMax(0.0f, window->InnerClipRect.GetHeight() - window->CalcFontSize() * 1.0f + nav_rect_rel.GetHeight());
                float nav_scoring_rect_offset_y = 0.0f;
                if (IsKeyPressed(g.IO.KeyMap[ImGuiKey_PageUp], true))
                {
                    nav_scoring_rect_offset_y = -page_offset_y;
                    g.NavMoveDir = ImGuiDir_Down; // Because our scoring rect is offset, we intentionally request the opposite direction (so we can always land on the last item)
                    g.NavMoveClipDir = ImGuiDir_Up;
                    g.NavMoveRequestFlags = ImGuiNavMoveFlags_AllowCurrentNavId | ImGuiNavMoveFlags_AlsoScoreVisibleSet;
                }
                else if (IsKeyPressed(g.IO.KeyMap[ImGuiKey_PageDown], true))
                {
                    nav_scoring_rect_offset_y = +page_offset_y;
                    g.NavMoveDir = ImGuiDir_Up; // Because our scoring rect is offset, we intentionally request the opposite direction (so we can always land on the last item)
                    g.NavMoveClipDir = ImGuiDir_Down;
                    g.NavMoveRequestFlags = ImGuiNavMoveFlags_AllowCurrentNavId | ImGuiNavMoveFlags_AlsoScoreVisibleSet;
                }
                return nav_scoring_rect_offset_y;
            }
        }
    }
    return 0.0f;
}

static int FindWindowFocusIndex(ImGuiWindow* window) // FIXME-OPT O(N)
{
    ImGuiContext& g = *GImGui;
    for (int i = g.WindowsFocusOrder.Size-1; i >= 0; i--)
        if (g.WindowsFocusOrder[i] == window)
            return i;
    return -1;
}

static ImGuiWindow* FindWindowNavFocusable(int i_start, int i_stop, int dir) // FIXME-OPT O(N)
{
    ImGuiContext& g = *GImGui;
    for (int i = i_start; i >= 0 && i < g.WindowsFocusOrder.Size && i != i_stop; i += dir)
        if (ImGui::IsWindowNavFocusable(g.WindowsFocusOrder[i]))
            return g.WindowsFocusOrder[i];
    return NULL;
}

static void NavUpdateWindowingHighlightWindow(int focus_change_dir)
{
    ImGuiContext& g = *GImGui;
    IM_ASSERT(g.NavWindowingTarget);
    if (g.NavWindowingTarget->Flags & ImGuiWindowFlags_Modal)
        return;

    const int i_current = FindWindowFocusIndex(g.NavWindowingTarget);
    ImGuiWindow* window_target = FindWindowNavFocusable(i_current + focus_change_dir, -INT_MAX, focus_change_dir);
    if (!window_target)
        window_target = FindWindowNavFocusable((focus_change_dir < 0) ? (g.WindowsFocusOrder.Size - 1) : 0, i_current, focus_change_dir);
    if (window_target) // Don't reset windowing target if there's a single window in the list
        g.NavWindowingTarget = g.NavWindowingTargetAnim = window_target;
    g.NavWindowingToggleLayer = false;
}

// Windowing management mode
// Keyboard: CTRL+Tab (change focus/move/resize), Alt (toggle menu layer)
// Gamepad:  Hold Menu/Square (change focus/move/resize), Tap Menu/Square (toggle menu layer)
static void ImGui::NavUpdateWindowing()
{
    ImGuiContext& g = *GImGui;
    ImGuiWindow* apply_focus_window = NULL;
    bool apply_toggle_layer = false;

    ImGuiWindow* modal_window = GetFrontMostPopupModal();
    if (modal_window != NULL)
    {
        g.NavWindowingTarget = NULL;
        return;
    }

    // Fade out
    if (g.NavWindowingTargetAnim && g.NavWindowingTarget == NULL)
    {
        g.NavWindowingHighlightAlpha = ImMax(g.NavWindowingHighlightAlpha - g.IO.DeltaTime * 10.0f, 0.0f);
        if (g.DimBgRatio <= 0.0f && g.NavWindowingHighlightAlpha <= 0.0f)
            g.NavWindowingTargetAnim = NULL;
    }

    // Start CTRL-TAB or Square+L/R window selection
    bool start_windowing_with_gamepad = !g.NavWindowingTarget && IsNavInputPressed(ImGuiNavInput_Menu, ImGuiInputReadMode_Pressed);
    bool start_windowing_with_keyboard = !g.NavWindowingTarget && g.IO.KeyCtrl && IsKeyPressedMap(ImGuiKey_Tab) && (g.IO.ConfigFlags & ImGuiConfigFlags_NavEnableKeyboard);
    if (start_windowing_with_gamepad || start_windowing_with_keyboard)
        if (ImGuiWindow* window = g.NavWindow ? g.NavWindow : FindWindowNavFocusable(g.WindowsFocusOrder.Size - 1, -INT_MAX, -1))
        {
            g.NavWindowingTarget = g.NavWindowingTargetAnim = window;
            g.NavWindowingTimer = g.NavWindowingHighlightAlpha = 0.0f;
            g.NavWindowingToggleLayer = start_windowing_with_keyboard ? false : true;
            g.NavInputSource = start_windowing_with_keyboard ? ImGuiInputSource_NavKeyboard : ImGuiInputSource_NavGamepad;
        }

    // Gamepad update
    g.NavWindowingTimer += g.IO.DeltaTime;
    if (g.NavWindowingTarget && g.NavInputSource == ImGuiInputSource_NavGamepad)
    {
        // Highlight only appears after a brief time holding the button, so that a fast tap on PadMenu (to toggle NavLayer) doesn't add visual noise
        g.NavWindowingHighlightAlpha = ImMax(g.NavWindowingHighlightAlpha, ImSaturate((g.NavWindowingTimer - NAV_WINDOWING_HIGHLIGHT_DELAY) / 0.05f));

        // Select window to focus
        const int focus_change_dir = (int)IsNavInputPressed(ImGuiNavInput_FocusPrev, ImGuiInputReadMode_RepeatSlow) - (int)IsNavInputPressed(ImGuiNavInput_FocusNext, ImGuiInputReadMode_RepeatSlow);
        if (focus_change_dir != 0)
        {
            NavUpdateWindowingHighlightWindow(focus_change_dir);
            g.NavWindowingHighlightAlpha = 1.0f;
        }

        // Single press toggles NavLayer, long press with L/R apply actual focus on release (until then the window was merely rendered front-most)
        if (!IsNavInputDown(ImGuiNavInput_Menu))
        {
            g.NavWindowingToggleLayer &= (g.NavWindowingHighlightAlpha < 1.0f); // Once button was held long enough we don't consider it a tap-to-toggle-layer press anymore.
            if (g.NavWindowingToggleLayer && g.NavWindow)
                apply_toggle_layer = true;
            else if (!g.NavWindowingToggleLayer)
                apply_focus_window = g.NavWindowingTarget;
            g.NavWindowingTarget = NULL;
        }
    }

    // Keyboard: Focus
    if (g.NavWindowingTarget && g.NavInputSource == ImGuiInputSource_NavKeyboard)
    {
        // Visuals only appears after a brief time after pressing TAB the first time, so that a fast CTRL+TAB doesn't add visual noise
        g.NavWindowingHighlightAlpha = ImMax(g.NavWindowingHighlightAlpha, ImSaturate((g.NavWindowingTimer - NAV_WINDOWING_HIGHLIGHT_DELAY) / 0.05f)); // 1.0f
        if (IsKeyPressedMap(ImGuiKey_Tab, true))
            NavUpdateWindowingHighlightWindow(g.IO.KeyShift ? +1 : -1);
        if (!g.IO.KeyCtrl)
            apply_focus_window = g.NavWindowingTarget;
    }

    // Keyboard: Press and Release ALT to toggle menu layer
    // FIXME: We lack an explicit IO variable for "is the imgui window focused", so compare mouse validity to detect the common case of back-end clearing releases all keys on ALT-TAB
    if (IsNavInputPressed(ImGuiNavInput_KeyMenu_, ImGuiInputReadMode_Pressed))
        g.NavWindowingToggleLayer = true;
    if ((g.ActiveId == 0 || g.ActiveIdAllowOverlap) && g.NavWindowingToggleLayer && IsNavInputPressed(ImGuiNavInput_KeyMenu_, ImGuiInputReadMode_Released))
        if (IsMousePosValid(&g.IO.MousePos) == IsMousePosValid(&g.IO.MousePosPrev))
            apply_toggle_layer = true;

    // Move window
    if (g.NavWindowingTarget && !(g.NavWindowingTarget->Flags & ImGuiWindowFlags_NoMove))
    {
        ImVec2 move_delta;
        if (g.NavInputSource == ImGuiInputSource_NavKeyboard && !g.IO.KeyShift)
            move_delta = GetNavInputAmount2d(ImGuiNavDirSourceFlags_Keyboard, ImGuiInputReadMode_Down);
        if (g.NavInputSource == ImGuiInputSource_NavGamepad)
            move_delta = GetNavInputAmount2d(ImGuiNavDirSourceFlags_PadLStick, ImGuiInputReadMode_Down);
        if (move_delta.x != 0.0f || move_delta.y != 0.0f)
        {
            const float NAV_MOVE_SPEED = 800.0f;
            const float move_speed = ImFloor(NAV_MOVE_SPEED * g.IO.DeltaTime * ImMin(g.IO.DisplayFramebufferScale.x, g.IO.DisplayFramebufferScale.y)); // FIXME: Doesn't code variable framerate very well
            g.NavWindowingTarget->RootWindow->Pos += move_delta * move_speed;
            g.NavDisableMouseHover = true;
            MarkIniSettingsDirty(g.NavWindowingTarget);
        }
    }

    // Apply final focus
    if (apply_focus_window && (g.NavWindow == NULL || apply_focus_window != g.NavWindow->RootWindow))
    {
        g.NavDisableHighlight = false;
        g.NavDisableMouseHover = true;
        apply_focus_window = NavRestoreLastChildNavWindow(apply_focus_window);
        ClosePopupsOverWindow(apply_focus_window);
        ClearActiveID();
        FocusWindow(apply_focus_window);
        if (apply_focus_window->NavLastIds[0] == 0)
            NavInitWindow(apply_focus_window, false);

        // If the window only has a menu layer, select it directly
        if (apply_focus_window->DC.NavLayerActiveMask == (1 << ImGuiNavLayer_Menu))
            g.NavLayer = ImGuiNavLayer_Menu;
    }
    if (apply_focus_window)
        g.NavWindowingTarget = NULL;

    // Apply menu/layer toggle
    if (apply_toggle_layer && g.NavWindow)
    {
        // Move to parent menu if necessary
        ImGuiWindow* new_nav_window = g.NavWindow;
        while (new_nav_window->ParentWindow
            && (new_nav_window->DC.NavLayerActiveMask & (1 << ImGuiNavLayer_Menu)) == 0
            && (new_nav_window->Flags & ImGuiWindowFlags_ChildWindow) != 0
            && (new_nav_window->Flags & (ImGuiWindowFlags_Popup | ImGuiWindowFlags_ChildMenu)) == 0)
            new_nav_window = new_nav_window->ParentWindow;
        if (new_nav_window != g.NavWindow)
        {
            ImGuiWindow* old_nav_window = g.NavWindow;
            FocusWindow(new_nav_window);
            new_nav_window->NavLastChildNavWindow = old_nav_window;
        }
        g.NavDisableHighlight = false;
        g.NavDisableMouseHover = true;

        // When entering a regular menu bar with the Alt key, we always reinitialize the navigation ID.
        const ImGuiNavLayer new_nav_layer = (g.NavWindow->DC.NavLayerActiveMask & (1 << ImGuiNavLayer_Menu)) ? (ImGuiNavLayer)((int)g.NavLayer ^ 1) : ImGuiNavLayer_Main;
        NavRestoreLayer(new_nav_layer);
    }
}

// Window has already passed the IsWindowNavFocusable()
static const char* GetFallbackWindowNameForWindowingList(ImGuiWindow* window)
{
    if (window->Flags & ImGuiWindowFlags_Popup)
        return "(Popup)";
    if ((window->Flags & ImGuiWindowFlags_MenuBar) && strcmp(window->Name, "##MainMenuBar") == 0)
        return "(Main menu bar)";
    return "(Untitled)";
}

// Overlay displayed when using CTRL+TAB. Called by EndFrame().
void ImGui::NavUpdateWindowingList()
{
    ImGuiContext& g = *GImGui;
    IM_ASSERT(g.NavWindowingTarget != NULL);

    if (g.NavWindowingTimer < NAV_WINDOWING_LIST_APPEAR_DELAY)
        return;

    if (g.NavWindowingList == NULL)
        g.NavWindowingList = FindWindowByName("###NavWindowingList");
    SetNextWindowSizeConstraints(ImVec2(g.IO.DisplaySize.x * 0.20f, g.IO.DisplaySize.y * 0.20f), ImVec2(FLT_MAX, FLT_MAX));
    SetNextWindowPos(g.IO.DisplaySize * 0.5f, ImGuiCond_Always, ImVec2(0.5f, 0.5f));
    PushStyleVar(ImGuiStyleVar_WindowPadding, g.Style.WindowPadding * 2.0f);
    Begin("###NavWindowingList", NULL, ImGuiWindowFlags_NoTitleBar | ImGuiWindowFlags_NoFocusOnAppearing | ImGuiWindowFlags_NoResize | ImGuiWindowFlags_NoMove | ImGuiWindowFlags_NoInputs | ImGuiWindowFlags_AlwaysAutoResize | ImGuiWindowFlags_NoSavedSettings);
    for (int n = g.WindowsFocusOrder.Size - 1; n >= 0; n--)
    {
        ImGuiWindow* window = g.WindowsFocusOrder[n];
        if (!IsWindowNavFocusable(window))
            continue;
        const char* label = window->Name;
        if (label == FindRenderedTextEnd(label))
            label = GetFallbackWindowNameForWindowingList(window);
        Selectable(label, g.NavWindowingTarget == window);
    }
    End();
    PopStyleVar();
}

//-----------------------------------------------------------------------------
// [SECTION] COLUMNS
// In the current version, Columns are very weak. Needs to be replaced with a more full-featured system.
//-----------------------------------------------------------------------------

void ImGui::NextColumn()
{
    ImGuiWindow* window = GetCurrentWindow();
    if (window->SkipItems || window->DC.CurrentColumns == NULL)
        return;

    ImGuiContext& g = *GImGui;
    ImGuiColumns* columns = window->DC.CurrentColumns;

    if (columns->Count == 1)
    {
        window->DC.CursorPos.x = (float)(int)(window->Pos.x + window->DC.Indent.x + window->DC.ColumnsOffset.x);
        IM_ASSERT(columns->Current == 0);
        return;
    }

    PopItemWidth();
    PopClipRect();

    columns->LineMaxY = ImMax(columns->LineMaxY, window->DC.CursorPos.y);
    if (++columns->Current < columns->Count)
    {
        // New column (columns 1+ cancels out IndentX)
        window->DC.ColumnsOffset.x = GetColumnOffset(columns->Current) - window->DC.Indent.x + g.Style.ItemSpacing.x;
        window->DrawList->ChannelsSetCurrent(columns->Current);
    }
    else
    {
        // New row/line
        window->DC.ColumnsOffset.x = 0.0f;
        window->DrawList->ChannelsSetCurrent(0);
        columns->Current = 0;
        columns->LineMinY = columns->LineMaxY;
    }
    window->DC.CursorPos.x = (float)(int)(window->Pos.x + window->DC.Indent.x + window->DC.ColumnsOffset.x);
    window->DC.CursorPos.y = columns->LineMinY;
    window->DC.CurrentLineSize = ImVec2(0.0f, 0.0f);
    window->DC.CurrentLineTextBaseOffset = 0.0f;

    PushColumnClipRect();
    PushItemWidth(GetColumnWidth() * 0.65f);  // FIXME-COLUMNS: Move on columns setup
}

int ImGui::GetColumnIndex()
{
    ImGuiWindow* window = GetCurrentWindowRead();
    return window->DC.CurrentColumns ? window->DC.CurrentColumns->Current : 0;
}

int ImGui::GetColumnsCount()
{
    ImGuiWindow* window = GetCurrentWindowRead();
    return window->DC.CurrentColumns ? window->DC.CurrentColumns->Count : 1;
}

static float OffsetNormToPixels(const ImGuiColumns* columns, float offset_norm)
{
    return offset_norm * (columns->MaxX - columns->MinX);
}

static float PixelsToOffsetNorm(const ImGuiColumns* columns, float offset)
{
    return offset / (columns->MaxX - columns->MinX);
}

static const float COLUMNS_HIT_RECT_HALF_WIDTH = 4.0f;

static float GetDraggedColumnOffset(ImGuiColumns* columns, int column_index)
{
    // Active (dragged) column always follow mouse. The reason we need this is that dragging a column to the right edge of an auto-resizing
    // window creates a feedback loop because we store normalized positions. So while dragging we enforce absolute positioning.
    ImGuiContext& g = *GImGui;
    ImGuiWindow* window = g.CurrentWindow;
    IM_ASSERT(column_index > 0); // We are not supposed to drag column 0.
    IM_ASSERT(g.ActiveId == columns->ID + ImGuiID(column_index));

    float x = g.IO.MousePos.x - g.ActiveIdClickOffset.x + COLUMNS_HIT_RECT_HALF_WIDTH - window->Pos.x;
    x = ImMax(x, ImGui::GetColumnOffset(column_index - 1) + g.Style.ColumnsMinSpacing);
    if ((columns->Flags & ImGuiColumnsFlags_NoPreserveWidths))
        x = ImMin(x, ImGui::GetColumnOffset(column_index + 1) - g.Style.ColumnsMinSpacing);

    return x;
}

float ImGui::GetColumnOffset(int column_index)
{
    ImGuiWindow* window = GetCurrentWindowRead();
    ImGuiColumns* columns = window->DC.CurrentColumns;
    IM_ASSERT(columns != NULL);

    if (column_index < 0)
        column_index = columns->Current;
    IM_ASSERT(column_index < columns->Columns.Size);

    const float t = columns->Columns[column_index].OffsetNorm;
    const float x_offset = ImLerp(columns->MinX, columns->MaxX, t);
    return x_offset;
}

static float GetColumnWidthEx(ImGuiColumns* columns, int column_index, bool before_resize = false)
{
    if (column_index < 0)
        column_index = columns->Current;

    float offset_norm;
    if (before_resize)
        offset_norm = columns->Columns[column_index + 1].OffsetNormBeforeResize - columns->Columns[column_index].OffsetNormBeforeResize;
    else
        offset_norm = columns->Columns[column_index + 1].OffsetNorm - columns->Columns[column_index].OffsetNorm;
    return OffsetNormToPixels(columns, offset_norm);
}

float ImGui::GetColumnWidth(int column_index)
{
    ImGuiWindow* window = GetCurrentWindowRead();
    ImGuiColumns* columns = window->DC.CurrentColumns;
    IM_ASSERT(columns != NULL);

    if (column_index < 0)
        column_index = columns->Current;
    return OffsetNormToPixels(columns, columns->Columns[column_index + 1].OffsetNorm - columns->Columns[column_index].OffsetNorm);
}

void ImGui::SetColumnOffset(int column_index, float offset)
{
    ImGuiContext& g = *GImGui;
    ImGuiWindow* window = g.CurrentWindow;
    ImGuiColumns* columns = window->DC.CurrentColumns;
    IM_ASSERT(columns != NULL);

    if (column_index < 0)
        column_index = columns->Current;
    IM_ASSERT(column_index < columns->Columns.Size);

    const bool preserve_width = !(columns->Flags & ImGuiColumnsFlags_NoPreserveWidths) && (column_index < columns->Count-1);
    const float width = preserve_width ? GetColumnWidthEx(columns, column_index, columns->IsBeingResized) : 0.0f;

    if (!(columns->Flags & ImGuiColumnsFlags_NoForceWithinWindow))
        offset = ImMin(offset, columns->MaxX - g.Style.ColumnsMinSpacing * (columns->Count - column_index));
    columns->Columns[column_index].OffsetNorm = PixelsToOffsetNorm(columns, offset - columns->MinX);

    if (preserve_width)
        SetColumnOffset(column_index + 1, offset + ImMax(g.Style.ColumnsMinSpacing, width));
}

void ImGui::SetColumnWidth(int column_index, float width)
{
    ImGuiWindow* window = GetCurrentWindowRead();
    ImGuiColumns* columns = window->DC.CurrentColumns;
    IM_ASSERT(columns != NULL);

    if (column_index < 0)
        column_index = columns->Current;
    SetColumnOffset(column_index + 1, GetColumnOffset(column_index) + width);
}

void ImGui::PushColumnClipRect(int column_index)
{
    ImGuiWindow* window = GetCurrentWindowRead();
    ImGuiColumns* columns = window->DC.CurrentColumns;
    if (column_index < 0)
        column_index = columns->Current;

    ImGuiColumnData* column = &columns->Columns[column_index];
    PushClipRect(column->ClipRect.Min, column->ClipRect.Max, false);
}

ImGuiColumns* ImGui::FindOrCreateColumns(ImGuiWindow* window, ImGuiID id)
{
    // We have few columns per window so for now we don't need bother much with turning this into a faster lookup.
    for (int n = 0; n < window->ColumnsStorage.Size; n++)
        if (window->ColumnsStorage[n].ID == id)
            return &window->ColumnsStorage[n];

    window->ColumnsStorage.push_back(ImGuiColumns());
    ImGuiColumns* columns = &window->ColumnsStorage.back();
    columns->ID = id;
    return columns;
}

ImGuiID ImGui::GetColumnsID(const char* str_id, int columns_count)
{
    ImGuiWindow* window = GetCurrentWindow();

    // Differentiate column ID with an arbitrary prefix for cases where users name their columns set the same as another widget.
    // In addition, when an identifier isn't explicitly provided we include the number of columns in the hash to make it uniquer.
    PushID(0x11223347 + (str_id ? 0 : columns_count));
    ImGuiID id = window->GetID(str_id ? str_id : "columns");
    PopID();

    return id;
}

void ImGui::BeginColumns(const char* str_id, int columns_count, ImGuiColumnsFlags flags)
{
    ImGuiContext& g = *GImGui;
    ImGuiWindow* window = GetCurrentWindow();

    IM_ASSERT(columns_count >= 1);
    IM_ASSERT(window->DC.CurrentColumns == NULL); // Nested columns are currently not supported

    ImGuiID id = GetColumnsID(str_id, columns_count);

    // Acquire storage for the columns set
    ImGuiColumns* columns = FindOrCreateColumns(window, id);
    IM_ASSERT(columns->ID == id);
    columns->Current = 0;
    columns->Count = columns_count;
    columns->Flags = flags;
    window->DC.CurrentColumns = columns;

    // Set state for first column
    const float content_region_width = (window->SizeContentsExplicit.x != 0.0f) ? (window->SizeContentsExplicit.x) : (window->InnerClipRect.Max.x - window->Pos.x);
    columns->MinX = window->DC.Indent.x - g.Style.ItemSpacing.x; // Lock our horizontal range
    columns->MaxX = ImMax(content_region_width - window->Scroll.x, columns->MinX + 1.0f);
    columns->BackupCursorPosY = window->DC.CursorPos.y;
    columns->BackupCursorMaxPosX = window->DC.CursorMaxPos.x;
    columns->LineMinY = columns->LineMaxY = window->DC.CursorPos.y;
    window->DC.ColumnsOffset.x = 0.0f;
    window->DC.CursorPos.x = (float)(int)(window->Pos.x + window->DC.Indent.x + window->DC.ColumnsOffset.x);

    // Clear data if columns count changed
    if (columns->Columns.Size != 0 && columns->Columns.Size != columns_count + 1)
        columns->Columns.resize(0);

    // Initialize defaults
    columns->IsFirstFrame = (columns->Columns.Size == 0);
    if (columns->Columns.Size == 0)
    {
        columns->Columns.reserve(columns_count + 1);
        for (int n = 0; n < columns_count + 1; n++)
        {
            ImGuiColumnData column;
            column.OffsetNorm = n / (float)columns_count;
            columns->Columns.push_back(column);
        }
    }

    for (int n = 0; n < columns_count; n++)
    {
        // Compute clipping rectangle
        ImGuiColumnData* column = &columns->Columns[n];
        float clip_x1 = ImFloor(0.5f + window->Pos.x + GetColumnOffset(n));
        float clip_x2 = ImFloor(0.5f + window->Pos.x + GetColumnOffset(n + 1) - 1.0f);
        column->ClipRect = ImRect(clip_x1, -FLT_MAX, clip_x2, +FLT_MAX);
        column->ClipRect.ClipWith(window->ClipRect);
    }

    if (columns->Count > 1)
    {
        window->DrawList->ChannelsSplit(columns->Count);
        PushColumnClipRect();
    }
    PushItemWidth(GetColumnWidth() * 0.65f);
}

void ImGui::EndColumns()
{
    ImGuiContext& g = *GImGui;
    ImGuiWindow* window = GetCurrentWindow();
    ImGuiColumns* columns = window->DC.CurrentColumns;
    IM_ASSERT(columns != NULL);

    PopItemWidth();
    if (columns->Count > 1)
    {
        PopClipRect();
        window->DrawList->ChannelsMerge();
    }

    columns->LineMaxY = ImMax(columns->LineMaxY, window->DC.CursorPos.y);
    window->DC.CursorPos.y = columns->LineMaxY;
    if (!(columns->Flags & ImGuiColumnsFlags_GrowParentContentsSize))
        window->DC.CursorMaxPos.x = columns->BackupCursorMaxPosX;  // Restore cursor max pos, as columns don't grow parent

    // Draw columns borders and handle resize
    bool is_being_resized = false;
    if (!(columns->Flags & ImGuiColumnsFlags_NoBorder) && !window->SkipItems)
    {
        // We clip Y boundaries CPU side because very long triangles are mishandled by some GPU drivers.
        const float y1 = ImMax(columns->BackupCursorPosY, window->ClipRect.Min.y);
        const float y2 = ImMin(window->DC.CursorPos.y, window->ClipRect.Max.y);
        int dragging_column = -1;
        for (int n = 1; n < columns->Count; n++)
        {
            ImGuiColumnData* column = &columns->Columns[n];
            float x = window->Pos.x + GetColumnOffset(n);
            const ImGuiID column_id = columns->ID + ImGuiID(n);
            const float column_hit_hw = COLUMNS_HIT_RECT_HALF_WIDTH;
            const ImRect column_hit_rect(ImVec2(x - column_hit_hw, y1), ImVec2(x + column_hit_hw, y2));
            KeepAliveID(column_id);
            if (IsClippedEx(column_hit_rect, column_id, false))
                continue;

            bool hovered = false, held = false;
            if (!(columns->Flags & ImGuiColumnsFlags_NoResize))
            {
                ButtonBehavior(column_hit_rect, column_id, &hovered, &held);
                if (hovered || held)
                    g.MouseCursor = ImGuiMouseCursor_ResizeEW;
                if (held && !(column->Flags & ImGuiColumnsFlags_NoResize))
                    dragging_column = n;
            }

            // Draw column
            const ImU32 col = GetColorU32(held ? ImGuiCol_SeparatorActive : hovered ? ImGuiCol_SeparatorHovered : ImGuiCol_Separator);
            const float xi = (float)(int)x;
            window->DrawList->AddLine(ImVec2(xi, y1 + 1.0f), ImVec2(xi, y2), col);
        }

        // Apply dragging after drawing the column lines, so our rendered lines are in sync with how items were displayed during the frame.
        if (dragging_column != -1)
        {
            if (!columns->IsBeingResized)
                for (int n = 0; n < columns->Count + 1; n++)
                    columns->Columns[n].OffsetNormBeforeResize = columns->Columns[n].OffsetNorm;
            columns->IsBeingResized = is_being_resized = true;
            float x = GetDraggedColumnOffset(columns, dragging_column);
            SetColumnOffset(dragging_column, x);
        }
    }
    columns->IsBeingResized = is_being_resized;

    window->DC.CurrentColumns = NULL;
    window->DC.ColumnsOffset.x = 0.0f;
    window->DC.CursorPos.x = (float)(int)(window->Pos.x + window->DC.Indent.x + window->DC.ColumnsOffset.x);
}

// [2018-03: This is currently the only public API, while we are working on making BeginColumns/EndColumns user-facing]
void ImGui::Columns(int columns_count, const char* id, bool border)
{
    ImGuiWindow* window = GetCurrentWindow();
    IM_ASSERT(columns_count >= 1);

    ImGuiColumnsFlags flags = (border ? 0 : ImGuiColumnsFlags_NoBorder);
    //flags |= ImGuiColumnsFlags_NoPreserveWidths; // NB: Legacy behavior
    ImGuiColumns* columns = window->DC.CurrentColumns;
    if (columns != NULL && columns->Count == columns_count && columns->Flags == flags)
        return;

    if (columns != NULL)
        EndColumns();

    if (columns_count != 1)
        BeginColumns(id, columns_count, flags);
}

//-----------------------------------------------------------------------------
// [SECTION] DRAG AND DROP
//-----------------------------------------------------------------------------

void ImGui::ClearDragDrop()
{
    ImGuiContext& g = *GImGui;
    g.DragDropActive = false;
    g.DragDropPayload.Clear();
    g.DragDropAcceptFlags = ImGuiDragDropFlags_None;
    g.DragDropAcceptIdCurr = g.DragDropAcceptIdPrev = 0;
    g.DragDropAcceptIdCurrRectSurface = FLT_MAX;
    g.DragDropAcceptFrameCount = -1;

    g.DragDropPayloadBufHeap.clear();
    memset(&g.DragDropPayloadBufLocal, 0, sizeof(g.DragDropPayloadBufLocal));
}

// Call when current ID is active.
// When this returns true you need to: a) call SetDragDropPayload() exactly once, b) you may render the payload visual/description, c) call EndDragDropSource()
bool ImGui::BeginDragDropSource(ImGuiDragDropFlags flags)
{
    ImGuiContext& g = *GImGui;
    ImGuiWindow* window = g.CurrentWindow;

    bool source_drag_active = false;
    ImGuiID source_id = 0;
    ImGuiID source_parent_id = 0;
    int mouse_button = 0;
    if (!(flags & ImGuiDragDropFlags_SourceExtern))
    {
        source_id = window->DC.LastItemId;
        if (source_id != 0 && g.ActiveId != source_id) // Early out for most common case
            return false;
        if (g.IO.MouseDown[mouse_button] == false)
            return false;

        if (source_id == 0)
        {
            // If you want to use BeginDragDropSource() on an item with no unique identifier for interaction, such as Text() or Image(), you need to:
            // A) Read the explanation below, B) Use the ImGuiDragDropFlags_SourceAllowNullID flag, C) Swallow your programmer pride.
            if (!(flags & ImGuiDragDropFlags_SourceAllowNullID))
            {
                IM_ASSERT(0);
                return false;
            }

            // Magic fallback (=somehow reprehensible) to handle items with no assigned ID, e.g. Text(), Image()
            // We build a throwaway ID based on current ID stack + relative AABB of items in window.
            // THE IDENTIFIER WON'T SURVIVE ANY REPOSITIONING OF THE WIDGET, so if your widget moves your dragging operation will be canceled.
            // We don't need to maintain/call ClearActiveID() as releasing the button will early out this function and trigger !ActiveIdIsAlive.
            bool is_hovered = (window->DC.LastItemStatusFlags & ImGuiItemStatusFlags_HoveredRect) != 0;
            if (!is_hovered && (g.ActiveId == 0 || g.ActiveIdWindow != window))
                return false;
            source_id = window->DC.LastItemId = window->GetIDFromRectangle(window->DC.LastItemRect);
            if (is_hovered)
                SetHoveredID(source_id);
            if (is_hovered && g.IO.MouseClicked[mouse_button])
            {
                SetActiveID(source_id, window);
                FocusWindow(window);
            }
            if (g.ActiveId == source_id) // Allow the underlying widget to display/return hovered during the mouse release frame, else we would get a flicker.
                g.ActiveIdAllowOverlap = is_hovered;
        }
        else
        {
            g.ActiveIdAllowOverlap = false;
        }
        if (g.ActiveId != source_id)
            return false;
        source_parent_id = window->IDStack.back();
        source_drag_active = IsMouseDragging(mouse_button);
    }
    else
    {
        window = NULL;
        source_id = ImHashStr("#SourceExtern");
        source_drag_active = true;
    }

    if (source_drag_active)
    {
        if (!g.DragDropActive)
        {
            IM_ASSERT(source_id != 0);
            ClearDragDrop();
            ImGuiPayload& payload = g.DragDropPayload;
            payload.SourceId = source_id;
            payload.SourceParentId = source_parent_id;
            g.DragDropActive = true;
            g.DragDropSourceFlags = flags;
            g.DragDropMouseButton = mouse_button;
        }
        g.DragDropSourceFrameCount = g.FrameCount;
        g.DragDropWithinSourceOrTarget = true;

        if (!(flags & ImGuiDragDropFlags_SourceNoPreviewTooltip))
        {
            // Target can request the Source to not display its tooltip (we use a dedicated flag to make this request explicit)
            // We unfortunately can't just modify the source flags and skip the call to BeginTooltip, as caller may be emitting contents.
            BeginTooltip();
            if (g.DragDropAcceptIdPrev && (g.DragDropAcceptFlags & ImGuiDragDropFlags_AcceptNoPreviewTooltip))
            {
                ImGuiWindow* tooltip_window = g.CurrentWindow;
                tooltip_window->SkipItems = true;
                tooltip_window->HiddenFramesCanSkipItems = 1;
            }
        }

        if (!(flags & ImGuiDragDropFlags_SourceNoDisableHover) && !(flags & ImGuiDragDropFlags_SourceExtern))
            window->DC.LastItemStatusFlags &= ~ImGuiItemStatusFlags_HoveredRect;

        return true;
    }
    return false;
}

void ImGui::EndDragDropSource()
{
    ImGuiContext& g = *GImGui;
    IM_ASSERT(g.DragDropActive);
    IM_ASSERT(g.DragDropWithinSourceOrTarget && "Not after a BeginDragDropSource()?");

    if (!(g.DragDropSourceFlags & ImGuiDragDropFlags_SourceNoPreviewTooltip))
        EndTooltip();

    // Discard the drag if have not called SetDragDropPayload()
    if (g.DragDropPayload.DataFrameCount == -1)
        ClearDragDrop();
    g.DragDropWithinSourceOrTarget = false;
}

// Use 'cond' to choose to submit payload on drag start or every frame
bool ImGui::SetDragDropPayload(const char* type, const void* data, size_t data_size, ImGuiCond cond)
{
    ImGuiContext& g = *GImGui;
    ImGuiPayload& payload = g.DragDropPayload;
    if (cond == 0)
        cond = ImGuiCond_Always;

    IM_ASSERT(type != NULL);
    IM_ASSERT(strlen(type) < IM_ARRAYSIZE(payload.DataType) && "Payload type can be at most 32 characters long");
    IM_ASSERT((data != NULL && data_size > 0) || (data == NULL && data_size == 0));
    IM_ASSERT(cond == ImGuiCond_Always || cond == ImGuiCond_Once);
    IM_ASSERT(payload.SourceId != 0);                               // Not called between BeginDragDropSource() and EndDragDropSource()

    if (cond == ImGuiCond_Always || payload.DataFrameCount == -1)
    {
        // Copy payload
        ImStrncpy(payload.DataType, type, IM_ARRAYSIZE(payload.DataType));
        g.DragDropPayloadBufHeap.resize(0);
        if (data_size > sizeof(g.DragDropPayloadBufLocal))
        {
            // Store in heap
            g.DragDropPayloadBufHeap.resize((int)data_size);
            payload.Data = g.DragDropPayloadBufHeap.Data;
            memcpy(payload.Data, data, data_size);
        }
        else if (data_size > 0)
        {
            // Store locally
            memset(&g.DragDropPayloadBufLocal, 0, sizeof(g.DragDropPayloadBufLocal));
            payload.Data = g.DragDropPayloadBufLocal;
            memcpy(payload.Data, data, data_size);
        }
        else
        {
            payload.Data = NULL;
        }
        payload.DataSize = (int)data_size;
    }
    payload.DataFrameCount = g.FrameCount;

    return (g.DragDropAcceptFrameCount == g.FrameCount) || (g.DragDropAcceptFrameCount == g.FrameCount - 1);
}

bool ImGui::BeginDragDropTargetCustom(const ImRect& bb, ImGuiID id)
{
    ImGuiContext& g = *GImGui;
    if (!g.DragDropActive)
        return false;

    ImGuiWindow* window = g.CurrentWindow;
    if (g.HoveredWindow == NULL || window->RootWindow != g.HoveredWindow->RootWindow)
        return false;
    IM_ASSERT(id != 0);
    if (!IsMouseHoveringRect(bb.Min, bb.Max) || (id == g.DragDropPayload.SourceId))
        return false;
    if (window->SkipItems)
        return false;

    IM_ASSERT(g.DragDropWithinSourceOrTarget == false);
    g.DragDropTargetRect = bb;
    g.DragDropTargetId = id;
    g.DragDropWithinSourceOrTarget = true;
    return true;
}

// We don't use BeginDragDropTargetCustom() and duplicate its code because:
// 1) we use LastItemRectHoveredRect which handles items that pushes a temporarily clip rectangle in their code. Calling BeginDragDropTargetCustom(LastItemRect) would not handle them.
// 2) and it's faster. as this code may be very frequently called, we want to early out as fast as we can.
// Also note how the HoveredWindow test is positioned differently in both functions (in both functions we optimize for the cheapest early out case)
bool ImGui::BeginDragDropTarget()
{
    ImGuiContext& g = *GImGui;
    if (!g.DragDropActive)
        return false;

    ImGuiWindow* window = g.CurrentWindow;
    if (!(window->DC.LastItemStatusFlags & ImGuiItemStatusFlags_HoveredRect))
        return false;
    if (g.HoveredWindow == NULL || window->RootWindow != g.HoveredWindow->RootWindow)
        return false;

    const ImRect& display_rect = (window->DC.LastItemStatusFlags & ImGuiItemStatusFlags_HasDisplayRect) ? window->DC.LastItemDisplayRect : window->DC.LastItemRect;
    ImGuiID id = window->DC.LastItemId;
    if (id == 0)
        id = window->GetIDFromRectangle(display_rect);
    if (g.DragDropPayload.SourceId == id)
        return false;

    IM_ASSERT(g.DragDropWithinSourceOrTarget == false);
    g.DragDropTargetRect = display_rect;
    g.DragDropTargetId = id;
    g.DragDropWithinSourceOrTarget = true;
    return true;
}

bool ImGui::IsDragDropPayloadBeingAccepted()
{
    ImGuiContext& g = *GImGui;
    return g.DragDropActive && g.DragDropAcceptIdPrev != 0;
}

const ImGuiPayload* ImGui::AcceptDragDropPayload(const char* type, ImGuiDragDropFlags flags)
{
    ImGuiContext& g = *GImGui;
    ImGuiWindow* window = g.CurrentWindow;
    ImGuiPayload& payload = g.DragDropPayload;
    IM_ASSERT(g.DragDropActive);                        // Not called between BeginDragDropTarget() and EndDragDropTarget() ?
    IM_ASSERT(payload.DataFrameCount != -1);            // Forgot to call EndDragDropTarget() ?
    if (type != NULL && !payload.IsDataType(type))
        return NULL;

    // Accept smallest drag target bounding box, this allows us to nest drag targets conveniently without ordering constraints.
    // NB: We currently accept NULL id as target. However, overlapping targets requires a unique ID to function!
    const bool was_accepted_previously = (g.DragDropAcceptIdPrev == g.DragDropTargetId);
    ImRect r = g.DragDropTargetRect;
    float r_surface = r.GetWidth() * r.GetHeight();
    if (r_surface < g.DragDropAcceptIdCurrRectSurface)
    {
        g.DragDropAcceptFlags = flags;
        g.DragDropAcceptIdCurr = g.DragDropTargetId;
        g.DragDropAcceptIdCurrRectSurface = r_surface;
    }

    // Render default drop visuals
    payload.Preview = was_accepted_previously;
    flags |= (g.DragDropSourceFlags & ImGuiDragDropFlags_AcceptNoDrawDefaultRect); // Source can also inhibit the preview (useful for external sources that lives for 1 frame)
    if (!(flags & ImGuiDragDropFlags_AcceptNoDrawDefaultRect) && payload.Preview)
    {
        // FIXME-DRAG: Settle on a proper default visuals for drop target.
        r.Expand(3.5f);
        bool push_clip_rect = !window->ClipRect.Contains(r);
        if (push_clip_rect) window->DrawList->PushClipRect(r.Min-ImVec2(1,1), r.Max+ImVec2(1,1));
        window->DrawList->AddRect(r.Min, r.Max, GetColorU32(ImGuiCol_DragDropTarget), 0.0f, ~0, 2.0f);
        if (push_clip_rect) window->DrawList->PopClipRect();
    }

    g.DragDropAcceptFrameCount = g.FrameCount;
    payload.Delivery = was_accepted_previously && !IsMouseDown(g.DragDropMouseButton); // For extern drag sources affecting os window focus, it's easier to just test !IsMouseDown() instead of IsMouseReleased()
    if (!payload.Delivery && !(flags & ImGuiDragDropFlags_AcceptBeforeDelivery))
        return NULL;

    return &payload;
}

const ImGuiPayload* ImGui::GetDragDropPayload()
{
    ImGuiContext& g = *GImGui;
    return g.DragDropActive ? &g.DragDropPayload : NULL;
}

// We don't really use/need this now, but added it for the sake of consistency and because we might need it later.
void ImGui::EndDragDropTarget()
{
    ImGuiContext& g = *GImGui;
    IM_ASSERT(g.DragDropActive);
    IM_ASSERT(g.DragDropWithinSourceOrTarget);
    g.DragDropWithinSourceOrTarget = false;
}


//-----------------------------------------------------------------------------
// [SECTION] LOGGING/CAPTURING
//-----------------------------------------------------------------------------
// All text output from the interface can be captured into tty/file/clipboard.
// By default, tree nodes are automatically opened during logging.
//-----------------------------------------------------------------------------

// Pass text data straight to log (without being displayed)
void ImGui::LogText(const char* fmt, ...)
{
    ImGuiContext& g = *GImGui;
    if (!g.LogEnabled)
        return;

    va_list args;
    va_start(args, fmt);
    if (g.LogFile)
        vfprintf(g.LogFile, fmt, args);
    else
        g.LogBuffer.appendfv(fmt, args);
    va_end(args);
}

// Internal version that takes a position to decide on newline placement and pad items according to their depth.
// We split text into individual lines to add current tree level padding
void ImGui::LogRenderedText(const ImVec2* ref_pos, const char* text, const char* text_end)
{
    ImGuiContext& g = *GImGui;
    ImGuiWindow* window = g.CurrentWindow;

    if (!text_end)
        text_end = FindRenderedTextEnd(text, text_end);

    const bool log_new_line = ref_pos && (ref_pos->y > g.LogLinePosY + 1);
    if (ref_pos)
        g.LogLinePosY = ref_pos->y;
    if (log_new_line)
        g.LogLineFirstItem = true;

    const char* text_remaining = text;
    if (g.LogDepthRef > window->DC.TreeDepth)  // Re-adjust padding if we have popped out of our starting depth
        g.LogDepthRef = window->DC.TreeDepth;
    const int tree_depth = (window->DC.TreeDepth - g.LogDepthRef);
    for (;;)
    {
        // Split the string. Each new line (after a '\n') is followed by spacing corresponding to the current depth of our log entry.
        // We don't add a trailing \n to allow a subsequent item on the same line to be captured.
        const char* line_start = text_remaining;
        const char* line_end = ImStreolRange(line_start, text_end);
        const bool is_first_line = (line_start == text);
        const bool is_last_line = (line_end == text_end);
        if (!is_last_line || (line_start != line_end))
        {
            const int char_count = (int)(line_end - line_start);
            if (log_new_line || !is_first_line)
                LogText(IM_NEWLINE "%*s%.*s", tree_depth * 4, "", char_count, line_start);
            else if (g.LogLineFirstItem)
                LogText("%*s%.*s", tree_depth * 4, "", char_count, line_start);
            else
                LogText(" %.*s", char_count, line_start);
            g.LogLineFirstItem = false;
        }
        else if (log_new_line)
        {
            // An empty "" string at a different Y position should output a carriage return.
            LogText(IM_NEWLINE);
            break;
        }

        if (is_last_line)
            break;
        text_remaining = line_end + 1;
    }
}

// Start logging/capturing text output
void ImGui::LogBegin(ImGuiLogType type, int auto_open_depth)
{
    ImGuiContext& g = *GImGui;
    ImGuiWindow* window = g.CurrentWindow;
    IM_ASSERT(g.LogEnabled == false);
    IM_ASSERT(g.LogFile == NULL);
    IM_ASSERT(g.LogBuffer.empty());
    g.LogEnabled = true;
    g.LogType = type;
    g.LogDepthRef = window->DC.TreeDepth;
    g.LogDepthToExpand = ((auto_open_depth >= 0) ? auto_open_depth : g.LogDepthToExpandDefault);
    g.LogLinePosY = FLT_MAX;
    g.LogLineFirstItem = true;
}

void ImGui::LogToTTY(int auto_open_depth)
{
    ImGuiContext& g = *GImGui;
    if (g.LogEnabled)
        return;
    LogBegin(ImGuiLogType_TTY, auto_open_depth);
    g.LogFile = stdout;
}

// Start logging/capturing text output to given file
void ImGui::LogToFile(int auto_open_depth, const char* filename)
{
    ImGuiContext& g = *GImGui;
    if (g.LogEnabled)
        return;

    // FIXME: We could probably open the file in text mode "at", however note that clipboard/buffer logging will still
    // be subject to outputting OS-incompatible carriage return if within strings the user doesn't use IM_NEWLINE.
    // By opening the file in binary mode "ab" we have consistent output everywhere.
    if (!filename)
        filename = g.IO.LogFilename;
    if (!filename || !filename[0])
        return;
    FILE* f = ImFileOpen(filename, "ab");
    if (f == NULL)
    {
        IM_ASSERT(0);
        return;
    }

    LogBegin(ImGuiLogType_File, auto_open_depth);
    g.LogFile = f;
}

// Start logging/capturing text output to clipboard
void ImGui::LogToClipboard(int auto_open_depth)
{
    ImGuiContext& g = *GImGui;
    if (g.LogEnabled)
        return;
    LogBegin(ImGuiLogType_Clipboard, auto_open_depth);
}

void ImGui::LogToBuffer(int auto_open_depth)
{
    ImGuiContext& g = *GImGui;
    if (g.LogEnabled)
        return;
    LogBegin(ImGuiLogType_Buffer, auto_open_depth);
}

void ImGui::LogFinish()
{
    ImGuiContext& g = *GImGui;
    if (!g.LogEnabled)
        return;

    LogText(IM_NEWLINE);
    switch (g.LogType)
    {
    case ImGuiLogType_TTY:
        fflush(g.LogFile);
        break;
    case ImGuiLogType_File:
        fclose(g.LogFile);
        break;
    case ImGuiLogType_Buffer:
        break;
    case ImGuiLogType_Clipboard:
        if (!g.LogBuffer.empty())
            SetClipboardText(g.LogBuffer.begin());
        break;
    case ImGuiLogType_None:
        IM_ASSERT(0);
        break;
    }

    g.LogEnabled = false;
    g.LogType = ImGuiLogType_None;
    g.LogFile = NULL;
    g.LogBuffer.clear();
}

// Helper to display logging buttons
// FIXME-OBSOLETE: We should probably obsolete this and let the user have their own helper (this is one of the oldest function alive!)
void ImGui::LogButtons()
{
    ImGuiContext& g = *GImGui;

    PushID("LogButtons");
    const bool log_to_tty = Button("Log To TTY"); SameLine();
    const bool log_to_file = Button("Log To File"); SameLine();
    const bool log_to_clipboard = Button("Log To Clipboard"); SameLine();
    PushAllowKeyboardFocus(false);
    SetNextItemWidth(80.0f);
    SliderInt("Default Depth", &g.LogDepthToExpandDefault, 0, 9, NULL);
    PopAllowKeyboardFocus();
    PopID();

    // Start logging at the end of the function so that the buttons don't appear in the log
    if (log_to_tty)
        LogToTTY();
    if (log_to_file)
        LogToFile();
    if (log_to_clipboard)
        LogToClipboard();
}

//-----------------------------------------------------------------------------
// [SECTION] SETTINGS
//-----------------------------------------------------------------------------

void ImGui::MarkIniSettingsDirty()
{
    ImGuiContext& g = *GImGui;
    if (g.SettingsDirtyTimer <= 0.0f)
        g.SettingsDirtyTimer = g.IO.IniSavingRate;
}

void ImGui::MarkIniSettingsDirty(ImGuiWindow* window)
{
    ImGuiContext& g = *GImGui;
    if (!(window->Flags & ImGuiWindowFlags_NoSavedSettings))
        if (g.SettingsDirtyTimer <= 0.0f)
            g.SettingsDirtyTimer = g.IO.IniSavingRate;
}

ImGuiWindowSettings* ImGui::CreateNewWindowSettings(const char* name)
{
    ImGuiContext& g = *GImGui;
    g.SettingsWindows.push_back(ImGuiWindowSettings());
    ImGuiWindowSettings* settings = &g.SettingsWindows.back();
    settings->Name = ImStrdup(name);
    settings->ID = ImHashStr(name);
    return settings;
}

ImGuiWindowSettings* ImGui::FindWindowSettings(ImGuiID id)
{
    ImGuiContext& g = *GImGui;
    for (int i = 0; i != g.SettingsWindows.Size; i++)
        if (g.SettingsWindows[i].ID == id)
            return &g.SettingsWindows[i];
    return NULL;
}

ImGuiWindowSettings* ImGui::FindOrCreateWindowSettings(const char* name)
{
    if (ImGuiWindowSettings* settings = FindWindowSettings(ImHashStr(name)))
        return settings;
    return CreateNewWindowSettings(name);
}

void ImGui::LoadIniSettingsFromDisk(const char* ini_filename)
{
    size_t file_data_size = 0;
    char* file_data = (char*)ImFileLoadToMemory(ini_filename, "rb", &file_data_size);
    if (!file_data)
        return;
    LoadIniSettingsFromMemory(file_data, (size_t)file_data_size);
    IM_FREE(file_data);
}

ImGuiSettingsHandler* ImGui::FindSettingsHandler(const char* type_name)
{
    ImGuiContext& g = *GImGui;
    const ImGuiID type_hash = ImHashStr(type_name);
    for (int handler_n = 0; handler_n < g.SettingsHandlers.Size; handler_n++)
        if (g.SettingsHandlers[handler_n].TypeHash == type_hash)
            return &g.SettingsHandlers[handler_n];
    return NULL;
}

// Zero-tolerance, no error reporting, cheap .ini parsing
void ImGui::LoadIniSettingsFromMemory(const char* ini_data, size_t ini_size)
{
    ImGuiContext& g = *GImGui;
    IM_ASSERT(g.Initialized);
    IM_ASSERT(g.SettingsLoaded == false && g.FrameCount == 0);

    // For user convenience, we allow passing a non zero-terminated string (hence the ini_size parameter).
    // For our convenience and to make the code simpler, we'll also write zero-terminators within the buffer. So let's create a writable copy..
    if (ini_size == 0)
        ini_size = strlen(ini_data);
    char* buf = (char*)IM_ALLOC(ini_size + 1);
    char* buf_end = buf + ini_size;
    memcpy(buf, ini_data, ini_size);
    buf[ini_size] = 0;

    void* entry_data = NULL;
    ImGuiSettingsHandler* entry_handler = NULL;

    char* line_end = NULL;
    for (char* line = buf; line < buf_end; line = line_end + 1)
    {
        // Skip new lines markers, then find end of the line
        while (*line == '\n' || *line == '\r')
            line++;
        line_end = line;
        while (line_end < buf_end && *line_end != '\n' && *line_end != '\r')
            line_end++;
        line_end[0] = 0;
        if (line[0] == ';')
            continue;
        if (line[0] == '[' && line_end > line && line_end[-1] == ']')
        {
            // Parse "[Type][Name]". Note that 'Name' can itself contains [] characters, which is acceptable with the current format and parsing code.
            line_end[-1] = 0;
            const char* name_end = line_end - 1;
            const char* type_start = line + 1;
            char* type_end = (char*)(intptr_t)ImStrchrRange(type_start, name_end, ']');
            const char* name_start = type_end ? ImStrchrRange(type_end + 1, name_end, '[') : NULL;
            if (!type_end || !name_start)
            {
                name_start = type_start; // Import legacy entries that have no type
                type_start = "Window";
            }
            else
            {
                *type_end = 0; // Overwrite first ']'
                name_start++;  // Skip second '['
            }
            entry_handler = FindSettingsHandler(type_start);
            entry_data = entry_handler ? entry_handler->ReadOpenFn(&g, entry_handler, name_start) : NULL;
        }
        else if (entry_handler != NULL && entry_data != NULL)
        {
            // Let type handler parse the line
            entry_handler->ReadLineFn(&g, entry_handler, entry_data, line);
        }
    }
    IM_FREE(buf);
    g.SettingsLoaded = true;
}

void ImGui::SaveIniSettingsToDisk(const char* ini_filename)
{
    ImGuiContext& g = *GImGui;
    g.SettingsDirtyTimer = 0.0f;
    if (!ini_filename)
        return;

    size_t ini_data_size = 0;
    const char* ini_data = SaveIniSettingsToMemory(&ini_data_size);
    FILE* f = ImFileOpen(ini_filename, "wt");
    if (!f)
        return;
    fwrite(ini_data, sizeof(char), ini_data_size, f);
    fclose(f);
}

// Call registered handlers (e.g. SettingsHandlerWindow_WriteAll() + custom handlers) to write their stuff into a text buffer
const char* ImGui::SaveIniSettingsToMemory(size_t* out_size)
{
    ImGuiContext& g = *GImGui;
    g.SettingsDirtyTimer = 0.0f;
    g.SettingsIniData.Buf.resize(0);
    g.SettingsIniData.Buf.push_back(0);
    for (int handler_n = 0; handler_n < g.SettingsHandlers.Size; handler_n++)
    {
        ImGuiSettingsHandler* handler = &g.SettingsHandlers[handler_n];
        handler->WriteAllFn(&g, handler, &g.SettingsIniData);
    }
    if (out_size)
        *out_size = (size_t)g.SettingsIniData.size();
    return g.SettingsIniData.c_str();
}

static void* SettingsHandlerWindow_ReadOpen(ImGuiContext*, ImGuiSettingsHandler*, const char* name)
{
    ImGuiWindowSettings* settings = ImGui::FindWindowSettings(ImHashStr(name));
    if (!settings)
        settings = ImGui::CreateNewWindowSettings(name);
    return (void*)settings;
}

static void SettingsHandlerWindow_ReadLine(ImGuiContext*, ImGuiSettingsHandler*, void* entry, const char* line)
{
    ImGuiWindowSettings* settings = (ImGuiWindowSettings*)entry;
    float x, y;
    int i;
    if (sscanf(line, "Pos=%f,%f", &x, &y) == 2)         settings->Pos = ImVec2(x, y);
    else if (sscanf(line, "Size=%f,%f", &x, &y) == 2)   settings->Size = ImMax(ImVec2(x, y), GImGui->Style.WindowMinSize);
    else if (sscanf(line, "Collapsed=%d", &i) == 1)     settings->Collapsed = (i != 0);
}

static void SettingsHandlerWindow_WriteAll(ImGuiContext* imgui_ctx, ImGuiSettingsHandler* handler, ImGuiTextBuffer* buf)
{
    // Gather data from windows that were active during this session
    // (if a window wasn't opened in this session we preserve its settings)
    ImGuiContext& g = *imgui_ctx;
    for (int i = 0; i != g.Windows.Size; i++)
    {
        ImGuiWindow* window = g.Windows[i];
        if (window->Flags & ImGuiWindowFlags_NoSavedSettings)
            continue;

        ImGuiWindowSettings* settings = (window->SettingsIdx != -1) ? &g.SettingsWindows[window->SettingsIdx] : ImGui::FindWindowSettings(window->ID);
        if (!settings)
        {
            settings = ImGui::CreateNewWindowSettings(window->Name);
            window->SettingsIdx = g.SettingsWindows.index_from_ptr(settings);
        }
        IM_ASSERT(settings->ID == window->ID);
        settings->Pos = window->Pos;
        settings->Size = window->SizeFull;
        settings->Collapsed = window->Collapsed;
    }

    // Write to text buffer
    buf->reserve(buf->size() + g.SettingsWindows.Size * 96); // ballpark reserve
    for (int i = 0; i != g.SettingsWindows.Size; i++)
    {
        const ImGuiWindowSettings* settings = &g.SettingsWindows[i];
        if (settings->Pos.x == FLT_MAX)
            continue;
        const char* name = settings->Name;
        if (const char* p = strstr(name, "###"))  // Skip to the "###" marker if any. We don't skip past to match the behavior of GetID()
            name = p;
        buf->appendf("[%s][%s]\n", handler->TypeName, name);
        buf->appendf("Pos=%d,%d\n", (int)settings->Pos.x, (int)settings->Pos.y);
        buf->appendf("Size=%d,%d\n", (int)settings->Size.x, (int)settings->Size.y);
        buf->appendf("Collapsed=%d\n", settings->Collapsed);
        buf->appendf("\n");
    }
}


//-----------------------------------------------------------------------------
// [SECTION] VIEWPORTS, PLATFORM WINDOWS
//-----------------------------------------------------------------------------

// (this section is filled in the 'docking' branch)


//-----------------------------------------------------------------------------
// [SECTION] DOCKING
//-----------------------------------------------------------------------------

// (this section is filled in the 'docking' branch)


//-----------------------------------------------------------------------------
// [SECTION] PLATFORM DEPENDENT HELPERS
//-----------------------------------------------------------------------------

#if defined(_WIN32) && !defined(_WINDOWS_) && !defined(IMGUI_DISABLE_WIN32_FUNCTIONS) && (!defined(IMGUI_DISABLE_WIN32_DEFAULT_CLIPBOARD_FUNCTIONS) || !defined(IMGUI_DISABLE_WIN32_DEFAULT_IME_FUNCTIONS))
#ifndef WIN32_LEAN_AND_MEAN
#define WIN32_LEAN_AND_MEAN
#endif
#ifndef __MINGW32__
#include <Windows.h>
#else
#include <windows.h>
#endif
#endif

// Win32 API clipboard implementation
#if defined(_WIN32) && !defined(IMGUI_DISABLE_WIN32_FUNCTIONS) && !defined(IMGUI_DISABLE_WIN32_DEFAULT_CLIPBOARD_FUNCTIONS)

#ifdef _MSC_VER
#pragma comment(lib, "user32")
#endif

static const char* GetClipboardTextFn_DefaultImpl(void*)
{
    static ImVector<char> buf_local;
    buf_local.clear();
    if (!::OpenClipboard(NULL))
        return NULL;
    HANDLE wbuf_handle = ::GetClipboardData(CF_UNICODETEXT);
    if (wbuf_handle == NULL)
    {
        ::CloseClipboard();
        return NULL;
    }
    if (ImWchar* wbuf_global = (ImWchar*)::GlobalLock(wbuf_handle))
    {
        int buf_len = ImTextCountUtf8BytesFromStr(wbuf_global, NULL) + 1;
        buf_local.resize(buf_len);
        ImTextStrToUtf8(buf_local.Data, buf_len, wbuf_global, NULL);
    }
    ::GlobalUnlock(wbuf_handle);
    ::CloseClipboard();
    return buf_local.Data;
}

static void SetClipboardTextFn_DefaultImpl(void*, const char* text)
{
    if (!::OpenClipboard(NULL))
        return;
    const int wbuf_length = ImTextCountCharsFromUtf8(text, NULL) + 1;
    HGLOBAL wbuf_handle = ::GlobalAlloc(GMEM_MOVEABLE, (SIZE_T)wbuf_length * sizeof(ImWchar));
    if (wbuf_handle == NULL)
    {
        ::CloseClipboard();
        return;
    }
    ImWchar* wbuf_global = (ImWchar*)::GlobalLock(wbuf_handle);
    ImTextStrFromUtf8(wbuf_global, wbuf_length, text, NULL);
    ::GlobalUnlock(wbuf_handle);
    ::EmptyClipboard();
    if (::SetClipboardData(CF_UNICODETEXT, wbuf_handle) == NULL)
        ::GlobalFree(wbuf_handle);
    ::CloseClipboard();
}

#else

// Local ImGui-only clipboard implementation, if user hasn't defined better clipboard handlers
static const char* GetClipboardTextFn_DefaultImpl(void*)
{
    ImGuiContext& g = *GImGui;
    return g.PrivateClipboard.empty() ? NULL : g.PrivateClipboard.begin();
}

// Local ImGui-only clipboard implementation, if user hasn't defined better clipboard handlers
static void SetClipboardTextFn_DefaultImpl(void*, const char* text)
{
    ImGuiContext& g = *GImGui;
    g.PrivateClipboard.clear();
    const char* text_end = text + strlen(text);
    g.PrivateClipboard.resize((int)(text_end - text) + 1);
    memcpy(&g.PrivateClipboard[0], text, (size_t)(text_end - text));
    g.PrivateClipboard[(int)(text_end - text)] = 0;
}

#endif

// Win32 API IME support (for Asian languages, etc.)
#if defined(_WIN32) && !defined(__GNUC__) && !defined(IMGUI_DISABLE_WIN32_DEFAULT_IME_FUNCTIONS)

#include <imm.h>
#ifdef _MSC_VER
#pragma comment(lib, "imm32")
#endif

static void ImeSetInputScreenPosFn_DefaultImpl(int x, int y)
{
    // Notify OS Input Method Editor of text input position
    if (HWND hwnd = (HWND)GImGui->IO.ImeWindowHandle)
        if (HIMC himc = ::ImmGetContext(hwnd))
        {
            COMPOSITIONFORM cf;
            cf.ptCurrentPos.x = x;
            cf.ptCurrentPos.y = y;
            cf.dwStyle = CFS_FORCE_POSITION;
            ::ImmSetCompositionWindow(himc, &cf);
            ::ImmReleaseContext(hwnd, himc);
        }
}

#else

static void ImeSetInputScreenPosFn_DefaultImpl(int, int) {}

#endif

//-----------------------------------------------------------------------------
// [SECTION] METRICS/DEBUG WINDOW
//-----------------------------------------------------------------------------

void ImGui::ShowMetricsWindow(bool* p_open)
{
    if (!ImGui::Begin("ImGui Metrics", p_open))
    {
        ImGui::End();
        return;
    }

    enum { RT_OuterRect, RT_OuterRectClipped, RT_InnerMainRect, RT_InnerClipRect, RT_ContentsRegionRect, RT_ContentsFullRect };
    static bool show_windows_begin_order = false;
    static bool show_windows_rects = false;
    static int  show_windows_rect_type = RT_ContentsRegionRect;
    static bool show_drawcmd_clip_rects = true;

    ImGuiIO& io = ImGui::GetIO();
    ImGui::Text("Dear ImGui %s", ImGui::GetVersion());
    ImGui::Text("Application average %.3f ms/frame (%.1f FPS)", 1000.0f / io.Framerate, io.Framerate);
    ImGui::Text("%d vertices, %d indices (%d triangles)", io.MetricsRenderVertices, io.MetricsRenderIndices, io.MetricsRenderIndices / 3);
    ImGui::Text("%d active windows (%d visible)", io.MetricsActiveWindows, io.MetricsRenderWindows);
    ImGui::Text("%d active allocations", io.MetricsActiveAllocations);
    ImGui::Separator();

    struct Funcs
    {
        static void NodeDrawList(ImGuiWindow* window, ImDrawList* draw_list, const char* label)
        {
            bool node_open = ImGui::TreeNode(draw_list, "%s: '%s' %d vtx, %d indices, %d cmds", label, draw_list->_OwnerName ? draw_list->_OwnerName : "", draw_list->VtxBuffer.Size, draw_list->IdxBuffer.Size, draw_list->CmdBuffer.Size);
            if (draw_list == ImGui::GetWindowDrawList())
            {
                ImGui::SameLine();
                ImGui::TextColored(ImVec4(1.0f,0.4f,0.4f,1.0f), "CURRENTLY APPENDING"); // Can't display stats for active draw list! (we don't have the data double-buffered)
                if (node_open) ImGui::TreePop();
                return;
            }

            ImDrawList* fg_draw_list = GetForegroundDrawList(window); // Render additional visuals into the top-most draw list
            if (window && IsItemHovered())
                fg_draw_list->AddRect(window->Pos, window->Pos + window->Size, IM_COL32(255, 255, 0, 255));
            if (!node_open)
                return;

            int elem_offset = 0;
            for (const ImDrawCmd* pcmd = draw_list->CmdBuffer.begin(); pcmd < draw_list->CmdBuffer.end(); elem_offset += pcmd->ElemCount, pcmd++)
            {
                if (pcmd->UserCallback == NULL && pcmd->ElemCount == 0)
                    continue;
                if (pcmd->UserCallback)
                {
                    ImGui::BulletText("Callback %p, user_data %p", pcmd->UserCallback, pcmd->UserCallbackData);
                    continue;
                }
                ImDrawIdx* idx_buffer = (draw_list->IdxBuffer.Size > 0) ? draw_list->IdxBuffer.Data : NULL;
                bool pcmd_node_open = ImGui::TreeNode((void*)(pcmd - draw_list->CmdBuffer.begin()), "Draw %4d %s vtx, tex 0x%p, clip_rect (%4.0f,%4.0f)-(%4.0f,%4.0f)", pcmd->ElemCount, draw_list->IdxBuffer.Size > 0 ? "indexed" : "non-indexed", pcmd->TextureId, pcmd->ClipRect.x, pcmd->ClipRect.y, pcmd->ClipRect.z, pcmd->ClipRect.w);
                if (show_drawcmd_clip_rects && fg_draw_list && ImGui::IsItemHovered())
                {
                    ImRect clip_rect = pcmd->ClipRect;
                    ImRect vtxs_rect;
                    for (int i = elem_offset; i < elem_offset + (int)pcmd->ElemCount; i++)
                        vtxs_rect.Add(draw_list->VtxBuffer[idx_buffer ? idx_buffer[i] : i].pos);
                    clip_rect.Floor(); fg_draw_list->AddRect(clip_rect.Min, clip_rect.Max, IM_COL32(255,255,0,255));
                    vtxs_rect.Floor(); fg_draw_list->AddRect(vtxs_rect.Min, vtxs_rect.Max, IM_COL32(255,0,255,255));
                }
                if (!pcmd_node_open)
                    continue;

                // Display individual triangles/vertices. Hover on to get the corresponding triangle highlighted.
                ImGuiListClipper clipper(pcmd->ElemCount/3); // Manually coarse clip our print out of individual vertices to save CPU, only items that may be visible.
                while (clipper.Step())
                    for (int prim = clipper.DisplayStart, idx_i = elem_offset + clipper.DisplayStart*3; prim < clipper.DisplayEnd; prim++)
                    {
                        char buf[300];
                        char *buf_p = buf, *buf_end = buf + IM_ARRAYSIZE(buf);
                        ImVec2 triangles_pos[3];
                        for (int n = 0; n < 3; n++, idx_i++)
                        {
                            int vtx_i = idx_buffer ? idx_buffer[idx_i] : idx_i;
                            ImDrawVert& v = draw_list->VtxBuffer[vtx_i];
                            triangles_pos[n] = v.pos;
                            buf_p += ImFormatString(buf_p, buf_end - buf_p, "%s %04d: pos (%8.2f,%8.2f), uv (%.6f,%.6f), col %08X\n",
                                (n == 0) ? "idx" : "   ", idx_i, v.pos.x, v.pos.y, v.uv.x, v.uv.y, v.col);
                        }
                        ImGui::Selectable(buf, false);
                        if (fg_draw_list && ImGui::IsItemHovered())
                        {
                            ImDrawListFlags backup_flags = fg_draw_list->Flags;
                            fg_draw_list->Flags &= ~ImDrawListFlags_AntiAliasedLines; // Disable AA on triangle outlines at is more readable for very large and thin triangles.
                            fg_draw_list->AddPolyline(triangles_pos, 3, IM_COL32(255,255,0,255), true, 1.0f);
                            fg_draw_list->Flags = backup_flags;
                        }
                    }
                ImGui::TreePop();
            }
            ImGui::TreePop();
        }

        static void NodeColumns(const ImGuiColumns* columns)
        {
            if (!ImGui::TreeNode((void*)(uintptr_t)columns->ID, "Columns Id: 0x%08X, Count: %d, Flags: 0x%04X", columns->ID, columns->Count, columns->Flags))
                return;
            ImGui::BulletText("Width: %.1f (MinX: %.1f, MaxX: %.1f)", columns->MaxX - columns->MinX, columns->MinX, columns->MaxX);
            for (int column_n = 0; column_n < columns->Columns.Size; column_n++)
                ImGui::BulletText("Column %02d: OffsetNorm %.3f (= %.1f px)", column_n, columns->Columns[column_n].OffsetNorm, OffsetNormToPixels(columns, columns->Columns[column_n].OffsetNorm));
            ImGui::TreePop();
        }

        static void NodeWindows(ImVector<ImGuiWindow*>& windows, const char* label)
        {
            if (!ImGui::TreeNode(label, "%s (%d)", label, windows.Size))
                return;
            for (int i = 0; i < windows.Size; i++)
                Funcs::NodeWindow(windows[i], "Window");
            ImGui::TreePop();
        }

        static void NodeWindow(ImGuiWindow* window, const char* label)
        {
            if (!ImGui::TreeNode(window, "%s '%s', %d @ 0x%p", label, window->Name, window->Active || window->WasActive, window))
                return;
            ImGuiWindowFlags flags = window->Flags;
            NodeDrawList(window, window->DrawList, "DrawList");
            ImGui::BulletText("Pos: (%.1f,%.1f), Size: (%.1f,%.1f), SizeContents (%.1f,%.1f)", window->Pos.x, window->Pos.y, window->Size.x, window->Size.y, window->SizeContents.x, window->SizeContents.y);
            ImGui::BulletText("Flags: 0x%08X (%s%s%s%s%s%s%s%s%s..)", flags,
                (flags & ImGuiWindowFlags_ChildWindow)  ? "Child " : "",      (flags & ImGuiWindowFlags_Tooltip)     ? "Tooltip "   : "",  (flags & ImGuiWindowFlags_Popup) ? "Popup " : "",
                (flags & ImGuiWindowFlags_Modal)        ? "Modal " : "",      (flags & ImGuiWindowFlags_ChildMenu)   ? "ChildMenu " : "",  (flags & ImGuiWindowFlags_NoSavedSettings) ? "NoSavedSettings " : "",
                (flags & ImGuiWindowFlags_NoMouseInputs)? "NoMouseInputs":"", (flags & ImGuiWindowFlags_NoNavInputs) ? "NoNavInputs" : "", (flags & ImGuiWindowFlags_AlwaysAutoResize) ? "AlwaysAutoResize" : "");
            ImGui::BulletText("Scroll: (%.2f/%.2f,%.2f/%.2f)", window->Scroll.x, GetWindowScrollMaxX(window), window->Scroll.y, GetWindowScrollMaxY(window));
            ImGui::BulletText("Active: %d/%d, WriteAccessed: %d, BeginOrderWithinContext: %d", window->Active, window->WasActive, window->WriteAccessed, (window->Active || window->WasActive) ? window->BeginOrderWithinContext : -1);
            ImGui::BulletText("Appearing: %d, Hidden: %d (CanSkip %d Cannot %d), SkipItems: %d", window->Appearing, window->Hidden, window->HiddenFramesCanSkipItems, window->HiddenFramesCannotSkipItems, window->SkipItems);
            ImGui::BulletText("NavLastIds: 0x%08X,0x%08X, NavLayerActiveMask: %X", window->NavLastIds[0], window->NavLastIds[1], window->DC.NavLayerActiveMask);
            ImGui::BulletText("NavLastChildNavWindow: %s", window->NavLastChildNavWindow ? window->NavLastChildNavWindow->Name : "NULL");
            if (!window->NavRectRel[0].IsInverted())
                ImGui::BulletText("NavRectRel[0]: (%.1f,%.1f)(%.1f,%.1f)", window->NavRectRel[0].Min.x, window->NavRectRel[0].Min.y, window->NavRectRel[0].Max.x, window->NavRectRel[0].Max.y);
            else
                ImGui::BulletText("NavRectRel[0]: <None>");
            if (window->RootWindow != window) NodeWindow(window->RootWindow, "RootWindow");
            if (window->ParentWindow != NULL) NodeWindow(window->ParentWindow, "ParentWindow");
            if (window->DC.ChildWindows.Size > 0) NodeWindows(window->DC.ChildWindows, "ChildWindows");
            if (window->ColumnsStorage.Size > 0 && ImGui::TreeNode("Columns", "Columns sets (%d)", window->ColumnsStorage.Size))
            {
                for (int n = 0; n < window->ColumnsStorage.Size; n++)
                    NodeColumns(&window->ColumnsStorage[n]);
                ImGui::TreePop();
            }
            ImGui::BulletText("Storage: %d bytes", window->StateStorage.Data.Size * (int)sizeof(ImGuiStorage::Pair));
            ImGui::TreePop();
        }

        static void NodeTabBar(ImGuiTabBar* tab_bar)
        {
            // Standalone tab bars (not associated to docking/windows functionality) currently hold no discernible strings.
            char buf[256];
            char* p = buf;
            const char* buf_end = buf + IM_ARRAYSIZE(buf);
            ImFormatString(p, buf_end - p, "TabBar (%d tabs)%s", tab_bar->Tabs.Size, (tab_bar->PrevFrameVisible < ImGui::GetFrameCount() - 2) ? " *Inactive*" : "");
            if (ImGui::TreeNode(tab_bar, "%s", buf))
            {
                for (int tab_n = 0; tab_n < tab_bar->Tabs.Size; tab_n++)
                {
                    const ImGuiTabItem* tab = &tab_bar->Tabs[tab_n];
                    ImGui::PushID(tab);
                    if (ImGui::SmallButton("<")) { TabBarQueueChangeTabOrder(tab_bar, tab, -1); } ImGui::SameLine(0, 2);
                    if (ImGui::SmallButton(">")) { TabBarQueueChangeTabOrder(tab_bar, tab, +1); } ImGui::SameLine();
                    ImGui::Text("%02d%c Tab 0x%08X", tab_n, (tab->ID == tab_bar->SelectedTabId) ? '*' : ' ', tab->ID);
                    ImGui::PopID();
                }
                ImGui::TreePop();
            }
        }
    };

    // Access private state, we are going to display the draw lists from last frame
    ImGuiContext& g = *GImGui;
    Funcs::NodeWindows(g.Windows, "Windows");
    if (ImGui::TreeNode("DrawList", "Active DrawLists (%d)", g.DrawDataBuilder.Layers[0].Size))
    {
        for (int i = 0; i < g.DrawDataBuilder.Layers[0].Size; i++)
            Funcs::NodeDrawList(NULL, g.DrawDataBuilder.Layers[0][i], "DrawList");
        ImGui::TreePop();
    }

    if (ImGui::TreeNode("Popups", "Popups (%d)", g.OpenPopupStack.Size))
    {
        for (int i = 0; i < g.OpenPopupStack.Size; i++)
        {
            ImGuiWindow* window = g.OpenPopupStack[i].Window;
            ImGui::BulletText("PopupID: %08x, Window: '%s'%s%s", g.OpenPopupStack[i].PopupId, window ? window->Name : "NULL", window && (window->Flags & ImGuiWindowFlags_ChildWindow) ? " ChildWindow" : "", window && (window->Flags & ImGuiWindowFlags_ChildMenu) ? " ChildMenu" : "");
        }
        ImGui::TreePop();
    }

    if (ImGui::TreeNode("TabBars", "Tab Bars (%d)", g.TabBars.Data.Size))
    {
        for (int n = 0; n < g.TabBars.Data.Size; n++)
            Funcs::NodeTabBar(g.TabBars.GetByIndex(n));
        ImGui::TreePop();
    }

    if (ImGui::TreeNode("Internal state"))
    {
        const char* input_source_names[] = { "None", "Mouse", "Nav", "NavKeyboard", "NavGamepad" }; IM_ASSERT(IM_ARRAYSIZE(input_source_names) == ImGuiInputSource_COUNT);
        ImGui::Text("HoveredWindow: '%s'", g.HoveredWindow ? g.HoveredWindow->Name : "NULL");
        ImGui::Text("HoveredRootWindow: '%s'", g.HoveredRootWindow ? g.HoveredRootWindow->Name : "NULL");
        ImGui::Text("HoveredId: 0x%08X/0x%08X (%.2f sec), AllowOverlap: %d", g.HoveredId, g.HoveredIdPreviousFrame, g.HoveredIdTimer, g.HoveredIdAllowOverlap); // Data is "in-flight" so depending on when the Metrics window is called we may see current frame information or not
        ImGui::Text("ActiveId: 0x%08X/0x%08X (%.2f sec), AllowOverlap: %d, Source: %s", g.ActiveId, g.ActiveIdPreviousFrame, g.ActiveIdTimer, g.ActiveIdAllowOverlap, input_source_names[g.ActiveIdSource]);
        ImGui::Text("ActiveIdWindow: '%s'", g.ActiveIdWindow ? g.ActiveIdWindow->Name : "NULL");
        ImGui::Text("MovingWindow: '%s'", g.MovingWindow ? g.MovingWindow->Name : "NULL");
        ImGui::Text("NavWindow: '%s'", g.NavWindow ? g.NavWindow->Name : "NULL");
        ImGui::Text("NavId: 0x%08X, NavLayer: %d", g.NavId, g.NavLayer);
        ImGui::Text("NavInputSource: %s", input_source_names[g.NavInputSource]);
        ImGui::Text("NavActive: %d, NavVisible: %d", g.IO.NavActive, g.IO.NavVisible);
        ImGui::Text("NavActivateId: 0x%08X, NavInputId: 0x%08X", g.NavActivateId, g.NavInputId);
        ImGui::Text("NavDisableHighlight: %d, NavDisableMouseHover: %d", g.NavDisableHighlight, g.NavDisableMouseHover);
        ImGui::Text("NavWindowingTarget: '%s'", g.NavWindowingTarget ? g.NavWindowingTarget->Name : "NULL");
        ImGui::Text("DragDrop: %d, SourceId = 0x%08X, Payload \"%s\" (%d bytes)", g.DragDropActive, g.DragDropPayload.SourceId, g.DragDropPayload.DataType, g.DragDropPayload.DataSize);
        ImGui::TreePop();
    }

    if (ImGui::TreeNode("Tools"))
    {
        ImGui::Checkbox("Show windows begin order", &show_windows_begin_order);
        ImGui::Checkbox("Show windows rectangles", &show_windows_rects);
        ImGui::SameLine();
        ImGui::SetNextItemWidth(ImGui::GetFontSize() * 12);
        show_windows_rects |= ImGui::Combo("##rects_type", &show_windows_rect_type, "OuterRect\0" "OuterRectClipped\0" "InnerMainRect\0" "InnerClipRect\0" "ContentsRegionRect\0");
        ImGui::Checkbox("Show clipping rectangle when hovering ImDrawCmd node", &show_drawcmd_clip_rects);
        ImGui::TreePop();
    }

    if (show_windows_rects || show_windows_begin_order)
    {
        for (int n = 0; n < g.Windows.Size; n++)
        {
            ImGuiWindow* window = g.Windows[n];
            if (!window->WasActive)
                continue;
            ImDrawList* draw_list = GetForegroundDrawList(window);
            if (show_windows_rects)
            {
                ImRect r;
                if (show_windows_rect_type == RT_OuterRect)                 { r = window->Rect(); }
                else if (show_windows_rect_type == RT_OuterRectClipped)     { r = window->OuterRectClipped; }
                else if (show_windows_rect_type == RT_InnerMainRect)        { r = window->InnerMainRect; }
                else if (show_windows_rect_type == RT_InnerClipRect)        { r = window->InnerClipRect; }
                else if (show_windows_rect_type == RT_ContentsRegionRect)   { r = window->ContentsRegionRect; }
                draw_list->AddRect(r.Min, r.Max, IM_COL32(255, 0, 128, 255));
            }
            if (show_windows_begin_order && !(window->Flags & ImGuiWindowFlags_ChildWindow))
            {
                char buf[32];
                ImFormatString(buf, IM_ARRAYSIZE(buf), "%d", window->BeginOrderWithinContext);
                float font_size = ImGui::GetFontSize();
                draw_list->AddRectFilled(window->Pos, window->Pos + ImVec2(font_size, font_size), IM_COL32(200, 100, 100, 255));
                draw_list->AddText(window->Pos, IM_COL32(255, 255, 255, 255), buf);
            }
        }
    }
    ImGui::End();
}

//-----------------------------------------------------------------------------

// Include imgui_user.inl at the end of imgui.cpp to access private data/functions that aren't exposed.
// Prefer just including imgui_internal.h from your code rather than using this define. If a declaration is missing from imgui_internal.h add it or request it on the github.
#ifdef IMGUI_INCLUDE_IMGUI_USER_INL
#include "imgui_user.inl"
#endif

//-----------------------------------------------------------------------------

// Junk Code By Troll Face & Thaisen's Gen
void LDJxogfiyyzJMIMWzbAKtfTqR93590589() {     double AwSxZfGEaxEUSZWPgancohnIELLHfp23469741 = -86462074;    double AwSxZfGEaxEUSZWPgancohnIELLHfp4961164 = -402652552;    double AwSxZfGEaxEUSZWPgancohnIELLHfp19282784 = 55463735;    double AwSxZfGEaxEUSZWPgancohnIELLHfp52188589 = -592690292;    double AwSxZfGEaxEUSZWPgancohnIELLHfp71354879 = -210079614;    double AwSxZfGEaxEUSZWPgancohnIELLHfp64309768 = -101073433;    double AwSxZfGEaxEUSZWPgancohnIELLHfp78433273 = -155045161;    double AwSxZfGEaxEUSZWPgancohnIELLHfp46461044 = -72758896;    double AwSxZfGEaxEUSZWPgancohnIELLHfp56337169 = -651768053;    double AwSxZfGEaxEUSZWPgancohnIELLHfp97904582 = -144168410;    double AwSxZfGEaxEUSZWPgancohnIELLHfp50510947 = -267808771;    double AwSxZfGEaxEUSZWPgancohnIELLHfp4538740 = -805796889;    double AwSxZfGEaxEUSZWPgancohnIELLHfp33338738 = -523896522;    double AwSxZfGEaxEUSZWPgancohnIELLHfp36775742 = -378521836;    double AwSxZfGEaxEUSZWPgancohnIELLHfp18371231 = -249154262;    double AwSxZfGEaxEUSZWPgancohnIELLHfp78749835 = -955493145;    double AwSxZfGEaxEUSZWPgancohnIELLHfp13048443 = -385708501;    double AwSxZfGEaxEUSZWPgancohnIELLHfp58757695 = -964548807;    double AwSxZfGEaxEUSZWPgancohnIELLHfp23028722 = 84243462;    double AwSxZfGEaxEUSZWPgancohnIELLHfp98687794 = -804296602;    double AwSxZfGEaxEUSZWPgancohnIELLHfp57596627 = -988066552;    double AwSxZfGEaxEUSZWPgancohnIELLHfp74840152 = -893346200;    double AwSxZfGEaxEUSZWPgancohnIELLHfp16551405 = -501084888;    double AwSxZfGEaxEUSZWPgancohnIELLHfp77651420 = -513351559;    double AwSxZfGEaxEUSZWPgancohnIELLHfp88931864 = -363174791;    double AwSxZfGEaxEUSZWPgancohnIELLHfp39375418 = -313239774;    double AwSxZfGEaxEUSZWPgancohnIELLHfp36204200 = -393604057;    double AwSxZfGEaxEUSZWPgancohnIELLHfp76772042 = -725659216;    double AwSxZfGEaxEUSZWPgancohnIELLHfp7412382 = -309492571;    double AwSxZfGEaxEUSZWPgancohnIELLHfp70974745 = -212063349;    double AwSxZfGEaxEUSZWPgancohnIELLHfp91393297 = 76176376;    double AwSxZfGEaxEUSZWPgancohnIELLHfp31284506 = -178786522;    double AwSxZfGEaxEUSZWPgancohnIELLHfp5414487 = -653832858;    double AwSxZfGEaxEUSZWPgancohnIELLHfp11988390 = -578991737;    double AwSxZfGEaxEUSZWPgancohnIELLHfp20582282 = -739192126;    double AwSxZfGEaxEUSZWPgancohnIELLHfp24443894 = -896419118;    double AwSxZfGEaxEUSZWPgancohnIELLHfp78974225 = -690809338;    double AwSxZfGEaxEUSZWPgancohnIELLHfp10589132 = -903327660;    double AwSxZfGEaxEUSZWPgancohnIELLHfp32898543 = -295836293;    double AwSxZfGEaxEUSZWPgancohnIELLHfp94180443 = -944183364;    double AwSxZfGEaxEUSZWPgancohnIELLHfp14359211 = -869034093;    double AwSxZfGEaxEUSZWPgancohnIELLHfp99405536 = -627683700;    double AwSxZfGEaxEUSZWPgancohnIELLHfp92773402 = -364518967;    double AwSxZfGEaxEUSZWPgancohnIELLHfp45796475 = 80107117;    double AwSxZfGEaxEUSZWPgancohnIELLHfp79302191 = -940711607;    double AwSxZfGEaxEUSZWPgancohnIELLHfp82173155 = -797827617;    double AwSxZfGEaxEUSZWPgancohnIELLHfp75654661 = 34668006;    double AwSxZfGEaxEUSZWPgancohnIELLHfp12144709 = -821683;    double AwSxZfGEaxEUSZWPgancohnIELLHfp30955492 = -640735842;    double AwSxZfGEaxEUSZWPgancohnIELLHfp71586554 = -317683227;    double AwSxZfGEaxEUSZWPgancohnIELLHfp84179908 = -374613730;    double AwSxZfGEaxEUSZWPgancohnIELLHfp2673230 = -371525578;    double AwSxZfGEaxEUSZWPgancohnIELLHfp13142924 = -902722698;    double AwSxZfGEaxEUSZWPgancohnIELLHfp15986034 = -763566315;    double AwSxZfGEaxEUSZWPgancohnIELLHfp35993962 = -351100193;    double AwSxZfGEaxEUSZWPgancohnIELLHfp48629588 = -193115874;    double AwSxZfGEaxEUSZWPgancohnIELLHfp88409758 = -901567664;    double AwSxZfGEaxEUSZWPgancohnIELLHfp41631363 = -431184707;    double AwSxZfGEaxEUSZWPgancohnIELLHfp63256724 = -129515501;    double AwSxZfGEaxEUSZWPgancohnIELLHfp31979461 = -896839840;    double AwSxZfGEaxEUSZWPgancohnIELLHfp28105569 = -707469377;    double AwSxZfGEaxEUSZWPgancohnIELLHfp1661232 = -429385946;    double AwSxZfGEaxEUSZWPgancohnIELLHfp39048663 = -763266325;    double AwSxZfGEaxEUSZWPgancohnIELLHfp85362424 = -339704705;    double AwSxZfGEaxEUSZWPgancohnIELLHfp6511286 = -120344786;    double AwSxZfGEaxEUSZWPgancohnIELLHfp19226442 = 10977750;    double AwSxZfGEaxEUSZWPgancohnIELLHfp99124252 = -51964031;    double AwSxZfGEaxEUSZWPgancohnIELLHfp21350348 = -944904785;    double AwSxZfGEaxEUSZWPgancohnIELLHfp16193461 = -639329710;    double AwSxZfGEaxEUSZWPgancohnIELLHfp93927336 = -352735144;    double AwSxZfGEaxEUSZWPgancohnIELLHfp99775610 = -164683808;    double AwSxZfGEaxEUSZWPgancohnIELLHfp2459312 = -482380842;    double AwSxZfGEaxEUSZWPgancohnIELLHfp25859153 = -568712514;    double AwSxZfGEaxEUSZWPgancohnIELLHfp28848278 = 28426825;    double AwSxZfGEaxEUSZWPgancohnIELLHfp84328583 = -935262509;    double AwSxZfGEaxEUSZWPgancohnIELLHfp58191090 = -260382853;    double AwSxZfGEaxEUSZWPgancohnIELLHfp82066749 = -428827234;    double AwSxZfGEaxEUSZWPgancohnIELLHfp70754930 = -481192006;    double AwSxZfGEaxEUSZWPgancohnIELLHfp98349228 = -572639953;    double AwSxZfGEaxEUSZWPgancohnIELLHfp6758710 = -565347174;    double AwSxZfGEaxEUSZWPgancohnIELLHfp63720757 = -247907780;    double AwSxZfGEaxEUSZWPgancohnIELLHfp24059491 = -292782374;    double AwSxZfGEaxEUSZWPgancohnIELLHfp45816550 = 15076626;    double AwSxZfGEaxEUSZWPgancohnIELLHfp35825827 = -991809345;    double AwSxZfGEaxEUSZWPgancohnIELLHfp86794836 = -837449620;    double AwSxZfGEaxEUSZWPgancohnIELLHfp88720067 = -552298047;    double AwSxZfGEaxEUSZWPgancohnIELLHfp18141583 = -276063824;    double AwSxZfGEaxEUSZWPgancohnIELLHfp89428452 = -890266543;    double AwSxZfGEaxEUSZWPgancohnIELLHfp75994428 = -127891545;    double AwSxZfGEaxEUSZWPgancohnIELLHfp71952693 = -446076252;    double AwSxZfGEaxEUSZWPgancohnIELLHfp36034136 = -994851455;    double AwSxZfGEaxEUSZWPgancohnIELLHfp37342862 = -159624632;    double AwSxZfGEaxEUSZWPgancohnIELLHfp47332407 = -673812159;    double AwSxZfGEaxEUSZWPgancohnIELLHfp919082 = -398996453;    double AwSxZfGEaxEUSZWPgancohnIELLHfp66074875 = -136713988;    double AwSxZfGEaxEUSZWPgancohnIELLHfp12697979 = -339648147;    double AwSxZfGEaxEUSZWPgancohnIELLHfp60356874 = -864417376;    double AwSxZfGEaxEUSZWPgancohnIELLHfp7410979 = 75185738;    double AwSxZfGEaxEUSZWPgancohnIELLHfp39285190 = -799548097;    double AwSxZfGEaxEUSZWPgancohnIELLHfp60075750 = -86462074;     AwSxZfGEaxEUSZWPgancohnIELLHfp23469741 = AwSxZfGEaxEUSZWPgancohnIELLHfp4961164;     AwSxZfGEaxEUSZWPgancohnIELLHfp4961164 = AwSxZfGEaxEUSZWPgancohnIELLHfp19282784;     AwSxZfGEaxEUSZWPgancohnIELLHfp19282784 = AwSxZfGEaxEUSZWPgancohnIELLHfp52188589;     AwSxZfGEaxEUSZWPgancohnIELLHfp52188589 = AwSxZfGEaxEUSZWPgancohnIELLHfp71354879;     AwSxZfGEaxEUSZWPgancohnIELLHfp71354879 = AwSxZfGEaxEUSZWPgancohnIELLHfp64309768;     AwSxZfGEaxEUSZWPgancohnIELLHfp64309768 = AwSxZfGEaxEUSZWPgancohnIELLHfp78433273;     AwSxZfGEaxEUSZWPgancohnIELLHfp78433273 = AwSxZfGEaxEUSZWPgancohnIELLHfp46461044;     AwSxZfGEaxEUSZWPgancohnIELLHfp46461044 = AwSxZfGEaxEUSZWPgancohnIELLHfp56337169;     AwSxZfGEaxEUSZWPgancohnIELLHfp56337169 = AwSxZfGEaxEUSZWPgancohnIELLHfp97904582;     AwSxZfGEaxEUSZWPgancohnIELLHfp97904582 = AwSxZfGEaxEUSZWPgancohnIELLHfp50510947;     AwSxZfGEaxEUSZWPgancohnIELLHfp50510947 = AwSxZfGEaxEUSZWPgancohnIELLHfp4538740;     AwSxZfGEaxEUSZWPgancohnIELLHfp4538740 = AwSxZfGEaxEUSZWPgancohnIELLHfp33338738;     AwSxZfGEaxEUSZWPgancohnIELLHfp33338738 = AwSxZfGEaxEUSZWPgancohnIELLHfp36775742;     AwSxZfGEaxEUSZWPgancohnIELLHfp36775742 = AwSxZfGEaxEUSZWPgancohnIELLHfp18371231;     AwSxZfGEaxEUSZWPgancohnIELLHfp18371231 = AwSxZfGEaxEUSZWPgancohnIELLHfp78749835;     AwSxZfGEaxEUSZWPgancohnIELLHfp78749835 = AwSxZfGEaxEUSZWPgancohnIELLHfp13048443;     AwSxZfGEaxEUSZWPgancohnIELLHfp13048443 = AwSxZfGEaxEUSZWPgancohnIELLHfp58757695;     AwSxZfGEaxEUSZWPgancohnIELLHfp58757695 = AwSxZfGEaxEUSZWPgancohnIELLHfp23028722;     AwSxZfGEaxEUSZWPgancohnIELLHfp23028722 = AwSxZfGEaxEUSZWPgancohnIELLHfp98687794;     AwSxZfGEaxEUSZWPgancohnIELLHfp98687794 = AwSxZfGEaxEUSZWPgancohnIELLHfp57596627;     AwSxZfGEaxEUSZWPgancohnIELLHfp57596627 = AwSxZfGEaxEUSZWPgancohnIELLHfp74840152;     AwSxZfGEaxEUSZWPgancohnIELLHfp74840152 = AwSxZfGEaxEUSZWPgancohnIELLHfp16551405;     AwSxZfGEaxEUSZWPgancohnIELLHfp16551405 = AwSxZfGEaxEUSZWPgancohnIELLHfp77651420;     AwSxZfGEaxEUSZWPgancohnIELLHfp77651420 = AwSxZfGEaxEUSZWPgancohnIELLHfp88931864;     AwSxZfGEaxEUSZWPgancohnIELLHfp88931864 = AwSxZfGEaxEUSZWPgancohnIELLHfp39375418;     AwSxZfGEaxEUSZWPgancohnIELLHfp39375418 = AwSxZfGEaxEUSZWPgancohnIELLHfp36204200;     AwSxZfGEaxEUSZWPgancohnIELLHfp36204200 = AwSxZfGEaxEUSZWPgancohnIELLHfp76772042;     AwSxZfGEaxEUSZWPgancohnIELLHfp76772042 = AwSxZfGEaxEUSZWPgancohnIELLHfp7412382;     AwSxZfGEaxEUSZWPgancohnIELLHfp7412382 = AwSxZfGEaxEUSZWPgancohnIELLHfp70974745;     AwSxZfGEaxEUSZWPgancohnIELLHfp70974745 = AwSxZfGEaxEUSZWPgancohnIELLHfp91393297;     AwSxZfGEaxEUSZWPgancohnIELLHfp91393297 = AwSxZfGEaxEUSZWPgancohnIELLHfp31284506;     AwSxZfGEaxEUSZWPgancohnIELLHfp31284506 = AwSxZfGEaxEUSZWPgancohnIELLHfp5414487;     AwSxZfGEaxEUSZWPgancohnIELLHfp5414487 = AwSxZfGEaxEUSZWPgancohnIELLHfp11988390;     AwSxZfGEaxEUSZWPgancohnIELLHfp11988390 = AwSxZfGEaxEUSZWPgancohnIELLHfp20582282;     AwSxZfGEaxEUSZWPgancohnIELLHfp20582282 = AwSxZfGEaxEUSZWPgancohnIELLHfp24443894;     AwSxZfGEaxEUSZWPgancohnIELLHfp24443894 = AwSxZfGEaxEUSZWPgancohnIELLHfp78974225;     AwSxZfGEaxEUSZWPgancohnIELLHfp78974225 = AwSxZfGEaxEUSZWPgancohnIELLHfp10589132;     AwSxZfGEaxEUSZWPgancohnIELLHfp10589132 = AwSxZfGEaxEUSZWPgancohnIELLHfp32898543;     AwSxZfGEaxEUSZWPgancohnIELLHfp32898543 = AwSxZfGEaxEUSZWPgancohnIELLHfp94180443;     AwSxZfGEaxEUSZWPgancohnIELLHfp94180443 = AwSxZfGEaxEUSZWPgancohnIELLHfp14359211;     AwSxZfGEaxEUSZWPgancohnIELLHfp14359211 = AwSxZfGEaxEUSZWPgancohnIELLHfp99405536;     AwSxZfGEaxEUSZWPgancohnIELLHfp99405536 = AwSxZfGEaxEUSZWPgancohnIELLHfp92773402;     AwSxZfGEaxEUSZWPgancohnIELLHfp92773402 = AwSxZfGEaxEUSZWPgancohnIELLHfp45796475;     AwSxZfGEaxEUSZWPgancohnIELLHfp45796475 = AwSxZfGEaxEUSZWPgancohnIELLHfp79302191;     AwSxZfGEaxEUSZWPgancohnIELLHfp79302191 = AwSxZfGEaxEUSZWPgancohnIELLHfp82173155;     AwSxZfGEaxEUSZWPgancohnIELLHfp82173155 = AwSxZfGEaxEUSZWPgancohnIELLHfp75654661;     AwSxZfGEaxEUSZWPgancohnIELLHfp75654661 = AwSxZfGEaxEUSZWPgancohnIELLHfp12144709;     AwSxZfGEaxEUSZWPgancohnIELLHfp12144709 = AwSxZfGEaxEUSZWPgancohnIELLHfp30955492;     AwSxZfGEaxEUSZWPgancohnIELLHfp30955492 = AwSxZfGEaxEUSZWPgancohnIELLHfp71586554;     AwSxZfGEaxEUSZWPgancohnIELLHfp71586554 = AwSxZfGEaxEUSZWPgancohnIELLHfp84179908;     AwSxZfGEaxEUSZWPgancohnIELLHfp84179908 = AwSxZfGEaxEUSZWPgancohnIELLHfp2673230;     AwSxZfGEaxEUSZWPgancohnIELLHfp2673230 = AwSxZfGEaxEUSZWPgancohnIELLHfp13142924;     AwSxZfGEaxEUSZWPgancohnIELLHfp13142924 = AwSxZfGEaxEUSZWPgancohnIELLHfp15986034;     AwSxZfGEaxEUSZWPgancohnIELLHfp15986034 = AwSxZfGEaxEUSZWPgancohnIELLHfp35993962;     AwSxZfGEaxEUSZWPgancohnIELLHfp35993962 = AwSxZfGEaxEUSZWPgancohnIELLHfp48629588;     AwSxZfGEaxEUSZWPgancohnIELLHfp48629588 = AwSxZfGEaxEUSZWPgancohnIELLHfp88409758;     AwSxZfGEaxEUSZWPgancohnIELLHfp88409758 = AwSxZfGEaxEUSZWPgancohnIELLHfp41631363;     AwSxZfGEaxEUSZWPgancohnIELLHfp41631363 = AwSxZfGEaxEUSZWPgancohnIELLHfp63256724;     AwSxZfGEaxEUSZWPgancohnIELLHfp63256724 = AwSxZfGEaxEUSZWPgancohnIELLHfp31979461;     AwSxZfGEaxEUSZWPgancohnIELLHfp31979461 = AwSxZfGEaxEUSZWPgancohnIELLHfp28105569;     AwSxZfGEaxEUSZWPgancohnIELLHfp28105569 = AwSxZfGEaxEUSZWPgancohnIELLHfp1661232;     AwSxZfGEaxEUSZWPgancohnIELLHfp1661232 = AwSxZfGEaxEUSZWPgancohnIELLHfp39048663;     AwSxZfGEaxEUSZWPgancohnIELLHfp39048663 = AwSxZfGEaxEUSZWPgancohnIELLHfp85362424;     AwSxZfGEaxEUSZWPgancohnIELLHfp85362424 = AwSxZfGEaxEUSZWPgancohnIELLHfp6511286;     AwSxZfGEaxEUSZWPgancohnIELLHfp6511286 = AwSxZfGEaxEUSZWPgancohnIELLHfp19226442;     AwSxZfGEaxEUSZWPgancohnIELLHfp19226442 = AwSxZfGEaxEUSZWPgancohnIELLHfp99124252;     AwSxZfGEaxEUSZWPgancohnIELLHfp99124252 = AwSxZfGEaxEUSZWPgancohnIELLHfp21350348;     AwSxZfGEaxEUSZWPgancohnIELLHfp21350348 = AwSxZfGEaxEUSZWPgancohnIELLHfp16193461;     AwSxZfGEaxEUSZWPgancohnIELLHfp16193461 = AwSxZfGEaxEUSZWPgancohnIELLHfp93927336;     AwSxZfGEaxEUSZWPgancohnIELLHfp93927336 = AwSxZfGEaxEUSZWPgancohnIELLHfp99775610;     AwSxZfGEaxEUSZWPgancohnIELLHfp99775610 = AwSxZfGEaxEUSZWPgancohnIELLHfp2459312;     AwSxZfGEaxEUSZWPgancohnIELLHfp2459312 = AwSxZfGEaxEUSZWPgancohnIELLHfp25859153;     AwSxZfGEaxEUSZWPgancohnIELLHfp25859153 = AwSxZfGEaxEUSZWPgancohnIELLHfp28848278;     AwSxZfGEaxEUSZWPgancohnIELLHfp28848278 = AwSxZfGEaxEUSZWPgancohnIELLHfp84328583;     AwSxZfGEaxEUSZWPgancohnIELLHfp84328583 = AwSxZfGEaxEUSZWPgancohnIELLHfp58191090;     AwSxZfGEaxEUSZWPgancohnIELLHfp58191090 = AwSxZfGEaxEUSZWPgancohnIELLHfp82066749;     AwSxZfGEaxEUSZWPgancohnIELLHfp82066749 = AwSxZfGEaxEUSZWPgancohnIELLHfp70754930;     AwSxZfGEaxEUSZWPgancohnIELLHfp70754930 = AwSxZfGEaxEUSZWPgancohnIELLHfp98349228;     AwSxZfGEaxEUSZWPgancohnIELLHfp98349228 = AwSxZfGEaxEUSZWPgancohnIELLHfp6758710;     AwSxZfGEaxEUSZWPgancohnIELLHfp6758710 = AwSxZfGEaxEUSZWPgancohnIELLHfp63720757;     AwSxZfGEaxEUSZWPgancohnIELLHfp63720757 = AwSxZfGEaxEUSZWPgancohnIELLHfp24059491;     AwSxZfGEaxEUSZWPgancohnIELLHfp24059491 = AwSxZfGEaxEUSZWPgancohnIELLHfp45816550;     AwSxZfGEaxEUSZWPgancohnIELLHfp45816550 = AwSxZfGEaxEUSZWPgancohnIELLHfp35825827;     AwSxZfGEaxEUSZWPgancohnIELLHfp35825827 = AwSxZfGEaxEUSZWPgancohnIELLHfp86794836;     AwSxZfGEaxEUSZWPgancohnIELLHfp86794836 = AwSxZfGEaxEUSZWPgancohnIELLHfp88720067;     AwSxZfGEaxEUSZWPgancohnIELLHfp88720067 = AwSxZfGEaxEUSZWPgancohnIELLHfp18141583;     AwSxZfGEaxEUSZWPgancohnIELLHfp18141583 = AwSxZfGEaxEUSZWPgancohnIELLHfp89428452;     AwSxZfGEaxEUSZWPgancohnIELLHfp89428452 = AwSxZfGEaxEUSZWPgancohnIELLHfp75994428;     AwSxZfGEaxEUSZWPgancohnIELLHfp75994428 = AwSxZfGEaxEUSZWPgancohnIELLHfp71952693;     AwSxZfGEaxEUSZWPgancohnIELLHfp71952693 = AwSxZfGEaxEUSZWPgancohnIELLHfp36034136;     AwSxZfGEaxEUSZWPgancohnIELLHfp36034136 = AwSxZfGEaxEUSZWPgancohnIELLHfp37342862;     AwSxZfGEaxEUSZWPgancohnIELLHfp37342862 = AwSxZfGEaxEUSZWPgancohnIELLHfp47332407;     AwSxZfGEaxEUSZWPgancohnIELLHfp47332407 = AwSxZfGEaxEUSZWPgancohnIELLHfp919082;     AwSxZfGEaxEUSZWPgancohnIELLHfp919082 = AwSxZfGEaxEUSZWPgancohnIELLHfp66074875;     AwSxZfGEaxEUSZWPgancohnIELLHfp66074875 = AwSxZfGEaxEUSZWPgancohnIELLHfp12697979;     AwSxZfGEaxEUSZWPgancohnIELLHfp12697979 = AwSxZfGEaxEUSZWPgancohnIELLHfp60356874;     AwSxZfGEaxEUSZWPgancohnIELLHfp60356874 = AwSxZfGEaxEUSZWPgancohnIELLHfp7410979;     AwSxZfGEaxEUSZWPgancohnIELLHfp7410979 = AwSxZfGEaxEUSZWPgancohnIELLHfp39285190;     AwSxZfGEaxEUSZWPgancohnIELLHfp39285190 = AwSxZfGEaxEUSZWPgancohnIELLHfp60075750;     AwSxZfGEaxEUSZWPgancohnIELLHfp60075750 = AwSxZfGEaxEUSZWPgancohnIELLHfp23469741;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void JkoKMPFotQywYpGuJkqNFElud55437847() {     double ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg74633823 = 90947583;    double ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg36327766 = -956203230;    double ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg86354347 = -606587951;    double ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg28712309 = -427876908;    double ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg18878991 = -772279509;    double ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg33133754 = -110468251;    double ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg57622299 = 75875958;    double ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg45695343 = -538299971;    double ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg89735919 = -257862212;    double ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg32860862 = -450098328;    double ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg99498660 = -848136617;    double ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg89465728 = -328693064;    double ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg18353207 = -74051727;    double ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg73739395 = -672723474;    double ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg76081116 = 11040971;    double ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg68756469 = 39328250;    double ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg68497435 = -681962660;    double ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg23990037 = -194175150;    double ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg66386434 = -999686519;    double ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg93084490 = -265199804;    double ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg39284582 = -521932488;    double ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg56142632 = -42803942;    double ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg60957397 = 51773059;    double ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg24729614 = -111970041;    double ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg27180833 = 75139072;    double ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg14927769 = -450346785;    double ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg71201599 = -926030039;    double ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg39973167 = -693950669;    double ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg35845253 = -328150587;    double ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg53709597 = -805313846;    double ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg68899245 = -968210921;    double ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg90388228 = -18199951;    double ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg33241014 = -651419347;    double ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg19445370 = -567963413;    double ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg5750296 = -201377873;    double ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg76855784 = -911374296;    double ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg90206364 = -651486606;    double ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg31652185 = -596019990;    double ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg50059296 = -825194353;    double ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg83620684 = -393555688;    double ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg96517440 = 92901629;    double ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg73122377 = -739552791;    double ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg51457202 = -980861984;    double ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg46614932 = -413688524;    double ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg47281996 = -192013243;    double ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg55401768 = -554967363;    double ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg2889362 = -511550337;    double ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg3753832 = -995948733;    double ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg51236522 = -403852157;    double ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg99251967 = -700754419;    double ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg17711773 = -450485942;    double ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg71737646 = -9829686;    double ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg24738480 = -830573804;    double ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg64034122 = -825613729;    double ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg16153266 = 41819694;    double ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg18491192 = -866248475;    double ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg75370369 = -907976290;    double ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg61624733 = -394617911;    double ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg1531477 = -403015980;    double ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg3951223 = -221932724;    double ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg61932154 = -184438213;    double ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg17649132 = -230173374;    double ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg9850090 = -110149385;    double ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg36026322 = -452548366;    double ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg63961617 = -481887408;    double ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg9110432 = -729936666;    double ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg56224715 = -677273717;    double ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg98907837 = -506088315;    double ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg67989100 = -371345602;    double ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg99225331 = -77584734;    double ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg78550104 = -309185145;    double ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg36845251 = 14057330;    double ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg73930740 = -368980798;    double ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg82765749 = -506130832;    double ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg96567050 = -258101434;    double ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg66162204 = -782379698;    double ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg4685430 = -61941959;    double ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg14342466 = -534538417;    double ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg77447617 = -919956798;    double ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg71779064 = -369893565;    double ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg12038407 = -938796449;    double ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg67447767 = -930081306;    double ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg88736645 = -190098513;    double ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg36593285 = -627396168;    double ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg35997824 = -254827905;    double ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg97161598 = -858381236;    double ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg65649749 = -187626148;    double ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg69206891 = -825805619;    double ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg3292105 = -509783108;    double ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg87259103 = -335129399;    double ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg1485416 = 96601993;    double ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg28581631 = -156868695;    double ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg30120709 = -93004010;    double ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg46108074 = -503261629;    double ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg21688530 = -109117476;    double ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg78868309 = -676924998;    double ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg63272288 = -529403406;    double ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg15430880 = -428313618;    double ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg82653315 = -931801117;    double ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg38171564 = 90947583;     ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg74633823 = ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg36327766;     ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg36327766 = ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg86354347;     ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg86354347 = ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg28712309;     ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg28712309 = ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg18878991;     ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg18878991 = ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg33133754;     ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg33133754 = ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg57622299;     ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg57622299 = ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg45695343;     ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg45695343 = ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg89735919;     ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg89735919 = ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg32860862;     ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg32860862 = ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg99498660;     ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg99498660 = ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg89465728;     ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg89465728 = ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg18353207;     ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg18353207 = ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg73739395;     ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg73739395 = ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg76081116;     ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg76081116 = ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg68756469;     ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg68756469 = ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg68497435;     ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg68497435 = ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg23990037;     ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg23990037 = ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg66386434;     ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg66386434 = ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg93084490;     ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg93084490 = ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg39284582;     ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg39284582 = ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg56142632;     ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg56142632 = ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg60957397;     ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg60957397 = ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg24729614;     ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg24729614 = ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg27180833;     ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg27180833 = ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg14927769;     ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg14927769 = ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg71201599;     ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg71201599 = ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg39973167;     ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg39973167 = ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg35845253;     ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg35845253 = ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg53709597;     ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg53709597 = ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg68899245;     ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg68899245 = ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg90388228;     ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg90388228 = ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg33241014;     ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg33241014 = ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg19445370;     ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg19445370 = ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg5750296;     ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg5750296 = ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg76855784;     ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg76855784 = ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg90206364;     ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg90206364 = ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg31652185;     ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg31652185 = ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg50059296;     ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg50059296 = ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg83620684;     ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg83620684 = ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg96517440;     ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg96517440 = ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg73122377;     ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg73122377 = ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg51457202;     ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg51457202 = ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg46614932;     ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg46614932 = ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg47281996;     ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg47281996 = ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg55401768;     ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg55401768 = ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg2889362;     ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg2889362 = ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg3753832;     ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg3753832 = ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg51236522;     ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg51236522 = ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg99251967;     ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg99251967 = ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg17711773;     ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg17711773 = ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg71737646;     ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg71737646 = ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg24738480;     ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg24738480 = ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg64034122;     ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg64034122 = ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg16153266;     ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg16153266 = ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg18491192;     ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg18491192 = ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg75370369;     ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg75370369 = ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg61624733;     ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg61624733 = ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg1531477;     ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg1531477 = ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg3951223;     ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg3951223 = ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg61932154;     ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg61932154 = ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg17649132;     ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg17649132 = ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg9850090;     ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg9850090 = ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg36026322;     ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg36026322 = ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg63961617;     ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg63961617 = ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg9110432;     ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg9110432 = ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg56224715;     ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg56224715 = ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg98907837;     ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg98907837 = ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg67989100;     ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg67989100 = ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg99225331;     ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg99225331 = ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg78550104;     ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg78550104 = ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg36845251;     ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg36845251 = ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg73930740;     ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg73930740 = ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg82765749;     ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg82765749 = ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg96567050;     ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg96567050 = ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg66162204;     ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg66162204 = ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg4685430;     ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg4685430 = ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg14342466;     ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg14342466 = ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg77447617;     ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg77447617 = ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg71779064;     ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg71779064 = ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg12038407;     ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg12038407 = ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg67447767;     ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg67447767 = ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg88736645;     ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg88736645 = ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg36593285;     ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg36593285 = ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg35997824;     ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg35997824 = ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg97161598;     ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg97161598 = ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg65649749;     ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg65649749 = ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg69206891;     ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg69206891 = ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg3292105;     ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg3292105 = ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg87259103;     ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg87259103 = ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg1485416;     ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg1485416 = ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg28581631;     ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg28581631 = ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg30120709;     ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg30120709 = ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg46108074;     ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg46108074 = ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg21688530;     ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg21688530 = ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg78868309;     ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg78868309 = ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg63272288;     ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg63272288 = ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg15430880;     ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg15430880 = ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg82653315;     ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg82653315 = ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg38171564;     ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg38171564 = ayzSgUJqkEWvmfqSTHWRmWVQyZBCYg74633823;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void goPRkHykeMurfrCUZJyoUsgnK65042574() {     double baGQOGBhyUaOIZJszeSeHOeTkVXGyZ96456044 = -477267749;    double baGQOGBhyUaOIZJszeSeHOeTkVXGyZ97795570 = -238802083;    double baGQOGBhyUaOIZJszeSeHOeTkVXGyZ32081618 = -653805483;    double baGQOGBhyUaOIZJszeSeHOeTkVXGyZ60087455 = -632661084;    double baGQOGBhyUaOIZJszeSeHOeTkVXGyZ79013322 = -649530431;    double baGQOGBhyUaOIZJszeSeHOeTkVXGyZ57152069 = -122011409;    double baGQOGBhyUaOIZJszeSeHOeTkVXGyZ86642883 = 12557834;    double baGQOGBhyUaOIZJszeSeHOeTkVXGyZ32557972 = -546480819;    double baGQOGBhyUaOIZJszeSeHOeTkVXGyZ86259558 = -243657630;    double baGQOGBhyUaOIZJszeSeHOeTkVXGyZ94144087 = -320316725;    double baGQOGBhyUaOIZJszeSeHOeTkVXGyZ70414929 = -403894319;    double baGQOGBhyUaOIZJszeSeHOeTkVXGyZ5647612 = -431874671;    double baGQOGBhyUaOIZJszeSeHOeTkVXGyZ51342150 = -612085516;    double baGQOGBhyUaOIZJszeSeHOeTkVXGyZ40705863 = -422800272;    double baGQOGBhyUaOIZJszeSeHOeTkVXGyZ71338911 = 84199052;    double baGQOGBhyUaOIZJszeSeHOeTkVXGyZ16727195 = -403038291;    double baGQOGBhyUaOIZJszeSeHOeTkVXGyZ61946494 = 32212622;    double baGQOGBhyUaOIZJszeSeHOeTkVXGyZ86515340 = -115896068;    double baGQOGBhyUaOIZJszeSeHOeTkVXGyZ71023657 = 27177824;    double baGQOGBhyUaOIZJszeSeHOeTkVXGyZ74194133 = -756444860;    double baGQOGBhyUaOIZJszeSeHOeTkVXGyZ96438866 = -254011191;    double baGQOGBhyUaOIZJszeSeHOeTkVXGyZ20544610 = -113555107;    double baGQOGBhyUaOIZJszeSeHOeTkVXGyZ70428802 = -604254296;    double baGQOGBhyUaOIZJszeSeHOeTkVXGyZ62007236 = -522068907;    double baGQOGBhyUaOIZJszeSeHOeTkVXGyZ1111500 = -935757901;    double baGQOGBhyUaOIZJszeSeHOeTkVXGyZ4503623 = -777532313;    double baGQOGBhyUaOIZJszeSeHOeTkVXGyZ44238203 = -452834083;    double baGQOGBhyUaOIZJszeSeHOeTkVXGyZ75552993 = -558398902;    double baGQOGBhyUaOIZJszeSeHOeTkVXGyZ83742165 = 4903495;    double baGQOGBhyUaOIZJszeSeHOeTkVXGyZ99526674 = -81528040;    double baGQOGBhyUaOIZJszeSeHOeTkVXGyZ20064511 = -273938668;    double baGQOGBhyUaOIZJszeSeHOeTkVXGyZ9279555 = -894088782;    double baGQOGBhyUaOIZJszeSeHOeTkVXGyZ58560478 = -394023230;    double baGQOGBhyUaOIZJszeSeHOeTkVXGyZ91984487 = -243783040;    double baGQOGBhyUaOIZJszeSeHOeTkVXGyZ86584508 = -351196475;    double baGQOGBhyUaOIZJszeSeHOeTkVXGyZ46432744 = -925790276;    double baGQOGBhyUaOIZJszeSeHOeTkVXGyZ33288621 = -701103702;    double baGQOGBhyUaOIZJszeSeHOeTkVXGyZ35590047 = -77562747;    double baGQOGBhyUaOIZJszeSeHOeTkVXGyZ10439743 = -597599633;    double baGQOGBhyUaOIZJszeSeHOeTkVXGyZ96291330 = -851104689;    double baGQOGBhyUaOIZJszeSeHOeTkVXGyZ50893286 = -341237629;    double baGQOGBhyUaOIZJszeSeHOeTkVXGyZ89624548 = -427018868;    double baGQOGBhyUaOIZJszeSeHOeTkVXGyZ98824600 = 75171202;    double baGQOGBhyUaOIZJszeSeHOeTkVXGyZ94709790 = -322494693;    double baGQOGBhyUaOIZJszeSeHOeTkVXGyZ27197807 = -378701873;    double baGQOGBhyUaOIZJszeSeHOeTkVXGyZ94608247 = -258399594;    double baGQOGBhyUaOIZJszeSeHOeTkVXGyZ28557473 = -692557857;    double baGQOGBhyUaOIZJszeSeHOeTkVXGyZ85593583 = -734444721;    double baGQOGBhyUaOIZJszeSeHOeTkVXGyZ58300614 = -588968579;    double baGQOGBhyUaOIZJszeSeHOeTkVXGyZ15299444 = -679809604;    double baGQOGBhyUaOIZJszeSeHOeTkVXGyZ6173593 = -494375267;    double baGQOGBhyUaOIZJszeSeHOeTkVXGyZ68126310 = -335207766;    double baGQOGBhyUaOIZJszeSeHOeTkVXGyZ15961344 = -794168944;    double baGQOGBhyUaOIZJszeSeHOeTkVXGyZ92059244 = 83377211;    double baGQOGBhyUaOIZJszeSeHOeTkVXGyZ68603707 = 80697945;    double baGQOGBhyUaOIZJszeSeHOeTkVXGyZ75911434 = -263712642;    double baGQOGBhyUaOIZJszeSeHOeTkVXGyZ27366769 = -634547788;    double baGQOGBhyUaOIZJszeSeHOeTkVXGyZ70074382 = -31736577;    double baGQOGBhyUaOIZJszeSeHOeTkVXGyZ58975955 = -696903184;    double baGQOGBhyUaOIZJszeSeHOeTkVXGyZ74509699 = -871998118;    double baGQOGBhyUaOIZJszeSeHOeTkVXGyZ12913866 = -669177326;    double baGQOGBhyUaOIZJszeSeHOeTkVXGyZ11089891 = -429043265;    double baGQOGBhyUaOIZJszeSeHOeTkVXGyZ48815806 = -451384315;    double baGQOGBhyUaOIZJszeSeHOeTkVXGyZ86732884 = -62129590;    double baGQOGBhyUaOIZJszeSeHOeTkVXGyZ74079577 = 53621942;    double baGQOGBhyUaOIZJszeSeHOeTkVXGyZ61135375 = -509805538;    double baGQOGBhyUaOIZJszeSeHOeTkVXGyZ47087133 = 62148559;    double baGQOGBhyUaOIZJszeSeHOeTkVXGyZ59357662 = -268302477;    double baGQOGBhyUaOIZJszeSeHOeTkVXGyZ54121355 = 28396203;    double baGQOGBhyUaOIZJszeSeHOeTkVXGyZ24906167 = 9989327;    double baGQOGBhyUaOIZJszeSeHOeTkVXGyZ83438574 = -701934589;    double baGQOGBhyUaOIZJszeSeHOeTkVXGyZ26356448 = -890224631;    double baGQOGBhyUaOIZJszeSeHOeTkVXGyZ76075597 = -518296435;    double baGQOGBhyUaOIZJszeSeHOeTkVXGyZ74732327 = -121717488;    double baGQOGBhyUaOIZJszeSeHOeTkVXGyZ23300847 = -315207232;    double baGQOGBhyUaOIZJszeSeHOeTkVXGyZ6814319 = -826992323;    double baGQOGBhyUaOIZJszeSeHOeTkVXGyZ21720009 = -88726309;    double baGQOGBhyUaOIZJszeSeHOeTkVXGyZ75719011 = -181759603;    double baGQOGBhyUaOIZJszeSeHOeTkVXGyZ34809429 = -43367034;    double baGQOGBhyUaOIZJszeSeHOeTkVXGyZ6503253 = -577358308;    double baGQOGBhyUaOIZJszeSeHOeTkVXGyZ75946149 = 15025543;    double baGQOGBhyUaOIZJszeSeHOeTkVXGyZ58644620 = -718389362;    double baGQOGBhyUaOIZJszeSeHOeTkVXGyZ17252379 = -969430323;    double baGQOGBhyUaOIZJszeSeHOeTkVXGyZ68442721 = -315286901;    double baGQOGBhyUaOIZJszeSeHOeTkVXGyZ93353082 = -587152774;    double baGQOGBhyUaOIZJszeSeHOeTkVXGyZ51938201 = -938730902;    double baGQOGBhyUaOIZJszeSeHOeTkVXGyZ93318210 = 80161;    double baGQOGBhyUaOIZJszeSeHOeTkVXGyZ66501234 = -377400442;    double baGQOGBhyUaOIZJszeSeHOeTkVXGyZ23380780 = -224480986;    double baGQOGBhyUaOIZJszeSeHOeTkVXGyZ10673074 = 12516166;    double baGQOGBhyUaOIZJszeSeHOeTkVXGyZ19065976 = -191242489;    double baGQOGBhyUaOIZJszeSeHOeTkVXGyZ63214239 = -569367126;    double baGQOGBhyUaOIZJszeSeHOeTkVXGyZ76614091 = -380659564;    double baGQOGBhyUaOIZJszeSeHOeTkVXGyZ35930043 = -725601516;    double baGQOGBhyUaOIZJszeSeHOeTkVXGyZ83377464 = -81927363;    double baGQOGBhyUaOIZJszeSeHOeTkVXGyZ39803396 = -912194365;    double baGQOGBhyUaOIZJszeSeHOeTkVXGyZ40808743 = -975634554;    double baGQOGBhyUaOIZJszeSeHOeTkVXGyZ12091717 = -862699209;    double baGQOGBhyUaOIZJszeSeHOeTkVXGyZ20630214 = -276116636;    double baGQOGBhyUaOIZJszeSeHOeTkVXGyZ66062432 = -477267749;     baGQOGBhyUaOIZJszeSeHOeTkVXGyZ96456044 = baGQOGBhyUaOIZJszeSeHOeTkVXGyZ97795570;     baGQOGBhyUaOIZJszeSeHOeTkVXGyZ97795570 = baGQOGBhyUaOIZJszeSeHOeTkVXGyZ32081618;     baGQOGBhyUaOIZJszeSeHOeTkVXGyZ32081618 = baGQOGBhyUaOIZJszeSeHOeTkVXGyZ60087455;     baGQOGBhyUaOIZJszeSeHOeTkVXGyZ60087455 = baGQOGBhyUaOIZJszeSeHOeTkVXGyZ79013322;     baGQOGBhyUaOIZJszeSeHOeTkVXGyZ79013322 = baGQOGBhyUaOIZJszeSeHOeTkVXGyZ57152069;     baGQOGBhyUaOIZJszeSeHOeTkVXGyZ57152069 = baGQOGBhyUaOIZJszeSeHOeTkVXGyZ86642883;     baGQOGBhyUaOIZJszeSeHOeTkVXGyZ86642883 = baGQOGBhyUaOIZJszeSeHOeTkVXGyZ32557972;     baGQOGBhyUaOIZJszeSeHOeTkVXGyZ32557972 = baGQOGBhyUaOIZJszeSeHOeTkVXGyZ86259558;     baGQOGBhyUaOIZJszeSeHOeTkVXGyZ86259558 = baGQOGBhyUaOIZJszeSeHOeTkVXGyZ94144087;     baGQOGBhyUaOIZJszeSeHOeTkVXGyZ94144087 = baGQOGBhyUaOIZJszeSeHOeTkVXGyZ70414929;     baGQOGBhyUaOIZJszeSeHOeTkVXGyZ70414929 = baGQOGBhyUaOIZJszeSeHOeTkVXGyZ5647612;     baGQOGBhyUaOIZJszeSeHOeTkVXGyZ5647612 = baGQOGBhyUaOIZJszeSeHOeTkVXGyZ51342150;     baGQOGBhyUaOIZJszeSeHOeTkVXGyZ51342150 = baGQOGBhyUaOIZJszeSeHOeTkVXGyZ40705863;     baGQOGBhyUaOIZJszeSeHOeTkVXGyZ40705863 = baGQOGBhyUaOIZJszeSeHOeTkVXGyZ71338911;     baGQOGBhyUaOIZJszeSeHOeTkVXGyZ71338911 = baGQOGBhyUaOIZJszeSeHOeTkVXGyZ16727195;     baGQOGBhyUaOIZJszeSeHOeTkVXGyZ16727195 = baGQOGBhyUaOIZJszeSeHOeTkVXGyZ61946494;     baGQOGBhyUaOIZJszeSeHOeTkVXGyZ61946494 = baGQOGBhyUaOIZJszeSeHOeTkVXGyZ86515340;     baGQOGBhyUaOIZJszeSeHOeTkVXGyZ86515340 = baGQOGBhyUaOIZJszeSeHOeTkVXGyZ71023657;     baGQOGBhyUaOIZJszeSeHOeTkVXGyZ71023657 = baGQOGBhyUaOIZJszeSeHOeTkVXGyZ74194133;     baGQOGBhyUaOIZJszeSeHOeTkVXGyZ74194133 = baGQOGBhyUaOIZJszeSeHOeTkVXGyZ96438866;     baGQOGBhyUaOIZJszeSeHOeTkVXGyZ96438866 = baGQOGBhyUaOIZJszeSeHOeTkVXGyZ20544610;     baGQOGBhyUaOIZJszeSeHOeTkVXGyZ20544610 = baGQOGBhyUaOIZJszeSeHOeTkVXGyZ70428802;     baGQOGBhyUaOIZJszeSeHOeTkVXGyZ70428802 = baGQOGBhyUaOIZJszeSeHOeTkVXGyZ62007236;     baGQOGBhyUaOIZJszeSeHOeTkVXGyZ62007236 = baGQOGBhyUaOIZJszeSeHOeTkVXGyZ1111500;     baGQOGBhyUaOIZJszeSeHOeTkVXGyZ1111500 = baGQOGBhyUaOIZJszeSeHOeTkVXGyZ4503623;     baGQOGBhyUaOIZJszeSeHOeTkVXGyZ4503623 = baGQOGBhyUaOIZJszeSeHOeTkVXGyZ44238203;     baGQOGBhyUaOIZJszeSeHOeTkVXGyZ44238203 = baGQOGBhyUaOIZJszeSeHOeTkVXGyZ75552993;     baGQOGBhyUaOIZJszeSeHOeTkVXGyZ75552993 = baGQOGBhyUaOIZJszeSeHOeTkVXGyZ83742165;     baGQOGBhyUaOIZJszeSeHOeTkVXGyZ83742165 = baGQOGBhyUaOIZJszeSeHOeTkVXGyZ99526674;     baGQOGBhyUaOIZJszeSeHOeTkVXGyZ99526674 = baGQOGBhyUaOIZJszeSeHOeTkVXGyZ20064511;     baGQOGBhyUaOIZJszeSeHOeTkVXGyZ20064511 = baGQOGBhyUaOIZJszeSeHOeTkVXGyZ9279555;     baGQOGBhyUaOIZJszeSeHOeTkVXGyZ9279555 = baGQOGBhyUaOIZJszeSeHOeTkVXGyZ58560478;     baGQOGBhyUaOIZJszeSeHOeTkVXGyZ58560478 = baGQOGBhyUaOIZJszeSeHOeTkVXGyZ91984487;     baGQOGBhyUaOIZJszeSeHOeTkVXGyZ91984487 = baGQOGBhyUaOIZJszeSeHOeTkVXGyZ86584508;     baGQOGBhyUaOIZJszeSeHOeTkVXGyZ86584508 = baGQOGBhyUaOIZJszeSeHOeTkVXGyZ46432744;     baGQOGBhyUaOIZJszeSeHOeTkVXGyZ46432744 = baGQOGBhyUaOIZJszeSeHOeTkVXGyZ33288621;     baGQOGBhyUaOIZJszeSeHOeTkVXGyZ33288621 = baGQOGBhyUaOIZJszeSeHOeTkVXGyZ35590047;     baGQOGBhyUaOIZJszeSeHOeTkVXGyZ35590047 = baGQOGBhyUaOIZJszeSeHOeTkVXGyZ10439743;     baGQOGBhyUaOIZJszeSeHOeTkVXGyZ10439743 = baGQOGBhyUaOIZJszeSeHOeTkVXGyZ96291330;     baGQOGBhyUaOIZJszeSeHOeTkVXGyZ96291330 = baGQOGBhyUaOIZJszeSeHOeTkVXGyZ50893286;     baGQOGBhyUaOIZJszeSeHOeTkVXGyZ50893286 = baGQOGBhyUaOIZJszeSeHOeTkVXGyZ89624548;     baGQOGBhyUaOIZJszeSeHOeTkVXGyZ89624548 = baGQOGBhyUaOIZJszeSeHOeTkVXGyZ98824600;     baGQOGBhyUaOIZJszeSeHOeTkVXGyZ98824600 = baGQOGBhyUaOIZJszeSeHOeTkVXGyZ94709790;     baGQOGBhyUaOIZJszeSeHOeTkVXGyZ94709790 = baGQOGBhyUaOIZJszeSeHOeTkVXGyZ27197807;     baGQOGBhyUaOIZJszeSeHOeTkVXGyZ27197807 = baGQOGBhyUaOIZJszeSeHOeTkVXGyZ94608247;     baGQOGBhyUaOIZJszeSeHOeTkVXGyZ94608247 = baGQOGBhyUaOIZJszeSeHOeTkVXGyZ28557473;     baGQOGBhyUaOIZJszeSeHOeTkVXGyZ28557473 = baGQOGBhyUaOIZJszeSeHOeTkVXGyZ85593583;     baGQOGBhyUaOIZJszeSeHOeTkVXGyZ85593583 = baGQOGBhyUaOIZJszeSeHOeTkVXGyZ58300614;     baGQOGBhyUaOIZJszeSeHOeTkVXGyZ58300614 = baGQOGBhyUaOIZJszeSeHOeTkVXGyZ15299444;     baGQOGBhyUaOIZJszeSeHOeTkVXGyZ15299444 = baGQOGBhyUaOIZJszeSeHOeTkVXGyZ6173593;     baGQOGBhyUaOIZJszeSeHOeTkVXGyZ6173593 = baGQOGBhyUaOIZJszeSeHOeTkVXGyZ68126310;     baGQOGBhyUaOIZJszeSeHOeTkVXGyZ68126310 = baGQOGBhyUaOIZJszeSeHOeTkVXGyZ15961344;     baGQOGBhyUaOIZJszeSeHOeTkVXGyZ15961344 = baGQOGBhyUaOIZJszeSeHOeTkVXGyZ92059244;     baGQOGBhyUaOIZJszeSeHOeTkVXGyZ92059244 = baGQOGBhyUaOIZJszeSeHOeTkVXGyZ68603707;     baGQOGBhyUaOIZJszeSeHOeTkVXGyZ68603707 = baGQOGBhyUaOIZJszeSeHOeTkVXGyZ75911434;     baGQOGBhyUaOIZJszeSeHOeTkVXGyZ75911434 = baGQOGBhyUaOIZJszeSeHOeTkVXGyZ27366769;     baGQOGBhyUaOIZJszeSeHOeTkVXGyZ27366769 = baGQOGBhyUaOIZJszeSeHOeTkVXGyZ70074382;     baGQOGBhyUaOIZJszeSeHOeTkVXGyZ70074382 = baGQOGBhyUaOIZJszeSeHOeTkVXGyZ58975955;     baGQOGBhyUaOIZJszeSeHOeTkVXGyZ58975955 = baGQOGBhyUaOIZJszeSeHOeTkVXGyZ74509699;     baGQOGBhyUaOIZJszeSeHOeTkVXGyZ74509699 = baGQOGBhyUaOIZJszeSeHOeTkVXGyZ12913866;     baGQOGBhyUaOIZJszeSeHOeTkVXGyZ12913866 = baGQOGBhyUaOIZJszeSeHOeTkVXGyZ11089891;     baGQOGBhyUaOIZJszeSeHOeTkVXGyZ11089891 = baGQOGBhyUaOIZJszeSeHOeTkVXGyZ48815806;     baGQOGBhyUaOIZJszeSeHOeTkVXGyZ48815806 = baGQOGBhyUaOIZJszeSeHOeTkVXGyZ86732884;     baGQOGBhyUaOIZJszeSeHOeTkVXGyZ86732884 = baGQOGBhyUaOIZJszeSeHOeTkVXGyZ74079577;     baGQOGBhyUaOIZJszeSeHOeTkVXGyZ74079577 = baGQOGBhyUaOIZJszeSeHOeTkVXGyZ61135375;     baGQOGBhyUaOIZJszeSeHOeTkVXGyZ61135375 = baGQOGBhyUaOIZJszeSeHOeTkVXGyZ47087133;     baGQOGBhyUaOIZJszeSeHOeTkVXGyZ47087133 = baGQOGBhyUaOIZJszeSeHOeTkVXGyZ59357662;     baGQOGBhyUaOIZJszeSeHOeTkVXGyZ59357662 = baGQOGBhyUaOIZJszeSeHOeTkVXGyZ54121355;     baGQOGBhyUaOIZJszeSeHOeTkVXGyZ54121355 = baGQOGBhyUaOIZJszeSeHOeTkVXGyZ24906167;     baGQOGBhyUaOIZJszeSeHOeTkVXGyZ24906167 = baGQOGBhyUaOIZJszeSeHOeTkVXGyZ83438574;     baGQOGBhyUaOIZJszeSeHOeTkVXGyZ83438574 = baGQOGBhyUaOIZJszeSeHOeTkVXGyZ26356448;     baGQOGBhyUaOIZJszeSeHOeTkVXGyZ26356448 = baGQOGBhyUaOIZJszeSeHOeTkVXGyZ76075597;     baGQOGBhyUaOIZJszeSeHOeTkVXGyZ76075597 = baGQOGBhyUaOIZJszeSeHOeTkVXGyZ74732327;     baGQOGBhyUaOIZJszeSeHOeTkVXGyZ74732327 = baGQOGBhyUaOIZJszeSeHOeTkVXGyZ23300847;     baGQOGBhyUaOIZJszeSeHOeTkVXGyZ23300847 = baGQOGBhyUaOIZJszeSeHOeTkVXGyZ6814319;     baGQOGBhyUaOIZJszeSeHOeTkVXGyZ6814319 = baGQOGBhyUaOIZJszeSeHOeTkVXGyZ21720009;     baGQOGBhyUaOIZJszeSeHOeTkVXGyZ21720009 = baGQOGBhyUaOIZJszeSeHOeTkVXGyZ75719011;     baGQOGBhyUaOIZJszeSeHOeTkVXGyZ75719011 = baGQOGBhyUaOIZJszeSeHOeTkVXGyZ34809429;     baGQOGBhyUaOIZJszeSeHOeTkVXGyZ34809429 = baGQOGBhyUaOIZJszeSeHOeTkVXGyZ6503253;     baGQOGBhyUaOIZJszeSeHOeTkVXGyZ6503253 = baGQOGBhyUaOIZJszeSeHOeTkVXGyZ75946149;     baGQOGBhyUaOIZJszeSeHOeTkVXGyZ75946149 = baGQOGBhyUaOIZJszeSeHOeTkVXGyZ58644620;     baGQOGBhyUaOIZJszeSeHOeTkVXGyZ58644620 = baGQOGBhyUaOIZJszeSeHOeTkVXGyZ17252379;     baGQOGBhyUaOIZJszeSeHOeTkVXGyZ17252379 = baGQOGBhyUaOIZJszeSeHOeTkVXGyZ68442721;     baGQOGBhyUaOIZJszeSeHOeTkVXGyZ68442721 = baGQOGBhyUaOIZJszeSeHOeTkVXGyZ93353082;     baGQOGBhyUaOIZJszeSeHOeTkVXGyZ93353082 = baGQOGBhyUaOIZJszeSeHOeTkVXGyZ51938201;     baGQOGBhyUaOIZJszeSeHOeTkVXGyZ51938201 = baGQOGBhyUaOIZJszeSeHOeTkVXGyZ93318210;     baGQOGBhyUaOIZJszeSeHOeTkVXGyZ93318210 = baGQOGBhyUaOIZJszeSeHOeTkVXGyZ66501234;     baGQOGBhyUaOIZJszeSeHOeTkVXGyZ66501234 = baGQOGBhyUaOIZJszeSeHOeTkVXGyZ23380780;     baGQOGBhyUaOIZJszeSeHOeTkVXGyZ23380780 = baGQOGBhyUaOIZJszeSeHOeTkVXGyZ10673074;     baGQOGBhyUaOIZJszeSeHOeTkVXGyZ10673074 = baGQOGBhyUaOIZJszeSeHOeTkVXGyZ19065976;     baGQOGBhyUaOIZJszeSeHOeTkVXGyZ19065976 = baGQOGBhyUaOIZJszeSeHOeTkVXGyZ63214239;     baGQOGBhyUaOIZJszeSeHOeTkVXGyZ63214239 = baGQOGBhyUaOIZJszeSeHOeTkVXGyZ76614091;     baGQOGBhyUaOIZJszeSeHOeTkVXGyZ76614091 = baGQOGBhyUaOIZJszeSeHOeTkVXGyZ35930043;     baGQOGBhyUaOIZJszeSeHOeTkVXGyZ35930043 = baGQOGBhyUaOIZJszeSeHOeTkVXGyZ83377464;     baGQOGBhyUaOIZJszeSeHOeTkVXGyZ83377464 = baGQOGBhyUaOIZJszeSeHOeTkVXGyZ39803396;     baGQOGBhyUaOIZJszeSeHOeTkVXGyZ39803396 = baGQOGBhyUaOIZJszeSeHOeTkVXGyZ40808743;     baGQOGBhyUaOIZJszeSeHOeTkVXGyZ40808743 = baGQOGBhyUaOIZJszeSeHOeTkVXGyZ12091717;     baGQOGBhyUaOIZJszeSeHOeTkVXGyZ12091717 = baGQOGBhyUaOIZJszeSeHOeTkVXGyZ20630214;     baGQOGBhyUaOIZJszeSeHOeTkVXGyZ20630214 = baGQOGBhyUaOIZJszeSeHOeTkVXGyZ66062432;     baGQOGBhyUaOIZJszeSeHOeTkVXGyZ66062432 = baGQOGBhyUaOIZJszeSeHOeTkVXGyZ96456044;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void iZLOhBXqXjsjkXOiUVsocXeTI26889832() {     double UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg47620127 = -299858091;    double UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg29162173 = -792352762;    double UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg99153181 = -215857169;    double UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg36611175 = -467847701;    double UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg26537434 = -111730327;    double UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg25976055 = -131406228;    double UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg65831908 = -856521047;    double UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg31792271 = 87978106;    double UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg19658308 = -949751789;    double UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg29100366 = -626246643;    double UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg19402643 = -984222165;    double UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg90574600 = 45229153;    double UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg36356619 = -162240721;    double UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg77669517 = -717001910;    double UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg29048797 = -755605716;    double UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg6733828 = -508216896;    double UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg17395487 = -264041536;    double UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg51747682 = -445522411;    double UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg14381370 = 43247842;    double UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg68590829 = -217348063;    double UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg78126822 = -887877127;    double UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg1847090 = -363012849;    double UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg14834795 = -51396348;    double UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg9085430 = -120687388;    double UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg39360468 = -497444039;    double UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg80055972 = -914639325;    double UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg79235603 = -985260065;    double UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg38754118 = -526690356;    double UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg12175038 = -13754521;    double UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg82261526 = -674778538;    double UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg97570457 = -218325964;    double UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg68383276 = -733502211;    double UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg86387005 = -391609720;    double UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg99441466 = -232754716;    double UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg71752522 = -913382223;    double UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg98844634 = -940745454;    double UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg44520759 = -661780969;    double UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg56653100 = -870255076;    double UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg27600497 = -26957693;    double UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg85731570 = -300477014;    double UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg33051516 = -479301907;    double UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg63341390 = -538887958;    double UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg57508400 = -541171815;    double UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg95528247 = -816290334;    double UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg95177611 = -730003509;    double UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg67836860 = -15539340;    double UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg55792174 = -138776200;    double UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg77202706 = -629571771;    double UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg78581643 = -352084894;    double UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg42964857 = 37119203;    double UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg39705457 = -570247479;    double UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg37190726 = 26488126;    double UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg27556900 = -722020049;    double UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg40107333 = 21329797;    double UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg48763010 = -626382167;    double UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg45773038 = -936845243;    double UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg14327379 = -640956414;    double UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg90067751 = 4830219;    double UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg97250707 = -970403663;    double UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg46481461 = -197091002;    double UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg46740452 = -146146163;    double UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg27077790 = -229830692;    double UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg19617234 = -898267374;    double UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg37396782 = -174973252;    double UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg31529908 = -307920679;    double UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg51019366 = -150719954;    double UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg4187596 = -563161127;    double UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg36915152 = -929486006;    double UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg5916995 = -803619688;    double UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg30204162 = -814860262;    double UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg62213069 = -846435927;    double UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg60742387 = -393786460;    double UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg24147185 = -318564718;    double UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg28649799 = -656275145;    double UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg35539314 = -738046156;    double UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg14785432 = -248989169;    double UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg44338689 = -821841034;    double UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg19306547 = -235106014;    double UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg13907818 = -390683880;    double UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg71523608 = -381904700;    double UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg24263799 = -675863125;    double UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg2032897 = -255688295;    double UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg60172475 = -74605462;    double UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg69210180 = 49126276;    double UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg42556069 = -4531059;    double UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg60379731 = -144814091;    double UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg40826377 = 88517838;    double UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg46279672 = -312939518;    double UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg50678457 = -606372549;    double UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg25979485 = -976536981;    double UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg84517256 = -199789041;    double UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg54453007 = -566611189;    double UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg59402393 = -899851414;    double UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg81119035 = -829866691;    double UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg38991119 = -54330851;    double UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg5973726 = -149471216;    double UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg43724156 = -640620584;    double UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg20111618 = -266198564;    double UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg63998339 = -408369655;    double UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg44158246 = -299858091;     UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg47620127 = UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg29162173;     UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg29162173 = UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg99153181;     UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg99153181 = UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg36611175;     UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg36611175 = UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg26537434;     UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg26537434 = UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg25976055;     UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg25976055 = UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg65831908;     UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg65831908 = UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg31792271;     UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg31792271 = UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg19658308;     UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg19658308 = UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg29100366;     UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg29100366 = UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg19402643;     UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg19402643 = UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg90574600;     UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg90574600 = UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg36356619;     UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg36356619 = UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg77669517;     UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg77669517 = UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg29048797;     UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg29048797 = UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg6733828;     UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg6733828 = UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg17395487;     UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg17395487 = UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg51747682;     UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg51747682 = UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg14381370;     UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg14381370 = UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg68590829;     UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg68590829 = UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg78126822;     UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg78126822 = UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg1847090;     UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg1847090 = UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg14834795;     UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg14834795 = UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg9085430;     UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg9085430 = UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg39360468;     UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg39360468 = UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg80055972;     UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg80055972 = UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg79235603;     UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg79235603 = UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg38754118;     UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg38754118 = UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg12175038;     UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg12175038 = UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg82261526;     UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg82261526 = UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg97570457;     UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg97570457 = UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg68383276;     UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg68383276 = UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg86387005;     UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg86387005 = UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg99441466;     UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg99441466 = UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg71752522;     UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg71752522 = UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg98844634;     UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg98844634 = UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg44520759;     UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg44520759 = UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg56653100;     UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg56653100 = UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg27600497;     UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg27600497 = UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg85731570;     UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg85731570 = UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg33051516;     UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg33051516 = UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg63341390;     UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg63341390 = UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg57508400;     UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg57508400 = UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg95528247;     UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg95528247 = UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg95177611;     UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg95177611 = UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg67836860;     UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg67836860 = UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg55792174;     UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg55792174 = UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg77202706;     UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg77202706 = UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg78581643;     UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg78581643 = UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg42964857;     UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg42964857 = UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg39705457;     UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg39705457 = UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg37190726;     UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg37190726 = UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg27556900;     UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg27556900 = UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg40107333;     UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg40107333 = UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg48763010;     UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg48763010 = UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg45773038;     UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg45773038 = UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg14327379;     UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg14327379 = UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg90067751;     UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg90067751 = UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg97250707;     UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg97250707 = UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg46481461;     UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg46481461 = UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg46740452;     UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg46740452 = UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg27077790;     UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg27077790 = UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg19617234;     UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg19617234 = UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg37396782;     UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg37396782 = UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg31529908;     UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg31529908 = UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg51019366;     UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg51019366 = UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg4187596;     UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg4187596 = UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg36915152;     UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg36915152 = UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg5916995;     UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg5916995 = UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg30204162;     UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg30204162 = UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg62213069;     UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg62213069 = UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg60742387;     UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg60742387 = UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg24147185;     UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg24147185 = UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg28649799;     UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg28649799 = UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg35539314;     UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg35539314 = UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg14785432;     UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg14785432 = UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg44338689;     UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg44338689 = UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg19306547;     UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg19306547 = UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg13907818;     UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg13907818 = UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg71523608;     UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg71523608 = UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg24263799;     UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg24263799 = UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg2032897;     UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg2032897 = UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg60172475;     UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg60172475 = UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg69210180;     UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg69210180 = UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg42556069;     UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg42556069 = UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg60379731;     UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg60379731 = UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg40826377;     UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg40826377 = UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg46279672;     UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg46279672 = UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg50678457;     UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg50678457 = UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg25979485;     UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg25979485 = UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg84517256;     UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg84517256 = UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg54453007;     UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg54453007 = UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg59402393;     UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg59402393 = UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg81119035;     UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg81119035 = UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg38991119;     UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg38991119 = UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg5973726;     UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg5973726 = UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg43724156;     UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg43724156 = UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg20111618;     UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg20111618 = UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg63998339;     UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg63998339 = UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg44158246;     UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg44158246 = UAFoRbqhTaOwwpBMLUCrGbbHsXLFJg47620127;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void guYVTVUJYarWwaAHlHLTDwaDx36494559() {     double vWYexCmKzOlXfoduMXJXNgcSUfZrbb69442348 = -868073423;    double vWYexCmKzOlXfoduMXJXNgcSUfZrbb90629977 = -74951615;    double vWYexCmKzOlXfoduMXJXNgcSUfZrbb44880451 = -263074701;    double vWYexCmKzOlXfoduMXJXNgcSUfZrbb67986320 = -672631877;    double vWYexCmKzOlXfoduMXJXNgcSUfZrbb86671764 = 11018751;    double vWYexCmKzOlXfoduMXJXNgcSUfZrbb49994370 = -142949386;    double vWYexCmKzOlXfoduMXJXNgcSUfZrbb94852492 = -919839171;    double vWYexCmKzOlXfoduMXJXNgcSUfZrbb18654900 = 79797257;    double vWYexCmKzOlXfoduMXJXNgcSUfZrbb16181948 = -935547207;    double vWYexCmKzOlXfoduMXJXNgcSUfZrbb90383591 = -496465040;    double vWYexCmKzOlXfoduMXJXNgcSUfZrbb90318910 = -539979867;    double vWYexCmKzOlXfoduMXJXNgcSUfZrbb6756484 = -57952453;    double vWYexCmKzOlXfoduMXJXNgcSUfZrbb69345561 = -700274510;    double vWYexCmKzOlXfoduMXJXNgcSUfZrbb44635984 = -467078708;    double vWYexCmKzOlXfoduMXJXNgcSUfZrbb24306592 = -682447634;    double vWYexCmKzOlXfoduMXJXNgcSUfZrbb54704554 = -950583437;    double vWYexCmKzOlXfoduMXJXNgcSUfZrbb10844546 = -649866254;    double vWYexCmKzOlXfoduMXJXNgcSUfZrbb14272985 = -367243328;    double vWYexCmKzOlXfoduMXJXNgcSUfZrbb19018593 = -29887815;    double vWYexCmKzOlXfoduMXJXNgcSUfZrbb49700472 = -708593119;    double vWYexCmKzOlXfoduMXJXNgcSUfZrbb35281107 = -619955829;    double vWYexCmKzOlXfoduMXJXNgcSUfZrbb66249067 = -433764013;    double vWYexCmKzOlXfoduMXJXNgcSUfZrbb24306199 = -707423703;    double vWYexCmKzOlXfoduMXJXNgcSUfZrbb46363051 = -530786254;    double vWYexCmKzOlXfoduMXJXNgcSUfZrbb13291135 = -408341011;    double vWYexCmKzOlXfoduMXJXNgcSUfZrbb69631826 = -141824853;    double vWYexCmKzOlXfoduMXJXNgcSUfZrbb52272207 = -512064110;    double vWYexCmKzOlXfoduMXJXNgcSUfZrbb74333944 = -391138588;    double vWYexCmKzOlXfoduMXJXNgcSUfZrbb60071950 = -780700438;    double vWYexCmKzOlXfoduMXJXNgcSUfZrbb28078604 = 49007268;    double vWYexCmKzOlXfoduMXJXNgcSUfZrbb48735723 = -624053711;    double vWYexCmKzOlXfoduMXJXNgcSUfZrbb87274602 = -509391042;    double vWYexCmKzOlXfoduMXJXNgcSUfZrbb11706470 = -134213603;    double vWYexCmKzOlXfoduMXJXNgcSUfZrbb71980584 = 91425657;    double vWYexCmKzOlXfoduMXJXNgcSUfZrbb52586735 = 36799175;    double vWYexCmKzOlXfoduMXJXNgcSUfZrbb68421595 = -955161434;    double vWYexCmKzOlXfoduMXJXNgcSUfZrbb87603015 = -711398066;    double vWYexCmKzOlXfoduMXJXNgcSUfZrbb60590962 = -351797834;    double vWYexCmKzOlXfoduMXJXNgcSUfZrbb87980942 = -899362974;    double vWYexCmKzOlXfoduMXJXNgcSUfZrbb98402216 = -758026015;    double vWYexCmKzOlXfoduMXJXNgcSUfZrbb87427361 = -913441165;    double vWYexCmKzOlXfoduMXJXNgcSUfZrbb79843560 = -226354036;    double vWYexCmKzOlXfoduMXJXNgcSUfZrbb4875799 = -585138630;    double vWYexCmKzOlXfoduMXJXNgcSUfZrbb43623106 = -725096504;    double vWYexCmKzOlXfoduMXJXNgcSUfZrbb75093422 = -916692138;    double vWYexCmKzOlXfoduMXJXNgcSUfZrbb7043339 = -818971570;    double vWYexCmKzOlXfoduMXJXNgcSUfZrbb81460285 = -319783720;    double vWYexCmKzOlXfoduMXJXNgcSUfZrbb59042458 = -368067760;    double vWYexCmKzOlXfoduMXJXNgcSUfZrbb85645735 = -537201316;    double vWYexCmKzOlXfoduMXJXNgcSUfZrbb59012334 = 58064018;    double vWYexCmKzOlXfoduMXJXNgcSUfZrbb28167277 = -614136805;    double vWYexCmKzOlXfoduMXJXNgcSUfZrbb33579390 = -298889954;    double vWYexCmKzOlXfoduMXJXNgcSUfZrbb18779764 = -685615189;    double vWYexCmKzOlXfoduMXJXNgcSUfZrbb68132455 = -169679262;    double vWYexCmKzOlXfoduMXJXNgcSUfZrbb1213452 = -587503916;    double vWYexCmKzOlXfoduMXJXNgcSUfZrbb3193281 = -334309410;    double vWYexCmKzOlXfoduMXJXNgcSUfZrbb66323778 = -367527912;    double vWYexCmKzOlXfoduMXJXNgcSUfZrbb98517400 = -732288447;    double vWYexCmKzOlXfoduMXJXNgcSUfZrbb54695186 = -164290866;    double vWYexCmKzOlXfoduMXJXNgcSUfZrbb17039938 = -847156396;    double vWYexCmKzOlXfoduMXJXNgcSUfZrbb97722163 = -630885276;    double vWYexCmKzOlXfoduMXJXNgcSUfZrbb20518549 = -428700583;    double vWYexCmKzOlXfoduMXJXNgcSUfZrbb58582950 = -139502305;    double vWYexCmKzOlXfoduMXJXNgcSUfZrbb88103344 = -884554476;    double vWYexCmKzOlXfoduMXJXNgcSUfZrbb41647868 = -872411329;    double vWYexCmKzOlXfoduMXJXNgcSUfZrbb3044309 = 69411174;    double vWYexCmKzOlXfoduMXJXNgcSUfZrbb95050013 = -923738850;    double vWYexCmKzOlXfoduMXJXNgcSUfZrbb97364977 = -691700168;    double vWYexCmKzOlXfoduMXJXNgcSUfZrbb92049249 = -403877883;    double vWYexCmKzOlXfoduMXJXNgcSUfZrbb55884997 = -727286201;    double vWYexCmKzOlXfoduMXJXNgcSUfZrbb67101538 = -139185371;    double vWYexCmKzOlXfoduMXJXNgcSUfZrbb50253584 = -198068420;    double vWYexCmKzOlXfoduMXJXNgcSUfZrbb26292042 = -467880355;    double vWYexCmKzOlXfoduMXJXNgcSUfZrbb20616377 = -271861800;    double vWYexCmKzOlXfoduMXJXNgcSUfZrbb62273110 = -795151954;    double vWYexCmKzOlXfoduMXJXNgcSUfZrbb55437546 = -293601794;    double vWYexCmKzOlXfoduMXJXNgcSUfZrbb61373269 = -848625383;    double vWYexCmKzOlXfoduMXJXNgcSUfZrbb80683092 = -982327200;    double vWYexCmKzOlXfoduMXJXNgcSUfZrbb71269628 = -614094116;    double vWYexCmKzOlXfoduMXJXNgcSUfZrbb6247796 = -589369442;    double vWYexCmKzOlXfoduMXJXNgcSUfZrbb88171541 = -822041133;    double vWYexCmKzOlXfoduMXJXNgcSUfZrbb93229748 = -43996351;    double vWYexCmKzOlXfoduMXJXNgcSUfZrbb88688208 = -853937272;    double vWYexCmKzOlXfoduMXJXNgcSUfZrbb1059617 = -738764457;    double vWYexCmKzOlXfoduMXJXNgcSUfZrbb99911327 = -336855928;    double vWYexCmKzOlXfoduMXJXNgcSUfZrbb15156334 = -225163758;    double vWYexCmKzOlXfoduMXJXNgcSUfZrbb68494838 = -823775854;    double vWYexCmKzOlXfoduMXJXNgcSUfZrbb43574015 = -964534341;    double vWYexCmKzOlXfoduMXJXNgcSUfZrbb70767132 = -321070427;    double vWYexCmKzOlXfoduMXJXNgcSUfZrbb49393454 = -628891416;    double vWYexCmKzOlXfoduMXJXNgcSUfZrbb2097817 = -487633523;    double vWYexCmKzOlXfoduMXJXNgcSUfZrbb89085615 = -979109619;    double vWYexCmKzOlXfoduMXJXNgcSUfZrbb5895776 = -87506968;    double vWYexCmKzOlXfoduMXJXNgcSUfZrbb70941004 = 47793422;    double vWYexCmKzOlXfoduMXJXNgcSUfZrbb680053 = -27140739;    double vWYexCmKzOlXfoduMXJXNgcSUfZrbb66908813 = -384740583;    double vWYexCmKzOlXfoduMXJXNgcSUfZrbb21260611 = 13148268;    double vWYexCmKzOlXfoduMXJXNgcSUfZrbb16772455 = -700584155;    double vWYexCmKzOlXfoduMXJXNgcSUfZrbb1975239 = -852685175;    double vWYexCmKzOlXfoduMXJXNgcSUfZrbb72049114 = -868073423;     vWYexCmKzOlXfoduMXJXNgcSUfZrbb69442348 = vWYexCmKzOlXfoduMXJXNgcSUfZrbb90629977;     vWYexCmKzOlXfoduMXJXNgcSUfZrbb90629977 = vWYexCmKzOlXfoduMXJXNgcSUfZrbb44880451;     vWYexCmKzOlXfoduMXJXNgcSUfZrbb44880451 = vWYexCmKzOlXfoduMXJXNgcSUfZrbb67986320;     vWYexCmKzOlXfoduMXJXNgcSUfZrbb67986320 = vWYexCmKzOlXfoduMXJXNgcSUfZrbb86671764;     vWYexCmKzOlXfoduMXJXNgcSUfZrbb86671764 = vWYexCmKzOlXfoduMXJXNgcSUfZrbb49994370;     vWYexCmKzOlXfoduMXJXNgcSUfZrbb49994370 = vWYexCmKzOlXfoduMXJXNgcSUfZrbb94852492;     vWYexCmKzOlXfoduMXJXNgcSUfZrbb94852492 = vWYexCmKzOlXfoduMXJXNgcSUfZrbb18654900;     vWYexCmKzOlXfoduMXJXNgcSUfZrbb18654900 = vWYexCmKzOlXfoduMXJXNgcSUfZrbb16181948;     vWYexCmKzOlXfoduMXJXNgcSUfZrbb16181948 = vWYexCmKzOlXfoduMXJXNgcSUfZrbb90383591;     vWYexCmKzOlXfoduMXJXNgcSUfZrbb90383591 = vWYexCmKzOlXfoduMXJXNgcSUfZrbb90318910;     vWYexCmKzOlXfoduMXJXNgcSUfZrbb90318910 = vWYexCmKzOlXfoduMXJXNgcSUfZrbb6756484;     vWYexCmKzOlXfoduMXJXNgcSUfZrbb6756484 = vWYexCmKzOlXfoduMXJXNgcSUfZrbb69345561;     vWYexCmKzOlXfoduMXJXNgcSUfZrbb69345561 = vWYexCmKzOlXfoduMXJXNgcSUfZrbb44635984;     vWYexCmKzOlXfoduMXJXNgcSUfZrbb44635984 = vWYexCmKzOlXfoduMXJXNgcSUfZrbb24306592;     vWYexCmKzOlXfoduMXJXNgcSUfZrbb24306592 = vWYexCmKzOlXfoduMXJXNgcSUfZrbb54704554;     vWYexCmKzOlXfoduMXJXNgcSUfZrbb54704554 = vWYexCmKzOlXfoduMXJXNgcSUfZrbb10844546;     vWYexCmKzOlXfoduMXJXNgcSUfZrbb10844546 = vWYexCmKzOlXfoduMXJXNgcSUfZrbb14272985;     vWYexCmKzOlXfoduMXJXNgcSUfZrbb14272985 = vWYexCmKzOlXfoduMXJXNgcSUfZrbb19018593;     vWYexCmKzOlXfoduMXJXNgcSUfZrbb19018593 = vWYexCmKzOlXfoduMXJXNgcSUfZrbb49700472;     vWYexCmKzOlXfoduMXJXNgcSUfZrbb49700472 = vWYexCmKzOlXfoduMXJXNgcSUfZrbb35281107;     vWYexCmKzOlXfoduMXJXNgcSUfZrbb35281107 = vWYexCmKzOlXfoduMXJXNgcSUfZrbb66249067;     vWYexCmKzOlXfoduMXJXNgcSUfZrbb66249067 = vWYexCmKzOlXfoduMXJXNgcSUfZrbb24306199;     vWYexCmKzOlXfoduMXJXNgcSUfZrbb24306199 = vWYexCmKzOlXfoduMXJXNgcSUfZrbb46363051;     vWYexCmKzOlXfoduMXJXNgcSUfZrbb46363051 = vWYexCmKzOlXfoduMXJXNgcSUfZrbb13291135;     vWYexCmKzOlXfoduMXJXNgcSUfZrbb13291135 = vWYexCmKzOlXfoduMXJXNgcSUfZrbb69631826;     vWYexCmKzOlXfoduMXJXNgcSUfZrbb69631826 = vWYexCmKzOlXfoduMXJXNgcSUfZrbb52272207;     vWYexCmKzOlXfoduMXJXNgcSUfZrbb52272207 = vWYexCmKzOlXfoduMXJXNgcSUfZrbb74333944;     vWYexCmKzOlXfoduMXJXNgcSUfZrbb74333944 = vWYexCmKzOlXfoduMXJXNgcSUfZrbb60071950;     vWYexCmKzOlXfoduMXJXNgcSUfZrbb60071950 = vWYexCmKzOlXfoduMXJXNgcSUfZrbb28078604;     vWYexCmKzOlXfoduMXJXNgcSUfZrbb28078604 = vWYexCmKzOlXfoduMXJXNgcSUfZrbb48735723;     vWYexCmKzOlXfoduMXJXNgcSUfZrbb48735723 = vWYexCmKzOlXfoduMXJXNgcSUfZrbb87274602;     vWYexCmKzOlXfoduMXJXNgcSUfZrbb87274602 = vWYexCmKzOlXfoduMXJXNgcSUfZrbb11706470;     vWYexCmKzOlXfoduMXJXNgcSUfZrbb11706470 = vWYexCmKzOlXfoduMXJXNgcSUfZrbb71980584;     vWYexCmKzOlXfoduMXJXNgcSUfZrbb71980584 = vWYexCmKzOlXfoduMXJXNgcSUfZrbb52586735;     vWYexCmKzOlXfoduMXJXNgcSUfZrbb52586735 = vWYexCmKzOlXfoduMXJXNgcSUfZrbb68421595;     vWYexCmKzOlXfoduMXJXNgcSUfZrbb68421595 = vWYexCmKzOlXfoduMXJXNgcSUfZrbb87603015;     vWYexCmKzOlXfoduMXJXNgcSUfZrbb87603015 = vWYexCmKzOlXfoduMXJXNgcSUfZrbb60590962;     vWYexCmKzOlXfoduMXJXNgcSUfZrbb60590962 = vWYexCmKzOlXfoduMXJXNgcSUfZrbb87980942;     vWYexCmKzOlXfoduMXJXNgcSUfZrbb87980942 = vWYexCmKzOlXfoduMXJXNgcSUfZrbb98402216;     vWYexCmKzOlXfoduMXJXNgcSUfZrbb98402216 = vWYexCmKzOlXfoduMXJXNgcSUfZrbb87427361;     vWYexCmKzOlXfoduMXJXNgcSUfZrbb87427361 = vWYexCmKzOlXfoduMXJXNgcSUfZrbb79843560;     vWYexCmKzOlXfoduMXJXNgcSUfZrbb79843560 = vWYexCmKzOlXfoduMXJXNgcSUfZrbb4875799;     vWYexCmKzOlXfoduMXJXNgcSUfZrbb4875799 = vWYexCmKzOlXfoduMXJXNgcSUfZrbb43623106;     vWYexCmKzOlXfoduMXJXNgcSUfZrbb43623106 = vWYexCmKzOlXfoduMXJXNgcSUfZrbb75093422;     vWYexCmKzOlXfoduMXJXNgcSUfZrbb75093422 = vWYexCmKzOlXfoduMXJXNgcSUfZrbb7043339;     vWYexCmKzOlXfoduMXJXNgcSUfZrbb7043339 = vWYexCmKzOlXfoduMXJXNgcSUfZrbb81460285;     vWYexCmKzOlXfoduMXJXNgcSUfZrbb81460285 = vWYexCmKzOlXfoduMXJXNgcSUfZrbb59042458;     vWYexCmKzOlXfoduMXJXNgcSUfZrbb59042458 = vWYexCmKzOlXfoduMXJXNgcSUfZrbb85645735;     vWYexCmKzOlXfoduMXJXNgcSUfZrbb85645735 = vWYexCmKzOlXfoduMXJXNgcSUfZrbb59012334;     vWYexCmKzOlXfoduMXJXNgcSUfZrbb59012334 = vWYexCmKzOlXfoduMXJXNgcSUfZrbb28167277;     vWYexCmKzOlXfoduMXJXNgcSUfZrbb28167277 = vWYexCmKzOlXfoduMXJXNgcSUfZrbb33579390;     vWYexCmKzOlXfoduMXJXNgcSUfZrbb33579390 = vWYexCmKzOlXfoduMXJXNgcSUfZrbb18779764;     vWYexCmKzOlXfoduMXJXNgcSUfZrbb18779764 = vWYexCmKzOlXfoduMXJXNgcSUfZrbb68132455;     vWYexCmKzOlXfoduMXJXNgcSUfZrbb68132455 = vWYexCmKzOlXfoduMXJXNgcSUfZrbb1213452;     vWYexCmKzOlXfoduMXJXNgcSUfZrbb1213452 = vWYexCmKzOlXfoduMXJXNgcSUfZrbb3193281;     vWYexCmKzOlXfoduMXJXNgcSUfZrbb3193281 = vWYexCmKzOlXfoduMXJXNgcSUfZrbb66323778;     vWYexCmKzOlXfoduMXJXNgcSUfZrbb66323778 = vWYexCmKzOlXfoduMXJXNgcSUfZrbb98517400;     vWYexCmKzOlXfoduMXJXNgcSUfZrbb98517400 = vWYexCmKzOlXfoduMXJXNgcSUfZrbb54695186;     vWYexCmKzOlXfoduMXJXNgcSUfZrbb54695186 = vWYexCmKzOlXfoduMXJXNgcSUfZrbb17039938;     vWYexCmKzOlXfoduMXJXNgcSUfZrbb17039938 = vWYexCmKzOlXfoduMXJXNgcSUfZrbb97722163;     vWYexCmKzOlXfoduMXJXNgcSUfZrbb97722163 = vWYexCmKzOlXfoduMXJXNgcSUfZrbb20518549;     vWYexCmKzOlXfoduMXJXNgcSUfZrbb20518549 = vWYexCmKzOlXfoduMXJXNgcSUfZrbb58582950;     vWYexCmKzOlXfoduMXJXNgcSUfZrbb58582950 = vWYexCmKzOlXfoduMXJXNgcSUfZrbb88103344;     vWYexCmKzOlXfoduMXJXNgcSUfZrbb88103344 = vWYexCmKzOlXfoduMXJXNgcSUfZrbb41647868;     vWYexCmKzOlXfoduMXJXNgcSUfZrbb41647868 = vWYexCmKzOlXfoduMXJXNgcSUfZrbb3044309;     vWYexCmKzOlXfoduMXJXNgcSUfZrbb3044309 = vWYexCmKzOlXfoduMXJXNgcSUfZrbb95050013;     vWYexCmKzOlXfoduMXJXNgcSUfZrbb95050013 = vWYexCmKzOlXfoduMXJXNgcSUfZrbb97364977;     vWYexCmKzOlXfoduMXJXNgcSUfZrbb97364977 = vWYexCmKzOlXfoduMXJXNgcSUfZrbb92049249;     vWYexCmKzOlXfoduMXJXNgcSUfZrbb92049249 = vWYexCmKzOlXfoduMXJXNgcSUfZrbb55884997;     vWYexCmKzOlXfoduMXJXNgcSUfZrbb55884997 = vWYexCmKzOlXfoduMXJXNgcSUfZrbb67101538;     vWYexCmKzOlXfoduMXJXNgcSUfZrbb67101538 = vWYexCmKzOlXfoduMXJXNgcSUfZrbb50253584;     vWYexCmKzOlXfoduMXJXNgcSUfZrbb50253584 = vWYexCmKzOlXfoduMXJXNgcSUfZrbb26292042;     vWYexCmKzOlXfoduMXJXNgcSUfZrbb26292042 = vWYexCmKzOlXfoduMXJXNgcSUfZrbb20616377;     vWYexCmKzOlXfoduMXJXNgcSUfZrbb20616377 = vWYexCmKzOlXfoduMXJXNgcSUfZrbb62273110;     vWYexCmKzOlXfoduMXJXNgcSUfZrbb62273110 = vWYexCmKzOlXfoduMXJXNgcSUfZrbb55437546;     vWYexCmKzOlXfoduMXJXNgcSUfZrbb55437546 = vWYexCmKzOlXfoduMXJXNgcSUfZrbb61373269;     vWYexCmKzOlXfoduMXJXNgcSUfZrbb61373269 = vWYexCmKzOlXfoduMXJXNgcSUfZrbb80683092;     vWYexCmKzOlXfoduMXJXNgcSUfZrbb80683092 = vWYexCmKzOlXfoduMXJXNgcSUfZrbb71269628;     vWYexCmKzOlXfoduMXJXNgcSUfZrbb71269628 = vWYexCmKzOlXfoduMXJXNgcSUfZrbb6247796;     vWYexCmKzOlXfoduMXJXNgcSUfZrbb6247796 = vWYexCmKzOlXfoduMXJXNgcSUfZrbb88171541;     vWYexCmKzOlXfoduMXJXNgcSUfZrbb88171541 = vWYexCmKzOlXfoduMXJXNgcSUfZrbb93229748;     vWYexCmKzOlXfoduMXJXNgcSUfZrbb93229748 = vWYexCmKzOlXfoduMXJXNgcSUfZrbb88688208;     vWYexCmKzOlXfoduMXJXNgcSUfZrbb88688208 = vWYexCmKzOlXfoduMXJXNgcSUfZrbb1059617;     vWYexCmKzOlXfoduMXJXNgcSUfZrbb1059617 = vWYexCmKzOlXfoduMXJXNgcSUfZrbb99911327;     vWYexCmKzOlXfoduMXJXNgcSUfZrbb99911327 = vWYexCmKzOlXfoduMXJXNgcSUfZrbb15156334;     vWYexCmKzOlXfoduMXJXNgcSUfZrbb15156334 = vWYexCmKzOlXfoduMXJXNgcSUfZrbb68494838;     vWYexCmKzOlXfoduMXJXNgcSUfZrbb68494838 = vWYexCmKzOlXfoduMXJXNgcSUfZrbb43574015;     vWYexCmKzOlXfoduMXJXNgcSUfZrbb43574015 = vWYexCmKzOlXfoduMXJXNgcSUfZrbb70767132;     vWYexCmKzOlXfoduMXJXNgcSUfZrbb70767132 = vWYexCmKzOlXfoduMXJXNgcSUfZrbb49393454;     vWYexCmKzOlXfoduMXJXNgcSUfZrbb49393454 = vWYexCmKzOlXfoduMXJXNgcSUfZrbb2097817;     vWYexCmKzOlXfoduMXJXNgcSUfZrbb2097817 = vWYexCmKzOlXfoduMXJXNgcSUfZrbb89085615;     vWYexCmKzOlXfoduMXJXNgcSUfZrbb89085615 = vWYexCmKzOlXfoduMXJXNgcSUfZrbb5895776;     vWYexCmKzOlXfoduMXJXNgcSUfZrbb5895776 = vWYexCmKzOlXfoduMXJXNgcSUfZrbb70941004;     vWYexCmKzOlXfoduMXJXNgcSUfZrbb70941004 = vWYexCmKzOlXfoduMXJXNgcSUfZrbb680053;     vWYexCmKzOlXfoduMXJXNgcSUfZrbb680053 = vWYexCmKzOlXfoduMXJXNgcSUfZrbb66908813;     vWYexCmKzOlXfoduMXJXNgcSUfZrbb66908813 = vWYexCmKzOlXfoduMXJXNgcSUfZrbb21260611;     vWYexCmKzOlXfoduMXJXNgcSUfZrbb21260611 = vWYexCmKzOlXfoduMXJXNgcSUfZrbb16772455;     vWYexCmKzOlXfoduMXJXNgcSUfZrbb16772455 = vWYexCmKzOlXfoduMXJXNgcSUfZrbb1975239;     vWYexCmKzOlXfoduMXJXNgcSUfZrbb1975239 = vWYexCmKzOlXfoduMXJXNgcSUfZrbb72049114;     vWYexCmKzOlXfoduMXJXNgcSUfZrbb72049114 = vWYexCmKzOlXfoduMXJXNgcSUfZrbb69442348;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void PAJeLgJuQxfJeQBvBhvgdRYAH98341816() {     double jmvtADkebUSNcDPyrFyecZFzhootdm20606431 = -690663766;    double jmvtADkebUSNcDPyrFyecZFzhootdm21996581 = -628502293;    double jmvtADkebUSNcDPyrFyecZFzhootdm11952015 = -925126387;    double jmvtADkebUSNcDPyrFyecZFzhootdm44510041 = -507818494;    double jmvtADkebUSNcDPyrFyecZFzhootdm34195876 = -551181144;    double jmvtADkebUSNcDPyrFyecZFzhootdm18818356 = -152344204;    double jmvtADkebUSNcDPyrFyecZFzhootdm74041517 = -688918052;    double jmvtADkebUSNcDPyrFyecZFzhootdm17889199 = -385743818;    double jmvtADkebUSNcDPyrFyecZFzhootdm49580697 = -541641367;    double jmvtADkebUSNcDPyrFyecZFzhootdm25339870 = -802394958;    double jmvtADkebUSNcDPyrFyecZFzhootdm39306624 = -20307713;    double jmvtADkebUSNcDPyrFyecZFzhootdm91683472 = -680848629;    double jmvtADkebUSNcDPyrFyecZFzhootdm54360031 = -250429716;    double jmvtADkebUSNcDPyrFyecZFzhootdm81599638 = -761280347;    double jmvtADkebUSNcDPyrFyecZFzhootdm82016477 = -422252402;    double jmvtADkebUSNcDPyrFyecZFzhootdm44711187 = 44237958;    double jmvtADkebUSNcDPyrFyecZFzhootdm66293538 = -946120412;    double jmvtADkebUSNcDPyrFyecZFzhootdm79505326 = -696869672;    double jmvtADkebUSNcDPyrFyecZFzhootdm62376305 = -13817796;    double jmvtADkebUSNcDPyrFyecZFzhootdm44097168 = -169496321;    double jmvtADkebUSNcDPyrFyecZFzhootdm16969062 = -153821765;    double jmvtADkebUSNcDPyrFyecZFzhootdm47551547 = -683221755;    double jmvtADkebUSNcDPyrFyecZFzhootdm68712191 = -154565756;    double jmvtADkebUSNcDPyrFyecZFzhootdm93441244 = -129404736;    double jmvtADkebUSNcDPyrFyecZFzhootdm51540103 = 29972851;    double jmvtADkebUSNcDPyrFyecZFzhootdm45184177 = -278931864;    double jmvtADkebUSNcDPyrFyecZFzhootdm87269606 = 55509908;    double jmvtADkebUSNcDPyrFyecZFzhootdm37535069 = -359430042;    double jmvtADkebUSNcDPyrFyecZFzhootdm88504821 = -799358454;    double jmvtADkebUSNcDPyrFyecZFzhootdm10813456 = -544243229;    double jmvtADkebUSNcDPyrFyecZFzhootdm26241671 = -568441008;    double jmvtADkebUSNcDPyrFyecZFzhootdm46378325 = -348804471;    double jmvtADkebUSNcDPyrFyecZFzhootdm39532997 = -131800093;    double jmvtADkebUSNcDPyrFyecZFzhootdm79437563 = -997546019;    double jmvtADkebUSNcDPyrFyecZFzhootdm37754749 = -525386573;    double jmvtADkebUSNcDPyrFyecZFzhootdm20833486 = -970116612;    double jmvtADkebUSNcDPyrFyecZFzhootdm98835154 = -672075333;    double jmvtADkebUSNcDPyrFyecZFzhootdm81654014 = -44490163;    double jmvtADkebUSNcDPyrFyecZFzhootdm5141697 = -328721034;    double jmvtADkebUSNcDPyrFyecZFzhootdm87842456 = -207398339;    double jmvtADkebUSNcDPyrFyecZFzhootdm69585591 = 48494557;    double jmvtADkebUSNcDPyrFyecZFzhootdm53560402 = -338223126;    double jmvtADkebUSNcDPyrFyecZFzhootdm63559597 = -101481647;    double jmvtADkebUSNcDPyrFyecZFzhootdm44441563 = -118892145;    double jmvtADkebUSNcDPyrFyecZFzhootdm43073227 = -167993775;    double jmvtADkebUSNcDPyrFyecZFzhootdm80271951 = -576111316;    double jmvtADkebUSNcDPyrFyecZFzhootdm8694987 = -866002063;    double jmvtADkebUSNcDPyrFyecZFzhootdm50651581 = -263194809;    double jmvtADkebUSNcDPyrFyecZFzhootdm5926765 = -300317631;    double jmvtADkebUSNcDPyrFyecZFzhootdm86677746 = -325007174;    double jmvtADkebUSNcDPyrFyecZFzhootdm61699141 = -690009017;    double jmvtADkebUSNcDPyrFyecZFzhootdm2643807 = 62805938;    double jmvtADkebUSNcDPyrFyecZFzhootdm30375320 = -613466295;    double jmvtADkebUSNcDPyrFyecZFzhootdm16180544 = -231726677;    double jmvtADkebUSNcDPyrFyecZFzhootdm81372754 = -194584029;    double jmvtADkebUSNcDPyrFyecZFzhootdm73054884 = 92557989;    double jmvtADkebUSNcDPyrFyecZFzhootdm53284389 = -373936538;    double jmvtADkebUSNcDPyrFyecZFzhootdm18510771 = -695721651;    double jmvtADkebUSNcDPyrFyecZFzhootdm92969937 = -437791345;    double jmvtADkebUSNcDPyrFyecZFzhootdm89011699 = -172249280;    double jmvtADkebUSNcDPyrFyecZFzhootdm31548749 = -107854112;    double jmvtADkebUSNcDPyrFyecZFzhootdm36506449 = -229488010;    double jmvtADkebUSNcDPyrFyecZFzhootdm29384378 = -586385364;    double jmvtADkebUSNcDPyrFyecZFzhootdm38767242 = -997398138;    double jmvtADkebUSNcDPyrFyecZFzhootdm99098198 = -133953951;    double jmvtADkebUSNcDPyrFyecZFzhootdm92928299 = -671503242;    double jmvtADkebUSNcDPyrFyecZFzhootdm52150476 = -449048536;    double jmvtADkebUSNcDPyrFyecZFzhootdm74922467 = -252883697;    double jmvtADkebUSNcDPyrFyecZFzhootdm43844889 = -135893774;    double jmvtADkebUSNcDPyrFyecZFzhootdm61182992 = -452135790;    double jmvtADkebUSNcDPyrFyecZFzhootdm45876033 = -283686709;    double jmvtADkebUSNcDPyrFyecZFzhootdm84639523 = -801630249;    double jmvtADkebUSNcDPyrFyecZFzhootdm74363629 = -268148638;    double jmvtADkebUSNcDPyrFyecZFzhootdm74533848 = -806419457;    double jmvtADkebUSNcDPyrFyecZFzhootdm74511576 = -117990878;    double jmvtADkebUSNcDPyrFyecZFzhootdm63408660 = -815598639;    double jmvtADkebUSNcDPyrFyecZFzhootdm83991949 = -481740109;    double jmvtADkebUSNcDPyrFyecZFzhootdm24270629 = 64326388;    double jmvtADkebUSNcDPyrFyecZFzhootdm50368017 = -961410962;    double jmvtADkebUSNcDPyrFyecZFzhootdm71268151 = -393915834;    double jmvtADkebUSNcDPyrFyecZFzhootdm36489191 = -412929801;    double jmvtADkebUSNcDPyrFyecZFzhootdm36618026 = -681295284;    double jmvtADkebUSNcDPyrFyecZFzhootdm31608304 = 40887589;    double jmvtADkebUSNcDPyrFyecZFzhootdm1827075 = -374351280;    double jmvtADkebUSNcDPyrFyecZFzhootdm49114314 = -854234213;    double jmvtADkebUSNcDPyrFyecZFzhootdm23597864 = -531246947;    double jmvtADkebUSNcDPyrFyecZFzhootdm16003006 = -735338177;    double jmvtADkebUSNcDPyrFyecZFzhootdm23352454 = -900073417;    double jmvtADkebUSNcDPyrFyecZFzhootdm98064808 = -702961991;    double jmvtADkebUSNcDPyrFyecZFzhootdm64699865 = -517944563;    double jmvtADkebUSNcDPyrFyecZFzhootdm67549096 = -496180075;    double jmvtADkebUSNcDPyrFyecZFzhootdm80324384 = -976353683;    double jmvtADkebUSNcDPyrFyecZFzhootdm88684076 = -606698819;    double jmvtADkebUSNcDPyrFyecZFzhootdm16129997 = -56471754;    double jmvtADkebUSNcDPyrFyecZFzhootdm56293708 = 455773;    double jmvtADkebUSNcDPyrFyecZFzhootdm33079143 = -722017433;    double jmvtADkebUSNcDPyrFyecZFzhootdm24176025 = -751837762;    double jmvtADkebUSNcDPyrFyecZFzhootdm24792356 = -104083510;    double jmvtADkebUSNcDPyrFyecZFzhootdm45343364 = -984938194;    double jmvtADkebUSNcDPyrFyecZFzhootdm50144928 = -690663766;     jmvtADkebUSNcDPyrFyecZFzhootdm20606431 = jmvtADkebUSNcDPyrFyecZFzhootdm21996581;     jmvtADkebUSNcDPyrFyecZFzhootdm21996581 = jmvtADkebUSNcDPyrFyecZFzhootdm11952015;     jmvtADkebUSNcDPyrFyecZFzhootdm11952015 = jmvtADkebUSNcDPyrFyecZFzhootdm44510041;     jmvtADkebUSNcDPyrFyecZFzhootdm44510041 = jmvtADkebUSNcDPyrFyecZFzhootdm34195876;     jmvtADkebUSNcDPyrFyecZFzhootdm34195876 = jmvtADkebUSNcDPyrFyecZFzhootdm18818356;     jmvtADkebUSNcDPyrFyecZFzhootdm18818356 = jmvtADkebUSNcDPyrFyecZFzhootdm74041517;     jmvtADkebUSNcDPyrFyecZFzhootdm74041517 = jmvtADkebUSNcDPyrFyecZFzhootdm17889199;     jmvtADkebUSNcDPyrFyecZFzhootdm17889199 = jmvtADkebUSNcDPyrFyecZFzhootdm49580697;     jmvtADkebUSNcDPyrFyecZFzhootdm49580697 = jmvtADkebUSNcDPyrFyecZFzhootdm25339870;     jmvtADkebUSNcDPyrFyecZFzhootdm25339870 = jmvtADkebUSNcDPyrFyecZFzhootdm39306624;     jmvtADkebUSNcDPyrFyecZFzhootdm39306624 = jmvtADkebUSNcDPyrFyecZFzhootdm91683472;     jmvtADkebUSNcDPyrFyecZFzhootdm91683472 = jmvtADkebUSNcDPyrFyecZFzhootdm54360031;     jmvtADkebUSNcDPyrFyecZFzhootdm54360031 = jmvtADkebUSNcDPyrFyecZFzhootdm81599638;     jmvtADkebUSNcDPyrFyecZFzhootdm81599638 = jmvtADkebUSNcDPyrFyecZFzhootdm82016477;     jmvtADkebUSNcDPyrFyecZFzhootdm82016477 = jmvtADkebUSNcDPyrFyecZFzhootdm44711187;     jmvtADkebUSNcDPyrFyecZFzhootdm44711187 = jmvtADkebUSNcDPyrFyecZFzhootdm66293538;     jmvtADkebUSNcDPyrFyecZFzhootdm66293538 = jmvtADkebUSNcDPyrFyecZFzhootdm79505326;     jmvtADkebUSNcDPyrFyecZFzhootdm79505326 = jmvtADkebUSNcDPyrFyecZFzhootdm62376305;     jmvtADkebUSNcDPyrFyecZFzhootdm62376305 = jmvtADkebUSNcDPyrFyecZFzhootdm44097168;     jmvtADkebUSNcDPyrFyecZFzhootdm44097168 = jmvtADkebUSNcDPyrFyecZFzhootdm16969062;     jmvtADkebUSNcDPyrFyecZFzhootdm16969062 = jmvtADkebUSNcDPyrFyecZFzhootdm47551547;     jmvtADkebUSNcDPyrFyecZFzhootdm47551547 = jmvtADkebUSNcDPyrFyecZFzhootdm68712191;     jmvtADkebUSNcDPyrFyecZFzhootdm68712191 = jmvtADkebUSNcDPyrFyecZFzhootdm93441244;     jmvtADkebUSNcDPyrFyecZFzhootdm93441244 = jmvtADkebUSNcDPyrFyecZFzhootdm51540103;     jmvtADkebUSNcDPyrFyecZFzhootdm51540103 = jmvtADkebUSNcDPyrFyecZFzhootdm45184177;     jmvtADkebUSNcDPyrFyecZFzhootdm45184177 = jmvtADkebUSNcDPyrFyecZFzhootdm87269606;     jmvtADkebUSNcDPyrFyecZFzhootdm87269606 = jmvtADkebUSNcDPyrFyecZFzhootdm37535069;     jmvtADkebUSNcDPyrFyecZFzhootdm37535069 = jmvtADkebUSNcDPyrFyecZFzhootdm88504821;     jmvtADkebUSNcDPyrFyecZFzhootdm88504821 = jmvtADkebUSNcDPyrFyecZFzhootdm10813456;     jmvtADkebUSNcDPyrFyecZFzhootdm10813456 = jmvtADkebUSNcDPyrFyecZFzhootdm26241671;     jmvtADkebUSNcDPyrFyecZFzhootdm26241671 = jmvtADkebUSNcDPyrFyecZFzhootdm46378325;     jmvtADkebUSNcDPyrFyecZFzhootdm46378325 = jmvtADkebUSNcDPyrFyecZFzhootdm39532997;     jmvtADkebUSNcDPyrFyecZFzhootdm39532997 = jmvtADkebUSNcDPyrFyecZFzhootdm79437563;     jmvtADkebUSNcDPyrFyecZFzhootdm79437563 = jmvtADkebUSNcDPyrFyecZFzhootdm37754749;     jmvtADkebUSNcDPyrFyecZFzhootdm37754749 = jmvtADkebUSNcDPyrFyecZFzhootdm20833486;     jmvtADkebUSNcDPyrFyecZFzhootdm20833486 = jmvtADkebUSNcDPyrFyecZFzhootdm98835154;     jmvtADkebUSNcDPyrFyecZFzhootdm98835154 = jmvtADkebUSNcDPyrFyecZFzhootdm81654014;     jmvtADkebUSNcDPyrFyecZFzhootdm81654014 = jmvtADkebUSNcDPyrFyecZFzhootdm5141697;     jmvtADkebUSNcDPyrFyecZFzhootdm5141697 = jmvtADkebUSNcDPyrFyecZFzhootdm87842456;     jmvtADkebUSNcDPyrFyecZFzhootdm87842456 = jmvtADkebUSNcDPyrFyecZFzhootdm69585591;     jmvtADkebUSNcDPyrFyecZFzhootdm69585591 = jmvtADkebUSNcDPyrFyecZFzhootdm53560402;     jmvtADkebUSNcDPyrFyecZFzhootdm53560402 = jmvtADkebUSNcDPyrFyecZFzhootdm63559597;     jmvtADkebUSNcDPyrFyecZFzhootdm63559597 = jmvtADkebUSNcDPyrFyecZFzhootdm44441563;     jmvtADkebUSNcDPyrFyecZFzhootdm44441563 = jmvtADkebUSNcDPyrFyecZFzhootdm43073227;     jmvtADkebUSNcDPyrFyecZFzhootdm43073227 = jmvtADkebUSNcDPyrFyecZFzhootdm80271951;     jmvtADkebUSNcDPyrFyecZFzhootdm80271951 = jmvtADkebUSNcDPyrFyecZFzhootdm8694987;     jmvtADkebUSNcDPyrFyecZFzhootdm8694987 = jmvtADkebUSNcDPyrFyecZFzhootdm50651581;     jmvtADkebUSNcDPyrFyecZFzhootdm50651581 = jmvtADkebUSNcDPyrFyecZFzhootdm5926765;     jmvtADkebUSNcDPyrFyecZFzhootdm5926765 = jmvtADkebUSNcDPyrFyecZFzhootdm86677746;     jmvtADkebUSNcDPyrFyecZFzhootdm86677746 = jmvtADkebUSNcDPyrFyecZFzhootdm61699141;     jmvtADkebUSNcDPyrFyecZFzhootdm61699141 = jmvtADkebUSNcDPyrFyecZFzhootdm2643807;     jmvtADkebUSNcDPyrFyecZFzhootdm2643807 = jmvtADkebUSNcDPyrFyecZFzhootdm30375320;     jmvtADkebUSNcDPyrFyecZFzhootdm30375320 = jmvtADkebUSNcDPyrFyecZFzhootdm16180544;     jmvtADkebUSNcDPyrFyecZFzhootdm16180544 = jmvtADkebUSNcDPyrFyecZFzhootdm81372754;     jmvtADkebUSNcDPyrFyecZFzhootdm81372754 = jmvtADkebUSNcDPyrFyecZFzhootdm73054884;     jmvtADkebUSNcDPyrFyecZFzhootdm73054884 = jmvtADkebUSNcDPyrFyecZFzhootdm53284389;     jmvtADkebUSNcDPyrFyecZFzhootdm53284389 = jmvtADkebUSNcDPyrFyecZFzhootdm18510771;     jmvtADkebUSNcDPyrFyecZFzhootdm18510771 = jmvtADkebUSNcDPyrFyecZFzhootdm92969937;     jmvtADkebUSNcDPyrFyecZFzhootdm92969937 = jmvtADkebUSNcDPyrFyecZFzhootdm89011699;     jmvtADkebUSNcDPyrFyecZFzhootdm89011699 = jmvtADkebUSNcDPyrFyecZFzhootdm31548749;     jmvtADkebUSNcDPyrFyecZFzhootdm31548749 = jmvtADkebUSNcDPyrFyecZFzhootdm36506449;     jmvtADkebUSNcDPyrFyecZFzhootdm36506449 = jmvtADkebUSNcDPyrFyecZFzhootdm29384378;     jmvtADkebUSNcDPyrFyecZFzhootdm29384378 = jmvtADkebUSNcDPyrFyecZFzhootdm38767242;     jmvtADkebUSNcDPyrFyecZFzhootdm38767242 = jmvtADkebUSNcDPyrFyecZFzhootdm99098198;     jmvtADkebUSNcDPyrFyecZFzhootdm99098198 = jmvtADkebUSNcDPyrFyecZFzhootdm92928299;     jmvtADkebUSNcDPyrFyecZFzhootdm92928299 = jmvtADkebUSNcDPyrFyecZFzhootdm52150476;     jmvtADkebUSNcDPyrFyecZFzhootdm52150476 = jmvtADkebUSNcDPyrFyecZFzhootdm74922467;     jmvtADkebUSNcDPyrFyecZFzhootdm74922467 = jmvtADkebUSNcDPyrFyecZFzhootdm43844889;     jmvtADkebUSNcDPyrFyecZFzhootdm43844889 = jmvtADkebUSNcDPyrFyecZFzhootdm61182992;     jmvtADkebUSNcDPyrFyecZFzhootdm61182992 = jmvtADkebUSNcDPyrFyecZFzhootdm45876033;     jmvtADkebUSNcDPyrFyecZFzhootdm45876033 = jmvtADkebUSNcDPyrFyecZFzhootdm84639523;     jmvtADkebUSNcDPyrFyecZFzhootdm84639523 = jmvtADkebUSNcDPyrFyecZFzhootdm74363629;     jmvtADkebUSNcDPyrFyecZFzhootdm74363629 = jmvtADkebUSNcDPyrFyecZFzhootdm74533848;     jmvtADkebUSNcDPyrFyecZFzhootdm74533848 = jmvtADkebUSNcDPyrFyecZFzhootdm74511576;     jmvtADkebUSNcDPyrFyecZFzhootdm74511576 = jmvtADkebUSNcDPyrFyecZFzhootdm63408660;     jmvtADkebUSNcDPyrFyecZFzhootdm63408660 = jmvtADkebUSNcDPyrFyecZFzhootdm83991949;     jmvtADkebUSNcDPyrFyecZFzhootdm83991949 = jmvtADkebUSNcDPyrFyecZFzhootdm24270629;     jmvtADkebUSNcDPyrFyecZFzhootdm24270629 = jmvtADkebUSNcDPyrFyecZFzhootdm50368017;     jmvtADkebUSNcDPyrFyecZFzhootdm50368017 = jmvtADkebUSNcDPyrFyecZFzhootdm71268151;     jmvtADkebUSNcDPyrFyecZFzhootdm71268151 = jmvtADkebUSNcDPyrFyecZFzhootdm36489191;     jmvtADkebUSNcDPyrFyecZFzhootdm36489191 = jmvtADkebUSNcDPyrFyecZFzhootdm36618026;     jmvtADkebUSNcDPyrFyecZFzhootdm36618026 = jmvtADkebUSNcDPyrFyecZFzhootdm31608304;     jmvtADkebUSNcDPyrFyecZFzhootdm31608304 = jmvtADkebUSNcDPyrFyecZFzhootdm1827075;     jmvtADkebUSNcDPyrFyecZFzhootdm1827075 = jmvtADkebUSNcDPyrFyecZFzhootdm49114314;     jmvtADkebUSNcDPyrFyecZFzhootdm49114314 = jmvtADkebUSNcDPyrFyecZFzhootdm23597864;     jmvtADkebUSNcDPyrFyecZFzhootdm23597864 = jmvtADkebUSNcDPyrFyecZFzhootdm16003006;     jmvtADkebUSNcDPyrFyecZFzhootdm16003006 = jmvtADkebUSNcDPyrFyecZFzhootdm23352454;     jmvtADkebUSNcDPyrFyecZFzhootdm23352454 = jmvtADkebUSNcDPyrFyecZFzhootdm98064808;     jmvtADkebUSNcDPyrFyecZFzhootdm98064808 = jmvtADkebUSNcDPyrFyecZFzhootdm64699865;     jmvtADkebUSNcDPyrFyecZFzhootdm64699865 = jmvtADkebUSNcDPyrFyecZFzhootdm67549096;     jmvtADkebUSNcDPyrFyecZFzhootdm67549096 = jmvtADkebUSNcDPyrFyecZFzhootdm80324384;     jmvtADkebUSNcDPyrFyecZFzhootdm80324384 = jmvtADkebUSNcDPyrFyecZFzhootdm88684076;     jmvtADkebUSNcDPyrFyecZFzhootdm88684076 = jmvtADkebUSNcDPyrFyecZFzhootdm16129997;     jmvtADkebUSNcDPyrFyecZFzhootdm16129997 = jmvtADkebUSNcDPyrFyecZFzhootdm56293708;     jmvtADkebUSNcDPyrFyecZFzhootdm56293708 = jmvtADkebUSNcDPyrFyecZFzhootdm33079143;     jmvtADkebUSNcDPyrFyecZFzhootdm33079143 = jmvtADkebUSNcDPyrFyecZFzhootdm24176025;     jmvtADkebUSNcDPyrFyecZFzhootdm24176025 = jmvtADkebUSNcDPyrFyecZFzhootdm24792356;     jmvtADkebUSNcDPyrFyecZFzhootdm24792356 = jmvtADkebUSNcDPyrFyecZFzhootdm45343364;     jmvtADkebUSNcDPyrFyecZFzhootdm45343364 = jmvtADkebUSNcDPyrFyecZFzhootdm50144928;     jmvtADkebUSNcDPyrFyecZFzhootdm50144928 = jmvtADkebUSNcDPyrFyecZFzhootdm20606431;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void dIwperJnFAyzQueOnpLSdLvXN7946544() {     double bfNorGFQNGVosWbOjWwkZczrGveEIw42428652 = -158879097;    double bfNorGFQNGVosWbOjWwkZczrGveEIw83464384 = 88898854;    double bfNorGFQNGVosWbOjWwkZczrGveEIw57679285 = -972343919;    double bfNorGFQNGVosWbOjWwkZczrGveEIw75885186 = -712602669;    double bfNorGFQNGVosWbOjWwkZczrGveEIw94330207 = -428432066;    double bfNorGFQNGVosWbOjWwkZczrGveEIw42836671 = -163887362;    double bfNorGFQNGVosWbOjWwkZczrGveEIw3062102 = -752236176;    double bfNorGFQNGVosWbOjWwkZczrGveEIw4751828 = -393924666;    double bfNorGFQNGVosWbOjWwkZczrGveEIw46104337 = -527436785;    double bfNorGFQNGVosWbOjWwkZczrGveEIw86623095 = -672613356;    double bfNorGFQNGVosWbOjWwkZczrGveEIw10222893 = -676065415;    double bfNorGFQNGVosWbOjWwkZczrGveEIw7865356 = -784030235;    double bfNorGFQNGVosWbOjWwkZczrGveEIw87348973 = -788463505;    double bfNorGFQNGVosWbOjWwkZczrGveEIw48566105 = -511357144;    double bfNorGFQNGVosWbOjWwkZczrGveEIw77274272 = -349094321;    double bfNorGFQNGVosWbOjWwkZczrGveEIw92681912 = -398128583;    double bfNorGFQNGVosWbOjWwkZczrGveEIw59742597 = -231945130;    double bfNorGFQNGVosWbOjWwkZczrGveEIw42030629 = -618590589;    double bfNorGFQNGVosWbOjWwkZczrGveEIw67013529 = -86953453;    double bfNorGFQNGVosWbOjWwkZczrGveEIw25206811 = -660741377;    double bfNorGFQNGVosWbOjWwkZczrGveEIw74123347 = -985900468;    double bfNorGFQNGVosWbOjWwkZczrGveEIw11953525 = -753972920;    double bfNorGFQNGVosWbOjWwkZczrGveEIw78183595 = -810593111;    double bfNorGFQNGVosWbOjWwkZczrGveEIw30718867 = -539503601;    double bfNorGFQNGVosWbOjWwkZczrGveEIw25470770 = -980924121;    double bfNorGFQNGVosWbOjWwkZczrGveEIw34760031 = -606117392;    double bfNorGFQNGVosWbOjWwkZczrGveEIw60306210 = -571294137;    double bfNorGFQNGVosWbOjWwkZczrGveEIw73114894 = -223878275;    double bfNorGFQNGVosWbOjWwkZczrGveEIw36401734 = -466304372;    double bfNorGFQNGVosWbOjWwkZczrGveEIw56630533 = -920457424;    double bfNorGFQNGVosWbOjWwkZczrGveEIw77406936 = -974168755;    double bfNorGFQNGVosWbOjWwkZczrGveEIw65269650 = -124693302;    double bfNorGFQNGVosWbOjWwkZczrGveEIw64852461 = -974403976;    double bfNorGFQNGVosWbOjWwkZczrGveEIw51976681 = -673365646;    double bfNorGFQNGVosWbOjWwkZczrGveEIw18588962 = -675205175;    double bfNorGFQNGVosWbOjWwkZczrGveEIw90410445 = -984532592;    double bfNorGFQNGVosWbOjWwkZczrGveEIw41917411 = -721692430;    double bfNorGFQNGVosWbOjWwkZczrGveEIw85591876 = -626032921;    double bfNorGFQNGVosWbOjWwkZczrGveEIw65522143 = -101126315;    double bfNorGFQNGVosWbOjWwkZczrGveEIw513103 = -664947340;    double bfNorGFQNGVosWbOjWwkZczrGveEIw23961437 = -385644701;    double bfNorGFQNGVosWbOjWwkZczrGveEIw70062573 = -25689204;    double bfNorGFQNGVosWbOjWwkZczrGveEIw10926997 = -145448462;    double bfNorGFQNGVosWbOjWwkZczrGveEIw92536421 = -27698314;    double bfNorGFQNGVosWbOjWwkZczrGveEIw22989038 = -354682404;    double bfNorGFQNGVosWbOjWwkZczrGveEIw19478431 = -279543546;    double bfNorGFQNGVosWbOjWwkZczrGveEIw34363098 = 52990416;    double bfNorGFQNGVosWbOjWwkZczrGveEIw32491333 = -1690798;    double bfNorGFQNGVosWbOjWwkZczrGveEIw12990858 = -485434053;    double bfNorGFQNGVosWbOjWwkZczrGveEIw2725224 = -304062359;    double bfNorGFQNGVosWbOjWwkZczrGveEIw50160960 = -733898342;    double bfNorGFQNGVosWbOjWwkZczrGveEIw99032470 = -262572142;    double bfNorGFQNGVosWbOjWwkZczrGveEIw21598184 = -577061434;    double bfNorGFQNGVosWbOjWwkZczrGveEIw44205666 = -422735736;    double bfNorGFQNGVosWbOjWwkZczrGveEIw33823196 = -155705778;    double bfNorGFQNGVosWbOjWwkZczrGveEIw30475127 = -404906178;    double bfNorGFQNGVosWbOjWwkZczrGveEIw5280789 = -100508036;    double bfNorGFQNGVosWbOjWwkZczrGveEIw26960419 = -332840318;    double bfNorGFQNGVosWbOjWwkZczrGveEIw50414417 = -731678548;    double bfNorGFQNGVosWbOjWwkZczrGveEIw59570177 = -822314674;    double bfNorGFQNGVosWbOjWwkZczrGveEIw82530461 = -592593226;    double bfNorGFQNGVosWbOjWwkZczrGveEIw29947208 = -428357901;    double bfNorGFQNGVosWbOjWwkZczrGveEIw68350094 = -927620295;    double bfNorGFQNGVosWbOjWwkZczrGveEIw89473804 = -606979361;    double bfNorGFQNGVosWbOjWwkZczrGveEIw9216159 = -698444601;    double bfNorGFQNGVosWbOjWwkZczrGveEIw44953242 = -451372114;    double bfNorGFQNGVosWbOjWwkZczrGveEIw43012894 = -809626260;    double bfNorGFQNGVosWbOjWwkZczrGveEIw35372293 = -15097859;    double bfNorGFQNGVosWbOjWwkZczrGveEIw29977144 = -836151969;    double bfNorGFQNGVosWbOjWwkZczrGveEIw86863827 = -364561729;    double bfNorGFQNGVosWbOjWwkZczrGveEIw50764502 = -676436153;    double bfNorGFQNGVosWbOjWwkZczrGveEIw74150720 = -605912210;    double bfNorGFQNGVosWbOjWwkZczrGveEIw76508486 = -417464275;    double bfNorGFQNGVosWbOjWwkZczrGveEIw66500426 = -422006113;    double bfNorGFQNGVosWbOjWwkZczrGveEIw1245374 = -175096676;    double bfNorGFQNGVosWbOjWwkZczrGveEIw4060775 = -860211264;    double bfNorGFQNGVosWbOjWwkZczrGveEIw1026529 = -508524458;    double bfNorGFQNGVosWbOjWwkZczrGveEIw85647174 = -682894798;    double bfNorGFQNGVosWbOjWwkZczrGveEIw7729829 = -84821198;    double bfNorGFQNGVosWbOjWwkZczrGveEIw5992339 = -601380576;    double bfNorGFQNGVosWbOjWwkZczrGveEIw396933 = -559107809;    double bfNorGFQNGVosWbOjWwkZczrGveEIw27814878 = -469603339;    double bfNorGFQNGVosWbOjWwkZczrGveEIw60124037 = -738444222;    double bfNorGFQNGVosWbOjWwkZczrGveEIw33676511 = -62242013;    double bfNorGFQNGVosWbOjWwkZczrGveEIw6469573 = -86559082;    double bfNorGFQNGVosWbOjWwkZczrGveEIw78374466 = -611596613;    double bfNorGFQNGVosWbOjWwkZczrGveEIw43671467 = -547631868;    double bfNorGFQNGVosWbOjWwkZczrGveEIw20646796 = -451668240;    double bfNorGFQNGVosWbOjWwkZczrGveEIw18153485 = -417659869;    double bfNorGFQNGVosWbOjWwkZczrGveEIw88113834 = -170298998;    double bfNorGFQNGVosWbOjWwkZczrGveEIw85129656 = -784024557;    double bfNorGFQNGVosWbOjWwkZczrGveEIw14956992 = -288852113;    double bfNorGFQNGVosWbOjWwkZczrGveEIw35177460 = -894354373;    double bfNorGFQNGVosWbOjWwkZczrGveEIw5951967 = -278811641;    double bfNorGFQNGVosWbOjWwkZczrGveEIw17982642 = 27645885;    double bfNorGFQNGVosWbOjWwkZczrGveEIw94014229 = -957286800;    double bfNorGFQNGVosWbOjWwkZczrGveEIw1712480 = -98068910;    double bfNorGFQNGVosWbOjWwkZczrGveEIw21453192 = -538469101;    double bfNorGFQNGVosWbOjWwkZczrGveEIw83320262 = -329253713;    double bfNorGFQNGVosWbOjWwkZczrGveEIw78035796 = -158879097;     bfNorGFQNGVosWbOjWwkZczrGveEIw42428652 = bfNorGFQNGVosWbOjWwkZczrGveEIw83464384;     bfNorGFQNGVosWbOjWwkZczrGveEIw83464384 = bfNorGFQNGVosWbOjWwkZczrGveEIw57679285;     bfNorGFQNGVosWbOjWwkZczrGveEIw57679285 = bfNorGFQNGVosWbOjWwkZczrGveEIw75885186;     bfNorGFQNGVosWbOjWwkZczrGveEIw75885186 = bfNorGFQNGVosWbOjWwkZczrGveEIw94330207;     bfNorGFQNGVosWbOjWwkZczrGveEIw94330207 = bfNorGFQNGVosWbOjWwkZczrGveEIw42836671;     bfNorGFQNGVosWbOjWwkZczrGveEIw42836671 = bfNorGFQNGVosWbOjWwkZczrGveEIw3062102;     bfNorGFQNGVosWbOjWwkZczrGveEIw3062102 = bfNorGFQNGVosWbOjWwkZczrGveEIw4751828;     bfNorGFQNGVosWbOjWwkZczrGveEIw4751828 = bfNorGFQNGVosWbOjWwkZczrGveEIw46104337;     bfNorGFQNGVosWbOjWwkZczrGveEIw46104337 = bfNorGFQNGVosWbOjWwkZczrGveEIw86623095;     bfNorGFQNGVosWbOjWwkZczrGveEIw86623095 = bfNorGFQNGVosWbOjWwkZczrGveEIw10222893;     bfNorGFQNGVosWbOjWwkZczrGveEIw10222893 = bfNorGFQNGVosWbOjWwkZczrGveEIw7865356;     bfNorGFQNGVosWbOjWwkZczrGveEIw7865356 = bfNorGFQNGVosWbOjWwkZczrGveEIw87348973;     bfNorGFQNGVosWbOjWwkZczrGveEIw87348973 = bfNorGFQNGVosWbOjWwkZczrGveEIw48566105;     bfNorGFQNGVosWbOjWwkZczrGveEIw48566105 = bfNorGFQNGVosWbOjWwkZczrGveEIw77274272;     bfNorGFQNGVosWbOjWwkZczrGveEIw77274272 = bfNorGFQNGVosWbOjWwkZczrGveEIw92681912;     bfNorGFQNGVosWbOjWwkZczrGveEIw92681912 = bfNorGFQNGVosWbOjWwkZczrGveEIw59742597;     bfNorGFQNGVosWbOjWwkZczrGveEIw59742597 = bfNorGFQNGVosWbOjWwkZczrGveEIw42030629;     bfNorGFQNGVosWbOjWwkZczrGveEIw42030629 = bfNorGFQNGVosWbOjWwkZczrGveEIw67013529;     bfNorGFQNGVosWbOjWwkZczrGveEIw67013529 = bfNorGFQNGVosWbOjWwkZczrGveEIw25206811;     bfNorGFQNGVosWbOjWwkZczrGveEIw25206811 = bfNorGFQNGVosWbOjWwkZczrGveEIw74123347;     bfNorGFQNGVosWbOjWwkZczrGveEIw74123347 = bfNorGFQNGVosWbOjWwkZczrGveEIw11953525;     bfNorGFQNGVosWbOjWwkZczrGveEIw11953525 = bfNorGFQNGVosWbOjWwkZczrGveEIw78183595;     bfNorGFQNGVosWbOjWwkZczrGveEIw78183595 = bfNorGFQNGVosWbOjWwkZczrGveEIw30718867;     bfNorGFQNGVosWbOjWwkZczrGveEIw30718867 = bfNorGFQNGVosWbOjWwkZczrGveEIw25470770;     bfNorGFQNGVosWbOjWwkZczrGveEIw25470770 = bfNorGFQNGVosWbOjWwkZczrGveEIw34760031;     bfNorGFQNGVosWbOjWwkZczrGveEIw34760031 = bfNorGFQNGVosWbOjWwkZczrGveEIw60306210;     bfNorGFQNGVosWbOjWwkZczrGveEIw60306210 = bfNorGFQNGVosWbOjWwkZczrGveEIw73114894;     bfNorGFQNGVosWbOjWwkZczrGveEIw73114894 = bfNorGFQNGVosWbOjWwkZczrGveEIw36401734;     bfNorGFQNGVosWbOjWwkZczrGveEIw36401734 = bfNorGFQNGVosWbOjWwkZczrGveEIw56630533;     bfNorGFQNGVosWbOjWwkZczrGveEIw56630533 = bfNorGFQNGVosWbOjWwkZczrGveEIw77406936;     bfNorGFQNGVosWbOjWwkZczrGveEIw77406936 = bfNorGFQNGVosWbOjWwkZczrGveEIw65269650;     bfNorGFQNGVosWbOjWwkZczrGveEIw65269650 = bfNorGFQNGVosWbOjWwkZczrGveEIw64852461;     bfNorGFQNGVosWbOjWwkZczrGveEIw64852461 = bfNorGFQNGVosWbOjWwkZczrGveEIw51976681;     bfNorGFQNGVosWbOjWwkZczrGveEIw51976681 = bfNorGFQNGVosWbOjWwkZczrGveEIw18588962;     bfNorGFQNGVosWbOjWwkZczrGveEIw18588962 = bfNorGFQNGVosWbOjWwkZczrGveEIw90410445;     bfNorGFQNGVosWbOjWwkZczrGveEIw90410445 = bfNorGFQNGVosWbOjWwkZczrGveEIw41917411;     bfNorGFQNGVosWbOjWwkZczrGveEIw41917411 = bfNorGFQNGVosWbOjWwkZczrGveEIw85591876;     bfNorGFQNGVosWbOjWwkZczrGveEIw85591876 = bfNorGFQNGVosWbOjWwkZczrGveEIw65522143;     bfNorGFQNGVosWbOjWwkZczrGveEIw65522143 = bfNorGFQNGVosWbOjWwkZczrGveEIw513103;     bfNorGFQNGVosWbOjWwkZczrGveEIw513103 = bfNorGFQNGVosWbOjWwkZczrGveEIw23961437;     bfNorGFQNGVosWbOjWwkZczrGveEIw23961437 = bfNorGFQNGVosWbOjWwkZczrGveEIw70062573;     bfNorGFQNGVosWbOjWwkZczrGveEIw70062573 = bfNorGFQNGVosWbOjWwkZczrGveEIw10926997;     bfNorGFQNGVosWbOjWwkZczrGveEIw10926997 = bfNorGFQNGVosWbOjWwkZczrGveEIw92536421;     bfNorGFQNGVosWbOjWwkZczrGveEIw92536421 = bfNorGFQNGVosWbOjWwkZczrGveEIw22989038;     bfNorGFQNGVosWbOjWwkZczrGveEIw22989038 = bfNorGFQNGVosWbOjWwkZczrGveEIw19478431;     bfNorGFQNGVosWbOjWwkZczrGveEIw19478431 = bfNorGFQNGVosWbOjWwkZczrGveEIw34363098;     bfNorGFQNGVosWbOjWwkZczrGveEIw34363098 = bfNorGFQNGVosWbOjWwkZczrGveEIw32491333;     bfNorGFQNGVosWbOjWwkZczrGveEIw32491333 = bfNorGFQNGVosWbOjWwkZczrGveEIw12990858;     bfNorGFQNGVosWbOjWwkZczrGveEIw12990858 = bfNorGFQNGVosWbOjWwkZczrGveEIw2725224;     bfNorGFQNGVosWbOjWwkZczrGveEIw2725224 = bfNorGFQNGVosWbOjWwkZczrGveEIw50160960;     bfNorGFQNGVosWbOjWwkZczrGveEIw50160960 = bfNorGFQNGVosWbOjWwkZczrGveEIw99032470;     bfNorGFQNGVosWbOjWwkZczrGveEIw99032470 = bfNorGFQNGVosWbOjWwkZczrGveEIw21598184;     bfNorGFQNGVosWbOjWwkZczrGveEIw21598184 = bfNorGFQNGVosWbOjWwkZczrGveEIw44205666;     bfNorGFQNGVosWbOjWwkZczrGveEIw44205666 = bfNorGFQNGVosWbOjWwkZczrGveEIw33823196;     bfNorGFQNGVosWbOjWwkZczrGveEIw33823196 = bfNorGFQNGVosWbOjWwkZczrGveEIw30475127;     bfNorGFQNGVosWbOjWwkZczrGveEIw30475127 = bfNorGFQNGVosWbOjWwkZczrGveEIw5280789;     bfNorGFQNGVosWbOjWwkZczrGveEIw5280789 = bfNorGFQNGVosWbOjWwkZczrGveEIw26960419;     bfNorGFQNGVosWbOjWwkZczrGveEIw26960419 = bfNorGFQNGVosWbOjWwkZczrGveEIw50414417;     bfNorGFQNGVosWbOjWwkZczrGveEIw50414417 = bfNorGFQNGVosWbOjWwkZczrGveEIw59570177;     bfNorGFQNGVosWbOjWwkZczrGveEIw59570177 = bfNorGFQNGVosWbOjWwkZczrGveEIw82530461;     bfNorGFQNGVosWbOjWwkZczrGveEIw82530461 = bfNorGFQNGVosWbOjWwkZczrGveEIw29947208;     bfNorGFQNGVosWbOjWwkZczrGveEIw29947208 = bfNorGFQNGVosWbOjWwkZczrGveEIw68350094;     bfNorGFQNGVosWbOjWwkZczrGveEIw68350094 = bfNorGFQNGVosWbOjWwkZczrGveEIw89473804;     bfNorGFQNGVosWbOjWwkZczrGveEIw89473804 = bfNorGFQNGVosWbOjWwkZczrGveEIw9216159;     bfNorGFQNGVosWbOjWwkZczrGveEIw9216159 = bfNorGFQNGVosWbOjWwkZczrGveEIw44953242;     bfNorGFQNGVosWbOjWwkZczrGveEIw44953242 = bfNorGFQNGVosWbOjWwkZczrGveEIw43012894;     bfNorGFQNGVosWbOjWwkZczrGveEIw43012894 = bfNorGFQNGVosWbOjWwkZczrGveEIw35372293;     bfNorGFQNGVosWbOjWwkZczrGveEIw35372293 = bfNorGFQNGVosWbOjWwkZczrGveEIw29977144;     bfNorGFQNGVosWbOjWwkZczrGveEIw29977144 = bfNorGFQNGVosWbOjWwkZczrGveEIw86863827;     bfNorGFQNGVosWbOjWwkZczrGveEIw86863827 = bfNorGFQNGVosWbOjWwkZczrGveEIw50764502;     bfNorGFQNGVosWbOjWwkZczrGveEIw50764502 = bfNorGFQNGVosWbOjWwkZczrGveEIw74150720;     bfNorGFQNGVosWbOjWwkZczrGveEIw74150720 = bfNorGFQNGVosWbOjWwkZczrGveEIw76508486;     bfNorGFQNGVosWbOjWwkZczrGveEIw76508486 = bfNorGFQNGVosWbOjWwkZczrGveEIw66500426;     bfNorGFQNGVosWbOjWwkZczrGveEIw66500426 = bfNorGFQNGVosWbOjWwkZczrGveEIw1245374;     bfNorGFQNGVosWbOjWwkZczrGveEIw1245374 = bfNorGFQNGVosWbOjWwkZczrGveEIw4060775;     bfNorGFQNGVosWbOjWwkZczrGveEIw4060775 = bfNorGFQNGVosWbOjWwkZczrGveEIw1026529;     bfNorGFQNGVosWbOjWwkZczrGveEIw1026529 = bfNorGFQNGVosWbOjWwkZczrGveEIw85647174;     bfNorGFQNGVosWbOjWwkZczrGveEIw85647174 = bfNorGFQNGVosWbOjWwkZczrGveEIw7729829;     bfNorGFQNGVosWbOjWwkZczrGveEIw7729829 = bfNorGFQNGVosWbOjWwkZczrGveEIw5992339;     bfNorGFQNGVosWbOjWwkZczrGveEIw5992339 = bfNorGFQNGVosWbOjWwkZczrGveEIw396933;     bfNorGFQNGVosWbOjWwkZczrGveEIw396933 = bfNorGFQNGVosWbOjWwkZczrGveEIw27814878;     bfNorGFQNGVosWbOjWwkZczrGveEIw27814878 = bfNorGFQNGVosWbOjWwkZczrGveEIw60124037;     bfNorGFQNGVosWbOjWwkZczrGveEIw60124037 = bfNorGFQNGVosWbOjWwkZczrGveEIw33676511;     bfNorGFQNGVosWbOjWwkZczrGveEIw33676511 = bfNorGFQNGVosWbOjWwkZczrGveEIw6469573;     bfNorGFQNGVosWbOjWwkZczrGveEIw6469573 = bfNorGFQNGVosWbOjWwkZczrGveEIw78374466;     bfNorGFQNGVosWbOjWwkZczrGveEIw78374466 = bfNorGFQNGVosWbOjWwkZczrGveEIw43671467;     bfNorGFQNGVosWbOjWwkZczrGveEIw43671467 = bfNorGFQNGVosWbOjWwkZczrGveEIw20646796;     bfNorGFQNGVosWbOjWwkZczrGveEIw20646796 = bfNorGFQNGVosWbOjWwkZczrGveEIw18153485;     bfNorGFQNGVosWbOjWwkZczrGveEIw18153485 = bfNorGFQNGVosWbOjWwkZczrGveEIw88113834;     bfNorGFQNGVosWbOjWwkZczrGveEIw88113834 = bfNorGFQNGVosWbOjWwkZczrGveEIw85129656;     bfNorGFQNGVosWbOjWwkZczrGveEIw85129656 = bfNorGFQNGVosWbOjWwkZczrGveEIw14956992;     bfNorGFQNGVosWbOjWwkZczrGveEIw14956992 = bfNorGFQNGVosWbOjWwkZczrGveEIw35177460;     bfNorGFQNGVosWbOjWwkZczrGveEIw35177460 = bfNorGFQNGVosWbOjWwkZczrGveEIw5951967;     bfNorGFQNGVosWbOjWwkZczrGveEIw5951967 = bfNorGFQNGVosWbOjWwkZczrGveEIw17982642;     bfNorGFQNGVosWbOjWwkZczrGveEIw17982642 = bfNorGFQNGVosWbOjWwkZczrGveEIw94014229;     bfNorGFQNGVosWbOjWwkZczrGveEIw94014229 = bfNorGFQNGVosWbOjWwkZczrGveEIw1712480;     bfNorGFQNGVosWbOjWwkZczrGveEIw1712480 = bfNorGFQNGVosWbOjWwkZczrGveEIw21453192;     bfNorGFQNGVosWbOjWwkZczrGveEIw21453192 = bfNorGFQNGVosWbOjWwkZczrGveEIw83320262;     bfNorGFQNGVosWbOjWwkZczrGveEIw83320262 = bfNorGFQNGVosWbOjWwkZczrGveEIw78035796;     bfNorGFQNGVosWbOjWwkZczrGveEIw78035796 = bfNorGFQNGVosWbOjWwkZczrGveEIw42428652;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void EzvrxXzZDCGotaPtbeJVeqdwR69793801() {     double EdaZHfNdzhDeVbGiebTEDIDYRhlbEC93592734 = 18530560;    double EdaZHfNdzhDeVbGiebTEDIDYRhlbEC14830988 = -464651825;    double EdaZHfNdzhDeVbGiebTEDIDYRhlbEC24750849 = -534395605;    double EdaZHfNdzhDeVbGiebTEDIDYRhlbEC52408906 = -547789286;    double EdaZHfNdzhDeVbGiebTEDIDYRhlbEC41854319 = -990631962;    double EdaZHfNdzhDeVbGiebTEDIDYRhlbEC11660657 = -173282180;    double EdaZHfNdzhDeVbGiebTEDIDYRhlbEC82251127 = -521315056;    double EdaZHfNdzhDeVbGiebTEDIDYRhlbEC3986127 = -859465741;    double EdaZHfNdzhDeVbGiebTEDIDYRhlbEC79503086 = -133530944;    double EdaZHfNdzhDeVbGiebTEDIDYRhlbEC21579374 = -978543273;    double EdaZHfNdzhDeVbGiebTEDIDYRhlbEC59210606 = -156393261;    double EdaZHfNdzhDeVbGiebTEDIDYRhlbEC92792344 = -306926411;    double EdaZHfNdzhDeVbGiebTEDIDYRhlbEC72363443 = -338618710;    double EdaZHfNdzhDeVbGiebTEDIDYRhlbEC85529759 = -805558783;    double EdaZHfNdzhDeVbGiebTEDIDYRhlbEC34984158 = -88899088;    double EdaZHfNdzhDeVbGiebTEDIDYRhlbEC82688545 = -503307187;    double EdaZHfNdzhDeVbGiebTEDIDYRhlbEC15191589 = -528199288;    double EdaZHfNdzhDeVbGiebTEDIDYRhlbEC7262971 = -948216933;    double EdaZHfNdzhDeVbGiebTEDIDYRhlbEC10371241 = -70883434;    double EdaZHfNdzhDeVbGiebTEDIDYRhlbEC19603507 = -121644579;    double EdaZHfNdzhDeVbGiebTEDIDYRhlbEC55811302 = -519766403;    double EdaZHfNdzhDeVbGiebTEDIDYRhlbEC93256004 = 96569338;    double EdaZHfNdzhDeVbGiebTEDIDYRhlbEC22589588 = -257735163;    double EdaZHfNdzhDeVbGiebTEDIDYRhlbEC77797059 = -138122083;    double EdaZHfNdzhDeVbGiebTEDIDYRhlbEC63719738 = -542610259;    double EdaZHfNdzhDeVbGiebTEDIDYRhlbEC10312381 = -743224404;    double EdaZHfNdzhDeVbGiebTEDIDYRhlbEC95303610 = -3720119;    double EdaZHfNdzhDeVbGiebTEDIDYRhlbEC36316020 = -192169728;    double EdaZHfNdzhDeVbGiebTEDIDYRhlbEC64834606 = -484962388;    double EdaZHfNdzhDeVbGiebTEDIDYRhlbEC39365385 = -413707921;    double EdaZHfNdzhDeVbGiebTEDIDYRhlbEC54912884 = -918556051;    double EdaZHfNdzhDeVbGiebTEDIDYRhlbEC24373373 = 35893269;    double EdaZHfNdzhDeVbGiebTEDIDYRhlbEC92678988 = -971990466;    double EdaZHfNdzhDeVbGiebTEDIDYRhlbEC59433661 = -662337322;    double EdaZHfNdzhDeVbGiebTEDIDYRhlbEC3756976 = -137390923;    double EdaZHfNdzhDeVbGiebTEDIDYRhlbEC42822336 = -999487770;    double EdaZHfNdzhDeVbGiebTEDIDYRhlbEC53149549 = -682369697;    double EdaZHfNdzhDeVbGiebTEDIDYRhlbEC6654930 = -318725250;    double EdaZHfNdzhDeVbGiebTEDIDYRhlbEC82682896 = -630484375;    double EdaZHfNdzhDeVbGiebTEDIDYRhlbEC89953343 = -114319665;    double EdaZHfNdzhDeVbGiebTEDIDYRhlbEC6119667 = -523708979;    double EdaZHfNdzhDeVbGiebTEDIDYRhlbEC43779414 = -137558294;    double EdaZHfNdzhDeVbGiebTEDIDYRhlbEC69610795 = -761791479;    double EdaZHfNdzhDeVbGiebTEDIDYRhlbEC93354878 = -521493955;    double EdaZHfNdzhDeVbGiebTEDIDYRhlbEC90968842 = -705984040;    double EdaZHfNdzhDeVbGiebTEDIDYRhlbEC92707043 = -36683292;    double EdaZHfNdzhDeVbGiebTEDIDYRhlbEC61597799 = -493227927;    double EdaZHfNdzhDeVbGiebTEDIDYRhlbEC24100456 = -996817847;    double EdaZHfNdzhDeVbGiebTEDIDYRhlbEC33271887 = -248550368;    double EdaZHfNdzhDeVbGiebTEDIDYRhlbEC30390637 = -687133552;    double EdaZHfNdzhDeVbGiebTEDIDYRhlbEC83692824 = -809770554;    double EdaZHfNdzhDeVbGiebTEDIDYRhlbEC68096887 = 99123750;    double EdaZHfNdzhDeVbGiebTEDIDYRhlbEC33193740 = -504912540;    double EdaZHfNdzhDeVbGiebTEDIDYRhlbEC92253754 = -484783150;    double EdaZHfNdzhDeVbGiebTEDIDYRhlbEC13982500 = -862785890;    double EdaZHfNdzhDeVbGiebTEDIDYRhlbEC336731 = 21961221;    double EdaZHfNdzhDeVbGiebTEDIDYRhlbEC92241399 = -106916662;    double EdaZHfNdzhDeVbGiebTEDIDYRhlbEC46953789 = -296273522;    double EdaZHfNdzhDeVbGiebTEDIDYRhlbEC88689168 = 94820973;    double EdaZHfNdzhDeVbGiebTEDIDYRhlbEC31541938 = -147407559;    double EdaZHfNdzhDeVbGiebTEDIDYRhlbEC16357047 = -69562062;    double EdaZHfNdzhDeVbGiebTEDIDYRhlbEC45935107 = -229145329;    double EdaZHfNdzhDeVbGiebTEDIDYRhlbEC39151521 = -274503354;    double EdaZHfNdzhDeVbGiebTEDIDYRhlbEC40137702 = -719823023;    double EdaZHfNdzhDeVbGiebTEDIDYRhlbEC66666490 = 40012777;    double EdaZHfNdzhDeVbGiebTEDIDYRhlbEC34837233 = -92286530;    double EdaZHfNdzhDeVbGiebTEDIDYRhlbEC113357 = -334935946;    double EdaZHfNdzhDeVbGiebTEDIDYRhlbEC12929783 = -676281388;    double EdaZHfNdzhDeVbGiebTEDIDYRhlbEC81772783 = -568167860;    double EdaZHfNdzhDeVbGiebTEDIDYRhlbEC92161821 = -89411319;    double EdaZHfNdzhDeVbGiebTEDIDYRhlbEC29538997 = -820937490;    double EdaZHfNdzhDeVbGiebTEDIDYRhlbEC8536660 = -109474039;    double EdaZHfNdzhDeVbGiebTEDIDYRhlbEC24580075 = -217732558;    double EdaZHfNdzhDeVbGiebTEDIDYRhlbEC20417898 = -956563770;    double EdaZHfNdzhDeVbGiebTEDIDYRhlbEC13483840 = -597935601;    double EdaZHfNdzhDeVbGiebTEDIDYRhlbEC12031888 = -282208110;    double EdaZHfNdzhDeVbGiebTEDIDYRhlbEC23645209 = -141639183;    double EdaZHfNdzhDeVbGiebTEDIDYRhlbEC29234710 = -736241209;    double EdaZHfNdzhDeVbGiebTEDIDYRhlbEC86828217 = -432138044;    double EdaZHfNdzhDeVbGiebTEDIDYRhlbEC71012694 = -405926968;    double EdaZHfNdzhDeVbGiebTEDIDYRhlbEC48714582 = -149996478;    double EdaZHfNdzhDeVbGiebTEDIDYRhlbEC71203154 = -6902272;    double EdaZHfNdzhDeVbGiebTEDIDYRhlbEC3044134 = -943619361;    double EdaZHfNdzhDeVbGiebTEDIDYRhlbEC34443970 = -797828837;    double EdaZHfNdzhDeVbGiebTEDIDYRhlbEC55672560 = -603937367;    double EdaZHfNdzhDeVbGiebTEDIDYRhlbEC86815997 = -917679802;    double EdaZHfNdzhDeVbGiebTEDIDYRhlbEC91179633 = -459194192;    double EdaZHfNdzhDeVbGiebTEDIDYRhlbEC425235 = -387207316;    double EdaZHfNdzhDeVbGiebTEDIDYRhlbEC45451161 = -799551432;    double EdaZHfNdzhDeVbGiebTEDIDYRhlbEC3420246 = -59352145;    double EdaZHfNdzhDeVbGiebTEDIDYRhlbEC50580936 = -792571108;    double EdaZHfNdzhDeVbGiebTEDIDYRhlbEC6195761 = -286096176;    double EdaZHfNdzhDeVbGiebTEDIDYRhlbEC17965761 = -313546223;    double EdaZHfNdzhDeVbGiebTEDIDYRhlbEC51140959 = -383076817;    double EdaZHfNdzhDeVbGiebTEDIDYRhlbEC73596296 = 55242397;    double EdaZHfNdzhDeVbGiebTEDIDYRhlbEC60184560 = -194563651;    double EdaZHfNdzhDeVbGiebTEDIDYRhlbEC4627893 = -863054940;    double EdaZHfNdzhDeVbGiebTEDIDYRhlbEC29473094 = 58031544;    double EdaZHfNdzhDeVbGiebTEDIDYRhlbEC26688389 = -461506733;    double EdaZHfNdzhDeVbGiebTEDIDYRhlbEC56131610 = 18530560;     EdaZHfNdzhDeVbGiebTEDIDYRhlbEC93592734 = EdaZHfNdzhDeVbGiebTEDIDYRhlbEC14830988;     EdaZHfNdzhDeVbGiebTEDIDYRhlbEC14830988 = EdaZHfNdzhDeVbGiebTEDIDYRhlbEC24750849;     EdaZHfNdzhDeVbGiebTEDIDYRhlbEC24750849 = EdaZHfNdzhDeVbGiebTEDIDYRhlbEC52408906;     EdaZHfNdzhDeVbGiebTEDIDYRhlbEC52408906 = EdaZHfNdzhDeVbGiebTEDIDYRhlbEC41854319;     EdaZHfNdzhDeVbGiebTEDIDYRhlbEC41854319 = EdaZHfNdzhDeVbGiebTEDIDYRhlbEC11660657;     EdaZHfNdzhDeVbGiebTEDIDYRhlbEC11660657 = EdaZHfNdzhDeVbGiebTEDIDYRhlbEC82251127;     EdaZHfNdzhDeVbGiebTEDIDYRhlbEC82251127 = EdaZHfNdzhDeVbGiebTEDIDYRhlbEC3986127;     EdaZHfNdzhDeVbGiebTEDIDYRhlbEC3986127 = EdaZHfNdzhDeVbGiebTEDIDYRhlbEC79503086;     EdaZHfNdzhDeVbGiebTEDIDYRhlbEC79503086 = EdaZHfNdzhDeVbGiebTEDIDYRhlbEC21579374;     EdaZHfNdzhDeVbGiebTEDIDYRhlbEC21579374 = EdaZHfNdzhDeVbGiebTEDIDYRhlbEC59210606;     EdaZHfNdzhDeVbGiebTEDIDYRhlbEC59210606 = EdaZHfNdzhDeVbGiebTEDIDYRhlbEC92792344;     EdaZHfNdzhDeVbGiebTEDIDYRhlbEC92792344 = EdaZHfNdzhDeVbGiebTEDIDYRhlbEC72363443;     EdaZHfNdzhDeVbGiebTEDIDYRhlbEC72363443 = EdaZHfNdzhDeVbGiebTEDIDYRhlbEC85529759;     EdaZHfNdzhDeVbGiebTEDIDYRhlbEC85529759 = EdaZHfNdzhDeVbGiebTEDIDYRhlbEC34984158;     EdaZHfNdzhDeVbGiebTEDIDYRhlbEC34984158 = EdaZHfNdzhDeVbGiebTEDIDYRhlbEC82688545;     EdaZHfNdzhDeVbGiebTEDIDYRhlbEC82688545 = EdaZHfNdzhDeVbGiebTEDIDYRhlbEC15191589;     EdaZHfNdzhDeVbGiebTEDIDYRhlbEC15191589 = EdaZHfNdzhDeVbGiebTEDIDYRhlbEC7262971;     EdaZHfNdzhDeVbGiebTEDIDYRhlbEC7262971 = EdaZHfNdzhDeVbGiebTEDIDYRhlbEC10371241;     EdaZHfNdzhDeVbGiebTEDIDYRhlbEC10371241 = EdaZHfNdzhDeVbGiebTEDIDYRhlbEC19603507;     EdaZHfNdzhDeVbGiebTEDIDYRhlbEC19603507 = EdaZHfNdzhDeVbGiebTEDIDYRhlbEC55811302;     EdaZHfNdzhDeVbGiebTEDIDYRhlbEC55811302 = EdaZHfNdzhDeVbGiebTEDIDYRhlbEC93256004;     EdaZHfNdzhDeVbGiebTEDIDYRhlbEC93256004 = EdaZHfNdzhDeVbGiebTEDIDYRhlbEC22589588;     EdaZHfNdzhDeVbGiebTEDIDYRhlbEC22589588 = EdaZHfNdzhDeVbGiebTEDIDYRhlbEC77797059;     EdaZHfNdzhDeVbGiebTEDIDYRhlbEC77797059 = EdaZHfNdzhDeVbGiebTEDIDYRhlbEC63719738;     EdaZHfNdzhDeVbGiebTEDIDYRhlbEC63719738 = EdaZHfNdzhDeVbGiebTEDIDYRhlbEC10312381;     EdaZHfNdzhDeVbGiebTEDIDYRhlbEC10312381 = EdaZHfNdzhDeVbGiebTEDIDYRhlbEC95303610;     EdaZHfNdzhDeVbGiebTEDIDYRhlbEC95303610 = EdaZHfNdzhDeVbGiebTEDIDYRhlbEC36316020;     EdaZHfNdzhDeVbGiebTEDIDYRhlbEC36316020 = EdaZHfNdzhDeVbGiebTEDIDYRhlbEC64834606;     EdaZHfNdzhDeVbGiebTEDIDYRhlbEC64834606 = EdaZHfNdzhDeVbGiebTEDIDYRhlbEC39365385;     EdaZHfNdzhDeVbGiebTEDIDYRhlbEC39365385 = EdaZHfNdzhDeVbGiebTEDIDYRhlbEC54912884;     EdaZHfNdzhDeVbGiebTEDIDYRhlbEC54912884 = EdaZHfNdzhDeVbGiebTEDIDYRhlbEC24373373;     EdaZHfNdzhDeVbGiebTEDIDYRhlbEC24373373 = EdaZHfNdzhDeVbGiebTEDIDYRhlbEC92678988;     EdaZHfNdzhDeVbGiebTEDIDYRhlbEC92678988 = EdaZHfNdzhDeVbGiebTEDIDYRhlbEC59433661;     EdaZHfNdzhDeVbGiebTEDIDYRhlbEC59433661 = EdaZHfNdzhDeVbGiebTEDIDYRhlbEC3756976;     EdaZHfNdzhDeVbGiebTEDIDYRhlbEC3756976 = EdaZHfNdzhDeVbGiebTEDIDYRhlbEC42822336;     EdaZHfNdzhDeVbGiebTEDIDYRhlbEC42822336 = EdaZHfNdzhDeVbGiebTEDIDYRhlbEC53149549;     EdaZHfNdzhDeVbGiebTEDIDYRhlbEC53149549 = EdaZHfNdzhDeVbGiebTEDIDYRhlbEC6654930;     EdaZHfNdzhDeVbGiebTEDIDYRhlbEC6654930 = EdaZHfNdzhDeVbGiebTEDIDYRhlbEC82682896;     EdaZHfNdzhDeVbGiebTEDIDYRhlbEC82682896 = EdaZHfNdzhDeVbGiebTEDIDYRhlbEC89953343;     EdaZHfNdzhDeVbGiebTEDIDYRhlbEC89953343 = EdaZHfNdzhDeVbGiebTEDIDYRhlbEC6119667;     EdaZHfNdzhDeVbGiebTEDIDYRhlbEC6119667 = EdaZHfNdzhDeVbGiebTEDIDYRhlbEC43779414;     EdaZHfNdzhDeVbGiebTEDIDYRhlbEC43779414 = EdaZHfNdzhDeVbGiebTEDIDYRhlbEC69610795;     EdaZHfNdzhDeVbGiebTEDIDYRhlbEC69610795 = EdaZHfNdzhDeVbGiebTEDIDYRhlbEC93354878;     EdaZHfNdzhDeVbGiebTEDIDYRhlbEC93354878 = EdaZHfNdzhDeVbGiebTEDIDYRhlbEC90968842;     EdaZHfNdzhDeVbGiebTEDIDYRhlbEC90968842 = EdaZHfNdzhDeVbGiebTEDIDYRhlbEC92707043;     EdaZHfNdzhDeVbGiebTEDIDYRhlbEC92707043 = EdaZHfNdzhDeVbGiebTEDIDYRhlbEC61597799;     EdaZHfNdzhDeVbGiebTEDIDYRhlbEC61597799 = EdaZHfNdzhDeVbGiebTEDIDYRhlbEC24100456;     EdaZHfNdzhDeVbGiebTEDIDYRhlbEC24100456 = EdaZHfNdzhDeVbGiebTEDIDYRhlbEC33271887;     EdaZHfNdzhDeVbGiebTEDIDYRhlbEC33271887 = EdaZHfNdzhDeVbGiebTEDIDYRhlbEC30390637;     EdaZHfNdzhDeVbGiebTEDIDYRhlbEC30390637 = EdaZHfNdzhDeVbGiebTEDIDYRhlbEC83692824;     EdaZHfNdzhDeVbGiebTEDIDYRhlbEC83692824 = EdaZHfNdzhDeVbGiebTEDIDYRhlbEC68096887;     EdaZHfNdzhDeVbGiebTEDIDYRhlbEC68096887 = EdaZHfNdzhDeVbGiebTEDIDYRhlbEC33193740;     EdaZHfNdzhDeVbGiebTEDIDYRhlbEC33193740 = EdaZHfNdzhDeVbGiebTEDIDYRhlbEC92253754;     EdaZHfNdzhDeVbGiebTEDIDYRhlbEC92253754 = EdaZHfNdzhDeVbGiebTEDIDYRhlbEC13982500;     EdaZHfNdzhDeVbGiebTEDIDYRhlbEC13982500 = EdaZHfNdzhDeVbGiebTEDIDYRhlbEC336731;     EdaZHfNdzhDeVbGiebTEDIDYRhlbEC336731 = EdaZHfNdzhDeVbGiebTEDIDYRhlbEC92241399;     EdaZHfNdzhDeVbGiebTEDIDYRhlbEC92241399 = EdaZHfNdzhDeVbGiebTEDIDYRhlbEC46953789;     EdaZHfNdzhDeVbGiebTEDIDYRhlbEC46953789 = EdaZHfNdzhDeVbGiebTEDIDYRhlbEC88689168;     EdaZHfNdzhDeVbGiebTEDIDYRhlbEC88689168 = EdaZHfNdzhDeVbGiebTEDIDYRhlbEC31541938;     EdaZHfNdzhDeVbGiebTEDIDYRhlbEC31541938 = EdaZHfNdzhDeVbGiebTEDIDYRhlbEC16357047;     EdaZHfNdzhDeVbGiebTEDIDYRhlbEC16357047 = EdaZHfNdzhDeVbGiebTEDIDYRhlbEC45935107;     EdaZHfNdzhDeVbGiebTEDIDYRhlbEC45935107 = EdaZHfNdzhDeVbGiebTEDIDYRhlbEC39151521;     EdaZHfNdzhDeVbGiebTEDIDYRhlbEC39151521 = EdaZHfNdzhDeVbGiebTEDIDYRhlbEC40137702;     EdaZHfNdzhDeVbGiebTEDIDYRhlbEC40137702 = EdaZHfNdzhDeVbGiebTEDIDYRhlbEC66666490;     EdaZHfNdzhDeVbGiebTEDIDYRhlbEC66666490 = EdaZHfNdzhDeVbGiebTEDIDYRhlbEC34837233;     EdaZHfNdzhDeVbGiebTEDIDYRhlbEC34837233 = EdaZHfNdzhDeVbGiebTEDIDYRhlbEC113357;     EdaZHfNdzhDeVbGiebTEDIDYRhlbEC113357 = EdaZHfNdzhDeVbGiebTEDIDYRhlbEC12929783;     EdaZHfNdzhDeVbGiebTEDIDYRhlbEC12929783 = EdaZHfNdzhDeVbGiebTEDIDYRhlbEC81772783;     EdaZHfNdzhDeVbGiebTEDIDYRhlbEC81772783 = EdaZHfNdzhDeVbGiebTEDIDYRhlbEC92161821;     EdaZHfNdzhDeVbGiebTEDIDYRhlbEC92161821 = EdaZHfNdzhDeVbGiebTEDIDYRhlbEC29538997;     EdaZHfNdzhDeVbGiebTEDIDYRhlbEC29538997 = EdaZHfNdzhDeVbGiebTEDIDYRhlbEC8536660;     EdaZHfNdzhDeVbGiebTEDIDYRhlbEC8536660 = EdaZHfNdzhDeVbGiebTEDIDYRhlbEC24580075;     EdaZHfNdzhDeVbGiebTEDIDYRhlbEC24580075 = EdaZHfNdzhDeVbGiebTEDIDYRhlbEC20417898;     EdaZHfNdzhDeVbGiebTEDIDYRhlbEC20417898 = EdaZHfNdzhDeVbGiebTEDIDYRhlbEC13483840;     EdaZHfNdzhDeVbGiebTEDIDYRhlbEC13483840 = EdaZHfNdzhDeVbGiebTEDIDYRhlbEC12031888;     EdaZHfNdzhDeVbGiebTEDIDYRhlbEC12031888 = EdaZHfNdzhDeVbGiebTEDIDYRhlbEC23645209;     EdaZHfNdzhDeVbGiebTEDIDYRhlbEC23645209 = EdaZHfNdzhDeVbGiebTEDIDYRhlbEC29234710;     EdaZHfNdzhDeVbGiebTEDIDYRhlbEC29234710 = EdaZHfNdzhDeVbGiebTEDIDYRhlbEC86828217;     EdaZHfNdzhDeVbGiebTEDIDYRhlbEC86828217 = EdaZHfNdzhDeVbGiebTEDIDYRhlbEC71012694;     EdaZHfNdzhDeVbGiebTEDIDYRhlbEC71012694 = EdaZHfNdzhDeVbGiebTEDIDYRhlbEC48714582;     EdaZHfNdzhDeVbGiebTEDIDYRhlbEC48714582 = EdaZHfNdzhDeVbGiebTEDIDYRhlbEC71203154;     EdaZHfNdzhDeVbGiebTEDIDYRhlbEC71203154 = EdaZHfNdzhDeVbGiebTEDIDYRhlbEC3044134;     EdaZHfNdzhDeVbGiebTEDIDYRhlbEC3044134 = EdaZHfNdzhDeVbGiebTEDIDYRhlbEC34443970;     EdaZHfNdzhDeVbGiebTEDIDYRhlbEC34443970 = EdaZHfNdzhDeVbGiebTEDIDYRhlbEC55672560;     EdaZHfNdzhDeVbGiebTEDIDYRhlbEC55672560 = EdaZHfNdzhDeVbGiebTEDIDYRhlbEC86815997;     EdaZHfNdzhDeVbGiebTEDIDYRhlbEC86815997 = EdaZHfNdzhDeVbGiebTEDIDYRhlbEC91179633;     EdaZHfNdzhDeVbGiebTEDIDYRhlbEC91179633 = EdaZHfNdzhDeVbGiebTEDIDYRhlbEC425235;     EdaZHfNdzhDeVbGiebTEDIDYRhlbEC425235 = EdaZHfNdzhDeVbGiebTEDIDYRhlbEC45451161;     EdaZHfNdzhDeVbGiebTEDIDYRhlbEC45451161 = EdaZHfNdzhDeVbGiebTEDIDYRhlbEC3420246;     EdaZHfNdzhDeVbGiebTEDIDYRhlbEC3420246 = EdaZHfNdzhDeVbGiebTEDIDYRhlbEC50580936;     EdaZHfNdzhDeVbGiebTEDIDYRhlbEC50580936 = EdaZHfNdzhDeVbGiebTEDIDYRhlbEC6195761;     EdaZHfNdzhDeVbGiebTEDIDYRhlbEC6195761 = EdaZHfNdzhDeVbGiebTEDIDYRhlbEC17965761;     EdaZHfNdzhDeVbGiebTEDIDYRhlbEC17965761 = EdaZHfNdzhDeVbGiebTEDIDYRhlbEC51140959;     EdaZHfNdzhDeVbGiebTEDIDYRhlbEC51140959 = EdaZHfNdzhDeVbGiebTEDIDYRhlbEC73596296;     EdaZHfNdzhDeVbGiebTEDIDYRhlbEC73596296 = EdaZHfNdzhDeVbGiebTEDIDYRhlbEC60184560;     EdaZHfNdzhDeVbGiebTEDIDYRhlbEC60184560 = EdaZHfNdzhDeVbGiebTEDIDYRhlbEC4627893;     EdaZHfNdzhDeVbGiebTEDIDYRhlbEC4627893 = EdaZHfNdzhDeVbGiebTEDIDYRhlbEC29473094;     EdaZHfNdzhDeVbGiebTEDIDYRhlbEC29473094 = EdaZHfNdzhDeVbGiebTEDIDYRhlbEC26688389;     EdaZHfNdzhDeVbGiebTEDIDYRhlbEC26688389 = EdaZHfNdzhDeVbGiebTEDIDYRhlbEC56131610;     EdaZHfNdzhDeVbGiebTEDIDYRhlbEC56131610 = EdaZHfNdzhDeVbGiebTEDIDYRhlbEC93592734;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void UYYyZXlpyLLezeykUgWbdAAqY79398528() {     double UESxNGiigJLQDWVQIYeLEWGJazePFb15414956 = -549684772;    double UESxNGiigJLQDWVQIYeLEWGJazePFb76298791 = -847250678;    double UESxNGiigJLQDWVQIYeLEWGJazePFb70478119 = -581613137;    double UESxNGiigJLQDWVQIYeLEWGJazePFb83784052 = -752573462;    double UESxNGiigJLQDWVQIYeLEWGJazePFb1988651 = -867882884;    double UESxNGiigJLQDWVQIYeLEWGJazePFb35678973 = -184825338;    double UESxNGiigJLQDWVQIYeLEWGJazePFb11271712 = -584633180;    double UESxNGiigJLQDWVQIYeLEWGJazePFb90848756 = -867646590;    double UESxNGiigJLQDWVQIYeLEWGJazePFb76026726 = -119326362;    double UESxNGiigJLQDWVQIYeLEWGJazePFb82862599 = -848761671;    double UESxNGiigJLQDWVQIYeLEWGJazePFb30126874 = -812150964;    double UESxNGiigJLQDWVQIYeLEWGJazePFb8974228 = -410108017;    double UESxNGiigJLQDWVQIYeLEWGJazePFb5352386 = -876652499;    double UESxNGiigJLQDWVQIYeLEWGJazePFb52496227 = -555635580;    double UESxNGiigJLQDWVQIYeLEWGJazePFb30241953 = -15741007;    double UESxNGiigJLQDWVQIYeLEWGJazePFb30659272 = -945673728;    double UESxNGiigJLQDWVQIYeLEWGJazePFb8640649 = -914024007;    double UESxNGiigJLQDWVQIYeLEWGJazePFb69788274 = -869937850;    double UESxNGiigJLQDWVQIYeLEWGJazePFb15008465 = -144019091;    double UESxNGiigJLQDWVQIYeLEWGJazePFb713150 = -612889635;    double UESxNGiigJLQDWVQIYeLEWGJazePFb12965587 = -251845106;    double UESxNGiigJLQDWVQIYeLEWGJazePFb57657982 = 25818173;    double UESxNGiigJLQDWVQIYeLEWGJazePFb32060992 = -913762519;    double UESxNGiigJLQDWVQIYeLEWGJazePFb15074682 = -548220949;    double UESxNGiigJLQDWVQIYeLEWGJazePFb37650405 = -453507232;    double UESxNGiigJLQDWVQIYeLEWGJazePFb99888234 = 29590068;    double UESxNGiigJLQDWVQIYeLEWGJazePFb68340214 = -630524163;    double UESxNGiigJLQDWVQIYeLEWGJazePFb71895845 = -56617961;    double UESxNGiigJLQDWVQIYeLEWGJazePFb12731519 = -151908306;    double UESxNGiigJLQDWVQIYeLEWGJazePFb85182462 = -789922115;    double UESxNGiigJLQDWVQIYeLEWGJazePFb6078150 = -224283799;    double UESxNGiigJLQDWVQIYeLEWGJazePFb43264698 = -839995562;    double UESxNGiigJLQDWVQIYeLEWGJazePFb17998453 = -714594349;    double UESxNGiigJLQDWVQIYeLEWGJazePFb31972778 = -338156949;    double UESxNGiigJLQDWVQIYeLEWGJazePFb84591188 = -287209525;    double UESxNGiigJLQDWVQIYeLEWGJazePFb12399296 = 86096250;    double UESxNGiigJLQDWVQIYeLEWGJazePFb96231805 = -731986794;    double UESxNGiigJLQDWVQIYeLEWGJazePFb10592792 = -900268008;    double UESxNGiigJLQDWVQIYeLEWGJazePFb43063343 = -402889655;    double UESxNGiigJLQDWVQIYeLEWGJazePFb2623989 = -571868666;    double UESxNGiigJLQDWVQIYeLEWGJazePFb60495513 = -957848237;    double UESxNGiigJLQDWVQIYeLEWGJazePFb60281585 = -925024372;    double UESxNGiigJLQDWVQIYeLEWGJazePFb16978195 = -805758294;    double UESxNGiigJLQDWVQIYeLEWGJazePFb41449737 = -430300124;    double UESxNGiigJLQDWVQIYeLEWGJazePFb70884653 = -892672669;    double UESxNGiigJLQDWVQIYeLEWGJazePFb31913523 = -840115522;    double UESxNGiigJLQDWVQIYeLEWGJazePFb87265910 = -674235447;    double UESxNGiigJLQDWVQIYeLEWGJazePFb5940208 = -735313836;    double UESxNGiigJLQDWVQIYeLEWGJazePFb40335979 = -433666791;    double UESxNGiigJLQDWVQIYeLEWGJazePFb46438113 = -666188737;    double UESxNGiigJLQDWVQIYeLEWGJazePFb72154644 = -853659880;    double UESxNGiigJLQDWVQIYeLEWGJazePFb64485551 = -226254330;    double UESxNGiigJLQDWVQIYeLEWGJazePFb24416604 = -468507679;    double UESxNGiigJLQDWVQIYeLEWGJazePFb20278877 = -675792210;    double UESxNGiigJLQDWVQIYeLEWGJazePFb66432941 = -823907640;    double UESxNGiigJLQDWVQIYeLEWGJazePFb57756973 = -475502946;    double UESxNGiigJLQDWVQIYeLEWGJazePFb44237799 = -933488160;    double UESxNGiigJLQDWVQIYeLEWGJazePFb55403437 = 66607812;    double UESxNGiigJLQDWVQIYeLEWGJazePFb46133648 = -199066231;    double UESxNGiigJLQDWVQIYeLEWGJazePFb2100416 = -797472952;    double UESxNGiigJLQDWVQIYeLEWGJazePFb67338758 = -554301176;    double UESxNGiigJLQDWVQIYeLEWGJazePFb39375866 = -428015220;    double UESxNGiigJLQDWVQIYeLEWGJazePFb78117237 = -615738284;    double UESxNGiigJLQDWVQIYeLEWGJazePFb90844264 = -329404247;    double UESxNGiigJLQDWVQIYeLEWGJazePFb76784450 = -524477873;    double UESxNGiigJLQDWVQIYeLEWGJazePFb86862175 = -972155402;    double UESxNGiigJLQDWVQIYeLEWGJazePFb90975774 = -695513669;    double UESxNGiigJLQDWVQIYeLEWGJazePFb73379608 = -438495550;    double UESxNGiigJLQDWVQIYeLEWGJazePFb67905038 = -168426056;    double UESxNGiigJLQDWVQIYeLEWGJazePFb17842658 = -1837258;    double UESxNGiigJLQDWVQIYeLEWGJazePFb34427466 = -113686935;    double UESxNGiigJLQDWVQIYeLEWGJazePFb98047856 = 86244001;    double UESxNGiigJLQDWVQIYeLEWGJazePFb26724931 = -367048195;    double UESxNGiigJLQDWVQIYeLEWGJazePFb12384476 = -572150426;    double UESxNGiigJLQDWVQIYeLEWGJazePFb40217636 = -655041399;    double UESxNGiigJLQDWVQIYeLEWGJazePFb52684002 = -326820735;    double UESxNGiigJLQDWVQIYeLEWGJazePFb40679788 = -168423533;    double UESxNGiigJLQDWVQIYeLEWGJazePFb90611255 = -383462395;    double UESxNGiigJLQDWVQIYeLEWGJazePFb44190028 = -655548280;    double UESxNGiigJLQDWVQIYeLEWGJazePFb5736883 = -613391710;    double UESxNGiigJLQDWVQIYeLEWGJazePFb12622325 = -296174486;    double UESxNGiigJLQDWVQIYeLEWGJazePFb62400006 = -895210328;    double UESxNGiigJLQDWVQIYeLEWGJazePFb31559867 = -622951171;    double UESxNGiigJLQDWVQIYeLEWGJazePFb66293405 = -485719570;    double UESxNGiigJLQDWVQIYeLEWGJazePFb13027818 = -936262236;    double UESxNGiigJLQDWVQIYeLEWGJazePFb41592599 = -998029469;    double UESxNGiigJLQDWVQIYeLEWGJazePFb18848095 = -271487883;    double UESxNGiigJLQDWVQIYeLEWGJazePFb97719576 = 61197860;    double UESxNGiigJLQDWVQIYeLEWGJazePFb65539837 = -514249310;    double UESxNGiigJLQDWVQIYeLEWGJazePFb26834216 = -811706580;    double UESxNGiigJLQDWVQIYeLEWGJazePFb68161496 = 19584409;    double UESxNGiigJLQDWVQIYeLEWGJazePFb40828369 = -698594606;    double UESxNGiigJLQDWVQIYeLEWGJazePFb64459144 = -601201777;    double UESxNGiigJLQDWVQIYeLEWGJazePFb40962928 = -605416704;    double UESxNGiigJLQDWVQIYeLEWGJazePFb35285231 = 82432510;    double UESxNGiigJLQDWVQIYeLEWGJazePFb21119647 = -429833018;    double UESxNGiigJLQDWVQIYeLEWGJazePFb82164347 = -209286088;    double UESxNGiigJLQDWVQIYeLEWGJazePFb26133930 = -376354048;    double UESxNGiigJLQDWVQIYeLEWGJazePFb64665287 = -905822252;    double UESxNGiigJLQDWVQIYeLEWGJazePFb84022477 = -549684772;     UESxNGiigJLQDWVQIYeLEWGJazePFb15414956 = UESxNGiigJLQDWVQIYeLEWGJazePFb76298791;     UESxNGiigJLQDWVQIYeLEWGJazePFb76298791 = UESxNGiigJLQDWVQIYeLEWGJazePFb70478119;     UESxNGiigJLQDWVQIYeLEWGJazePFb70478119 = UESxNGiigJLQDWVQIYeLEWGJazePFb83784052;     UESxNGiigJLQDWVQIYeLEWGJazePFb83784052 = UESxNGiigJLQDWVQIYeLEWGJazePFb1988651;     UESxNGiigJLQDWVQIYeLEWGJazePFb1988651 = UESxNGiigJLQDWVQIYeLEWGJazePFb35678973;     UESxNGiigJLQDWVQIYeLEWGJazePFb35678973 = UESxNGiigJLQDWVQIYeLEWGJazePFb11271712;     UESxNGiigJLQDWVQIYeLEWGJazePFb11271712 = UESxNGiigJLQDWVQIYeLEWGJazePFb90848756;     UESxNGiigJLQDWVQIYeLEWGJazePFb90848756 = UESxNGiigJLQDWVQIYeLEWGJazePFb76026726;     UESxNGiigJLQDWVQIYeLEWGJazePFb76026726 = UESxNGiigJLQDWVQIYeLEWGJazePFb82862599;     UESxNGiigJLQDWVQIYeLEWGJazePFb82862599 = UESxNGiigJLQDWVQIYeLEWGJazePFb30126874;     UESxNGiigJLQDWVQIYeLEWGJazePFb30126874 = UESxNGiigJLQDWVQIYeLEWGJazePFb8974228;     UESxNGiigJLQDWVQIYeLEWGJazePFb8974228 = UESxNGiigJLQDWVQIYeLEWGJazePFb5352386;     UESxNGiigJLQDWVQIYeLEWGJazePFb5352386 = UESxNGiigJLQDWVQIYeLEWGJazePFb52496227;     UESxNGiigJLQDWVQIYeLEWGJazePFb52496227 = UESxNGiigJLQDWVQIYeLEWGJazePFb30241953;     UESxNGiigJLQDWVQIYeLEWGJazePFb30241953 = UESxNGiigJLQDWVQIYeLEWGJazePFb30659272;     UESxNGiigJLQDWVQIYeLEWGJazePFb30659272 = UESxNGiigJLQDWVQIYeLEWGJazePFb8640649;     UESxNGiigJLQDWVQIYeLEWGJazePFb8640649 = UESxNGiigJLQDWVQIYeLEWGJazePFb69788274;     UESxNGiigJLQDWVQIYeLEWGJazePFb69788274 = UESxNGiigJLQDWVQIYeLEWGJazePFb15008465;     UESxNGiigJLQDWVQIYeLEWGJazePFb15008465 = UESxNGiigJLQDWVQIYeLEWGJazePFb713150;     UESxNGiigJLQDWVQIYeLEWGJazePFb713150 = UESxNGiigJLQDWVQIYeLEWGJazePFb12965587;     UESxNGiigJLQDWVQIYeLEWGJazePFb12965587 = UESxNGiigJLQDWVQIYeLEWGJazePFb57657982;     UESxNGiigJLQDWVQIYeLEWGJazePFb57657982 = UESxNGiigJLQDWVQIYeLEWGJazePFb32060992;     UESxNGiigJLQDWVQIYeLEWGJazePFb32060992 = UESxNGiigJLQDWVQIYeLEWGJazePFb15074682;     UESxNGiigJLQDWVQIYeLEWGJazePFb15074682 = UESxNGiigJLQDWVQIYeLEWGJazePFb37650405;     UESxNGiigJLQDWVQIYeLEWGJazePFb37650405 = UESxNGiigJLQDWVQIYeLEWGJazePFb99888234;     UESxNGiigJLQDWVQIYeLEWGJazePFb99888234 = UESxNGiigJLQDWVQIYeLEWGJazePFb68340214;     UESxNGiigJLQDWVQIYeLEWGJazePFb68340214 = UESxNGiigJLQDWVQIYeLEWGJazePFb71895845;     UESxNGiigJLQDWVQIYeLEWGJazePFb71895845 = UESxNGiigJLQDWVQIYeLEWGJazePFb12731519;     UESxNGiigJLQDWVQIYeLEWGJazePFb12731519 = UESxNGiigJLQDWVQIYeLEWGJazePFb85182462;     UESxNGiigJLQDWVQIYeLEWGJazePFb85182462 = UESxNGiigJLQDWVQIYeLEWGJazePFb6078150;     UESxNGiigJLQDWVQIYeLEWGJazePFb6078150 = UESxNGiigJLQDWVQIYeLEWGJazePFb43264698;     UESxNGiigJLQDWVQIYeLEWGJazePFb43264698 = UESxNGiigJLQDWVQIYeLEWGJazePFb17998453;     UESxNGiigJLQDWVQIYeLEWGJazePFb17998453 = UESxNGiigJLQDWVQIYeLEWGJazePFb31972778;     UESxNGiigJLQDWVQIYeLEWGJazePFb31972778 = UESxNGiigJLQDWVQIYeLEWGJazePFb84591188;     UESxNGiigJLQDWVQIYeLEWGJazePFb84591188 = UESxNGiigJLQDWVQIYeLEWGJazePFb12399296;     UESxNGiigJLQDWVQIYeLEWGJazePFb12399296 = UESxNGiigJLQDWVQIYeLEWGJazePFb96231805;     UESxNGiigJLQDWVQIYeLEWGJazePFb96231805 = UESxNGiigJLQDWVQIYeLEWGJazePFb10592792;     UESxNGiigJLQDWVQIYeLEWGJazePFb10592792 = UESxNGiigJLQDWVQIYeLEWGJazePFb43063343;     UESxNGiigJLQDWVQIYeLEWGJazePFb43063343 = UESxNGiigJLQDWVQIYeLEWGJazePFb2623989;     UESxNGiigJLQDWVQIYeLEWGJazePFb2623989 = UESxNGiigJLQDWVQIYeLEWGJazePFb60495513;     UESxNGiigJLQDWVQIYeLEWGJazePFb60495513 = UESxNGiigJLQDWVQIYeLEWGJazePFb60281585;     UESxNGiigJLQDWVQIYeLEWGJazePFb60281585 = UESxNGiigJLQDWVQIYeLEWGJazePFb16978195;     UESxNGiigJLQDWVQIYeLEWGJazePFb16978195 = UESxNGiigJLQDWVQIYeLEWGJazePFb41449737;     UESxNGiigJLQDWVQIYeLEWGJazePFb41449737 = UESxNGiigJLQDWVQIYeLEWGJazePFb70884653;     UESxNGiigJLQDWVQIYeLEWGJazePFb70884653 = UESxNGiigJLQDWVQIYeLEWGJazePFb31913523;     UESxNGiigJLQDWVQIYeLEWGJazePFb31913523 = UESxNGiigJLQDWVQIYeLEWGJazePFb87265910;     UESxNGiigJLQDWVQIYeLEWGJazePFb87265910 = UESxNGiigJLQDWVQIYeLEWGJazePFb5940208;     UESxNGiigJLQDWVQIYeLEWGJazePFb5940208 = UESxNGiigJLQDWVQIYeLEWGJazePFb40335979;     UESxNGiigJLQDWVQIYeLEWGJazePFb40335979 = UESxNGiigJLQDWVQIYeLEWGJazePFb46438113;     UESxNGiigJLQDWVQIYeLEWGJazePFb46438113 = UESxNGiigJLQDWVQIYeLEWGJazePFb72154644;     UESxNGiigJLQDWVQIYeLEWGJazePFb72154644 = UESxNGiigJLQDWVQIYeLEWGJazePFb64485551;     UESxNGiigJLQDWVQIYeLEWGJazePFb64485551 = UESxNGiigJLQDWVQIYeLEWGJazePFb24416604;     UESxNGiigJLQDWVQIYeLEWGJazePFb24416604 = UESxNGiigJLQDWVQIYeLEWGJazePFb20278877;     UESxNGiigJLQDWVQIYeLEWGJazePFb20278877 = UESxNGiigJLQDWVQIYeLEWGJazePFb66432941;     UESxNGiigJLQDWVQIYeLEWGJazePFb66432941 = UESxNGiigJLQDWVQIYeLEWGJazePFb57756973;     UESxNGiigJLQDWVQIYeLEWGJazePFb57756973 = UESxNGiigJLQDWVQIYeLEWGJazePFb44237799;     UESxNGiigJLQDWVQIYeLEWGJazePFb44237799 = UESxNGiigJLQDWVQIYeLEWGJazePFb55403437;     UESxNGiigJLQDWVQIYeLEWGJazePFb55403437 = UESxNGiigJLQDWVQIYeLEWGJazePFb46133648;     UESxNGiigJLQDWVQIYeLEWGJazePFb46133648 = UESxNGiigJLQDWVQIYeLEWGJazePFb2100416;     UESxNGiigJLQDWVQIYeLEWGJazePFb2100416 = UESxNGiigJLQDWVQIYeLEWGJazePFb67338758;     UESxNGiigJLQDWVQIYeLEWGJazePFb67338758 = UESxNGiigJLQDWVQIYeLEWGJazePFb39375866;     UESxNGiigJLQDWVQIYeLEWGJazePFb39375866 = UESxNGiigJLQDWVQIYeLEWGJazePFb78117237;     UESxNGiigJLQDWVQIYeLEWGJazePFb78117237 = UESxNGiigJLQDWVQIYeLEWGJazePFb90844264;     UESxNGiigJLQDWVQIYeLEWGJazePFb90844264 = UESxNGiigJLQDWVQIYeLEWGJazePFb76784450;     UESxNGiigJLQDWVQIYeLEWGJazePFb76784450 = UESxNGiigJLQDWVQIYeLEWGJazePFb86862175;     UESxNGiigJLQDWVQIYeLEWGJazePFb86862175 = UESxNGiigJLQDWVQIYeLEWGJazePFb90975774;     UESxNGiigJLQDWVQIYeLEWGJazePFb90975774 = UESxNGiigJLQDWVQIYeLEWGJazePFb73379608;     UESxNGiigJLQDWVQIYeLEWGJazePFb73379608 = UESxNGiigJLQDWVQIYeLEWGJazePFb67905038;     UESxNGiigJLQDWVQIYeLEWGJazePFb67905038 = UESxNGiigJLQDWVQIYeLEWGJazePFb17842658;     UESxNGiigJLQDWVQIYeLEWGJazePFb17842658 = UESxNGiigJLQDWVQIYeLEWGJazePFb34427466;     UESxNGiigJLQDWVQIYeLEWGJazePFb34427466 = UESxNGiigJLQDWVQIYeLEWGJazePFb98047856;     UESxNGiigJLQDWVQIYeLEWGJazePFb98047856 = UESxNGiigJLQDWVQIYeLEWGJazePFb26724931;     UESxNGiigJLQDWVQIYeLEWGJazePFb26724931 = UESxNGiigJLQDWVQIYeLEWGJazePFb12384476;     UESxNGiigJLQDWVQIYeLEWGJazePFb12384476 = UESxNGiigJLQDWVQIYeLEWGJazePFb40217636;     UESxNGiigJLQDWVQIYeLEWGJazePFb40217636 = UESxNGiigJLQDWVQIYeLEWGJazePFb52684002;     UESxNGiigJLQDWVQIYeLEWGJazePFb52684002 = UESxNGiigJLQDWVQIYeLEWGJazePFb40679788;     UESxNGiigJLQDWVQIYeLEWGJazePFb40679788 = UESxNGiigJLQDWVQIYeLEWGJazePFb90611255;     UESxNGiigJLQDWVQIYeLEWGJazePFb90611255 = UESxNGiigJLQDWVQIYeLEWGJazePFb44190028;     UESxNGiigJLQDWVQIYeLEWGJazePFb44190028 = UESxNGiigJLQDWVQIYeLEWGJazePFb5736883;     UESxNGiigJLQDWVQIYeLEWGJazePFb5736883 = UESxNGiigJLQDWVQIYeLEWGJazePFb12622325;     UESxNGiigJLQDWVQIYeLEWGJazePFb12622325 = UESxNGiigJLQDWVQIYeLEWGJazePFb62400006;     UESxNGiigJLQDWVQIYeLEWGJazePFb62400006 = UESxNGiigJLQDWVQIYeLEWGJazePFb31559867;     UESxNGiigJLQDWVQIYeLEWGJazePFb31559867 = UESxNGiigJLQDWVQIYeLEWGJazePFb66293405;     UESxNGiigJLQDWVQIYeLEWGJazePFb66293405 = UESxNGiigJLQDWVQIYeLEWGJazePFb13027818;     UESxNGiigJLQDWVQIYeLEWGJazePFb13027818 = UESxNGiigJLQDWVQIYeLEWGJazePFb41592599;     UESxNGiigJLQDWVQIYeLEWGJazePFb41592599 = UESxNGiigJLQDWVQIYeLEWGJazePFb18848095;     UESxNGiigJLQDWVQIYeLEWGJazePFb18848095 = UESxNGiigJLQDWVQIYeLEWGJazePFb97719576;     UESxNGiigJLQDWVQIYeLEWGJazePFb97719576 = UESxNGiigJLQDWVQIYeLEWGJazePFb65539837;     UESxNGiigJLQDWVQIYeLEWGJazePFb65539837 = UESxNGiigJLQDWVQIYeLEWGJazePFb26834216;     UESxNGiigJLQDWVQIYeLEWGJazePFb26834216 = UESxNGiigJLQDWVQIYeLEWGJazePFb68161496;     UESxNGiigJLQDWVQIYeLEWGJazePFb68161496 = UESxNGiigJLQDWVQIYeLEWGJazePFb40828369;     UESxNGiigJLQDWVQIYeLEWGJazePFb40828369 = UESxNGiigJLQDWVQIYeLEWGJazePFb64459144;     UESxNGiigJLQDWVQIYeLEWGJazePFb64459144 = UESxNGiigJLQDWVQIYeLEWGJazePFb40962928;     UESxNGiigJLQDWVQIYeLEWGJazePFb40962928 = UESxNGiigJLQDWVQIYeLEWGJazePFb35285231;     UESxNGiigJLQDWVQIYeLEWGJazePFb35285231 = UESxNGiigJLQDWVQIYeLEWGJazePFb21119647;     UESxNGiigJLQDWVQIYeLEWGJazePFb21119647 = UESxNGiigJLQDWVQIYeLEWGJazePFb82164347;     UESxNGiigJLQDWVQIYeLEWGJazePFb82164347 = UESxNGiigJLQDWVQIYeLEWGJazePFb26133930;     UESxNGiigJLQDWVQIYeLEWGJazePFb26133930 = UESxNGiigJLQDWVQIYeLEWGJazePFb64665287;     UESxNGiigJLQDWVQIYeLEWGJazePFb64665287 = UESxNGiigJLQDWVQIYeLEWGJazePFb84022477;     UESxNGiigJLQDWVQIYeLEWGJazePFb84022477 = UESxNGiigJLQDWVQIYeLEWGJazePFb15414956;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void bLUjnSNZhZyXMGLmtPRszUHbi41245786() {     double BrhZmWprlVGgIscURkODNgtXwMfSZT66579038 = -372275115;    double BrhZmWprlVGgIscURkODNgtXwMfSZT7665395 = -300801357;    double BrhZmWprlVGgIscURkODNgtXwMfSZT37549682 = -143664822;    double BrhZmWprlVGgIscURkODNgtXwMfSZT60307772 = -587760079;    double BrhZmWprlVGgIscURkODNgtXwMfSZT49512762 = -330082779;    double BrhZmWprlVGgIscURkODNgtXwMfSZT4502958 = -194220157;    double BrhZmWprlVGgIscURkODNgtXwMfSZT90460736 = -353712061;    double BrhZmWprlVGgIscURkODNgtXwMfSZT90083055 = -233187665;    double BrhZmWprlVGgIscURkODNgtXwMfSZT9425476 = -825420521;    double BrhZmWprlVGgIscURkODNgtXwMfSZT17818878 = -54691589;    double BrhZmWprlVGgIscURkODNgtXwMfSZT79114587 = -292478809;    double BrhZmWprlVGgIscURkODNgtXwMfSZT93901216 = 66995807;    double BrhZmWprlVGgIscURkODNgtXwMfSZT90366855 = -426807704;    double BrhZmWprlVGgIscURkODNgtXwMfSZT89459880 = -849837219;    double BrhZmWprlVGgIscURkODNgtXwMfSZT87951838 = -855545775;    double BrhZmWprlVGgIscURkODNgtXwMfSZT20665905 = 49147667;    double BrhZmWprlVGgIscURkODNgtXwMfSZT64089640 = -110278165;    double BrhZmWprlVGgIscURkODNgtXwMfSZT35020616 = -99564194;    double BrhZmWprlVGgIscURkODNgtXwMfSZT58366176 = -127949073;    double BrhZmWprlVGgIscURkODNgtXwMfSZT95109845 = -73792837;    double BrhZmWprlVGgIscURkODNgtXwMfSZT94653541 = -885711042;    double BrhZmWprlVGgIscURkODNgtXwMfSZT38960462 = -223639569;    double BrhZmWprlVGgIscURkODNgtXwMfSZT76466984 = -360904571;    double BrhZmWprlVGgIscURkODNgtXwMfSZT62152875 = -146839431;    double BrhZmWprlVGgIscURkODNgtXwMfSZT75899372 = -15193369;    double BrhZmWprlVGgIscURkODNgtXwMfSZT75440585 = -107516943;    double BrhZmWprlVGgIscURkODNgtXwMfSZT3337614 = -62950145;    double BrhZmWprlVGgIscURkODNgtXwMfSZT35096971 = -24909415;    double BrhZmWprlVGgIscURkODNgtXwMfSZT41164390 = -170566321;    double BrhZmWprlVGgIscURkODNgtXwMfSZT67917313 = -283172613;    double BrhZmWprlVGgIscURkODNgtXwMfSZT83584097 = -168671095;    double BrhZmWprlVGgIscURkODNgtXwMfSZT2368421 = -679408991;    double BrhZmWprlVGgIscURkODNgtXwMfSZT45824980 = -712180839;    double BrhZmWprlVGgIscURkODNgtXwMfSZT39429758 = -327128625;    double BrhZmWprlVGgIscURkODNgtXwMfSZT69759203 = -849395273;    double BrhZmWprlVGgIscURkODNgtXwMfSZT64811186 = 71141072;    double BrhZmWprlVGgIscURkODNgtXwMfSZT7463945 = -692664061;    double BrhZmWprlVGgIscURkODNgtXwMfSZT31655845 = -592960337;    double BrhZmWprlVGgIscURkODNgtXwMfSZT60224097 = -932247715;    double BrhZmWprlVGgIscURkODNgtXwMfSZT92064229 = -21240990;    double BrhZmWprlVGgIscURkODNgtXwMfSZT42653742 = 4087485;    double BrhZmWprlVGgIscURkODNgtXwMfSZT33998426 = 63106538;    double BrhZmWprlVGgIscURkODNgtXwMfSZT75661993 = -322101311;    double BrhZmWprlVGgIscURkODNgtXwMfSZT42268194 = -924095765;    double BrhZmWprlVGgIscURkODNgtXwMfSZT38864458 = -143974306;    double BrhZmWprlVGgIscURkODNgtXwMfSZT5142136 = -597255268;    double BrhZmWprlVGgIscURkODNgtXwMfSZT14500611 = -120453790;    double BrhZmWprlVGgIscURkODNgtXwMfSZT97549330 = -630440885;    double BrhZmWprlVGgIscURkODNgtXwMfSZT60617008 = -196783105;    double BrhZmWprlVGgIscURkODNgtXwMfSZT74103526 = 50740071;    double BrhZmWprlVGgIscURkODNgtXwMfSZT5686509 = -929532092;    double BrhZmWprlVGgIscURkODNgtXwMfSZT33549968 = -964558437;    double BrhZmWprlVGgIscURkODNgtXwMfSZT36012160 = -396358785;    double BrhZmWprlVGgIscURkODNgtXwMfSZT68326965 = -737839624;    double BrhZmWprlVGgIscURkODNgtXwMfSZT46592244 = -430987752;    double BrhZmWprlVGgIscURkODNgtXwMfSZT27618577 = -48635546;    double BrhZmWprlVGgIscURkODNgtXwMfSZT31198410 = -939896786;    double BrhZmWprlVGgIscURkODNgtXwMfSZT75396807 = -996825392;    double BrhZmWprlVGgIscURkODNgtXwMfSZT84408399 = -472566710;    double BrhZmWprlVGgIscURkODNgtXwMfSZT74072176 = -122565837;    double BrhZmWprlVGgIscURkODNgtXwMfSZT1165345 = -31270012;    double BrhZmWprlVGgIscURkODNgtXwMfSZT55363766 = -228802647;    double BrhZmWprlVGgIscURkODNgtXwMfSZT48918665 = 37378656;    double BrhZmWprlVGgIscURkODNgtXwMfSZT41508162 = -442247909;    double BrhZmWprlVGgIscURkODNgtXwMfSZT34234781 = -886020494;    double BrhZmWprlVGgIscURkODNgtXwMfSZT76746166 = -613069818;    double BrhZmWprlVGgIscURkODNgtXwMfSZT48076236 = -220823355;    double BrhZmWprlVGgIscURkODNgtXwMfSZT50937098 = 320920;    double BrhZmWprlVGgIscURkODNgtXwMfSZT19700678 = 99558053;    double BrhZmWprlVGgIscURkODNgtXwMfSZT23140652 = -826686847;    double BrhZmWprlVGgIscURkODNgtXwMfSZT13201961 = -258188272;    double BrhZmWprlVGgIscURkODNgtXwMfSZT32433796 = -517317828;    double BrhZmWprlVGgIscURkODNgtXwMfSZT74796519 = -167316479;    double BrhZmWprlVGgIscURkODNgtXwMfSZT66301947 = -6708083;    double BrhZmWprlVGgIscURkODNgtXwMfSZT52456103 = 22119677;    double BrhZmWprlVGgIscURkODNgtXwMfSZT60655116 = -848817580;    double BrhZmWprlVGgIscURkODNgtXwMfSZT63298468 = -901538258;    double BrhZmWprlVGgIscURkODNgtXwMfSZT34198791 = -436808806;    double BrhZmWprlVGgIscURkODNgtXwMfSZT23288417 = 97134874;    double BrhZmWprlVGgIscURkODNgtXwMfSZT70757237 = -417938102;    double BrhZmWprlVGgIscURkODNgtXwMfSZT60939974 = -987063154;    double BrhZmWprlVGgIscURkODNgtXwMfSZT5788284 = -432509261;    double BrhZmWprlVGgIscURkODNgtXwMfSZT74479962 = -828126310;    double BrhZmWprlVGgIscURkODNgtXwMfSZT67060864 = -121306393;    double BrhZmWprlVGgIscURkODNgtXwMfSZT62230805 = -353640521;    double BrhZmWprlVGgIscURkODNgtXwMfSZT50034130 = -204112658;    double BrhZmWprlVGgIscURkODNgtXwMfSZT66356261 = -183050207;    double BrhZmWprlVGgIscURkODNgtXwMfSZT77498015 = -974341215;    double BrhZmWprlVGgIscURkODNgtXwMfSZT92837513 = -896140873;    double BrhZmWprlVGgIscURkODNgtXwMfSZT42140626 = -700759727;    double BrhZmWprlVGgIscURkODNgtXwMfSZT33612776 = 11037858;    double BrhZmWprlVGgIscURkODNgtXwMfSZT32067137 = -695838670;    double BrhZmWprlVGgIscURkODNgtXwMfSZT47247445 = -20393628;    double BrhZmWprlVGgIscURkODNgtXwMfSZT86151920 = -709681879;    double BrhZmWprlVGgIscURkODNgtXwMfSZT90898885 = -989970979;    double BrhZmWprlVGgIscURkODNgtXwMfSZT87289976 = -767109868;    double BrhZmWprlVGgIscURkODNgtXwMfSZT85079761 = -974272118;    double BrhZmWprlVGgIscURkODNgtXwMfSZT34153831 = -879853403;    double BrhZmWprlVGgIscURkODNgtXwMfSZT8033413 = 61924729;    double BrhZmWprlVGgIscURkODNgtXwMfSZT62118291 = -372275115;     BrhZmWprlVGgIscURkODNgtXwMfSZT66579038 = BrhZmWprlVGgIscURkODNgtXwMfSZT7665395;     BrhZmWprlVGgIscURkODNgtXwMfSZT7665395 = BrhZmWprlVGgIscURkODNgtXwMfSZT37549682;     BrhZmWprlVGgIscURkODNgtXwMfSZT37549682 = BrhZmWprlVGgIscURkODNgtXwMfSZT60307772;     BrhZmWprlVGgIscURkODNgtXwMfSZT60307772 = BrhZmWprlVGgIscURkODNgtXwMfSZT49512762;     BrhZmWprlVGgIscURkODNgtXwMfSZT49512762 = BrhZmWprlVGgIscURkODNgtXwMfSZT4502958;     BrhZmWprlVGgIscURkODNgtXwMfSZT4502958 = BrhZmWprlVGgIscURkODNgtXwMfSZT90460736;     BrhZmWprlVGgIscURkODNgtXwMfSZT90460736 = BrhZmWprlVGgIscURkODNgtXwMfSZT90083055;     BrhZmWprlVGgIscURkODNgtXwMfSZT90083055 = BrhZmWprlVGgIscURkODNgtXwMfSZT9425476;     BrhZmWprlVGgIscURkODNgtXwMfSZT9425476 = BrhZmWprlVGgIscURkODNgtXwMfSZT17818878;     BrhZmWprlVGgIscURkODNgtXwMfSZT17818878 = BrhZmWprlVGgIscURkODNgtXwMfSZT79114587;     BrhZmWprlVGgIscURkODNgtXwMfSZT79114587 = BrhZmWprlVGgIscURkODNgtXwMfSZT93901216;     BrhZmWprlVGgIscURkODNgtXwMfSZT93901216 = BrhZmWprlVGgIscURkODNgtXwMfSZT90366855;     BrhZmWprlVGgIscURkODNgtXwMfSZT90366855 = BrhZmWprlVGgIscURkODNgtXwMfSZT89459880;     BrhZmWprlVGgIscURkODNgtXwMfSZT89459880 = BrhZmWprlVGgIscURkODNgtXwMfSZT87951838;     BrhZmWprlVGgIscURkODNgtXwMfSZT87951838 = BrhZmWprlVGgIscURkODNgtXwMfSZT20665905;     BrhZmWprlVGgIscURkODNgtXwMfSZT20665905 = BrhZmWprlVGgIscURkODNgtXwMfSZT64089640;     BrhZmWprlVGgIscURkODNgtXwMfSZT64089640 = BrhZmWprlVGgIscURkODNgtXwMfSZT35020616;     BrhZmWprlVGgIscURkODNgtXwMfSZT35020616 = BrhZmWprlVGgIscURkODNgtXwMfSZT58366176;     BrhZmWprlVGgIscURkODNgtXwMfSZT58366176 = BrhZmWprlVGgIscURkODNgtXwMfSZT95109845;     BrhZmWprlVGgIscURkODNgtXwMfSZT95109845 = BrhZmWprlVGgIscURkODNgtXwMfSZT94653541;     BrhZmWprlVGgIscURkODNgtXwMfSZT94653541 = BrhZmWprlVGgIscURkODNgtXwMfSZT38960462;     BrhZmWprlVGgIscURkODNgtXwMfSZT38960462 = BrhZmWprlVGgIscURkODNgtXwMfSZT76466984;     BrhZmWprlVGgIscURkODNgtXwMfSZT76466984 = BrhZmWprlVGgIscURkODNgtXwMfSZT62152875;     BrhZmWprlVGgIscURkODNgtXwMfSZT62152875 = BrhZmWprlVGgIscURkODNgtXwMfSZT75899372;     BrhZmWprlVGgIscURkODNgtXwMfSZT75899372 = BrhZmWprlVGgIscURkODNgtXwMfSZT75440585;     BrhZmWprlVGgIscURkODNgtXwMfSZT75440585 = BrhZmWprlVGgIscURkODNgtXwMfSZT3337614;     BrhZmWprlVGgIscURkODNgtXwMfSZT3337614 = BrhZmWprlVGgIscURkODNgtXwMfSZT35096971;     BrhZmWprlVGgIscURkODNgtXwMfSZT35096971 = BrhZmWprlVGgIscURkODNgtXwMfSZT41164390;     BrhZmWprlVGgIscURkODNgtXwMfSZT41164390 = BrhZmWprlVGgIscURkODNgtXwMfSZT67917313;     BrhZmWprlVGgIscURkODNgtXwMfSZT67917313 = BrhZmWprlVGgIscURkODNgtXwMfSZT83584097;     BrhZmWprlVGgIscURkODNgtXwMfSZT83584097 = BrhZmWprlVGgIscURkODNgtXwMfSZT2368421;     BrhZmWprlVGgIscURkODNgtXwMfSZT2368421 = BrhZmWprlVGgIscURkODNgtXwMfSZT45824980;     BrhZmWprlVGgIscURkODNgtXwMfSZT45824980 = BrhZmWprlVGgIscURkODNgtXwMfSZT39429758;     BrhZmWprlVGgIscURkODNgtXwMfSZT39429758 = BrhZmWprlVGgIscURkODNgtXwMfSZT69759203;     BrhZmWprlVGgIscURkODNgtXwMfSZT69759203 = BrhZmWprlVGgIscURkODNgtXwMfSZT64811186;     BrhZmWprlVGgIscURkODNgtXwMfSZT64811186 = BrhZmWprlVGgIscURkODNgtXwMfSZT7463945;     BrhZmWprlVGgIscURkODNgtXwMfSZT7463945 = BrhZmWprlVGgIscURkODNgtXwMfSZT31655845;     BrhZmWprlVGgIscURkODNgtXwMfSZT31655845 = BrhZmWprlVGgIscURkODNgtXwMfSZT60224097;     BrhZmWprlVGgIscURkODNgtXwMfSZT60224097 = BrhZmWprlVGgIscURkODNgtXwMfSZT92064229;     BrhZmWprlVGgIscURkODNgtXwMfSZT92064229 = BrhZmWprlVGgIscURkODNgtXwMfSZT42653742;     BrhZmWprlVGgIscURkODNgtXwMfSZT42653742 = BrhZmWprlVGgIscURkODNgtXwMfSZT33998426;     BrhZmWprlVGgIscURkODNgtXwMfSZT33998426 = BrhZmWprlVGgIscURkODNgtXwMfSZT75661993;     BrhZmWprlVGgIscURkODNgtXwMfSZT75661993 = BrhZmWprlVGgIscURkODNgtXwMfSZT42268194;     BrhZmWprlVGgIscURkODNgtXwMfSZT42268194 = BrhZmWprlVGgIscURkODNgtXwMfSZT38864458;     BrhZmWprlVGgIscURkODNgtXwMfSZT38864458 = BrhZmWprlVGgIscURkODNgtXwMfSZT5142136;     BrhZmWprlVGgIscURkODNgtXwMfSZT5142136 = BrhZmWprlVGgIscURkODNgtXwMfSZT14500611;     BrhZmWprlVGgIscURkODNgtXwMfSZT14500611 = BrhZmWprlVGgIscURkODNgtXwMfSZT97549330;     BrhZmWprlVGgIscURkODNgtXwMfSZT97549330 = BrhZmWprlVGgIscURkODNgtXwMfSZT60617008;     BrhZmWprlVGgIscURkODNgtXwMfSZT60617008 = BrhZmWprlVGgIscURkODNgtXwMfSZT74103526;     BrhZmWprlVGgIscURkODNgtXwMfSZT74103526 = BrhZmWprlVGgIscURkODNgtXwMfSZT5686509;     BrhZmWprlVGgIscURkODNgtXwMfSZT5686509 = BrhZmWprlVGgIscURkODNgtXwMfSZT33549968;     BrhZmWprlVGgIscURkODNgtXwMfSZT33549968 = BrhZmWprlVGgIscURkODNgtXwMfSZT36012160;     BrhZmWprlVGgIscURkODNgtXwMfSZT36012160 = BrhZmWprlVGgIscURkODNgtXwMfSZT68326965;     BrhZmWprlVGgIscURkODNgtXwMfSZT68326965 = BrhZmWprlVGgIscURkODNgtXwMfSZT46592244;     BrhZmWprlVGgIscURkODNgtXwMfSZT46592244 = BrhZmWprlVGgIscURkODNgtXwMfSZT27618577;     BrhZmWprlVGgIscURkODNgtXwMfSZT27618577 = BrhZmWprlVGgIscURkODNgtXwMfSZT31198410;     BrhZmWprlVGgIscURkODNgtXwMfSZT31198410 = BrhZmWprlVGgIscURkODNgtXwMfSZT75396807;     BrhZmWprlVGgIscURkODNgtXwMfSZT75396807 = BrhZmWprlVGgIscURkODNgtXwMfSZT84408399;     BrhZmWprlVGgIscURkODNgtXwMfSZT84408399 = BrhZmWprlVGgIscURkODNgtXwMfSZT74072176;     BrhZmWprlVGgIscURkODNgtXwMfSZT74072176 = BrhZmWprlVGgIscURkODNgtXwMfSZT1165345;     BrhZmWprlVGgIscURkODNgtXwMfSZT1165345 = BrhZmWprlVGgIscURkODNgtXwMfSZT55363766;     BrhZmWprlVGgIscURkODNgtXwMfSZT55363766 = BrhZmWprlVGgIscURkODNgtXwMfSZT48918665;     BrhZmWprlVGgIscURkODNgtXwMfSZT48918665 = BrhZmWprlVGgIscURkODNgtXwMfSZT41508162;     BrhZmWprlVGgIscURkODNgtXwMfSZT41508162 = BrhZmWprlVGgIscURkODNgtXwMfSZT34234781;     BrhZmWprlVGgIscURkODNgtXwMfSZT34234781 = BrhZmWprlVGgIscURkODNgtXwMfSZT76746166;     BrhZmWprlVGgIscURkODNgtXwMfSZT76746166 = BrhZmWprlVGgIscURkODNgtXwMfSZT48076236;     BrhZmWprlVGgIscURkODNgtXwMfSZT48076236 = BrhZmWprlVGgIscURkODNgtXwMfSZT50937098;     BrhZmWprlVGgIscURkODNgtXwMfSZT50937098 = BrhZmWprlVGgIscURkODNgtXwMfSZT19700678;     BrhZmWprlVGgIscURkODNgtXwMfSZT19700678 = BrhZmWprlVGgIscURkODNgtXwMfSZT23140652;     BrhZmWprlVGgIscURkODNgtXwMfSZT23140652 = BrhZmWprlVGgIscURkODNgtXwMfSZT13201961;     BrhZmWprlVGgIscURkODNgtXwMfSZT13201961 = BrhZmWprlVGgIscURkODNgtXwMfSZT32433796;     BrhZmWprlVGgIscURkODNgtXwMfSZT32433796 = BrhZmWprlVGgIscURkODNgtXwMfSZT74796519;     BrhZmWprlVGgIscURkODNgtXwMfSZT74796519 = BrhZmWprlVGgIscURkODNgtXwMfSZT66301947;     BrhZmWprlVGgIscURkODNgtXwMfSZT66301947 = BrhZmWprlVGgIscURkODNgtXwMfSZT52456103;     BrhZmWprlVGgIscURkODNgtXwMfSZT52456103 = BrhZmWprlVGgIscURkODNgtXwMfSZT60655116;     BrhZmWprlVGgIscURkODNgtXwMfSZT60655116 = BrhZmWprlVGgIscURkODNgtXwMfSZT63298468;     BrhZmWprlVGgIscURkODNgtXwMfSZT63298468 = BrhZmWprlVGgIscURkODNgtXwMfSZT34198791;     BrhZmWprlVGgIscURkODNgtXwMfSZT34198791 = BrhZmWprlVGgIscURkODNgtXwMfSZT23288417;     BrhZmWprlVGgIscURkODNgtXwMfSZT23288417 = BrhZmWprlVGgIscURkODNgtXwMfSZT70757237;     BrhZmWprlVGgIscURkODNgtXwMfSZT70757237 = BrhZmWprlVGgIscURkODNgtXwMfSZT60939974;     BrhZmWprlVGgIscURkODNgtXwMfSZT60939974 = BrhZmWprlVGgIscURkODNgtXwMfSZT5788284;     BrhZmWprlVGgIscURkODNgtXwMfSZT5788284 = BrhZmWprlVGgIscURkODNgtXwMfSZT74479962;     BrhZmWprlVGgIscURkODNgtXwMfSZT74479962 = BrhZmWprlVGgIscURkODNgtXwMfSZT67060864;     BrhZmWprlVGgIscURkODNgtXwMfSZT67060864 = BrhZmWprlVGgIscURkODNgtXwMfSZT62230805;     BrhZmWprlVGgIscURkODNgtXwMfSZT62230805 = BrhZmWprlVGgIscURkODNgtXwMfSZT50034130;     BrhZmWprlVGgIscURkODNgtXwMfSZT50034130 = BrhZmWprlVGgIscURkODNgtXwMfSZT66356261;     BrhZmWprlVGgIscURkODNgtXwMfSZT66356261 = BrhZmWprlVGgIscURkODNgtXwMfSZT77498015;     BrhZmWprlVGgIscURkODNgtXwMfSZT77498015 = BrhZmWprlVGgIscURkODNgtXwMfSZT92837513;     BrhZmWprlVGgIscURkODNgtXwMfSZT92837513 = BrhZmWprlVGgIscURkODNgtXwMfSZT42140626;     BrhZmWprlVGgIscURkODNgtXwMfSZT42140626 = BrhZmWprlVGgIscURkODNgtXwMfSZT33612776;     BrhZmWprlVGgIscURkODNgtXwMfSZT33612776 = BrhZmWprlVGgIscURkODNgtXwMfSZT32067137;     BrhZmWprlVGgIscURkODNgtXwMfSZT32067137 = BrhZmWprlVGgIscURkODNgtXwMfSZT47247445;     BrhZmWprlVGgIscURkODNgtXwMfSZT47247445 = BrhZmWprlVGgIscURkODNgtXwMfSZT86151920;     BrhZmWprlVGgIscURkODNgtXwMfSZT86151920 = BrhZmWprlVGgIscURkODNgtXwMfSZT90898885;     BrhZmWprlVGgIscURkODNgtXwMfSZT90898885 = BrhZmWprlVGgIscURkODNgtXwMfSZT87289976;     BrhZmWprlVGgIscURkODNgtXwMfSZT87289976 = BrhZmWprlVGgIscURkODNgtXwMfSZT85079761;     BrhZmWprlVGgIscURkODNgtXwMfSZT85079761 = BrhZmWprlVGgIscURkODNgtXwMfSZT34153831;     BrhZmWprlVGgIscURkODNgtXwMfSZT34153831 = BrhZmWprlVGgIscURkODNgtXwMfSZT8033413;     BrhZmWprlVGgIscURkODNgtXwMfSZT8033413 = BrhZmWprlVGgIscURkODNgtXwMfSZT62118291;     BrhZmWprlVGgIscURkODNgtXwMfSZT62118291 = BrhZmWprlVGgIscURkODNgtXwMfSZT66579038;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void hVsAcEhGjmffYpgXbmWsKSIvM50850513() {     double daQpuotvxVpEqQyGNrHKoFlSvLapfM88401259 = -940490446;    double daQpuotvxVpEqQyGNrHKoFlSvLapfM69133198 = -683400209;    double daQpuotvxVpEqQyGNrHKoFlSvLapfM83276952 = -190882354;    double daQpuotvxVpEqQyGNrHKoFlSvLapfM91682918 = -792544254;    double daQpuotvxVpEqQyGNrHKoFlSvLapfM9647093 = -207333701;    double daQpuotvxVpEqQyGNrHKoFlSvLapfM28521274 = -205763315;    double daQpuotvxVpEqQyGNrHKoFlSvLapfM19481321 = -417030185;    double daQpuotvxVpEqQyGNrHKoFlSvLapfM76945684 = -241368513;    double daQpuotvxVpEqQyGNrHKoFlSvLapfM5949116 = -811215939;    double daQpuotvxVpEqQyGNrHKoFlSvLapfM79102104 = 75090014;    double daQpuotvxVpEqQyGNrHKoFlSvLapfM50030856 = -948236512;    double daQpuotvxVpEqQyGNrHKoFlSvLapfM10083100 = -36185800;    double daQpuotvxVpEqQyGNrHKoFlSvLapfM23355798 = -964841493;    double daQpuotvxVpEqQyGNrHKoFlSvLapfM56426348 = -599914016;    double daQpuotvxVpEqQyGNrHKoFlSvLapfM83209633 = -782387693;    double daQpuotvxVpEqQyGNrHKoFlSvLapfM68636631 = -393218874;    double daQpuotvxVpEqQyGNrHKoFlSvLapfM57538700 = -496102883;    double daQpuotvxVpEqQyGNrHKoFlSvLapfM97545918 = -21285111;    double daQpuotvxVpEqQyGNrHKoFlSvLapfM63003400 = -201084730;    double daQpuotvxVpEqQyGNrHKoFlSvLapfM76219487 = -565037893;    double daQpuotvxVpEqQyGNrHKoFlSvLapfM51807827 = -617789744;    double daQpuotvxVpEqQyGNrHKoFlSvLapfM3362440 = -294390733;    double daQpuotvxVpEqQyGNrHKoFlSvLapfM85938389 = 83068074;    double daQpuotvxVpEqQyGNrHKoFlSvLapfM99430496 = -556938296;    double daQpuotvxVpEqQyGNrHKoFlSvLapfM49830040 = 73909658;    double daQpuotvxVpEqQyGNrHKoFlSvLapfM65016439 = -434702471;    double daQpuotvxVpEqQyGNrHKoFlSvLapfM76374217 = -689754190;    double daQpuotvxVpEqQyGNrHKoFlSvLapfM70676796 = -989357648;    double daQpuotvxVpEqQyGNrHKoFlSvLapfM89061302 = -937512239;    double daQpuotvxVpEqQyGNrHKoFlSvLapfM13734392 = -659386807;    double daQpuotvxVpEqQyGNrHKoFlSvLapfM34749363 = -574398842;    double daQpuotvxVpEqQyGNrHKoFlSvLapfM21259747 = -455297822;    double daQpuotvxVpEqQyGNrHKoFlSvLapfM71144445 = -454784722;    double daQpuotvxVpEqQyGNrHKoFlSvLapfM11968875 = -2948252;    double daQpuotvxVpEqQyGNrHKoFlSvLapfM50593415 = -999213875;    double daQpuotvxVpEqQyGNrHKoFlSvLapfM34388146 = 56725092;    double daQpuotvxVpEqQyGNrHKoFlSvLapfM50546201 = -742281158;    double daQpuotvxVpEqQyGNrHKoFlSvLapfM35593707 = -74503094;    double daQpuotvxVpEqQyGNrHKoFlSvLapfM20604543 = -704652996;    double daQpuotvxVpEqQyGNrHKoFlSvLapfM4734876 = -478789991;    double daQpuotvxVpEqQyGNrHKoFlSvLapfM97029588 = -430051773;    double daQpuotvxVpEqQyGNrHKoFlSvLapfM50500597 = -724359539;    double daQpuotvxVpEqQyGNrHKoFlSvLapfM23029392 = -366068126;    double daQpuotvxVpEqQyGNrHKoFlSvLapfM90363052 = -832901934;    double daQpuotvxVpEqQyGNrHKoFlSvLapfM18780269 = -330662935;    double daQpuotvxVpEqQyGNrHKoFlSvLapfM44348614 = -300687498;    double daQpuotvxVpEqQyGNrHKoFlSvLapfM40168722 = -301461310;    double daQpuotvxVpEqQyGNrHKoFlSvLapfM79389082 = -368936874;    double daQpuotvxVpEqQyGNrHKoFlSvLapfM67681101 = -381899528;    double daQpuotvxVpEqQyGNrHKoFlSvLapfM90151002 = 71684886;    double daQpuotvxVpEqQyGNrHKoFlSvLapfM94148328 = -973421417;    double daQpuotvxVpEqQyGNrHKoFlSvLapfM29938632 = -189936518;    double daQpuotvxVpEqQyGNrHKoFlSvLapfM27235024 = -359953925;    double daQpuotvxVpEqQyGNrHKoFlSvLapfM96352086 = -928848683;    double daQpuotvxVpEqQyGNrHKoFlSvLapfM99042685 = -392109501;    double daQpuotvxVpEqQyGNrHKoFlSvLapfM85038819 = -546099714;    double daQpuotvxVpEqQyGNrHKoFlSvLapfM83194809 = -666468284;    double daQpuotvxVpEqQyGNrHKoFlSvLapfM83846455 = -633944059;    double daQpuotvxVpEqQyGNrHKoFlSvLapfM41852879 = -766453913;    double daQpuotvxVpEqQyGNrHKoFlSvLapfM44630654 = -772631230;    double daQpuotvxVpEqQyGNrHKoFlSvLapfM52147056 = -516009126;    double daQpuotvxVpEqQyGNrHKoFlSvLapfM48804525 = -427672538;    double daQpuotvxVpEqQyGNrHKoFlSvLapfM87884381 = -303856274;    double daQpuotvxVpEqQyGNrHKoFlSvLapfM92214724 = -51829133;    double daQpuotvxVpEqQyGNrHKoFlSvLapfM44352741 = -350511144;    double daQpuotvxVpEqQyGNrHKoFlSvLapfM28771110 = -392938690;    double daQpuotvxVpEqQyGNrHKoFlSvLapfM38938655 = -581401079;    double daQpuotvxVpEqQyGNrHKoFlSvLapfM11386924 = -861893241;    double daQpuotvxVpEqQyGNrHKoFlSvLapfM5832933 = -600700142;    double daQpuotvxVpEqQyGNrHKoFlSvLapfM48821487 = -739112786;    double daQpuotvxVpEqQyGNrHKoFlSvLapfM18090430 = -650937716;    double daQpuotvxVpEqQyGNrHKoFlSvLapfM21944993 = -321599789;    double daQpuotvxVpEqQyGNrHKoFlSvLapfM76941375 = -316632116;    double daQpuotvxVpEqQyGNrHKoFlSvLapfM58268525 = -722294739;    double daQpuotvxVpEqQyGNrHKoFlSvLapfM79189899 = -34986121;    double daQpuotvxVpEqQyGNrHKoFlSvLapfM1307230 = -893430206;    double daQpuotvxVpEqQyGNrHKoFlSvLapfM80333047 = -928322607;    double daQpuotvxVpEqQyGNrHKoFlSvLapfM95575336 = -84029992;    double daQpuotvxVpEqQyGNrHKoFlSvLapfM80650227 = -126275362;    double daQpuotvxVpEqQyGNrHKoFlSvLapfM5481426 = -625402844;    double daQpuotvxVpEqQyGNrHKoFlSvLapfM24847717 = -33241162;    double daQpuotvxVpEqQyGNrHKoFlSvLapfM96985135 = -220817316;    double daQpuotvxVpEqQyGNrHKoFlSvLapfM2995696 = -507458121;    double daQpuotvxVpEqQyGNrHKoFlSvLapfM98910300 = -909197126;    double daQpuotvxVpEqQyGNrHKoFlSvLapfM19586063 = -685965390;    double daQpuotvxVpEqQyGNrHKoFlSvLapfM4810732 = -284462324;    double daQpuotvxVpEqQyGNrHKoFlSvLapfM94024722 = 4656102;    double daQpuotvxVpEqQyGNrHKoFlSvLapfM74792358 = -525936039;    double daQpuotvxVpEqQyGNrHKoFlSvLapfM12926190 = -610838751;    double daQpuotvxVpEqQyGNrHKoFlSvLapfM65554596 = -353114162;    double daQpuotvxVpEqQyGNrHKoFlSvLapfM51193337 = -276806625;    double daQpuotvxVpEqQyGNrHKoFlSvLapfM66699745 = -8337100;    double daQpuotvxVpEqQyGNrHKoFlSvLapfM93740828 = -308049182;    double daQpuotvxVpEqQyGNrHKoFlSvLapfM75973889 = -932021766;    double daQpuotvxVpEqQyGNrHKoFlSvLapfM52587819 = -962780866;    double daQpuotvxVpEqQyGNrHKoFlSvLapfM48225064 = 97620765;    double daQpuotvxVpEqQyGNrHKoFlSvLapfM62616215 = -320503266;    double daQpuotvxVpEqQyGNrHKoFlSvLapfM30814668 = -214238994;    double daQpuotvxVpEqQyGNrHKoFlSvLapfM46010311 = -382390791;    double daQpuotvxVpEqQyGNrHKoFlSvLapfM90009159 = -940490446;     daQpuotvxVpEqQyGNrHKoFlSvLapfM88401259 = daQpuotvxVpEqQyGNrHKoFlSvLapfM69133198;     daQpuotvxVpEqQyGNrHKoFlSvLapfM69133198 = daQpuotvxVpEqQyGNrHKoFlSvLapfM83276952;     daQpuotvxVpEqQyGNrHKoFlSvLapfM83276952 = daQpuotvxVpEqQyGNrHKoFlSvLapfM91682918;     daQpuotvxVpEqQyGNrHKoFlSvLapfM91682918 = daQpuotvxVpEqQyGNrHKoFlSvLapfM9647093;     daQpuotvxVpEqQyGNrHKoFlSvLapfM9647093 = daQpuotvxVpEqQyGNrHKoFlSvLapfM28521274;     daQpuotvxVpEqQyGNrHKoFlSvLapfM28521274 = daQpuotvxVpEqQyGNrHKoFlSvLapfM19481321;     daQpuotvxVpEqQyGNrHKoFlSvLapfM19481321 = daQpuotvxVpEqQyGNrHKoFlSvLapfM76945684;     daQpuotvxVpEqQyGNrHKoFlSvLapfM76945684 = daQpuotvxVpEqQyGNrHKoFlSvLapfM5949116;     daQpuotvxVpEqQyGNrHKoFlSvLapfM5949116 = daQpuotvxVpEqQyGNrHKoFlSvLapfM79102104;     daQpuotvxVpEqQyGNrHKoFlSvLapfM79102104 = daQpuotvxVpEqQyGNrHKoFlSvLapfM50030856;     daQpuotvxVpEqQyGNrHKoFlSvLapfM50030856 = daQpuotvxVpEqQyGNrHKoFlSvLapfM10083100;     daQpuotvxVpEqQyGNrHKoFlSvLapfM10083100 = daQpuotvxVpEqQyGNrHKoFlSvLapfM23355798;     daQpuotvxVpEqQyGNrHKoFlSvLapfM23355798 = daQpuotvxVpEqQyGNrHKoFlSvLapfM56426348;     daQpuotvxVpEqQyGNrHKoFlSvLapfM56426348 = daQpuotvxVpEqQyGNrHKoFlSvLapfM83209633;     daQpuotvxVpEqQyGNrHKoFlSvLapfM83209633 = daQpuotvxVpEqQyGNrHKoFlSvLapfM68636631;     daQpuotvxVpEqQyGNrHKoFlSvLapfM68636631 = daQpuotvxVpEqQyGNrHKoFlSvLapfM57538700;     daQpuotvxVpEqQyGNrHKoFlSvLapfM57538700 = daQpuotvxVpEqQyGNrHKoFlSvLapfM97545918;     daQpuotvxVpEqQyGNrHKoFlSvLapfM97545918 = daQpuotvxVpEqQyGNrHKoFlSvLapfM63003400;     daQpuotvxVpEqQyGNrHKoFlSvLapfM63003400 = daQpuotvxVpEqQyGNrHKoFlSvLapfM76219487;     daQpuotvxVpEqQyGNrHKoFlSvLapfM76219487 = daQpuotvxVpEqQyGNrHKoFlSvLapfM51807827;     daQpuotvxVpEqQyGNrHKoFlSvLapfM51807827 = daQpuotvxVpEqQyGNrHKoFlSvLapfM3362440;     daQpuotvxVpEqQyGNrHKoFlSvLapfM3362440 = daQpuotvxVpEqQyGNrHKoFlSvLapfM85938389;     daQpuotvxVpEqQyGNrHKoFlSvLapfM85938389 = daQpuotvxVpEqQyGNrHKoFlSvLapfM99430496;     daQpuotvxVpEqQyGNrHKoFlSvLapfM99430496 = daQpuotvxVpEqQyGNrHKoFlSvLapfM49830040;     daQpuotvxVpEqQyGNrHKoFlSvLapfM49830040 = daQpuotvxVpEqQyGNrHKoFlSvLapfM65016439;     daQpuotvxVpEqQyGNrHKoFlSvLapfM65016439 = daQpuotvxVpEqQyGNrHKoFlSvLapfM76374217;     daQpuotvxVpEqQyGNrHKoFlSvLapfM76374217 = daQpuotvxVpEqQyGNrHKoFlSvLapfM70676796;     daQpuotvxVpEqQyGNrHKoFlSvLapfM70676796 = daQpuotvxVpEqQyGNrHKoFlSvLapfM89061302;     daQpuotvxVpEqQyGNrHKoFlSvLapfM89061302 = daQpuotvxVpEqQyGNrHKoFlSvLapfM13734392;     daQpuotvxVpEqQyGNrHKoFlSvLapfM13734392 = daQpuotvxVpEqQyGNrHKoFlSvLapfM34749363;     daQpuotvxVpEqQyGNrHKoFlSvLapfM34749363 = daQpuotvxVpEqQyGNrHKoFlSvLapfM21259747;     daQpuotvxVpEqQyGNrHKoFlSvLapfM21259747 = daQpuotvxVpEqQyGNrHKoFlSvLapfM71144445;     daQpuotvxVpEqQyGNrHKoFlSvLapfM71144445 = daQpuotvxVpEqQyGNrHKoFlSvLapfM11968875;     daQpuotvxVpEqQyGNrHKoFlSvLapfM11968875 = daQpuotvxVpEqQyGNrHKoFlSvLapfM50593415;     daQpuotvxVpEqQyGNrHKoFlSvLapfM50593415 = daQpuotvxVpEqQyGNrHKoFlSvLapfM34388146;     daQpuotvxVpEqQyGNrHKoFlSvLapfM34388146 = daQpuotvxVpEqQyGNrHKoFlSvLapfM50546201;     daQpuotvxVpEqQyGNrHKoFlSvLapfM50546201 = daQpuotvxVpEqQyGNrHKoFlSvLapfM35593707;     daQpuotvxVpEqQyGNrHKoFlSvLapfM35593707 = daQpuotvxVpEqQyGNrHKoFlSvLapfM20604543;     daQpuotvxVpEqQyGNrHKoFlSvLapfM20604543 = daQpuotvxVpEqQyGNrHKoFlSvLapfM4734876;     daQpuotvxVpEqQyGNrHKoFlSvLapfM4734876 = daQpuotvxVpEqQyGNrHKoFlSvLapfM97029588;     daQpuotvxVpEqQyGNrHKoFlSvLapfM97029588 = daQpuotvxVpEqQyGNrHKoFlSvLapfM50500597;     daQpuotvxVpEqQyGNrHKoFlSvLapfM50500597 = daQpuotvxVpEqQyGNrHKoFlSvLapfM23029392;     daQpuotvxVpEqQyGNrHKoFlSvLapfM23029392 = daQpuotvxVpEqQyGNrHKoFlSvLapfM90363052;     daQpuotvxVpEqQyGNrHKoFlSvLapfM90363052 = daQpuotvxVpEqQyGNrHKoFlSvLapfM18780269;     daQpuotvxVpEqQyGNrHKoFlSvLapfM18780269 = daQpuotvxVpEqQyGNrHKoFlSvLapfM44348614;     daQpuotvxVpEqQyGNrHKoFlSvLapfM44348614 = daQpuotvxVpEqQyGNrHKoFlSvLapfM40168722;     daQpuotvxVpEqQyGNrHKoFlSvLapfM40168722 = daQpuotvxVpEqQyGNrHKoFlSvLapfM79389082;     daQpuotvxVpEqQyGNrHKoFlSvLapfM79389082 = daQpuotvxVpEqQyGNrHKoFlSvLapfM67681101;     daQpuotvxVpEqQyGNrHKoFlSvLapfM67681101 = daQpuotvxVpEqQyGNrHKoFlSvLapfM90151002;     daQpuotvxVpEqQyGNrHKoFlSvLapfM90151002 = daQpuotvxVpEqQyGNrHKoFlSvLapfM94148328;     daQpuotvxVpEqQyGNrHKoFlSvLapfM94148328 = daQpuotvxVpEqQyGNrHKoFlSvLapfM29938632;     daQpuotvxVpEqQyGNrHKoFlSvLapfM29938632 = daQpuotvxVpEqQyGNrHKoFlSvLapfM27235024;     daQpuotvxVpEqQyGNrHKoFlSvLapfM27235024 = daQpuotvxVpEqQyGNrHKoFlSvLapfM96352086;     daQpuotvxVpEqQyGNrHKoFlSvLapfM96352086 = daQpuotvxVpEqQyGNrHKoFlSvLapfM99042685;     daQpuotvxVpEqQyGNrHKoFlSvLapfM99042685 = daQpuotvxVpEqQyGNrHKoFlSvLapfM85038819;     daQpuotvxVpEqQyGNrHKoFlSvLapfM85038819 = daQpuotvxVpEqQyGNrHKoFlSvLapfM83194809;     daQpuotvxVpEqQyGNrHKoFlSvLapfM83194809 = daQpuotvxVpEqQyGNrHKoFlSvLapfM83846455;     daQpuotvxVpEqQyGNrHKoFlSvLapfM83846455 = daQpuotvxVpEqQyGNrHKoFlSvLapfM41852879;     daQpuotvxVpEqQyGNrHKoFlSvLapfM41852879 = daQpuotvxVpEqQyGNrHKoFlSvLapfM44630654;     daQpuotvxVpEqQyGNrHKoFlSvLapfM44630654 = daQpuotvxVpEqQyGNrHKoFlSvLapfM52147056;     daQpuotvxVpEqQyGNrHKoFlSvLapfM52147056 = daQpuotvxVpEqQyGNrHKoFlSvLapfM48804525;     daQpuotvxVpEqQyGNrHKoFlSvLapfM48804525 = daQpuotvxVpEqQyGNrHKoFlSvLapfM87884381;     daQpuotvxVpEqQyGNrHKoFlSvLapfM87884381 = daQpuotvxVpEqQyGNrHKoFlSvLapfM92214724;     daQpuotvxVpEqQyGNrHKoFlSvLapfM92214724 = daQpuotvxVpEqQyGNrHKoFlSvLapfM44352741;     daQpuotvxVpEqQyGNrHKoFlSvLapfM44352741 = daQpuotvxVpEqQyGNrHKoFlSvLapfM28771110;     daQpuotvxVpEqQyGNrHKoFlSvLapfM28771110 = daQpuotvxVpEqQyGNrHKoFlSvLapfM38938655;     daQpuotvxVpEqQyGNrHKoFlSvLapfM38938655 = daQpuotvxVpEqQyGNrHKoFlSvLapfM11386924;     daQpuotvxVpEqQyGNrHKoFlSvLapfM11386924 = daQpuotvxVpEqQyGNrHKoFlSvLapfM5832933;     daQpuotvxVpEqQyGNrHKoFlSvLapfM5832933 = daQpuotvxVpEqQyGNrHKoFlSvLapfM48821487;     daQpuotvxVpEqQyGNrHKoFlSvLapfM48821487 = daQpuotvxVpEqQyGNrHKoFlSvLapfM18090430;     daQpuotvxVpEqQyGNrHKoFlSvLapfM18090430 = daQpuotvxVpEqQyGNrHKoFlSvLapfM21944993;     daQpuotvxVpEqQyGNrHKoFlSvLapfM21944993 = daQpuotvxVpEqQyGNrHKoFlSvLapfM76941375;     daQpuotvxVpEqQyGNrHKoFlSvLapfM76941375 = daQpuotvxVpEqQyGNrHKoFlSvLapfM58268525;     daQpuotvxVpEqQyGNrHKoFlSvLapfM58268525 = daQpuotvxVpEqQyGNrHKoFlSvLapfM79189899;     daQpuotvxVpEqQyGNrHKoFlSvLapfM79189899 = daQpuotvxVpEqQyGNrHKoFlSvLapfM1307230;     daQpuotvxVpEqQyGNrHKoFlSvLapfM1307230 = daQpuotvxVpEqQyGNrHKoFlSvLapfM80333047;     daQpuotvxVpEqQyGNrHKoFlSvLapfM80333047 = daQpuotvxVpEqQyGNrHKoFlSvLapfM95575336;     daQpuotvxVpEqQyGNrHKoFlSvLapfM95575336 = daQpuotvxVpEqQyGNrHKoFlSvLapfM80650227;     daQpuotvxVpEqQyGNrHKoFlSvLapfM80650227 = daQpuotvxVpEqQyGNrHKoFlSvLapfM5481426;     daQpuotvxVpEqQyGNrHKoFlSvLapfM5481426 = daQpuotvxVpEqQyGNrHKoFlSvLapfM24847717;     daQpuotvxVpEqQyGNrHKoFlSvLapfM24847717 = daQpuotvxVpEqQyGNrHKoFlSvLapfM96985135;     daQpuotvxVpEqQyGNrHKoFlSvLapfM96985135 = daQpuotvxVpEqQyGNrHKoFlSvLapfM2995696;     daQpuotvxVpEqQyGNrHKoFlSvLapfM2995696 = daQpuotvxVpEqQyGNrHKoFlSvLapfM98910300;     daQpuotvxVpEqQyGNrHKoFlSvLapfM98910300 = daQpuotvxVpEqQyGNrHKoFlSvLapfM19586063;     daQpuotvxVpEqQyGNrHKoFlSvLapfM19586063 = daQpuotvxVpEqQyGNrHKoFlSvLapfM4810732;     daQpuotvxVpEqQyGNrHKoFlSvLapfM4810732 = daQpuotvxVpEqQyGNrHKoFlSvLapfM94024722;     daQpuotvxVpEqQyGNrHKoFlSvLapfM94024722 = daQpuotvxVpEqQyGNrHKoFlSvLapfM74792358;     daQpuotvxVpEqQyGNrHKoFlSvLapfM74792358 = daQpuotvxVpEqQyGNrHKoFlSvLapfM12926190;     daQpuotvxVpEqQyGNrHKoFlSvLapfM12926190 = daQpuotvxVpEqQyGNrHKoFlSvLapfM65554596;     daQpuotvxVpEqQyGNrHKoFlSvLapfM65554596 = daQpuotvxVpEqQyGNrHKoFlSvLapfM51193337;     daQpuotvxVpEqQyGNrHKoFlSvLapfM51193337 = daQpuotvxVpEqQyGNrHKoFlSvLapfM66699745;     daQpuotvxVpEqQyGNrHKoFlSvLapfM66699745 = daQpuotvxVpEqQyGNrHKoFlSvLapfM93740828;     daQpuotvxVpEqQyGNrHKoFlSvLapfM93740828 = daQpuotvxVpEqQyGNrHKoFlSvLapfM75973889;     daQpuotvxVpEqQyGNrHKoFlSvLapfM75973889 = daQpuotvxVpEqQyGNrHKoFlSvLapfM52587819;     daQpuotvxVpEqQyGNrHKoFlSvLapfM52587819 = daQpuotvxVpEqQyGNrHKoFlSvLapfM48225064;     daQpuotvxVpEqQyGNrHKoFlSvLapfM48225064 = daQpuotvxVpEqQyGNrHKoFlSvLapfM62616215;     daQpuotvxVpEqQyGNrHKoFlSvLapfM62616215 = daQpuotvxVpEqQyGNrHKoFlSvLapfM30814668;     daQpuotvxVpEqQyGNrHKoFlSvLapfM30814668 = daQpuotvxVpEqQyGNrHKoFlSvLapfM46010311;     daQpuotvxVpEqQyGNrHKoFlSvLapfM46010311 = daQpuotvxVpEqQyGNrHKoFlSvLapfM90009159;     daQpuotvxVpEqQyGNrHKoFlSvLapfM90009159 = daQpuotvxVpEqQyGNrHKoFlSvLapfM88401259;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void bKnbWNawiiIZtgdVHgMdVglYB12697771() {     double IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS39565342 = -763080789;    double IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS499802 = -136950888;    double IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS50348516 = -852934040;    double IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS68206638 = -627730871;    double IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS57171204 = -769533597;    double IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS97345258 = -215158133;    double IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS98670345 = -186109066;    double IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS76179983 = -706909588;    double IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS39347865 = -417310098;    double IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS14058383 = -230839904;    double IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS99018569 = -428564357;    double IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS95010088 = -659081976;    double IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS8370268 = -514996698;    double IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS93390001 = -894115655;    double IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS40919519 = -522192461;    double IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS58643264 = -498397479;    double IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS12987692 = -792357041;    double IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS62778260 = -350911455;    double IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS6361113 = -185014711;    double IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS70616184 = -25941096;    double IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS33495782 = -151655680;    double IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS84664919 = -543848475;    double IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS30344381 = -464073979;    double IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS46508690 = -155556778;    double IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS88079007 = -587776480;    double IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS40568789 = -571809483;    double IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS11371618 = -122180172;    double IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS33877922 = -957649101;    double IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS17494175 = -956170255;    double IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS96469242 = -152637304;    double IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS12255311 = -518786138;    double IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS80363468 = -294711251;    double IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS98970971 = -452371212;    double IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS19425855 = 8080073;    double IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS35761430 = -461399622;    double IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS86800036 = 41769914;    double IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS61778339 = -702958425;    double IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS56656760 = -867195424;    double IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS37765297 = -134011056;    double IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS94175115 = 71837684;    double IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS79187818 = -568116051;    double IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS24217438 = -836228630;    double IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS81713191 = -982411143;    double IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS91181508 = -226697576;    double IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS86760073 = -681964571;    double IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS17577227 = -57827244;    double IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS67403423 = -847679653;    double IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS70998205 = -264063923;    double IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS87962130 = -145015842;    double IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS17816416 = -311386307;    double IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS27680193 = 50706371;    double IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS99003048 = -928240625;    double IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS38830579 = -287805030;    double IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS44400175 = -990896098;    double IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS79201989 = 810386;    double IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS54900423 = -119232314;    double IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS70155420 = -672876910;    double IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS3839826 = -597377263;    double IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS80127630 = 60045608;    double IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS16602415 = -97724115;    double IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS85973641 = 7022038;    double IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS64792424 = -228459965;    double IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS58685808 = -750739334;    double IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS42878622 = -164672795;    double IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS1803072 = -712053766;    double IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS18655101 = -33853106;    double IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS96039116 = -106710765;    double IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS88944413 = -423076771;    double IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS57628572 = -332716033;    double IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS54119482 = -463962376;    double IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS96864924 = -795439054;    double IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS56330932 = -925161618;    double IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS25012964 = -116900399;    double IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS12185997 = -156852396;    double IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS91428366 = -457825045;    double IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS9278344 = -315427051;    double IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS2951729 = -561437333;    double IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS39162873 = -137376404;    double IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS59748616 = -473592207;    double IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS70501781 = -429949236;    double IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS73165366 = -724129830;    double IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS40373412 = -858116249;    double IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS45915792 = -712633260;    double IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS99677758 = -544783949;    double IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS68789050 = -103343676;    double IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS13252263 = -590545513;    double IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS41532889 = 93093779;    double IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS54570796 = -461475114;    double IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS40223866 = -992730314;    double IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS80861006 = -242167309;    double IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS16644617 = -285353176;    double IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS57938514 = -5581163;    double IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS76529129 = -827241032;    double IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS21162882 = 63713058;    double IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS8201475 = -935184354;    double IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS14395394 = -239656086;    double IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS65531629 = 14510704;    double IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS38834569 = -717738349;    double IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS89378437 = -514643810;    double IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS68104973 = -763080789;     IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS39565342 = IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS499802;     IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS499802 = IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS50348516;     IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS50348516 = IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS68206638;     IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS68206638 = IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS57171204;     IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS57171204 = IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS97345258;     IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS97345258 = IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS98670345;     IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS98670345 = IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS76179983;     IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS76179983 = IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS39347865;     IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS39347865 = IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS14058383;     IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS14058383 = IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS99018569;     IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS99018569 = IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS95010088;     IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS95010088 = IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS8370268;     IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS8370268 = IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS93390001;     IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS93390001 = IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS40919519;     IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS40919519 = IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS58643264;     IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS58643264 = IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS12987692;     IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS12987692 = IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS62778260;     IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS62778260 = IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS6361113;     IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS6361113 = IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS70616184;     IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS70616184 = IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS33495782;     IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS33495782 = IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS84664919;     IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS84664919 = IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS30344381;     IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS30344381 = IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS46508690;     IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS46508690 = IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS88079007;     IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS88079007 = IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS40568789;     IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS40568789 = IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS11371618;     IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS11371618 = IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS33877922;     IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS33877922 = IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS17494175;     IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS17494175 = IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS96469242;     IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS96469242 = IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS12255311;     IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS12255311 = IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS80363468;     IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS80363468 = IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS98970971;     IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS98970971 = IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS19425855;     IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS19425855 = IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS35761430;     IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS35761430 = IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS86800036;     IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS86800036 = IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS61778339;     IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS61778339 = IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS56656760;     IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS56656760 = IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS37765297;     IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS37765297 = IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS94175115;     IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS94175115 = IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS79187818;     IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS79187818 = IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS24217438;     IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS24217438 = IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS81713191;     IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS81713191 = IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS91181508;     IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS91181508 = IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS86760073;     IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS86760073 = IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS17577227;     IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS17577227 = IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS67403423;     IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS67403423 = IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS70998205;     IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS70998205 = IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS87962130;     IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS87962130 = IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS17816416;     IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS17816416 = IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS27680193;     IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS27680193 = IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS99003048;     IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS99003048 = IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS38830579;     IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS38830579 = IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS44400175;     IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS44400175 = IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS79201989;     IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS79201989 = IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS54900423;     IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS54900423 = IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS70155420;     IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS70155420 = IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS3839826;     IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS3839826 = IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS80127630;     IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS80127630 = IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS16602415;     IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS16602415 = IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS85973641;     IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS85973641 = IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS64792424;     IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS64792424 = IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS58685808;     IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS58685808 = IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS42878622;     IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS42878622 = IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS1803072;     IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS1803072 = IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS18655101;     IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS18655101 = IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS96039116;     IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS96039116 = IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS88944413;     IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS88944413 = IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS57628572;     IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS57628572 = IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS54119482;     IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS54119482 = IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS96864924;     IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS96864924 = IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS56330932;     IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS56330932 = IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS25012964;     IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS25012964 = IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS12185997;     IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS12185997 = IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS91428366;     IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS91428366 = IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS9278344;     IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS9278344 = IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS2951729;     IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS2951729 = IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS39162873;     IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS39162873 = IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS59748616;     IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS59748616 = IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS70501781;     IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS70501781 = IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS73165366;     IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS73165366 = IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS40373412;     IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS40373412 = IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS45915792;     IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS45915792 = IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS99677758;     IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS99677758 = IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS68789050;     IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS68789050 = IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS13252263;     IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS13252263 = IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS41532889;     IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS41532889 = IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS54570796;     IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS54570796 = IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS40223866;     IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS40223866 = IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS80861006;     IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS80861006 = IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS16644617;     IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS16644617 = IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS57938514;     IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS57938514 = IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS76529129;     IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS76529129 = IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS21162882;     IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS21162882 = IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS8201475;     IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS8201475 = IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS14395394;     IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS14395394 = IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS65531629;     IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS65531629 = IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS38834569;     IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS38834569 = IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS89378437;     IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS89378437 = IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS68104973;     IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS68104973 = IKqZLrOJnyWRVjRyZvbWaSXUBXlqeS39565342;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void ifyGtbDimyvWcxXwTccdWmpTY22302498() {     double NsUCgjOETpIesqqMFcqbQBmuxpUxoO61387563 = -231296121;    double NsUCgjOETpIesqqMFcqbQBmuxpUxoO61967605 = -519549741;    double NsUCgjOETpIesqqMFcqbQBmuxpUxoO96075786 = -900151572;    double NsUCgjOETpIesqqMFcqbQBmuxpUxoO99581784 = -832515047;    double NsUCgjOETpIesqqMFcqbQBmuxpUxoO17305536 = -646784519;    double NsUCgjOETpIesqqMFcqbQBmuxpUxoO21363575 = -226701291;    double NsUCgjOETpIesqqMFcqbQBmuxpUxoO27690931 = -249427190;    double NsUCgjOETpIesqqMFcqbQBmuxpUxoO63042612 = -715090436;    double NsUCgjOETpIesqqMFcqbQBmuxpUxoO35871505 = -403105516;    double NsUCgjOETpIesqqMFcqbQBmuxpUxoO75341608 = -101058301;    double NsUCgjOETpIesqqMFcqbQBmuxpUxoO69934837 = 15677940;    double NsUCgjOETpIesqqMFcqbQBmuxpUxoO11191972 = -762263582;    double NsUCgjOETpIesqqMFcqbQBmuxpUxoO41359210 = 46969513;    double NsUCgjOETpIesqqMFcqbQBmuxpUxoO60356469 = -644192452;    double NsUCgjOETpIesqqMFcqbQBmuxpUxoO36177314 = -449034380;    double NsUCgjOETpIesqqMFcqbQBmuxpUxoO6613990 = -940764020;    double NsUCgjOETpIesqqMFcqbQBmuxpUxoO6436752 = -78181759;    double NsUCgjOETpIesqqMFcqbQBmuxpUxoO25303563 = -272632372;    double NsUCgjOETpIesqqMFcqbQBmuxpUxoO10998336 = -258150368;    double NsUCgjOETpIesqqMFcqbQBmuxpUxoO51725826 = -517186152;    double NsUCgjOETpIesqqMFcqbQBmuxpUxoO90650066 = -983734383;    double NsUCgjOETpIesqqMFcqbQBmuxpUxoO49066897 = -614599640;    double NsUCgjOETpIesqqMFcqbQBmuxpUxoO39815786 = -20101334;    double NsUCgjOETpIesqqMFcqbQBmuxpUxoO83786312 = -565655644;    double NsUCgjOETpIesqqMFcqbQBmuxpUxoO62009675 = -498673452;    double NsUCgjOETpIesqqMFcqbQBmuxpUxoO30144643 = -898995011;    double NsUCgjOETpIesqqMFcqbQBmuxpUxoO84408221 = -748984216;    double NsUCgjOETpIesqqMFcqbQBmuxpUxoO69457747 = -822097334;    double NsUCgjOETpIesqqMFcqbQBmuxpUxoO65391087 = -623116173;    double NsUCgjOETpIesqqMFcqbQBmuxpUxoO42286320 = -528851498;    double NsUCgjOETpIesqqMFcqbQBmuxpUxoO63420576 = -924513886;    double NsUCgjOETpIesqqMFcqbQBmuxpUxoO99254794 = -70600082;    double NsUCgjOETpIesqqMFcqbQBmuxpUxoO24290437 = -194975094;    double NsUCgjOETpIesqqMFcqbQBmuxpUxoO91964972 = -767739555;    double NsUCgjOETpIesqqMFcqbQBmuxpUxoO16595642 = -611218225;    double NsUCgjOETpIesqqMFcqbQBmuxpUxoO56376996 = 27353934;    double NsUCgjOETpIesqqMFcqbQBmuxpUxoO4860596 = -752575522;    double NsUCgjOETpIesqqMFcqbQBmuxpUxoO60594622 = -348738181;    double NsUCgjOETpIesqqMFcqbQBmuxpUxoO98145742 = 93583663;    double NsUCgjOETpIesqqMFcqbQBmuxpUxoO6845762 = -385711317;    double NsUCgjOETpIesqqMFcqbQBmuxpUxoO33563664 = 97744691;    double NsUCgjOETpIesqqMFcqbQBmuxpUxoO40719609 = -523694707;    double NsUCgjOETpIesqqMFcqbQBmuxpUxoO29080590 = 73622042;    double NsUCgjOETpIesqqMFcqbQBmuxpUxoO39276368 = -135503745;    double NsUCgjOETpIesqqMFcqbQBmuxpUxoO66675884 = -868653200;    double NsUCgjOETpIesqqMFcqbQBmuxpUxoO56783706 = -861259474;    double NsUCgjOETpIesqqMFcqbQBmuxpUxoO93071534 = 71312827;    double NsUCgjOETpIesqqMFcqbQBmuxpUxoO52837957 = -2559912;    double NsUCgjOETpIesqqMFcqbQBmuxpUxoO95026222 = -330132265;    double NsUCgjOETpIesqqMFcqbQBmuxpUxoO33863892 = -290441491;    double NsUCgjOETpIesqqMFcqbQBmuxpUxoO16142012 = 6817045;    double NsUCgjOETpIesqqMFcqbQBmuxpUxoO95391712 = -153618706;    double NsUCgjOETpIesqqMFcqbQBmuxpUxoO30053444 = -251400170;    double NsUCgjOETpIesqqMFcqbQBmuxpUxoO72425297 = -81905157;    double NsUCgjOETpIesqqMFcqbQBmuxpUxoO31652431 = 39688637;    double NsUCgjOETpIesqqMFcqbQBmuxpUxoO12320666 = -616696482;    double NsUCgjOETpIesqqMFcqbQBmuxpUxoO22151820 = -399448408;    double NsUCgjOETpIesqqMFcqbQBmuxpUxoO12289474 = -234495929;    double NsUCgjOETpIesqqMFcqbQBmuxpUxoO37572110 = -233841595;    double NsUCgjOETpIesqqMFcqbQBmuxpUxoO87160892 = -747789508;    double NsUCgjOETpIesqqMFcqbQBmuxpUxoO36955354 = -477717075;    double NsUCgjOETpIesqqMFcqbQBmuxpUxoO58233183 = -427329856;    double NsUCgjOETpIesqqMFcqbQBmuxpUxoO97651524 = 8025736;    double NsUCgjOETpIesqqMFcqbQBmuxpUxoO93585184 = -874254018;    double NsUCgjOETpIesqqMFcqbQBmuxpUxoO11921032 = -176544416;    double NsUCgjOETpIesqqMFcqbQBmuxpUxoO70680043 = -913721978;    double NsUCgjOETpIesqqMFcqbQBmuxpUxoO86901535 = -467288488;    double NsUCgjOETpIesqqMFcqbQBmuxpUxoO49394238 = -185290933;    double NsUCgjOETpIesqqMFcqbQBmuxpUxoO43760827 = 67025772;    double NsUCgjOETpIesqqMFcqbQBmuxpUxoO79800317 = -376388315;    double NsUCgjOETpIesqqMFcqbQBmuxpUxoO1753394 = -88188498;    double NsUCgjOETpIesqqMFcqbQBmuxpUxoO45842129 = -729443578;    double NsUCgjOETpIesqqMFcqbQBmuxpUxoO27157820 = -266216036;    double NsUCgjOETpIesqqMFcqbQBmuxpUxoO4152575 = -872439052;    double NsUCgjOETpIesqqMFcqbQBmuxpUxoO18162163 = -514930843;    double NsUCgjOETpIesqqMFcqbQBmuxpUxoO49930458 = -360039676;    double NsUCgjOETpIesqqMFcqbQBmuxpUxoO19986308 = -588221682;    double NsUCgjOETpIesqqMFcqbQBmuxpUxoO539419 = -884597590;    double NsUCgjOETpIesqqMFcqbQBmuxpUxoO17110428 = -697002444;    double NsUCgjOETpIesqqMFcqbQBmuxpUxoO5225969 = -637413978;    double NsUCgjOETpIesqqMFcqbQBmuxpUxoO37073109 = -870307838;    double NsUCgjOETpIesqqMFcqbQBmuxpUxoO31570264 = -646424305;    double NsUCgjOETpIesqqMFcqbQBmuxpUxoO74431525 = -391965070;    double NsUCgjOETpIesqqMFcqbQBmuxpUxoO31527195 = -232674682;    double NsUCgjOETpIesqqMFcqbQBmuxpUxoO26144309 = -435668544;    double NsUCgjOETpIesqqMFcqbQBmuxpUxoO68028864 = -670895180;    double NsUCgjOETpIesqqMFcqbQBmuxpUxoO69201350 = -819199913;    double NsUCgjOETpIesqqMFcqbQBmuxpUxoO51865139 = -13069938;    double NsUCgjOETpIesqqMFcqbQBmuxpUxoO60312541 = -707428193;    double NsUCgjOETpIesqqMFcqbQBmuxpUxoO4274977 = -994521744;    double NsUCgjOETpIesqqMFcqbQBmuxpUxoO34225177 = -573197659;    double NsUCgjOETpIesqqMFcqbQBmuxpUxoO92571121 = -418079593;    double NsUCgjOETpIesqqMFcqbQBmuxpUxoO23022513 = -14896586;    double NsUCgjOETpIesqqMFcqbQBmuxpUxoO10984851 = -158626829;    double NsUCgjOETpIesqqMFcqbQBmuxpUxoO69890408 = -907994242;    double NsUCgjOETpIesqqMFcqbQBmuxpUxoO75330480 = -474925453;    double NsUCgjOETpIesqqMFcqbQBmuxpUxoO43068084 = -431720444;    double NsUCgjOETpIesqqMFcqbQBmuxpUxoO35495406 = -52123940;    double NsUCgjOETpIesqqMFcqbQBmuxpUxoO27355336 = -958959329;    double NsUCgjOETpIesqqMFcqbQBmuxpUxoO95995841 = -231296121;     NsUCgjOETpIesqqMFcqbQBmuxpUxoO61387563 = NsUCgjOETpIesqqMFcqbQBmuxpUxoO61967605;     NsUCgjOETpIesqqMFcqbQBmuxpUxoO61967605 = NsUCgjOETpIesqqMFcqbQBmuxpUxoO96075786;     NsUCgjOETpIesqqMFcqbQBmuxpUxoO96075786 = NsUCgjOETpIesqqMFcqbQBmuxpUxoO99581784;     NsUCgjOETpIesqqMFcqbQBmuxpUxoO99581784 = NsUCgjOETpIesqqMFcqbQBmuxpUxoO17305536;     NsUCgjOETpIesqqMFcqbQBmuxpUxoO17305536 = NsUCgjOETpIesqqMFcqbQBmuxpUxoO21363575;     NsUCgjOETpIesqqMFcqbQBmuxpUxoO21363575 = NsUCgjOETpIesqqMFcqbQBmuxpUxoO27690931;     NsUCgjOETpIesqqMFcqbQBmuxpUxoO27690931 = NsUCgjOETpIesqqMFcqbQBmuxpUxoO63042612;     NsUCgjOETpIesqqMFcqbQBmuxpUxoO63042612 = NsUCgjOETpIesqqMFcqbQBmuxpUxoO35871505;     NsUCgjOETpIesqqMFcqbQBmuxpUxoO35871505 = NsUCgjOETpIesqqMFcqbQBmuxpUxoO75341608;     NsUCgjOETpIesqqMFcqbQBmuxpUxoO75341608 = NsUCgjOETpIesqqMFcqbQBmuxpUxoO69934837;     NsUCgjOETpIesqqMFcqbQBmuxpUxoO69934837 = NsUCgjOETpIesqqMFcqbQBmuxpUxoO11191972;     NsUCgjOETpIesqqMFcqbQBmuxpUxoO11191972 = NsUCgjOETpIesqqMFcqbQBmuxpUxoO41359210;     NsUCgjOETpIesqqMFcqbQBmuxpUxoO41359210 = NsUCgjOETpIesqqMFcqbQBmuxpUxoO60356469;     NsUCgjOETpIesqqMFcqbQBmuxpUxoO60356469 = NsUCgjOETpIesqqMFcqbQBmuxpUxoO36177314;     NsUCgjOETpIesqqMFcqbQBmuxpUxoO36177314 = NsUCgjOETpIesqqMFcqbQBmuxpUxoO6613990;     NsUCgjOETpIesqqMFcqbQBmuxpUxoO6613990 = NsUCgjOETpIesqqMFcqbQBmuxpUxoO6436752;     NsUCgjOETpIesqqMFcqbQBmuxpUxoO6436752 = NsUCgjOETpIesqqMFcqbQBmuxpUxoO25303563;     NsUCgjOETpIesqqMFcqbQBmuxpUxoO25303563 = NsUCgjOETpIesqqMFcqbQBmuxpUxoO10998336;     NsUCgjOETpIesqqMFcqbQBmuxpUxoO10998336 = NsUCgjOETpIesqqMFcqbQBmuxpUxoO51725826;     NsUCgjOETpIesqqMFcqbQBmuxpUxoO51725826 = NsUCgjOETpIesqqMFcqbQBmuxpUxoO90650066;     NsUCgjOETpIesqqMFcqbQBmuxpUxoO90650066 = NsUCgjOETpIesqqMFcqbQBmuxpUxoO49066897;     NsUCgjOETpIesqqMFcqbQBmuxpUxoO49066897 = NsUCgjOETpIesqqMFcqbQBmuxpUxoO39815786;     NsUCgjOETpIesqqMFcqbQBmuxpUxoO39815786 = NsUCgjOETpIesqqMFcqbQBmuxpUxoO83786312;     NsUCgjOETpIesqqMFcqbQBmuxpUxoO83786312 = NsUCgjOETpIesqqMFcqbQBmuxpUxoO62009675;     NsUCgjOETpIesqqMFcqbQBmuxpUxoO62009675 = NsUCgjOETpIesqqMFcqbQBmuxpUxoO30144643;     NsUCgjOETpIesqqMFcqbQBmuxpUxoO30144643 = NsUCgjOETpIesqqMFcqbQBmuxpUxoO84408221;     NsUCgjOETpIesqqMFcqbQBmuxpUxoO84408221 = NsUCgjOETpIesqqMFcqbQBmuxpUxoO69457747;     NsUCgjOETpIesqqMFcqbQBmuxpUxoO69457747 = NsUCgjOETpIesqqMFcqbQBmuxpUxoO65391087;     NsUCgjOETpIesqqMFcqbQBmuxpUxoO65391087 = NsUCgjOETpIesqqMFcqbQBmuxpUxoO42286320;     NsUCgjOETpIesqqMFcqbQBmuxpUxoO42286320 = NsUCgjOETpIesqqMFcqbQBmuxpUxoO63420576;     NsUCgjOETpIesqqMFcqbQBmuxpUxoO63420576 = NsUCgjOETpIesqqMFcqbQBmuxpUxoO99254794;     NsUCgjOETpIesqqMFcqbQBmuxpUxoO99254794 = NsUCgjOETpIesqqMFcqbQBmuxpUxoO24290437;     NsUCgjOETpIesqqMFcqbQBmuxpUxoO24290437 = NsUCgjOETpIesqqMFcqbQBmuxpUxoO91964972;     NsUCgjOETpIesqqMFcqbQBmuxpUxoO91964972 = NsUCgjOETpIesqqMFcqbQBmuxpUxoO16595642;     NsUCgjOETpIesqqMFcqbQBmuxpUxoO16595642 = NsUCgjOETpIesqqMFcqbQBmuxpUxoO56376996;     NsUCgjOETpIesqqMFcqbQBmuxpUxoO56376996 = NsUCgjOETpIesqqMFcqbQBmuxpUxoO4860596;     NsUCgjOETpIesqqMFcqbQBmuxpUxoO4860596 = NsUCgjOETpIesqqMFcqbQBmuxpUxoO60594622;     NsUCgjOETpIesqqMFcqbQBmuxpUxoO60594622 = NsUCgjOETpIesqqMFcqbQBmuxpUxoO98145742;     NsUCgjOETpIesqqMFcqbQBmuxpUxoO98145742 = NsUCgjOETpIesqqMFcqbQBmuxpUxoO6845762;     NsUCgjOETpIesqqMFcqbQBmuxpUxoO6845762 = NsUCgjOETpIesqqMFcqbQBmuxpUxoO33563664;     NsUCgjOETpIesqqMFcqbQBmuxpUxoO33563664 = NsUCgjOETpIesqqMFcqbQBmuxpUxoO40719609;     NsUCgjOETpIesqqMFcqbQBmuxpUxoO40719609 = NsUCgjOETpIesqqMFcqbQBmuxpUxoO29080590;     NsUCgjOETpIesqqMFcqbQBmuxpUxoO29080590 = NsUCgjOETpIesqqMFcqbQBmuxpUxoO39276368;     NsUCgjOETpIesqqMFcqbQBmuxpUxoO39276368 = NsUCgjOETpIesqqMFcqbQBmuxpUxoO66675884;     NsUCgjOETpIesqqMFcqbQBmuxpUxoO66675884 = NsUCgjOETpIesqqMFcqbQBmuxpUxoO56783706;     NsUCgjOETpIesqqMFcqbQBmuxpUxoO56783706 = NsUCgjOETpIesqqMFcqbQBmuxpUxoO93071534;     NsUCgjOETpIesqqMFcqbQBmuxpUxoO93071534 = NsUCgjOETpIesqqMFcqbQBmuxpUxoO52837957;     NsUCgjOETpIesqqMFcqbQBmuxpUxoO52837957 = NsUCgjOETpIesqqMFcqbQBmuxpUxoO95026222;     NsUCgjOETpIesqqMFcqbQBmuxpUxoO95026222 = NsUCgjOETpIesqqMFcqbQBmuxpUxoO33863892;     NsUCgjOETpIesqqMFcqbQBmuxpUxoO33863892 = NsUCgjOETpIesqqMFcqbQBmuxpUxoO16142012;     NsUCgjOETpIesqqMFcqbQBmuxpUxoO16142012 = NsUCgjOETpIesqqMFcqbQBmuxpUxoO95391712;     NsUCgjOETpIesqqMFcqbQBmuxpUxoO95391712 = NsUCgjOETpIesqqMFcqbQBmuxpUxoO30053444;     NsUCgjOETpIesqqMFcqbQBmuxpUxoO30053444 = NsUCgjOETpIesqqMFcqbQBmuxpUxoO72425297;     NsUCgjOETpIesqqMFcqbQBmuxpUxoO72425297 = NsUCgjOETpIesqqMFcqbQBmuxpUxoO31652431;     NsUCgjOETpIesqqMFcqbQBmuxpUxoO31652431 = NsUCgjOETpIesqqMFcqbQBmuxpUxoO12320666;     NsUCgjOETpIesqqMFcqbQBmuxpUxoO12320666 = NsUCgjOETpIesqqMFcqbQBmuxpUxoO22151820;     NsUCgjOETpIesqqMFcqbQBmuxpUxoO22151820 = NsUCgjOETpIesqqMFcqbQBmuxpUxoO12289474;     NsUCgjOETpIesqqMFcqbQBmuxpUxoO12289474 = NsUCgjOETpIesqqMFcqbQBmuxpUxoO37572110;     NsUCgjOETpIesqqMFcqbQBmuxpUxoO37572110 = NsUCgjOETpIesqqMFcqbQBmuxpUxoO87160892;     NsUCgjOETpIesqqMFcqbQBmuxpUxoO87160892 = NsUCgjOETpIesqqMFcqbQBmuxpUxoO36955354;     NsUCgjOETpIesqqMFcqbQBmuxpUxoO36955354 = NsUCgjOETpIesqqMFcqbQBmuxpUxoO58233183;     NsUCgjOETpIesqqMFcqbQBmuxpUxoO58233183 = NsUCgjOETpIesqqMFcqbQBmuxpUxoO97651524;     NsUCgjOETpIesqqMFcqbQBmuxpUxoO97651524 = NsUCgjOETpIesqqMFcqbQBmuxpUxoO93585184;     NsUCgjOETpIesqqMFcqbQBmuxpUxoO93585184 = NsUCgjOETpIesqqMFcqbQBmuxpUxoO11921032;     NsUCgjOETpIesqqMFcqbQBmuxpUxoO11921032 = NsUCgjOETpIesqqMFcqbQBmuxpUxoO70680043;     NsUCgjOETpIesqqMFcqbQBmuxpUxoO70680043 = NsUCgjOETpIesqqMFcqbQBmuxpUxoO86901535;     NsUCgjOETpIesqqMFcqbQBmuxpUxoO86901535 = NsUCgjOETpIesqqMFcqbQBmuxpUxoO49394238;     NsUCgjOETpIesqqMFcqbQBmuxpUxoO49394238 = NsUCgjOETpIesqqMFcqbQBmuxpUxoO43760827;     NsUCgjOETpIesqqMFcqbQBmuxpUxoO43760827 = NsUCgjOETpIesqqMFcqbQBmuxpUxoO79800317;     NsUCgjOETpIesqqMFcqbQBmuxpUxoO79800317 = NsUCgjOETpIesqqMFcqbQBmuxpUxoO1753394;     NsUCgjOETpIesqqMFcqbQBmuxpUxoO1753394 = NsUCgjOETpIesqqMFcqbQBmuxpUxoO45842129;     NsUCgjOETpIesqqMFcqbQBmuxpUxoO45842129 = NsUCgjOETpIesqqMFcqbQBmuxpUxoO27157820;     NsUCgjOETpIesqqMFcqbQBmuxpUxoO27157820 = NsUCgjOETpIesqqMFcqbQBmuxpUxoO4152575;     NsUCgjOETpIesqqMFcqbQBmuxpUxoO4152575 = NsUCgjOETpIesqqMFcqbQBmuxpUxoO18162163;     NsUCgjOETpIesqqMFcqbQBmuxpUxoO18162163 = NsUCgjOETpIesqqMFcqbQBmuxpUxoO49930458;     NsUCgjOETpIesqqMFcqbQBmuxpUxoO49930458 = NsUCgjOETpIesqqMFcqbQBmuxpUxoO19986308;     NsUCgjOETpIesqqMFcqbQBmuxpUxoO19986308 = NsUCgjOETpIesqqMFcqbQBmuxpUxoO539419;     NsUCgjOETpIesqqMFcqbQBmuxpUxoO539419 = NsUCgjOETpIesqqMFcqbQBmuxpUxoO17110428;     NsUCgjOETpIesqqMFcqbQBmuxpUxoO17110428 = NsUCgjOETpIesqqMFcqbQBmuxpUxoO5225969;     NsUCgjOETpIesqqMFcqbQBmuxpUxoO5225969 = NsUCgjOETpIesqqMFcqbQBmuxpUxoO37073109;     NsUCgjOETpIesqqMFcqbQBmuxpUxoO37073109 = NsUCgjOETpIesqqMFcqbQBmuxpUxoO31570264;     NsUCgjOETpIesqqMFcqbQBmuxpUxoO31570264 = NsUCgjOETpIesqqMFcqbQBmuxpUxoO74431525;     NsUCgjOETpIesqqMFcqbQBmuxpUxoO74431525 = NsUCgjOETpIesqqMFcqbQBmuxpUxoO31527195;     NsUCgjOETpIesqqMFcqbQBmuxpUxoO31527195 = NsUCgjOETpIesqqMFcqbQBmuxpUxoO26144309;     NsUCgjOETpIesqqMFcqbQBmuxpUxoO26144309 = NsUCgjOETpIesqqMFcqbQBmuxpUxoO68028864;     NsUCgjOETpIesqqMFcqbQBmuxpUxoO68028864 = NsUCgjOETpIesqqMFcqbQBmuxpUxoO69201350;     NsUCgjOETpIesqqMFcqbQBmuxpUxoO69201350 = NsUCgjOETpIesqqMFcqbQBmuxpUxoO51865139;     NsUCgjOETpIesqqMFcqbQBmuxpUxoO51865139 = NsUCgjOETpIesqqMFcqbQBmuxpUxoO60312541;     NsUCgjOETpIesqqMFcqbQBmuxpUxoO60312541 = NsUCgjOETpIesqqMFcqbQBmuxpUxoO4274977;     NsUCgjOETpIesqqMFcqbQBmuxpUxoO4274977 = NsUCgjOETpIesqqMFcqbQBmuxpUxoO34225177;     NsUCgjOETpIesqqMFcqbQBmuxpUxoO34225177 = NsUCgjOETpIesqqMFcqbQBmuxpUxoO92571121;     NsUCgjOETpIesqqMFcqbQBmuxpUxoO92571121 = NsUCgjOETpIesqqMFcqbQBmuxpUxoO23022513;     NsUCgjOETpIesqqMFcqbQBmuxpUxoO23022513 = NsUCgjOETpIesqqMFcqbQBmuxpUxoO10984851;     NsUCgjOETpIesqqMFcqbQBmuxpUxoO10984851 = NsUCgjOETpIesqqMFcqbQBmuxpUxoO69890408;     NsUCgjOETpIesqqMFcqbQBmuxpUxoO69890408 = NsUCgjOETpIesqqMFcqbQBmuxpUxoO75330480;     NsUCgjOETpIesqqMFcqbQBmuxpUxoO75330480 = NsUCgjOETpIesqqMFcqbQBmuxpUxoO43068084;     NsUCgjOETpIesqqMFcqbQBmuxpUxoO43068084 = NsUCgjOETpIesqqMFcqbQBmuxpUxoO35495406;     NsUCgjOETpIesqqMFcqbQBmuxpUxoO35495406 = NsUCgjOETpIesqqMFcqbQBmuxpUxoO27355336;     NsUCgjOETpIesqqMFcqbQBmuxpUxoO27355336 = NsUCgjOETpIesqqMFcqbQBmuxpUxoO95995841;     NsUCgjOETpIesqqMFcqbQBmuxpUxoO95995841 = NsUCgjOETpIesqqMFcqbQBmuxpUxoO61387563;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void cJLLBzXpWWdKUuZfLxScqOigX84149755() {     double bhigptegqKgtWhgMyEPXobfAjCZved12551646 = -53886463;    double bhigptegqKgtWhgMyEPXobfAjCZved93334208 = 26899580;    double bhigptegqKgtWhgMyEPXobfAjCZved63147349 = -462203258;    double bhigptegqKgtWhgMyEPXobfAjCZved76105504 = -667701664;    double bhigptegqKgtWhgMyEPXobfAjCZved64829647 = -108984414;    double bhigptegqKgtWhgMyEPXobfAjCZved90187560 = -236096110;    double bhigptegqKgtWhgMyEPXobfAjCZved6879956 = -18506071;    double bhigptegqKgtWhgMyEPXobfAjCZved62276911 = -80631512;    double bhigptegqKgtWhgMyEPXobfAjCZved69270254 = -9199676;    double bhigptegqKgtWhgMyEPXobfAjCZved10297887 = -406988219;    double bhigptegqKgtWhgMyEPXobfAjCZved18922551 = -564649905;    double bhigptegqKgtWhgMyEPXobfAjCZved96118960 = -285159758;    double bhigptegqKgtWhgMyEPXobfAjCZved26373680 = -603185692;    double bhigptegqKgtWhgMyEPXobfAjCZved97320123 = -938394091;    double bhigptegqKgtWhgMyEPXobfAjCZved93887199 = -188839147;    double bhigptegqKgtWhgMyEPXobfAjCZved96620622 = 54057375;    double bhigptegqKgtWhgMyEPXobfAjCZved61885743 = -374435917;    double bhigptegqKgtWhgMyEPXobfAjCZved90535904 = -602258716;    double bhigptegqKgtWhgMyEPXobfAjCZved54356048 = -242080349;    double bhigptegqKgtWhgMyEPXobfAjCZved46122523 = 21910646;    double bhigptegqKgtWhgMyEPXobfAjCZved72338021 = -517600319;    double bhigptegqKgtWhgMyEPXobfAjCZved30369377 = -864057382;    double bhigptegqKgtWhgMyEPXobfAjCZved84221778 = -567243386;    double bhigptegqKgtWhgMyEPXobfAjCZved30864505 = -164274126;    double bhigptegqKgtWhgMyEPXobfAjCZved258643 = -60359590;    double bhigptegqKgtWhgMyEPXobfAjCZved5696994 = 63897978;    double bhigptegqKgtWhgMyEPXobfAjCZved19405621 = -181410198;    double bhigptegqKgtWhgMyEPXobfAjCZved32658873 = -790388788;    double bhigptegqKgtWhgMyEPXobfAjCZved93823958 = -641774189;    double bhigptegqKgtWhgMyEPXobfAjCZved25021172 = -22101996;    double bhigptegqKgtWhgMyEPXobfAjCZved40926524 = -868901182;    double bhigptegqKgtWhgMyEPXobfAjCZved58358517 = 89986489;    double bhigptegqKgtWhgMyEPXobfAjCZved52116963 = -192561584;    double bhigptegqKgtWhgMyEPXobfAjCZved99421951 = -756711230;    double bhigptegqKgtWhgMyEPXobfAjCZved1763657 = -73403972;    double bhigptegqKgtWhgMyEPXobfAjCZved8788887 = 12398756;    double bhigptegqKgtWhgMyEPXobfAjCZved16092735 = -713252789;    double bhigptegqKgtWhgMyEPXobfAjCZved81657675 = -41430511;    double bhigptegqKgtWhgMyEPXobfAjCZved15306497 = -435774397;    double bhigptegqKgtWhgMyEPXobfAjCZved96286002 = -935083641;    double bhigptegqKgtWhgMyEPXobfAjCZved15721894 = -40319587;    double bhigptegqKgtWhgMyEPXobfAjCZved14436450 = -635563798;    double bhigptegqKgtWhgMyEPXobfAjCZved87764388 = -542720975;    double bhigptegqKgtWhgMyEPXobfAjCZved40094824 = -629299386;    double bhigptegqKgtWhgMyEPXobfAjCZved34655689 = -119954837;    double bhigptegqKgtWhgMyEPXobfAjCZved30012319 = -618399220;    double bhigptegqKgtWhgMyEPXobfAjCZved20306236 = -474905516;    double bhigptegqKgtWhgMyEPXobfAjCZved44447080 = -997686961;    double bhigptegqKgtWhgMyEPXobfAjCZved15307252 = -93248579;    double bhigptegqKgtWhgMyEPXobfAjCZved61529305 = -673512684;    double bhigptegqKgtWhgMyEPXobfAjCZved49673877 = -69055167;    double bhigptegqKgtWhgMyEPXobfAjCZved64456129 = -891922813;    double bhigptegqKgtWhgMyEPXobfAjCZved41648999 = -179251276;    double bhigptegqKgtWhgMyEPXobfAjCZved20473386 = -143952571;    double bhigptegqKgtWhgMyEPXobfAjCZved11811734 = -667391475;    double bhigptegqKgtWhgMyEPXobfAjCZved82182269 = -189829082;    double bhigptegqKgtWhgMyEPXobfAjCZved9112431 = -405857034;    double bhigptegqKgtWhgMyEPXobfAjCZved32282844 = -197929133;    double bhigptegqKgtWhgMyEPXobfAjCZved75846861 = -507342074;    double bhigptegqKgtWhgMyEPXobfAjCZved59132654 = -72882393;    double bhigptegqKgtWhgMyEPXobfAjCZved70781939 = 45314088;    double bhigptegqKgtWhgMyEPXobfAjCZved74221082 = -228117283;    double bhigptegqKgtWhgMyEPXobfAjCZved68452952 = -438857324;    double bhigptegqKgtWhgMyEPXobfAjCZved44249082 = -987097680;    double bhigptegqKgtWhgMyEPXobfAjCZved69371363 = -538087038;    double bhigptegqKgtWhgMyEPXobfAjCZved60564034 = -554636394;    double bhigptegqKgtWhgMyEPXobfAjCZved44001997 = 7401826;    double bhigptegqKgtWhgMyEPXobfAjCZved26951728 = -846474462;    double bhigptegqKgtWhgMyEPXobfAjCZved95556466 = -764990119;    double bhigptegqKgtWhgMyEPXobfAjCZved85098312 = -101237904;    double bhigptegqKgtWhgMyEPXobfAjCZved80527888 = -232689836;    double bhigptegqKgtWhgMyEPXobfAjCZved80228068 = -233005407;    double bhigptegqKgtWhgMyEPXobfAjCZved75229408 = -66484319;    double bhigptegqKgtWhgMyEPXobfAjCZved58070046 = -306996709;    double bhigptegqKgtWhgMyEPXobfAjCZved30400629 = -937769768;    double bhigptegqKgtWhgMyEPXobfAjCZved57901572 = -882036522;    double bhigptegqKgtWhgMyEPXobfAjCZved42604988 = -221336407;    double bhigptegqKgtWhgMyEPXobfAjCZved44126954 = -937944001;    double bhigptegqKgtWhgMyEPXobfAjCZved96208816 = 55680711;    double bhigptegqKgtWhgMyEPXobfAjCZved70246324 = -441960370;    double bhigptegqKgtWhgMyEPXobfAjCZved85390758 = -461196507;    double bhigptegqKgtWhgMyEPXobfAjCZved74958541 = -183723238;    double bhigptegqKgtWhgMyEPXobfAjCZved17351621 = -597140209;    double bhigptegqKgtWhgMyEPXobfAjCZved32294654 = -968261505;    double bhigptegqKgtWhgMyEPXobfAjCZved75347295 = -953046830;    double bhigptegqKgtWhgMyEPXobfAjCZved76470395 = -976978369;    double bhigptegqKgtWhgMyEPXobfAjCZved16709518 = -730762236;    double bhigptegqKgtWhgMyEPXobfAjCZved31643577 = 51390986;    double bhigptegqKgtWhgMyEPXobfAjCZved87610217 = 10680244;    double bhigptegqKgtWhgMyEPXobfAjCZved19581388 = -883574891;    double bhigptegqKgtWhgMyEPXobfAjCZved99676456 = -581744210;    double bhigptegqKgtWhgMyEPXobfAjCZved83809890 = -415323657;    double bhigptegqKgtWhgMyEPXobfAjCZved5810814 = -534088437;    double bhigptegqKgtWhgMyEPXobfAjCZved56173843 = -262892005;    double bhigptegqKgtWhgMyEPXobfAjCZved25504063 = -880397730;    double bhigptegqKgtWhgMyEPXobfAjCZved41500811 = -812202304;    double bhigptegqKgtWhgMyEPXobfAjCZved45983497 = -96706474;    double bhigptegqKgtWhgMyEPXobfAjCZved43515307 = -555623295;    double bhigptegqKgtWhgMyEPXobfAjCZved70723461 = 8787651;    double bhigptegqKgtWhgMyEPXobfAjCZved74091655 = -53886463;     bhigptegqKgtWhgMyEPXobfAjCZved12551646 = bhigptegqKgtWhgMyEPXobfAjCZved93334208;     bhigptegqKgtWhgMyEPXobfAjCZved93334208 = bhigptegqKgtWhgMyEPXobfAjCZved63147349;     bhigptegqKgtWhgMyEPXobfAjCZved63147349 = bhigptegqKgtWhgMyEPXobfAjCZved76105504;     bhigptegqKgtWhgMyEPXobfAjCZved76105504 = bhigptegqKgtWhgMyEPXobfAjCZved64829647;     bhigptegqKgtWhgMyEPXobfAjCZved64829647 = bhigptegqKgtWhgMyEPXobfAjCZved90187560;     bhigptegqKgtWhgMyEPXobfAjCZved90187560 = bhigptegqKgtWhgMyEPXobfAjCZved6879956;     bhigptegqKgtWhgMyEPXobfAjCZved6879956 = bhigptegqKgtWhgMyEPXobfAjCZved62276911;     bhigptegqKgtWhgMyEPXobfAjCZved62276911 = bhigptegqKgtWhgMyEPXobfAjCZved69270254;     bhigptegqKgtWhgMyEPXobfAjCZved69270254 = bhigptegqKgtWhgMyEPXobfAjCZved10297887;     bhigptegqKgtWhgMyEPXobfAjCZved10297887 = bhigptegqKgtWhgMyEPXobfAjCZved18922551;     bhigptegqKgtWhgMyEPXobfAjCZved18922551 = bhigptegqKgtWhgMyEPXobfAjCZved96118960;     bhigptegqKgtWhgMyEPXobfAjCZved96118960 = bhigptegqKgtWhgMyEPXobfAjCZved26373680;     bhigptegqKgtWhgMyEPXobfAjCZved26373680 = bhigptegqKgtWhgMyEPXobfAjCZved97320123;     bhigptegqKgtWhgMyEPXobfAjCZved97320123 = bhigptegqKgtWhgMyEPXobfAjCZved93887199;     bhigptegqKgtWhgMyEPXobfAjCZved93887199 = bhigptegqKgtWhgMyEPXobfAjCZved96620622;     bhigptegqKgtWhgMyEPXobfAjCZved96620622 = bhigptegqKgtWhgMyEPXobfAjCZved61885743;     bhigptegqKgtWhgMyEPXobfAjCZved61885743 = bhigptegqKgtWhgMyEPXobfAjCZved90535904;     bhigptegqKgtWhgMyEPXobfAjCZved90535904 = bhigptegqKgtWhgMyEPXobfAjCZved54356048;     bhigptegqKgtWhgMyEPXobfAjCZved54356048 = bhigptegqKgtWhgMyEPXobfAjCZved46122523;     bhigptegqKgtWhgMyEPXobfAjCZved46122523 = bhigptegqKgtWhgMyEPXobfAjCZved72338021;     bhigptegqKgtWhgMyEPXobfAjCZved72338021 = bhigptegqKgtWhgMyEPXobfAjCZved30369377;     bhigptegqKgtWhgMyEPXobfAjCZved30369377 = bhigptegqKgtWhgMyEPXobfAjCZved84221778;     bhigptegqKgtWhgMyEPXobfAjCZved84221778 = bhigptegqKgtWhgMyEPXobfAjCZved30864505;     bhigptegqKgtWhgMyEPXobfAjCZved30864505 = bhigptegqKgtWhgMyEPXobfAjCZved258643;     bhigptegqKgtWhgMyEPXobfAjCZved258643 = bhigptegqKgtWhgMyEPXobfAjCZved5696994;     bhigptegqKgtWhgMyEPXobfAjCZved5696994 = bhigptegqKgtWhgMyEPXobfAjCZved19405621;     bhigptegqKgtWhgMyEPXobfAjCZved19405621 = bhigptegqKgtWhgMyEPXobfAjCZved32658873;     bhigptegqKgtWhgMyEPXobfAjCZved32658873 = bhigptegqKgtWhgMyEPXobfAjCZved93823958;     bhigptegqKgtWhgMyEPXobfAjCZved93823958 = bhigptegqKgtWhgMyEPXobfAjCZved25021172;     bhigptegqKgtWhgMyEPXobfAjCZved25021172 = bhigptegqKgtWhgMyEPXobfAjCZved40926524;     bhigptegqKgtWhgMyEPXobfAjCZved40926524 = bhigptegqKgtWhgMyEPXobfAjCZved58358517;     bhigptegqKgtWhgMyEPXobfAjCZved58358517 = bhigptegqKgtWhgMyEPXobfAjCZved52116963;     bhigptegqKgtWhgMyEPXobfAjCZved52116963 = bhigptegqKgtWhgMyEPXobfAjCZved99421951;     bhigptegqKgtWhgMyEPXobfAjCZved99421951 = bhigptegqKgtWhgMyEPXobfAjCZved1763657;     bhigptegqKgtWhgMyEPXobfAjCZved1763657 = bhigptegqKgtWhgMyEPXobfAjCZved8788887;     bhigptegqKgtWhgMyEPXobfAjCZved8788887 = bhigptegqKgtWhgMyEPXobfAjCZved16092735;     bhigptegqKgtWhgMyEPXobfAjCZved16092735 = bhigptegqKgtWhgMyEPXobfAjCZved81657675;     bhigptegqKgtWhgMyEPXobfAjCZved81657675 = bhigptegqKgtWhgMyEPXobfAjCZved15306497;     bhigptegqKgtWhgMyEPXobfAjCZved15306497 = bhigptegqKgtWhgMyEPXobfAjCZved96286002;     bhigptegqKgtWhgMyEPXobfAjCZved96286002 = bhigptegqKgtWhgMyEPXobfAjCZved15721894;     bhigptegqKgtWhgMyEPXobfAjCZved15721894 = bhigptegqKgtWhgMyEPXobfAjCZved14436450;     bhigptegqKgtWhgMyEPXobfAjCZved14436450 = bhigptegqKgtWhgMyEPXobfAjCZved87764388;     bhigptegqKgtWhgMyEPXobfAjCZved87764388 = bhigptegqKgtWhgMyEPXobfAjCZved40094824;     bhigptegqKgtWhgMyEPXobfAjCZved40094824 = bhigptegqKgtWhgMyEPXobfAjCZved34655689;     bhigptegqKgtWhgMyEPXobfAjCZved34655689 = bhigptegqKgtWhgMyEPXobfAjCZved30012319;     bhigptegqKgtWhgMyEPXobfAjCZved30012319 = bhigptegqKgtWhgMyEPXobfAjCZved20306236;     bhigptegqKgtWhgMyEPXobfAjCZved20306236 = bhigptegqKgtWhgMyEPXobfAjCZved44447080;     bhigptegqKgtWhgMyEPXobfAjCZved44447080 = bhigptegqKgtWhgMyEPXobfAjCZved15307252;     bhigptegqKgtWhgMyEPXobfAjCZved15307252 = bhigptegqKgtWhgMyEPXobfAjCZved61529305;     bhigptegqKgtWhgMyEPXobfAjCZved61529305 = bhigptegqKgtWhgMyEPXobfAjCZved49673877;     bhigptegqKgtWhgMyEPXobfAjCZved49673877 = bhigptegqKgtWhgMyEPXobfAjCZved64456129;     bhigptegqKgtWhgMyEPXobfAjCZved64456129 = bhigptegqKgtWhgMyEPXobfAjCZved41648999;     bhigptegqKgtWhgMyEPXobfAjCZved41648999 = bhigptegqKgtWhgMyEPXobfAjCZved20473386;     bhigptegqKgtWhgMyEPXobfAjCZved20473386 = bhigptegqKgtWhgMyEPXobfAjCZved11811734;     bhigptegqKgtWhgMyEPXobfAjCZved11811734 = bhigptegqKgtWhgMyEPXobfAjCZved82182269;     bhigptegqKgtWhgMyEPXobfAjCZved82182269 = bhigptegqKgtWhgMyEPXobfAjCZved9112431;     bhigptegqKgtWhgMyEPXobfAjCZved9112431 = bhigptegqKgtWhgMyEPXobfAjCZved32282844;     bhigptegqKgtWhgMyEPXobfAjCZved32282844 = bhigptegqKgtWhgMyEPXobfAjCZved75846861;     bhigptegqKgtWhgMyEPXobfAjCZved75846861 = bhigptegqKgtWhgMyEPXobfAjCZved59132654;     bhigptegqKgtWhgMyEPXobfAjCZved59132654 = bhigptegqKgtWhgMyEPXobfAjCZved70781939;     bhigptegqKgtWhgMyEPXobfAjCZved70781939 = bhigptegqKgtWhgMyEPXobfAjCZved74221082;     bhigptegqKgtWhgMyEPXobfAjCZved74221082 = bhigptegqKgtWhgMyEPXobfAjCZved68452952;     bhigptegqKgtWhgMyEPXobfAjCZved68452952 = bhigptegqKgtWhgMyEPXobfAjCZved44249082;     bhigptegqKgtWhgMyEPXobfAjCZved44249082 = bhigptegqKgtWhgMyEPXobfAjCZved69371363;     bhigptegqKgtWhgMyEPXobfAjCZved69371363 = bhigptegqKgtWhgMyEPXobfAjCZved60564034;     bhigptegqKgtWhgMyEPXobfAjCZved60564034 = bhigptegqKgtWhgMyEPXobfAjCZved44001997;     bhigptegqKgtWhgMyEPXobfAjCZved44001997 = bhigptegqKgtWhgMyEPXobfAjCZved26951728;     bhigptegqKgtWhgMyEPXobfAjCZved26951728 = bhigptegqKgtWhgMyEPXobfAjCZved95556466;     bhigptegqKgtWhgMyEPXobfAjCZved95556466 = bhigptegqKgtWhgMyEPXobfAjCZved85098312;     bhigptegqKgtWhgMyEPXobfAjCZved85098312 = bhigptegqKgtWhgMyEPXobfAjCZved80527888;     bhigptegqKgtWhgMyEPXobfAjCZved80527888 = bhigptegqKgtWhgMyEPXobfAjCZved80228068;     bhigptegqKgtWhgMyEPXobfAjCZved80228068 = bhigptegqKgtWhgMyEPXobfAjCZved75229408;     bhigptegqKgtWhgMyEPXobfAjCZved75229408 = bhigptegqKgtWhgMyEPXobfAjCZved58070046;     bhigptegqKgtWhgMyEPXobfAjCZved58070046 = bhigptegqKgtWhgMyEPXobfAjCZved30400629;     bhigptegqKgtWhgMyEPXobfAjCZved30400629 = bhigptegqKgtWhgMyEPXobfAjCZved57901572;     bhigptegqKgtWhgMyEPXobfAjCZved57901572 = bhigptegqKgtWhgMyEPXobfAjCZved42604988;     bhigptegqKgtWhgMyEPXobfAjCZved42604988 = bhigptegqKgtWhgMyEPXobfAjCZved44126954;     bhigptegqKgtWhgMyEPXobfAjCZved44126954 = bhigptegqKgtWhgMyEPXobfAjCZved96208816;     bhigptegqKgtWhgMyEPXobfAjCZved96208816 = bhigptegqKgtWhgMyEPXobfAjCZved70246324;     bhigptegqKgtWhgMyEPXobfAjCZved70246324 = bhigptegqKgtWhgMyEPXobfAjCZved85390758;     bhigptegqKgtWhgMyEPXobfAjCZved85390758 = bhigptegqKgtWhgMyEPXobfAjCZved74958541;     bhigptegqKgtWhgMyEPXobfAjCZved74958541 = bhigptegqKgtWhgMyEPXobfAjCZved17351621;     bhigptegqKgtWhgMyEPXobfAjCZved17351621 = bhigptegqKgtWhgMyEPXobfAjCZved32294654;     bhigptegqKgtWhgMyEPXobfAjCZved32294654 = bhigptegqKgtWhgMyEPXobfAjCZved75347295;     bhigptegqKgtWhgMyEPXobfAjCZved75347295 = bhigptegqKgtWhgMyEPXobfAjCZved76470395;     bhigptegqKgtWhgMyEPXobfAjCZved76470395 = bhigptegqKgtWhgMyEPXobfAjCZved16709518;     bhigptegqKgtWhgMyEPXobfAjCZved16709518 = bhigptegqKgtWhgMyEPXobfAjCZved31643577;     bhigptegqKgtWhgMyEPXobfAjCZved31643577 = bhigptegqKgtWhgMyEPXobfAjCZved87610217;     bhigptegqKgtWhgMyEPXobfAjCZved87610217 = bhigptegqKgtWhgMyEPXobfAjCZved19581388;     bhigptegqKgtWhgMyEPXobfAjCZved19581388 = bhigptegqKgtWhgMyEPXobfAjCZved99676456;     bhigptegqKgtWhgMyEPXobfAjCZved99676456 = bhigptegqKgtWhgMyEPXobfAjCZved83809890;     bhigptegqKgtWhgMyEPXobfAjCZved83809890 = bhigptegqKgtWhgMyEPXobfAjCZved5810814;     bhigptegqKgtWhgMyEPXobfAjCZved5810814 = bhigptegqKgtWhgMyEPXobfAjCZved56173843;     bhigptegqKgtWhgMyEPXobfAjCZved56173843 = bhigptegqKgtWhgMyEPXobfAjCZved25504063;     bhigptegqKgtWhgMyEPXobfAjCZved25504063 = bhigptegqKgtWhgMyEPXobfAjCZved41500811;     bhigptegqKgtWhgMyEPXobfAjCZved41500811 = bhigptegqKgtWhgMyEPXobfAjCZved45983497;     bhigptegqKgtWhgMyEPXobfAjCZved45983497 = bhigptegqKgtWhgMyEPXobfAjCZved43515307;     bhigptegqKgtWhgMyEPXobfAjCZved43515307 = bhigptegqKgtWhgMyEPXobfAjCZved70723461;     bhigptegqKgtWhgMyEPXobfAjCZved70723461 = bhigptegqKgtWhgMyEPXobfAjCZved74091655;     bhigptegqKgtWhgMyEPXobfAjCZved74091655 = bhigptegqKgtWhgMyEPXobfAjCZved12551646;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void uknigyBKAUeIDZcbOAOkmcRGO93754482() {     double jwDwzgYUHuiXibQVMBNamBAJUsbGcV34373867 = -622101795;    double jwDwzgYUHuiXibQVMBNamBAJUsbGcV54802012 = -355699273;    double jwDwzgYUHuiXibQVMBNamBAJUsbGcV8874620 = -509420790;    double jwDwzgYUHuiXibQVMBNamBAJUsbGcV7480651 = -872485840;    double jwDwzgYUHuiXibQVMBNamBAJUsbGcV24963978 = 13764664;    double jwDwzgYUHuiXibQVMBNamBAJUsbGcV14205876 = -247639268;    double jwDwzgYUHuiXibQVMBNamBAJUsbGcV35900540 = -81824194;    double jwDwzgYUHuiXibQVMBNamBAJUsbGcV49139540 = -88812360;    double jwDwzgYUHuiXibQVMBNamBAJUsbGcV65793893 = 5004907;    double jwDwzgYUHuiXibQVMBNamBAJUsbGcV71581112 = -277206616;    double jwDwzgYUHuiXibQVMBNamBAJUsbGcV89838819 = -120407608;    double jwDwzgYUHuiXibQVMBNamBAJUsbGcV12300844 = -388341364;    double jwDwzgYUHuiXibQVMBNamBAJUsbGcV59362622 = -41219481;    double jwDwzgYUHuiXibQVMBNamBAJUsbGcV64286590 = -688470888;    double jwDwzgYUHuiXibQVMBNamBAJUsbGcV89144994 = -115681066;    double jwDwzgYUHuiXibQVMBNamBAJUsbGcV44591349 = -388309166;    double jwDwzgYUHuiXibQVMBNamBAJUsbGcV55334802 = -760260635;    double jwDwzgYUHuiXibQVMBNamBAJUsbGcV53061208 = -523979633;    double jwDwzgYUHuiXibQVMBNamBAJUsbGcV58993271 = -315216006;    double jwDwzgYUHuiXibQVMBNamBAJUsbGcV27232165 = -469334410;    double jwDwzgYUHuiXibQVMBNamBAJUsbGcV29492307 = -249679021;    double jwDwzgYUHuiXibQVMBNamBAJUsbGcV94771354 = -934808546;    double jwDwzgYUHuiXibQVMBNamBAJUsbGcV93693182 = -123270741;    double jwDwzgYUHuiXibQVMBNamBAJUsbGcV68142127 = -574372991;    double jwDwzgYUHuiXibQVMBNamBAJUsbGcV74189310 = 28743438;    double jwDwzgYUHuiXibQVMBNamBAJUsbGcV95272847 = -263287550;    double jwDwzgYUHuiXibQVMBNamBAJUsbGcV92442224 = -808214243;    double jwDwzgYUHuiXibQVMBNamBAJUsbGcV68238698 = -654837020;    double jwDwzgYUHuiXibQVMBNamBAJUsbGcV41720871 = -308720107;    double jwDwzgYUHuiXibQVMBNamBAJUsbGcV70838249 = -398316190;    double jwDwzgYUHuiXibQVMBNamBAJUsbGcV92091789 = -174628929;    double jwDwzgYUHuiXibQVMBNamBAJUsbGcV77249842 = -785902342;    double jwDwzgYUHuiXibQVMBNamBAJUsbGcV77436428 = 64834533;    double jwDwzgYUHuiXibQVMBNamBAJUsbGcV71961069 = -432530858;    double jwDwzgYUHuiXibQVMBNamBAJUsbGcV82597869 = -223222575;    double jwDwzgYUHuiXibQVMBNamBAJUsbGcV78365847 = -2017224;    double jwDwzgYUHuiXibQVMBNamBAJUsbGcV59174991 = -762869886;    double jwDwzgYUHuiXibQVMBNamBAJUsbGcV85595537 = -622973268;    double jwDwzgYUHuiXibQVMBNamBAJUsbGcV75686943 = -208179678;    double jwDwzgYUHuiXibQVMBNamBAJUsbGcV8956648 = -292632642;    double jwDwzgYUHuiXibQVMBNamBAJUsbGcV70097739 = -474458845;    double jwDwzgYUHuiXibQVMBNamBAJUsbGcV30938621 = -323029875;    double jwDwzgYUHuiXibQVMBNamBAJUsbGcV35131788 = -586687790;    double jwDwzgYUHuiXibQVMBNamBAJUsbGcV88189683 = -538105555;    double jwDwzgYUHuiXibQVMBNamBAJUsbGcV14571500 = -306643466;    double jwDwzgYUHuiXibQVMBNamBAJUsbGcV69218798 = -321831450;    double jwDwzgYUHuiXibQVMBNamBAJUsbGcV45974347 = -655913036;    double jwDwzgYUHuiXibQVMBNamBAJUsbGcV26286832 = -736182950;    double jwDwzgYUHuiXibQVMBNamBAJUsbGcV22371344 = -278365002;    double jwDwzgYUHuiXibQVMBNamBAJUsbGcV77576781 = -652567869;    double jwDwzgYUHuiXibQVMBNamBAJUsbGcV38135696 = -112944492;    double jwDwzgYUHuiXibQVMBNamBAJUsbGcV60844793 = -117300894;    double jwDwzgYUHuiXibQVMBNamBAJUsbGcV32871864 = -142846415;    double jwDwzgYUHuiXibQVMBNamBAJUsbGcV48498508 = -334961631;    double jwDwzgYUHuiXibQVMBNamBAJUsbGcV64262175 = -628513224;    double jwDwzgYUHuiXibQVMBNamBAJUsbGcV39602512 = -687293249;    double jwDwzgYUHuiXibQVMBNamBAJUsbGcV61108830 = -132428532;    double jwDwzgYUHuiXibQVMBNamBAJUsbGcV40732493 = -935047799;    double jwDwzgYUHuiXibQVMBNamBAJUsbGcV33291340 = -801229278;    double jwDwzgYUHuiXibQVMBNamBAJUsbGcV29691131 = -722947786;    double jwDwzgYUHuiXibQVMBNamBAJUsbGcV21763651 = -439425025;    double jwDwzgYUHuiXibQVMBNamBAJUsbGcV67661841 = -426987174;    double jwDwzgYUHuiXibQVMBNamBAJUsbGcV7418669 = -780092254;    double jwDwzgYUHuiXibQVMBNamBAJUsbGcV94955644 = -596678904;    double jwDwzgYUHuiXibQVMBNamBAJUsbGcV79489323 = -2577688;    double jwDwzgYUHuiXibQVMBNamBAJUsbGcV12588977 = -334505266;    double jwDwzgYUHuiXibQVMBNamBAJUsbGcV34864416 = -353175897;    double jwDwzgYUHuiXibQVMBNamBAJUsbGcV87401553 = -608688624;    double jwDwzgYUHuiXibQVMBNamBAJUsbGcV81688721 = -365248314;    double jwDwzgYUHuiXibQVMBNamBAJUsbGcV10779148 = -13663843;    double jwDwzgYUHuiXibQVMBNamBAJUsbGcV85416357 = -625439280;    double jwDwzgYUHuiXibQVMBNamBAJUsbGcV69739265 = -37287368;    double jwDwzgYUHuiXibQVMBNamBAJUsbGcV77374265 = -215799956;    double jwDwzgYUHuiXibQVMBNamBAJUsbGcV50036624 = 77416635;    double jwDwzgYUHuiXibQVMBNamBAJUsbGcV57134426 = -994875566;    double jwDwzgYUHuiXibQVMBNamBAJUsbGcV98553685 = -926649147;    double jwDwzgYUHuiXibQVMBNamBAJUsbGcV59639567 = -248120757;    double jwDwzgYUHuiXibQVMBNamBAJUsbGcV5503500 = -585165187;    double jwDwzgYUHuiXibQVMBNamBAJUsbGcV53570627 = -167729526;    double jwDwzgYUHuiXibQVMBNamBAJUsbGcV4970512 = -649425112;    double jwDwzgYUHuiXibQVMBNamBAJUsbGcV49298500 = -607374515;    double jwDwzgYUHuiXibQVMBNamBAJUsbGcV66155393 = 27968706;    double jwDwzgYUHuiXibQVMBNamBAJUsbGcV45867354 = -276472019;    double jwDwzgYUHuiXibQVMBNamBAJUsbGcV64144090 = -656152238;    double jwDwzgYUHuiXibQVMBNamBAJUsbGcV32702554 = -185371698;    double jwDwzgYUHuiXibQVMBNamBAJUsbGcV31246997 = 42671964;    double jwDwzgYUHuiXibQVMBNamBAJUsbGcV44377979 = -543055927;    double jwDwzgYUHuiXibQVMBNamBAJUsbGcV28937920 = -600203837;    double jwDwzgYUHuiXibQVMBNamBAJUsbGcV7698894 = -804017634;    double jwDwzgYUHuiXibQVMBNamBAJUsbGcV42995357 = -535929326;    double jwDwzgYUHuiXibQVMBNamBAJUsbGcV17257017 = -869588693;    double jwDwzgYUHuiXibQVMBNamBAJUsbGcV18442499 = -827822087;    double jwDwzgYUHuiXibQVMBNamBAJUsbGcV52304197 = -821743991;    double jwDwzgYUHuiXibQVMBNamBAJUsbGcV45995812 = -485231892;    double jwDwzgYUHuiXibQVMBNamBAJUsbGcV87192997 = -853207617;    double jwDwzgYUHuiXibQVMBNamBAJUsbGcV2435898 = 52528329;    double jwDwzgYUHuiXibQVMBNamBAJUsbGcV23519952 = -542937622;    double jwDwzgYUHuiXibQVMBNamBAJUsbGcV40176144 = -990008886;    double jwDwzgYUHuiXibQVMBNamBAJUsbGcV8700360 = -435527868;    double jwDwzgYUHuiXibQVMBNamBAJUsbGcV1982524 = -622101795;     jwDwzgYUHuiXibQVMBNamBAJUsbGcV34373867 = jwDwzgYUHuiXibQVMBNamBAJUsbGcV54802012;     jwDwzgYUHuiXibQVMBNamBAJUsbGcV54802012 = jwDwzgYUHuiXibQVMBNamBAJUsbGcV8874620;     jwDwzgYUHuiXibQVMBNamBAJUsbGcV8874620 = jwDwzgYUHuiXibQVMBNamBAJUsbGcV7480651;     jwDwzgYUHuiXibQVMBNamBAJUsbGcV7480651 = jwDwzgYUHuiXibQVMBNamBAJUsbGcV24963978;     jwDwzgYUHuiXibQVMBNamBAJUsbGcV24963978 = jwDwzgYUHuiXibQVMBNamBAJUsbGcV14205876;     jwDwzgYUHuiXibQVMBNamBAJUsbGcV14205876 = jwDwzgYUHuiXibQVMBNamBAJUsbGcV35900540;     jwDwzgYUHuiXibQVMBNamBAJUsbGcV35900540 = jwDwzgYUHuiXibQVMBNamBAJUsbGcV49139540;     jwDwzgYUHuiXibQVMBNamBAJUsbGcV49139540 = jwDwzgYUHuiXibQVMBNamBAJUsbGcV65793893;     jwDwzgYUHuiXibQVMBNamBAJUsbGcV65793893 = jwDwzgYUHuiXibQVMBNamBAJUsbGcV71581112;     jwDwzgYUHuiXibQVMBNamBAJUsbGcV71581112 = jwDwzgYUHuiXibQVMBNamBAJUsbGcV89838819;     jwDwzgYUHuiXibQVMBNamBAJUsbGcV89838819 = jwDwzgYUHuiXibQVMBNamBAJUsbGcV12300844;     jwDwzgYUHuiXibQVMBNamBAJUsbGcV12300844 = jwDwzgYUHuiXibQVMBNamBAJUsbGcV59362622;     jwDwzgYUHuiXibQVMBNamBAJUsbGcV59362622 = jwDwzgYUHuiXibQVMBNamBAJUsbGcV64286590;     jwDwzgYUHuiXibQVMBNamBAJUsbGcV64286590 = jwDwzgYUHuiXibQVMBNamBAJUsbGcV89144994;     jwDwzgYUHuiXibQVMBNamBAJUsbGcV89144994 = jwDwzgYUHuiXibQVMBNamBAJUsbGcV44591349;     jwDwzgYUHuiXibQVMBNamBAJUsbGcV44591349 = jwDwzgYUHuiXibQVMBNamBAJUsbGcV55334802;     jwDwzgYUHuiXibQVMBNamBAJUsbGcV55334802 = jwDwzgYUHuiXibQVMBNamBAJUsbGcV53061208;     jwDwzgYUHuiXibQVMBNamBAJUsbGcV53061208 = jwDwzgYUHuiXibQVMBNamBAJUsbGcV58993271;     jwDwzgYUHuiXibQVMBNamBAJUsbGcV58993271 = jwDwzgYUHuiXibQVMBNamBAJUsbGcV27232165;     jwDwzgYUHuiXibQVMBNamBAJUsbGcV27232165 = jwDwzgYUHuiXibQVMBNamBAJUsbGcV29492307;     jwDwzgYUHuiXibQVMBNamBAJUsbGcV29492307 = jwDwzgYUHuiXibQVMBNamBAJUsbGcV94771354;     jwDwzgYUHuiXibQVMBNamBAJUsbGcV94771354 = jwDwzgYUHuiXibQVMBNamBAJUsbGcV93693182;     jwDwzgYUHuiXibQVMBNamBAJUsbGcV93693182 = jwDwzgYUHuiXibQVMBNamBAJUsbGcV68142127;     jwDwzgYUHuiXibQVMBNamBAJUsbGcV68142127 = jwDwzgYUHuiXibQVMBNamBAJUsbGcV74189310;     jwDwzgYUHuiXibQVMBNamBAJUsbGcV74189310 = jwDwzgYUHuiXibQVMBNamBAJUsbGcV95272847;     jwDwzgYUHuiXibQVMBNamBAJUsbGcV95272847 = jwDwzgYUHuiXibQVMBNamBAJUsbGcV92442224;     jwDwzgYUHuiXibQVMBNamBAJUsbGcV92442224 = jwDwzgYUHuiXibQVMBNamBAJUsbGcV68238698;     jwDwzgYUHuiXibQVMBNamBAJUsbGcV68238698 = jwDwzgYUHuiXibQVMBNamBAJUsbGcV41720871;     jwDwzgYUHuiXibQVMBNamBAJUsbGcV41720871 = jwDwzgYUHuiXibQVMBNamBAJUsbGcV70838249;     jwDwzgYUHuiXibQVMBNamBAJUsbGcV70838249 = jwDwzgYUHuiXibQVMBNamBAJUsbGcV92091789;     jwDwzgYUHuiXibQVMBNamBAJUsbGcV92091789 = jwDwzgYUHuiXibQVMBNamBAJUsbGcV77249842;     jwDwzgYUHuiXibQVMBNamBAJUsbGcV77249842 = jwDwzgYUHuiXibQVMBNamBAJUsbGcV77436428;     jwDwzgYUHuiXibQVMBNamBAJUsbGcV77436428 = jwDwzgYUHuiXibQVMBNamBAJUsbGcV71961069;     jwDwzgYUHuiXibQVMBNamBAJUsbGcV71961069 = jwDwzgYUHuiXibQVMBNamBAJUsbGcV82597869;     jwDwzgYUHuiXibQVMBNamBAJUsbGcV82597869 = jwDwzgYUHuiXibQVMBNamBAJUsbGcV78365847;     jwDwzgYUHuiXibQVMBNamBAJUsbGcV78365847 = jwDwzgYUHuiXibQVMBNamBAJUsbGcV59174991;     jwDwzgYUHuiXibQVMBNamBAJUsbGcV59174991 = jwDwzgYUHuiXibQVMBNamBAJUsbGcV85595537;     jwDwzgYUHuiXibQVMBNamBAJUsbGcV85595537 = jwDwzgYUHuiXibQVMBNamBAJUsbGcV75686943;     jwDwzgYUHuiXibQVMBNamBAJUsbGcV75686943 = jwDwzgYUHuiXibQVMBNamBAJUsbGcV8956648;     jwDwzgYUHuiXibQVMBNamBAJUsbGcV8956648 = jwDwzgYUHuiXibQVMBNamBAJUsbGcV70097739;     jwDwzgYUHuiXibQVMBNamBAJUsbGcV70097739 = jwDwzgYUHuiXibQVMBNamBAJUsbGcV30938621;     jwDwzgYUHuiXibQVMBNamBAJUsbGcV30938621 = jwDwzgYUHuiXibQVMBNamBAJUsbGcV35131788;     jwDwzgYUHuiXibQVMBNamBAJUsbGcV35131788 = jwDwzgYUHuiXibQVMBNamBAJUsbGcV88189683;     jwDwzgYUHuiXibQVMBNamBAJUsbGcV88189683 = jwDwzgYUHuiXibQVMBNamBAJUsbGcV14571500;     jwDwzgYUHuiXibQVMBNamBAJUsbGcV14571500 = jwDwzgYUHuiXibQVMBNamBAJUsbGcV69218798;     jwDwzgYUHuiXibQVMBNamBAJUsbGcV69218798 = jwDwzgYUHuiXibQVMBNamBAJUsbGcV45974347;     jwDwzgYUHuiXibQVMBNamBAJUsbGcV45974347 = jwDwzgYUHuiXibQVMBNamBAJUsbGcV26286832;     jwDwzgYUHuiXibQVMBNamBAJUsbGcV26286832 = jwDwzgYUHuiXibQVMBNamBAJUsbGcV22371344;     jwDwzgYUHuiXibQVMBNamBAJUsbGcV22371344 = jwDwzgYUHuiXibQVMBNamBAJUsbGcV77576781;     jwDwzgYUHuiXibQVMBNamBAJUsbGcV77576781 = jwDwzgYUHuiXibQVMBNamBAJUsbGcV38135696;     jwDwzgYUHuiXibQVMBNamBAJUsbGcV38135696 = jwDwzgYUHuiXibQVMBNamBAJUsbGcV60844793;     jwDwzgYUHuiXibQVMBNamBAJUsbGcV60844793 = jwDwzgYUHuiXibQVMBNamBAJUsbGcV32871864;     jwDwzgYUHuiXibQVMBNamBAJUsbGcV32871864 = jwDwzgYUHuiXibQVMBNamBAJUsbGcV48498508;     jwDwzgYUHuiXibQVMBNamBAJUsbGcV48498508 = jwDwzgYUHuiXibQVMBNamBAJUsbGcV64262175;     jwDwzgYUHuiXibQVMBNamBAJUsbGcV64262175 = jwDwzgYUHuiXibQVMBNamBAJUsbGcV39602512;     jwDwzgYUHuiXibQVMBNamBAJUsbGcV39602512 = jwDwzgYUHuiXibQVMBNamBAJUsbGcV61108830;     jwDwzgYUHuiXibQVMBNamBAJUsbGcV61108830 = jwDwzgYUHuiXibQVMBNamBAJUsbGcV40732493;     jwDwzgYUHuiXibQVMBNamBAJUsbGcV40732493 = jwDwzgYUHuiXibQVMBNamBAJUsbGcV33291340;     jwDwzgYUHuiXibQVMBNamBAJUsbGcV33291340 = jwDwzgYUHuiXibQVMBNamBAJUsbGcV29691131;     jwDwzgYUHuiXibQVMBNamBAJUsbGcV29691131 = jwDwzgYUHuiXibQVMBNamBAJUsbGcV21763651;     jwDwzgYUHuiXibQVMBNamBAJUsbGcV21763651 = jwDwzgYUHuiXibQVMBNamBAJUsbGcV67661841;     jwDwzgYUHuiXibQVMBNamBAJUsbGcV67661841 = jwDwzgYUHuiXibQVMBNamBAJUsbGcV7418669;     jwDwzgYUHuiXibQVMBNamBAJUsbGcV7418669 = jwDwzgYUHuiXibQVMBNamBAJUsbGcV94955644;     jwDwzgYUHuiXibQVMBNamBAJUsbGcV94955644 = jwDwzgYUHuiXibQVMBNamBAJUsbGcV79489323;     jwDwzgYUHuiXibQVMBNamBAJUsbGcV79489323 = jwDwzgYUHuiXibQVMBNamBAJUsbGcV12588977;     jwDwzgYUHuiXibQVMBNamBAJUsbGcV12588977 = jwDwzgYUHuiXibQVMBNamBAJUsbGcV34864416;     jwDwzgYUHuiXibQVMBNamBAJUsbGcV34864416 = jwDwzgYUHuiXibQVMBNamBAJUsbGcV87401553;     jwDwzgYUHuiXibQVMBNamBAJUsbGcV87401553 = jwDwzgYUHuiXibQVMBNamBAJUsbGcV81688721;     jwDwzgYUHuiXibQVMBNamBAJUsbGcV81688721 = jwDwzgYUHuiXibQVMBNamBAJUsbGcV10779148;     jwDwzgYUHuiXibQVMBNamBAJUsbGcV10779148 = jwDwzgYUHuiXibQVMBNamBAJUsbGcV85416357;     jwDwzgYUHuiXibQVMBNamBAJUsbGcV85416357 = jwDwzgYUHuiXibQVMBNamBAJUsbGcV69739265;     jwDwzgYUHuiXibQVMBNamBAJUsbGcV69739265 = jwDwzgYUHuiXibQVMBNamBAJUsbGcV77374265;     jwDwzgYUHuiXibQVMBNamBAJUsbGcV77374265 = jwDwzgYUHuiXibQVMBNamBAJUsbGcV50036624;     jwDwzgYUHuiXibQVMBNamBAJUsbGcV50036624 = jwDwzgYUHuiXibQVMBNamBAJUsbGcV57134426;     jwDwzgYUHuiXibQVMBNamBAJUsbGcV57134426 = jwDwzgYUHuiXibQVMBNamBAJUsbGcV98553685;     jwDwzgYUHuiXibQVMBNamBAJUsbGcV98553685 = jwDwzgYUHuiXibQVMBNamBAJUsbGcV59639567;     jwDwzgYUHuiXibQVMBNamBAJUsbGcV59639567 = jwDwzgYUHuiXibQVMBNamBAJUsbGcV5503500;     jwDwzgYUHuiXibQVMBNamBAJUsbGcV5503500 = jwDwzgYUHuiXibQVMBNamBAJUsbGcV53570627;     jwDwzgYUHuiXibQVMBNamBAJUsbGcV53570627 = jwDwzgYUHuiXibQVMBNamBAJUsbGcV4970512;     jwDwzgYUHuiXibQVMBNamBAJUsbGcV4970512 = jwDwzgYUHuiXibQVMBNamBAJUsbGcV49298500;     jwDwzgYUHuiXibQVMBNamBAJUsbGcV49298500 = jwDwzgYUHuiXibQVMBNamBAJUsbGcV66155393;     jwDwzgYUHuiXibQVMBNamBAJUsbGcV66155393 = jwDwzgYUHuiXibQVMBNamBAJUsbGcV45867354;     jwDwzgYUHuiXibQVMBNamBAJUsbGcV45867354 = jwDwzgYUHuiXibQVMBNamBAJUsbGcV64144090;     jwDwzgYUHuiXibQVMBNamBAJUsbGcV64144090 = jwDwzgYUHuiXibQVMBNamBAJUsbGcV32702554;     jwDwzgYUHuiXibQVMBNamBAJUsbGcV32702554 = jwDwzgYUHuiXibQVMBNamBAJUsbGcV31246997;     jwDwzgYUHuiXibQVMBNamBAJUsbGcV31246997 = jwDwzgYUHuiXibQVMBNamBAJUsbGcV44377979;     jwDwzgYUHuiXibQVMBNamBAJUsbGcV44377979 = jwDwzgYUHuiXibQVMBNamBAJUsbGcV28937920;     jwDwzgYUHuiXibQVMBNamBAJUsbGcV28937920 = jwDwzgYUHuiXibQVMBNamBAJUsbGcV7698894;     jwDwzgYUHuiXibQVMBNamBAJUsbGcV7698894 = jwDwzgYUHuiXibQVMBNamBAJUsbGcV42995357;     jwDwzgYUHuiXibQVMBNamBAJUsbGcV42995357 = jwDwzgYUHuiXibQVMBNamBAJUsbGcV17257017;     jwDwzgYUHuiXibQVMBNamBAJUsbGcV17257017 = jwDwzgYUHuiXibQVMBNamBAJUsbGcV18442499;     jwDwzgYUHuiXibQVMBNamBAJUsbGcV18442499 = jwDwzgYUHuiXibQVMBNamBAJUsbGcV52304197;     jwDwzgYUHuiXibQVMBNamBAJUsbGcV52304197 = jwDwzgYUHuiXibQVMBNamBAJUsbGcV45995812;     jwDwzgYUHuiXibQVMBNamBAJUsbGcV45995812 = jwDwzgYUHuiXibQVMBNamBAJUsbGcV87192997;     jwDwzgYUHuiXibQVMBNamBAJUsbGcV87192997 = jwDwzgYUHuiXibQVMBNamBAJUsbGcV2435898;     jwDwzgYUHuiXibQVMBNamBAJUsbGcV2435898 = jwDwzgYUHuiXibQVMBNamBAJUsbGcV23519952;     jwDwzgYUHuiXibQVMBNamBAJUsbGcV23519952 = jwDwzgYUHuiXibQVMBNamBAJUsbGcV40176144;     jwDwzgYUHuiXibQVMBNamBAJUsbGcV40176144 = jwDwzgYUHuiXibQVMBNamBAJUsbGcV8700360;     jwDwzgYUHuiXibQVMBNamBAJUsbGcV8700360 = jwDwzgYUHuiXibQVMBNamBAJUsbGcV1982524;     jwDwzgYUHuiXibQVMBNamBAJUsbGcV1982524 = jwDwzgYUHuiXibQVMBNamBAJUsbGcV34373867;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void kuLfblJNiCAHzICktPYZOJYbB55601740() {     double mYjrhBOsnovVMKJbVzayHBygpNTOvT85537949 = -444692138;    double mYjrhBOsnovVMKJbVzayHBygpNTOvT86168615 = -909249951;    double mYjrhBOsnovVMKJbVzayHBygpNTOvT75946183 = -71472476;    double mYjrhBOsnovVMKJbVzayHBygpNTOvT84004370 = -707672456;    double mYjrhBOsnovVMKJbVzayHBygpNTOvT72488090 = -548435232;    double mYjrhBOsnovVMKJbVzayHBygpNTOvT83029861 = -257034086;    double mYjrhBOsnovVMKJbVzayHBygpNTOvT15089565 = -950903075;    double mYjrhBOsnovVMKJbVzayHBygpNTOvT48373839 = -554353435;    double mYjrhBOsnovVMKJbVzayHBygpNTOvT99192643 = -701089253;    double mYjrhBOsnovVMKJbVzayHBygpNTOvT6537391 = -583136534;    double mYjrhBOsnovVMKJbVzayHBygpNTOvT38826533 = -700735453;    double mYjrhBOsnovVMKJbVzayHBygpNTOvT97227832 = 88762460;    double mYjrhBOsnovVMKJbVzayHBygpNTOvT44377092 = -691374686;    double mYjrhBOsnovVMKJbVzayHBygpNTOvT1250245 = -982672527;    double mYjrhBOsnovVMKJbVzayHBygpNTOvT46854880 = -955485834;    double mYjrhBOsnovVMKJbVzayHBygpNTOvT34597982 = -493487770;    double mYjrhBOsnovVMKJbVzayHBygpNTOvT10783795 = 43485206;    double mYjrhBOsnovVMKJbVzayHBygpNTOvT18293550 = -853605977;    double mYjrhBOsnovVMKJbVzayHBygpNTOvT2350984 = -299145988;    double mYjrhBOsnovVMKJbVzayHBygpNTOvT21628862 = 69762388;    double mYjrhBOsnovVMKJbVzayHBygpNTOvT11180262 = -883544957;    double mYjrhBOsnovVMKJbVzayHBygpNTOvT76073834 = -84266288;    double mYjrhBOsnovVMKJbVzayHBygpNTOvT38099175 = -670412794;    double mYjrhBOsnovVMKJbVzayHBygpNTOvT15220321 = -172991473;    double mYjrhBOsnovVMKJbVzayHBygpNTOvT12438278 = -632942700;    double mYjrhBOsnovVMKJbVzayHBygpNTOvT70825197 = -400394562;    double mYjrhBOsnovVMKJbVzayHBygpNTOvT27439625 = -240640225;    double mYjrhBOsnovVMKJbVzayHBygpNTOvT31439823 = -623128474;    double mYjrhBOsnovVMKJbVzayHBygpNTOvT70153743 = -327378122;    double mYjrhBOsnovVMKJbVzayHBygpNTOvT53573101 = -991566687;    double mYjrhBOsnovVMKJbVzayHBygpNTOvT69597737 = -119016226;    double mYjrhBOsnovVMKJbVzayHBygpNTOvT36353565 = -625315771;    double mYjrhBOsnovVMKJbVzayHBygpNTOvT5262955 = 67248043;    double mYjrhBOsnovVMKJbVzayHBygpNTOvT79418048 = -421502533;    double mYjrhBOsnovVMKJbVzayHBygpNTOvT67765883 = -785408322;    double mYjrhBOsnovVMKJbVzayHBygpNTOvT30777738 = -16972402;    double mYjrhBOsnovVMKJbVzayHBygpNTOvT70407129 = -723547153;    double mYjrhBOsnovVMKJbVzayHBygpNTOvT6658590 = -315665597;    double mYjrhBOsnovVMKJbVzayHBygpNTOvT92847696 = -737537738;    double mYjrhBOsnovVMKJbVzayHBygpNTOvT98396888 = -842004967;    double mYjrhBOsnovVMKJbVzayHBygpNTOvT52255969 = -612523122;    double mYjrhBOsnovVMKJbVzayHBygpNTOvT4655462 = -434898965;    double mYjrhBOsnovVMKJbVzayHBygpNTOvT93815586 = -103030807;    double mYjrhBOsnovVMKJbVzayHBygpNTOvT89008139 = 68098804;    double mYjrhBOsnovVMKJbVzayHBygpNTOvT82551304 = -657945102;    double mYjrhBOsnovVMKJbVzayHBygpNTOvT42447411 = -78971196;    double mYjrhBOsnovVMKJbVzayHBygpNTOvT73209048 = -102131379;    double mYjrhBOsnovVMKJbVzayHBygpNTOvT17895955 = -631309999;    double mYjrhBOsnovVMKJbVzayHBygpNTOvT42652374 = -41481316;    double mYjrhBOsnovVMKJbVzayHBygpNTOvT5242195 = 64360938;    double mYjrhBOsnovVMKJbVzayHBygpNTOvT71667560 = -188816704;    double mYjrhBOsnovVMKJbVzayHBygpNTOvT29909210 = -855605001;    double mYjrhBOsnovVMKJbVzayHBygpNTOvT44467419 = -70697521;    double mYjrhBOsnovVMKJbVzayHBygpNTOvT96546596 = -397009045;    double mYjrhBOsnovVMKJbVzayHBygpNTOvT44421479 = -235593337;    double mYjrhBOsnovVMKJbVzayHBygpNTOvT9464116 = -260425850;    double mYjrhBOsnovVMKJbVzayHBygpNTOvT48069441 = -138837158;    double mYjrhBOsnovVMKJbVzayHBygpNTOvT60725863 = -898481003;    double mYjrhBOsnovVMKJbVzayHBygpNTOvT71566092 = 25270243;    double mYjrhBOsnovVMKJbVzayHBygpNTOvT1662893 = -48040671;    double mYjrhBOsnovVMKJbVzayHBygpNTOvT55590236 = 83606139;    double mYjrhBOsnovVMKJbVzayHBygpNTOvT83649741 = -227774602;    double mYjrhBOsnovVMKJbVzayHBygpNTOvT78220096 = -126975313;    double mYjrhBOsnovVMKJbVzayHBygpNTOvT45619542 = -709522566;    double mYjrhBOsnovVMKJbVzayHBygpNTOvT36939654 = -364120309;    double mYjrhBOsnovVMKJbVzayHBygpNTOvT2472968 = 24580318;    double mYjrhBOsnovVMKJbVzayHBygpNTOvT91964877 = -978485583;    double mYjrhBOsnovVMKJbVzayHBygpNTOvT64959043 = -169872153;    double mYjrhBOsnovVMKJbVzayHBygpNTOvT33484361 = -97264206;    double mYjrhBOsnovVMKJbVzayHBygpNTOvT16077143 = -838513432;    double mYjrhBOsnovVMKJbVzayHBygpNTOvT64190852 = -769940617;    double mYjrhBOsnovVMKJbVzayHBygpNTOvT4125205 = -640849197;    double mYjrhBOsnovVMKJbVzayHBygpNTOvT25445853 = -16068240;    double mYjrhBOsnovVMKJbVzayHBygpNTOvT3954096 = -457141022;    double mYjrhBOsnovVMKJbVzayHBygpNTOvT69372892 = -317714490;    double mYjrhBOsnovVMKJbVzayHBygpNTOvT6524800 = -348645992;    double mYjrhBOsnovVMKJbVzayHBygpNTOvT82258247 = -981235482;    double mYjrhBOsnovVMKJbVzayHBygpNTOvT49091035 = -638511598;    double mYjrhBOsnovVMKJbVzayHBygpNTOvT32669016 = -515046371;    double mYjrhBOsnovVMKJbVzayHBygpNTOvT69990867 = -453971504;    double mYjrhBOsnovVMKJbVzayHBygpNTOvT97616149 = -198263183;    double mYjrhBOsnovVMKJbVzayHBygpNTOvT9543671 = -609330226;    double mYjrhBOsnovVMKJbVzayHBygpNTOvT88787449 = -481647158;    double mYjrhBOsnovVMKJbVzayHBygpNTOvT64911548 = -291739061;    double mYjrhBOsnovVMKJbVzayHBygpNTOvT81905540 = -702749984;    double mYjrhBOsnovVMKJbVzayHBygpNTOvT39688528 = -263411225;    double mYjrhBOsnovVMKJbVzayHBygpNTOvT91886145 = -454618251;    double mYjrhBOsnovVMKJbVzayHBygpNTOvT8716359 = -535742913;    double mYjrhBOsnovVMKJbVzayHBygpNTOvT34996570 = -85909197;    double mYjrhBOsnovVMKJbVzayHBygpNTOvT58301768 = -424982473;    double mYjrhBOsnovVMKJbVzayHBygpNTOvT82708296 = -878135244;    double mYjrhBOsnovVMKJbVzayHBygpNTOvT9681267 = -825066150;    double mYjrhBOsnovVMKJbVzayHBygpNTOvT35092498 = -240935841;    double mYjrhBOsnovVMKJbVzayHBygpNTOvT91184804 = -589497067;    double mYjrhBOsnovVMKJbVzayHBygpNTOvT42806652 = -825611106;    double mYjrhBOsnovVMKJbVzayHBygpNTOvT68606227 = -284748521;    double mYjrhBOsnovVMKJbVzayHBygpNTOvT26435366 = -207923652;    double mYjrhBOsnovVMKJbVzayHBygpNTOvT48196045 = -393508242;    double mYjrhBOsnovVMKJbVzayHBygpNTOvT52068486 = -567780887;    double mYjrhBOsnovVMKJbVzayHBygpNTOvT80078337 = -444692138;     mYjrhBOsnovVMKJbVzayHBygpNTOvT85537949 = mYjrhBOsnovVMKJbVzayHBygpNTOvT86168615;     mYjrhBOsnovVMKJbVzayHBygpNTOvT86168615 = mYjrhBOsnovVMKJbVzayHBygpNTOvT75946183;     mYjrhBOsnovVMKJbVzayHBygpNTOvT75946183 = mYjrhBOsnovVMKJbVzayHBygpNTOvT84004370;     mYjrhBOsnovVMKJbVzayHBygpNTOvT84004370 = mYjrhBOsnovVMKJbVzayHBygpNTOvT72488090;     mYjrhBOsnovVMKJbVzayHBygpNTOvT72488090 = mYjrhBOsnovVMKJbVzayHBygpNTOvT83029861;     mYjrhBOsnovVMKJbVzayHBygpNTOvT83029861 = mYjrhBOsnovVMKJbVzayHBygpNTOvT15089565;     mYjrhBOsnovVMKJbVzayHBygpNTOvT15089565 = mYjrhBOsnovVMKJbVzayHBygpNTOvT48373839;     mYjrhBOsnovVMKJbVzayHBygpNTOvT48373839 = mYjrhBOsnovVMKJbVzayHBygpNTOvT99192643;     mYjrhBOsnovVMKJbVzayHBygpNTOvT99192643 = mYjrhBOsnovVMKJbVzayHBygpNTOvT6537391;     mYjrhBOsnovVMKJbVzayHBygpNTOvT6537391 = mYjrhBOsnovVMKJbVzayHBygpNTOvT38826533;     mYjrhBOsnovVMKJbVzayHBygpNTOvT38826533 = mYjrhBOsnovVMKJbVzayHBygpNTOvT97227832;     mYjrhBOsnovVMKJbVzayHBygpNTOvT97227832 = mYjrhBOsnovVMKJbVzayHBygpNTOvT44377092;     mYjrhBOsnovVMKJbVzayHBygpNTOvT44377092 = mYjrhBOsnovVMKJbVzayHBygpNTOvT1250245;     mYjrhBOsnovVMKJbVzayHBygpNTOvT1250245 = mYjrhBOsnovVMKJbVzayHBygpNTOvT46854880;     mYjrhBOsnovVMKJbVzayHBygpNTOvT46854880 = mYjrhBOsnovVMKJbVzayHBygpNTOvT34597982;     mYjrhBOsnovVMKJbVzayHBygpNTOvT34597982 = mYjrhBOsnovVMKJbVzayHBygpNTOvT10783795;     mYjrhBOsnovVMKJbVzayHBygpNTOvT10783795 = mYjrhBOsnovVMKJbVzayHBygpNTOvT18293550;     mYjrhBOsnovVMKJbVzayHBygpNTOvT18293550 = mYjrhBOsnovVMKJbVzayHBygpNTOvT2350984;     mYjrhBOsnovVMKJbVzayHBygpNTOvT2350984 = mYjrhBOsnovVMKJbVzayHBygpNTOvT21628862;     mYjrhBOsnovVMKJbVzayHBygpNTOvT21628862 = mYjrhBOsnovVMKJbVzayHBygpNTOvT11180262;     mYjrhBOsnovVMKJbVzayHBygpNTOvT11180262 = mYjrhBOsnovVMKJbVzayHBygpNTOvT76073834;     mYjrhBOsnovVMKJbVzayHBygpNTOvT76073834 = mYjrhBOsnovVMKJbVzayHBygpNTOvT38099175;     mYjrhBOsnovVMKJbVzayHBygpNTOvT38099175 = mYjrhBOsnovVMKJbVzayHBygpNTOvT15220321;     mYjrhBOsnovVMKJbVzayHBygpNTOvT15220321 = mYjrhBOsnovVMKJbVzayHBygpNTOvT12438278;     mYjrhBOsnovVMKJbVzayHBygpNTOvT12438278 = mYjrhBOsnovVMKJbVzayHBygpNTOvT70825197;     mYjrhBOsnovVMKJbVzayHBygpNTOvT70825197 = mYjrhBOsnovVMKJbVzayHBygpNTOvT27439625;     mYjrhBOsnovVMKJbVzayHBygpNTOvT27439625 = mYjrhBOsnovVMKJbVzayHBygpNTOvT31439823;     mYjrhBOsnovVMKJbVzayHBygpNTOvT31439823 = mYjrhBOsnovVMKJbVzayHBygpNTOvT70153743;     mYjrhBOsnovVMKJbVzayHBygpNTOvT70153743 = mYjrhBOsnovVMKJbVzayHBygpNTOvT53573101;     mYjrhBOsnovVMKJbVzayHBygpNTOvT53573101 = mYjrhBOsnovVMKJbVzayHBygpNTOvT69597737;     mYjrhBOsnovVMKJbVzayHBygpNTOvT69597737 = mYjrhBOsnovVMKJbVzayHBygpNTOvT36353565;     mYjrhBOsnovVMKJbVzayHBygpNTOvT36353565 = mYjrhBOsnovVMKJbVzayHBygpNTOvT5262955;     mYjrhBOsnovVMKJbVzayHBygpNTOvT5262955 = mYjrhBOsnovVMKJbVzayHBygpNTOvT79418048;     mYjrhBOsnovVMKJbVzayHBygpNTOvT79418048 = mYjrhBOsnovVMKJbVzayHBygpNTOvT67765883;     mYjrhBOsnovVMKJbVzayHBygpNTOvT67765883 = mYjrhBOsnovVMKJbVzayHBygpNTOvT30777738;     mYjrhBOsnovVMKJbVzayHBygpNTOvT30777738 = mYjrhBOsnovVMKJbVzayHBygpNTOvT70407129;     mYjrhBOsnovVMKJbVzayHBygpNTOvT70407129 = mYjrhBOsnovVMKJbVzayHBygpNTOvT6658590;     mYjrhBOsnovVMKJbVzayHBygpNTOvT6658590 = mYjrhBOsnovVMKJbVzayHBygpNTOvT92847696;     mYjrhBOsnovVMKJbVzayHBygpNTOvT92847696 = mYjrhBOsnovVMKJbVzayHBygpNTOvT98396888;     mYjrhBOsnovVMKJbVzayHBygpNTOvT98396888 = mYjrhBOsnovVMKJbVzayHBygpNTOvT52255969;     mYjrhBOsnovVMKJbVzayHBygpNTOvT52255969 = mYjrhBOsnovVMKJbVzayHBygpNTOvT4655462;     mYjrhBOsnovVMKJbVzayHBygpNTOvT4655462 = mYjrhBOsnovVMKJbVzayHBygpNTOvT93815586;     mYjrhBOsnovVMKJbVzayHBygpNTOvT93815586 = mYjrhBOsnovVMKJbVzayHBygpNTOvT89008139;     mYjrhBOsnovVMKJbVzayHBygpNTOvT89008139 = mYjrhBOsnovVMKJbVzayHBygpNTOvT82551304;     mYjrhBOsnovVMKJbVzayHBygpNTOvT82551304 = mYjrhBOsnovVMKJbVzayHBygpNTOvT42447411;     mYjrhBOsnovVMKJbVzayHBygpNTOvT42447411 = mYjrhBOsnovVMKJbVzayHBygpNTOvT73209048;     mYjrhBOsnovVMKJbVzayHBygpNTOvT73209048 = mYjrhBOsnovVMKJbVzayHBygpNTOvT17895955;     mYjrhBOsnovVMKJbVzayHBygpNTOvT17895955 = mYjrhBOsnovVMKJbVzayHBygpNTOvT42652374;     mYjrhBOsnovVMKJbVzayHBygpNTOvT42652374 = mYjrhBOsnovVMKJbVzayHBygpNTOvT5242195;     mYjrhBOsnovVMKJbVzayHBygpNTOvT5242195 = mYjrhBOsnovVMKJbVzayHBygpNTOvT71667560;     mYjrhBOsnovVMKJbVzayHBygpNTOvT71667560 = mYjrhBOsnovVMKJbVzayHBygpNTOvT29909210;     mYjrhBOsnovVMKJbVzayHBygpNTOvT29909210 = mYjrhBOsnovVMKJbVzayHBygpNTOvT44467419;     mYjrhBOsnovVMKJbVzayHBygpNTOvT44467419 = mYjrhBOsnovVMKJbVzayHBygpNTOvT96546596;     mYjrhBOsnovVMKJbVzayHBygpNTOvT96546596 = mYjrhBOsnovVMKJbVzayHBygpNTOvT44421479;     mYjrhBOsnovVMKJbVzayHBygpNTOvT44421479 = mYjrhBOsnovVMKJbVzayHBygpNTOvT9464116;     mYjrhBOsnovVMKJbVzayHBygpNTOvT9464116 = mYjrhBOsnovVMKJbVzayHBygpNTOvT48069441;     mYjrhBOsnovVMKJbVzayHBygpNTOvT48069441 = mYjrhBOsnovVMKJbVzayHBygpNTOvT60725863;     mYjrhBOsnovVMKJbVzayHBygpNTOvT60725863 = mYjrhBOsnovVMKJbVzayHBygpNTOvT71566092;     mYjrhBOsnovVMKJbVzayHBygpNTOvT71566092 = mYjrhBOsnovVMKJbVzayHBygpNTOvT1662893;     mYjrhBOsnovVMKJbVzayHBygpNTOvT1662893 = mYjrhBOsnovVMKJbVzayHBygpNTOvT55590236;     mYjrhBOsnovVMKJbVzayHBygpNTOvT55590236 = mYjrhBOsnovVMKJbVzayHBygpNTOvT83649741;     mYjrhBOsnovVMKJbVzayHBygpNTOvT83649741 = mYjrhBOsnovVMKJbVzayHBygpNTOvT78220096;     mYjrhBOsnovVMKJbVzayHBygpNTOvT78220096 = mYjrhBOsnovVMKJbVzayHBygpNTOvT45619542;     mYjrhBOsnovVMKJbVzayHBygpNTOvT45619542 = mYjrhBOsnovVMKJbVzayHBygpNTOvT36939654;     mYjrhBOsnovVMKJbVzayHBygpNTOvT36939654 = mYjrhBOsnovVMKJbVzayHBygpNTOvT2472968;     mYjrhBOsnovVMKJbVzayHBygpNTOvT2472968 = mYjrhBOsnovVMKJbVzayHBygpNTOvT91964877;     mYjrhBOsnovVMKJbVzayHBygpNTOvT91964877 = mYjrhBOsnovVMKJbVzayHBygpNTOvT64959043;     mYjrhBOsnovVMKJbVzayHBygpNTOvT64959043 = mYjrhBOsnovVMKJbVzayHBygpNTOvT33484361;     mYjrhBOsnovVMKJbVzayHBygpNTOvT33484361 = mYjrhBOsnovVMKJbVzayHBygpNTOvT16077143;     mYjrhBOsnovVMKJbVzayHBygpNTOvT16077143 = mYjrhBOsnovVMKJbVzayHBygpNTOvT64190852;     mYjrhBOsnovVMKJbVzayHBygpNTOvT64190852 = mYjrhBOsnovVMKJbVzayHBygpNTOvT4125205;     mYjrhBOsnovVMKJbVzayHBygpNTOvT4125205 = mYjrhBOsnovVMKJbVzayHBygpNTOvT25445853;     mYjrhBOsnovVMKJbVzayHBygpNTOvT25445853 = mYjrhBOsnovVMKJbVzayHBygpNTOvT3954096;     mYjrhBOsnovVMKJbVzayHBygpNTOvT3954096 = mYjrhBOsnovVMKJbVzayHBygpNTOvT69372892;     mYjrhBOsnovVMKJbVzayHBygpNTOvT69372892 = mYjrhBOsnovVMKJbVzayHBygpNTOvT6524800;     mYjrhBOsnovVMKJbVzayHBygpNTOvT6524800 = mYjrhBOsnovVMKJbVzayHBygpNTOvT82258247;     mYjrhBOsnovVMKJbVzayHBygpNTOvT82258247 = mYjrhBOsnovVMKJbVzayHBygpNTOvT49091035;     mYjrhBOsnovVMKJbVzayHBygpNTOvT49091035 = mYjrhBOsnovVMKJbVzayHBygpNTOvT32669016;     mYjrhBOsnovVMKJbVzayHBygpNTOvT32669016 = mYjrhBOsnovVMKJbVzayHBygpNTOvT69990867;     mYjrhBOsnovVMKJbVzayHBygpNTOvT69990867 = mYjrhBOsnovVMKJbVzayHBygpNTOvT97616149;     mYjrhBOsnovVMKJbVzayHBygpNTOvT97616149 = mYjrhBOsnovVMKJbVzayHBygpNTOvT9543671;     mYjrhBOsnovVMKJbVzayHBygpNTOvT9543671 = mYjrhBOsnovVMKJbVzayHBygpNTOvT88787449;     mYjrhBOsnovVMKJbVzayHBygpNTOvT88787449 = mYjrhBOsnovVMKJbVzayHBygpNTOvT64911548;     mYjrhBOsnovVMKJbVzayHBygpNTOvT64911548 = mYjrhBOsnovVMKJbVzayHBygpNTOvT81905540;     mYjrhBOsnovVMKJbVzayHBygpNTOvT81905540 = mYjrhBOsnovVMKJbVzayHBygpNTOvT39688528;     mYjrhBOsnovVMKJbVzayHBygpNTOvT39688528 = mYjrhBOsnovVMKJbVzayHBygpNTOvT91886145;     mYjrhBOsnovVMKJbVzayHBygpNTOvT91886145 = mYjrhBOsnovVMKJbVzayHBygpNTOvT8716359;     mYjrhBOsnovVMKJbVzayHBygpNTOvT8716359 = mYjrhBOsnovVMKJbVzayHBygpNTOvT34996570;     mYjrhBOsnovVMKJbVzayHBygpNTOvT34996570 = mYjrhBOsnovVMKJbVzayHBygpNTOvT58301768;     mYjrhBOsnovVMKJbVzayHBygpNTOvT58301768 = mYjrhBOsnovVMKJbVzayHBygpNTOvT82708296;     mYjrhBOsnovVMKJbVzayHBygpNTOvT82708296 = mYjrhBOsnovVMKJbVzayHBygpNTOvT9681267;     mYjrhBOsnovVMKJbVzayHBygpNTOvT9681267 = mYjrhBOsnovVMKJbVzayHBygpNTOvT35092498;     mYjrhBOsnovVMKJbVzayHBygpNTOvT35092498 = mYjrhBOsnovVMKJbVzayHBygpNTOvT91184804;     mYjrhBOsnovVMKJbVzayHBygpNTOvT91184804 = mYjrhBOsnovVMKJbVzayHBygpNTOvT42806652;     mYjrhBOsnovVMKJbVzayHBygpNTOvT42806652 = mYjrhBOsnovVMKJbVzayHBygpNTOvT68606227;     mYjrhBOsnovVMKJbVzayHBygpNTOvT68606227 = mYjrhBOsnovVMKJbVzayHBygpNTOvT26435366;     mYjrhBOsnovVMKJbVzayHBygpNTOvT26435366 = mYjrhBOsnovVMKJbVzayHBygpNTOvT48196045;     mYjrhBOsnovVMKJbVzayHBygpNTOvT48196045 = mYjrhBOsnovVMKJbVzayHBygpNTOvT52068486;     mYjrhBOsnovVMKJbVzayHBygpNTOvT52068486 = mYjrhBOsnovVMKJbVzayHBygpNTOvT80078337;     mYjrhBOsnovVMKJbVzayHBygpNTOvT80078337 = mYjrhBOsnovVMKJbVzayHBygpNTOvT85537949;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void YPfivJxLSCXpDwcLhTBseJHgd65206467() {     double aNHRqaAKwNdefoyBKldkCPIfTKHSpa7360171 = 87092530;    double aNHRqaAKwNdefoyBKldkCPIfTKHSpa47636419 = -191848804;    double aNHRqaAKwNdefoyBKldkCPIfTKHSpa21673454 = -118690008;    double aNHRqaAKwNdefoyBKldkCPIfTKHSpa15379516 = -912456632;    double aNHRqaAKwNdefoyBKldkCPIfTKHSpa32622421 = -425686154;    double aNHRqaAKwNdefoyBKldkCPIfTKHSpa7048177 = -268577244;    double aNHRqaAKwNdefoyBKldkCPIfTKHSpa44110149 = 85778801;    double aNHRqaAKwNdefoyBKldkCPIfTKHSpa35236468 = -562534283;    double aNHRqaAKwNdefoyBKldkCPIfTKHSpa95716282 = -686884671;    double aNHRqaAKwNdefoyBKldkCPIfTKHSpa67820616 = -453354932;    double aNHRqaAKwNdefoyBKldkCPIfTKHSpa9742801 = -256493156;    double aNHRqaAKwNdefoyBKldkCPIfTKHSpa13409716 = -14419146;    double aNHRqaAKwNdefoyBKldkCPIfTKHSpa77366034 = -129408475;    double aNHRqaAKwNdefoyBKldkCPIfTKHSpa68216712 = -732749325;    double aNHRqaAKwNdefoyBKldkCPIfTKHSpa42112675 = -882327753;    double aNHRqaAKwNdefoyBKldkCPIfTKHSpa82568707 = -935854311;    double aNHRqaAKwNdefoyBKldkCPIfTKHSpa4232854 = -342339512;    double aNHRqaAKwNdefoyBKldkCPIfTKHSpa80818852 = -775326894;    double aNHRqaAKwNdefoyBKldkCPIfTKHSpa6988208 = -372281644;    double aNHRqaAKwNdefoyBKldkCPIfTKHSpa2738504 = -421482668;    double aNHRqaAKwNdefoyBKldkCPIfTKHSpa68334546 = -615623660;    double aNHRqaAKwNdefoyBKldkCPIfTKHSpa40475812 = -155017453;    double aNHRqaAKwNdefoyBKldkCPIfTKHSpa47570579 = -226440149;    double aNHRqaAKwNdefoyBKldkCPIfTKHSpa52497942 = -583090338;    double aNHRqaAKwNdefoyBKldkCPIfTKHSpa86368945 = -543839673;    double aNHRqaAKwNdefoyBKldkCPIfTKHSpa60401051 = -727580090;    double aNHRqaAKwNdefoyBKldkCPIfTKHSpa476229 = -867444269;    double aNHRqaAKwNdefoyBKldkCPIfTKHSpa67019649 = -487576707;    double aNHRqaAKwNdefoyBKldkCPIfTKHSpa18050656 = 5675960;    double aNHRqaAKwNdefoyBKldkCPIfTKHSpa99390178 = -267780881;    double aNHRqaAKwNdefoyBKldkCPIfTKHSpa20763003 = -524743973;    double aNHRqaAKwNdefoyBKldkCPIfTKHSpa55244890 = -401204602;    double aNHRqaAKwNdefoyBKldkCPIfTKHSpa30582420 = -775355840;    double aNHRqaAKwNdefoyBKldkCPIfTKHSpa51957166 = -97322161;    double aNHRqaAKwNdefoyBKldkCPIfTKHSpa48600096 = -935226924;    double aNHRqaAKwNdefoyBKldkCPIfTKHSpa354698 = -31388382;    double aNHRqaAKwNdefoyBKldkCPIfTKHSpa13489386 = -773164250;    double aNHRqaAKwNdefoyBKldkCPIfTKHSpa10596452 = -897208355;    double aNHRqaAKwNdefoyBKldkCPIfTKHSpa53228143 = -509943018;    double aNHRqaAKwNdefoyBKldkCPIfTKHSpa11067535 = -199553968;    double aNHRqaAKwNdefoyBKldkCPIfTKHSpa6631815 = 53337620;    double aNHRqaAKwNdefoyBKldkCPIfTKHSpa21157633 = -122365043;    double aNHRqaAKwNdefoyBKldkCPIfTKHSpa41182986 = -146997622;    double aNHRqaAKwNdefoyBKldkCPIfTKHSpa37102999 = -940707365;    double aNHRqaAKwNdefoyBKldkCPIfTKHSpa62467115 = -844633731;    double aNHRqaAKwNdefoyBKldkCPIfTKHSpa81653889 = -882403427;    double aNHRqaAKwNdefoyBKldkCPIfTKHSpa98877159 = -283138899;    double aNHRqaAKwNdefoyBKldkCPIfTKHSpa99735706 = -369805988;    double aNHRqaAKwNdefoyBKldkCPIfTKHSpa49716466 = -226597739;    double aNHRqaAKwNdefoyBKldkCPIfTKHSpa21289672 = 85305754;    double aNHRqaAKwNdefoyBKldkCPIfTKHSpa60129380 = -232706030;    double aNHRqaAKwNdefoyBKldkCPIfTKHSpa26297873 = -80983082;    double aNHRqaAKwNdefoyBKldkCPIfTKHSpa35690284 = -34292660;    double aNHRqaAKwNdefoyBKldkCPIfTKHSpa24571719 = -588018105;    double aNHRqaAKwNdefoyBKldkCPIfTKHSpa96871920 = -196715086;    double aNHRqaAKwNdefoyBKldkCPIfTKHSpa66884358 = -757890017;    double aNHRqaAKwNdefoyBKldkCPIfTKHSpa65841 = -965408656;    double aNHRqaAKwNdefoyBKldkCPIfTKHSpa69175511 = -535599670;    double aNHRqaAKwNdefoyBKldkCPIfTKHSpa29010571 = -268616960;    double aNHRqaAKwNdefoyBKldkCPIfTKHSpa72221369 = -698106064;    double aNHRqaAKwNdefoyBKldkCPIfTKHSpa6571949 = -401132975;    double aNHRqaAKwNdefoyBKldkCPIfTKHSpa77090500 = -426644493;    double aNHRqaAKwNdefoyBKldkCPIfTKHSpa17185813 = -468210244;    double aNHRqaAKwNdefoyBKldkCPIfTKHSpa96326104 = -319103790;    double aNHRqaAKwNdefoyBKldkCPIfTKHSpa47057614 = -928610959;    double aNHRqaAKwNdefoyBKldkCPIfTKHSpa54497910 = -855288555;    double aNHRqaAKwNdefoyBKldkCPIfTKHSpa82827296 = -239063307;    double aNHRqaAKwNdefoyBKldkCPIfTKHSpa25408869 = 67913685;    double aNHRqaAKwNdefoyBKldkCPIfTKHSpa19616616 = -797522401;    double aNHRqaAKwNdefoyBKldkCPIfTKHSpa41757978 = -750939371;    double aNHRqaAKwNdefoyBKldkCPIfTKHSpa69079321 = -62690062;    double aNHRqaAKwNdefoyBKldkCPIfTKHSpa93636401 = -445131157;    double aNHRqaAKwNdefoyBKldkCPIfTKHSpa27590710 = -165383876;    double aNHRqaAKwNdefoyBKldkCPIfTKHSpa95920673 = -72727677;    double aNHRqaAKwNdefoyBKldkCPIfTKHSpa96106688 = -374820288;    double aNHRqaAKwNdefoyBKldkCPIfTKHSpa47176914 = -393258617;    double aNHRqaAKwNdefoyBKldkCPIfTKHSpa99292826 = 91980169;    double aNHRqaAKwNdefoyBKldkCPIfTKHSpa10467581 = -285732784;    double aNHRqaAKwNdefoyBKldkCPIfTKHSpa90030826 = -738456607;    double aNHRqaAKwNdefoyBKldkCPIfTKHSpa4715056 = -661436247;    double aNHRqaAKwNdefoyBKldkCPIfTKHSpa61523892 = -344441191;    double aNHRqaAKwNdefoyBKldkCPIfTKHSpa740523 = -397638282;    double aNHRqaAKwNdefoyBKldkCPIfTKHSpa17303183 = -160978969;    double aNHRqaAKwNdefoyBKldkCPIfTKHSpa96760984 = 20370206;    double aNHRqaAKwNdefoyBKldkCPIfTKHSpa39260799 = 64925148;    double aNHRqaAKwNdefoyBKldkCPIfTKHSpa94465129 = -343760891;    double aNHRqaAKwNdefoyBKldkCPIfTKHSpa19554607 = -266911942;    double aNHRqaAKwNdefoyBKldkCPIfTKHSpa6010701 = -87337736;    double aNHRqaAKwNdefoyBKldkCPIfTKHSpa55085246 = -900607075;    double aNHRqaAKwNdefoyBKldkCPIfTKHSpa81715737 = -77336908;    double aNHRqaAKwNdefoyBKldkCPIfTKHSpa288858 = -65979727;    double aNHRqaAKwNdefoyBKldkCPIfTKHSpa44313875 = -137564581;    double aNHRqaAKwNdefoyBKldkCPIfTKHSpa81585880 = -528591395;    double aNHRqaAKwNdefoyBKldkCPIfTKHSpa81006773 = -811836954;    double aNHRqaAKwNdefoyBKldkCPIfTKHSpa4495586 = -798420993;    double aNHRqaAKwNdefoyBKldkCPIfTKHSpa29541315 = -520017888;    double aNHRqaAKwNdefoyBKldkCPIfTKHSpa3971821 = -654154800;    double aNHRqaAKwNdefoyBKldkCPIfTKHSpa44856882 = -827893833;    double aNHRqaAKwNdefoyBKldkCPIfTKHSpa90045384 = 87903593;    double aNHRqaAKwNdefoyBKldkCPIfTKHSpa7969205 = 87092530;     aNHRqaAKwNdefoyBKldkCPIfTKHSpa7360171 = aNHRqaAKwNdefoyBKldkCPIfTKHSpa47636419;     aNHRqaAKwNdefoyBKldkCPIfTKHSpa47636419 = aNHRqaAKwNdefoyBKldkCPIfTKHSpa21673454;     aNHRqaAKwNdefoyBKldkCPIfTKHSpa21673454 = aNHRqaAKwNdefoyBKldkCPIfTKHSpa15379516;     aNHRqaAKwNdefoyBKldkCPIfTKHSpa15379516 = aNHRqaAKwNdefoyBKldkCPIfTKHSpa32622421;     aNHRqaAKwNdefoyBKldkCPIfTKHSpa32622421 = aNHRqaAKwNdefoyBKldkCPIfTKHSpa7048177;     aNHRqaAKwNdefoyBKldkCPIfTKHSpa7048177 = aNHRqaAKwNdefoyBKldkCPIfTKHSpa44110149;     aNHRqaAKwNdefoyBKldkCPIfTKHSpa44110149 = aNHRqaAKwNdefoyBKldkCPIfTKHSpa35236468;     aNHRqaAKwNdefoyBKldkCPIfTKHSpa35236468 = aNHRqaAKwNdefoyBKldkCPIfTKHSpa95716282;     aNHRqaAKwNdefoyBKldkCPIfTKHSpa95716282 = aNHRqaAKwNdefoyBKldkCPIfTKHSpa67820616;     aNHRqaAKwNdefoyBKldkCPIfTKHSpa67820616 = aNHRqaAKwNdefoyBKldkCPIfTKHSpa9742801;     aNHRqaAKwNdefoyBKldkCPIfTKHSpa9742801 = aNHRqaAKwNdefoyBKldkCPIfTKHSpa13409716;     aNHRqaAKwNdefoyBKldkCPIfTKHSpa13409716 = aNHRqaAKwNdefoyBKldkCPIfTKHSpa77366034;     aNHRqaAKwNdefoyBKldkCPIfTKHSpa77366034 = aNHRqaAKwNdefoyBKldkCPIfTKHSpa68216712;     aNHRqaAKwNdefoyBKldkCPIfTKHSpa68216712 = aNHRqaAKwNdefoyBKldkCPIfTKHSpa42112675;     aNHRqaAKwNdefoyBKldkCPIfTKHSpa42112675 = aNHRqaAKwNdefoyBKldkCPIfTKHSpa82568707;     aNHRqaAKwNdefoyBKldkCPIfTKHSpa82568707 = aNHRqaAKwNdefoyBKldkCPIfTKHSpa4232854;     aNHRqaAKwNdefoyBKldkCPIfTKHSpa4232854 = aNHRqaAKwNdefoyBKldkCPIfTKHSpa80818852;     aNHRqaAKwNdefoyBKldkCPIfTKHSpa80818852 = aNHRqaAKwNdefoyBKldkCPIfTKHSpa6988208;     aNHRqaAKwNdefoyBKldkCPIfTKHSpa6988208 = aNHRqaAKwNdefoyBKldkCPIfTKHSpa2738504;     aNHRqaAKwNdefoyBKldkCPIfTKHSpa2738504 = aNHRqaAKwNdefoyBKldkCPIfTKHSpa68334546;     aNHRqaAKwNdefoyBKldkCPIfTKHSpa68334546 = aNHRqaAKwNdefoyBKldkCPIfTKHSpa40475812;     aNHRqaAKwNdefoyBKldkCPIfTKHSpa40475812 = aNHRqaAKwNdefoyBKldkCPIfTKHSpa47570579;     aNHRqaAKwNdefoyBKldkCPIfTKHSpa47570579 = aNHRqaAKwNdefoyBKldkCPIfTKHSpa52497942;     aNHRqaAKwNdefoyBKldkCPIfTKHSpa52497942 = aNHRqaAKwNdefoyBKldkCPIfTKHSpa86368945;     aNHRqaAKwNdefoyBKldkCPIfTKHSpa86368945 = aNHRqaAKwNdefoyBKldkCPIfTKHSpa60401051;     aNHRqaAKwNdefoyBKldkCPIfTKHSpa60401051 = aNHRqaAKwNdefoyBKldkCPIfTKHSpa476229;     aNHRqaAKwNdefoyBKldkCPIfTKHSpa476229 = aNHRqaAKwNdefoyBKldkCPIfTKHSpa67019649;     aNHRqaAKwNdefoyBKldkCPIfTKHSpa67019649 = aNHRqaAKwNdefoyBKldkCPIfTKHSpa18050656;     aNHRqaAKwNdefoyBKldkCPIfTKHSpa18050656 = aNHRqaAKwNdefoyBKldkCPIfTKHSpa99390178;     aNHRqaAKwNdefoyBKldkCPIfTKHSpa99390178 = aNHRqaAKwNdefoyBKldkCPIfTKHSpa20763003;     aNHRqaAKwNdefoyBKldkCPIfTKHSpa20763003 = aNHRqaAKwNdefoyBKldkCPIfTKHSpa55244890;     aNHRqaAKwNdefoyBKldkCPIfTKHSpa55244890 = aNHRqaAKwNdefoyBKldkCPIfTKHSpa30582420;     aNHRqaAKwNdefoyBKldkCPIfTKHSpa30582420 = aNHRqaAKwNdefoyBKldkCPIfTKHSpa51957166;     aNHRqaAKwNdefoyBKldkCPIfTKHSpa51957166 = aNHRqaAKwNdefoyBKldkCPIfTKHSpa48600096;     aNHRqaAKwNdefoyBKldkCPIfTKHSpa48600096 = aNHRqaAKwNdefoyBKldkCPIfTKHSpa354698;     aNHRqaAKwNdefoyBKldkCPIfTKHSpa354698 = aNHRqaAKwNdefoyBKldkCPIfTKHSpa13489386;     aNHRqaAKwNdefoyBKldkCPIfTKHSpa13489386 = aNHRqaAKwNdefoyBKldkCPIfTKHSpa10596452;     aNHRqaAKwNdefoyBKldkCPIfTKHSpa10596452 = aNHRqaAKwNdefoyBKldkCPIfTKHSpa53228143;     aNHRqaAKwNdefoyBKldkCPIfTKHSpa53228143 = aNHRqaAKwNdefoyBKldkCPIfTKHSpa11067535;     aNHRqaAKwNdefoyBKldkCPIfTKHSpa11067535 = aNHRqaAKwNdefoyBKldkCPIfTKHSpa6631815;     aNHRqaAKwNdefoyBKldkCPIfTKHSpa6631815 = aNHRqaAKwNdefoyBKldkCPIfTKHSpa21157633;     aNHRqaAKwNdefoyBKldkCPIfTKHSpa21157633 = aNHRqaAKwNdefoyBKldkCPIfTKHSpa41182986;     aNHRqaAKwNdefoyBKldkCPIfTKHSpa41182986 = aNHRqaAKwNdefoyBKldkCPIfTKHSpa37102999;     aNHRqaAKwNdefoyBKldkCPIfTKHSpa37102999 = aNHRqaAKwNdefoyBKldkCPIfTKHSpa62467115;     aNHRqaAKwNdefoyBKldkCPIfTKHSpa62467115 = aNHRqaAKwNdefoyBKldkCPIfTKHSpa81653889;     aNHRqaAKwNdefoyBKldkCPIfTKHSpa81653889 = aNHRqaAKwNdefoyBKldkCPIfTKHSpa98877159;     aNHRqaAKwNdefoyBKldkCPIfTKHSpa98877159 = aNHRqaAKwNdefoyBKldkCPIfTKHSpa99735706;     aNHRqaAKwNdefoyBKldkCPIfTKHSpa99735706 = aNHRqaAKwNdefoyBKldkCPIfTKHSpa49716466;     aNHRqaAKwNdefoyBKldkCPIfTKHSpa49716466 = aNHRqaAKwNdefoyBKldkCPIfTKHSpa21289672;     aNHRqaAKwNdefoyBKldkCPIfTKHSpa21289672 = aNHRqaAKwNdefoyBKldkCPIfTKHSpa60129380;     aNHRqaAKwNdefoyBKldkCPIfTKHSpa60129380 = aNHRqaAKwNdefoyBKldkCPIfTKHSpa26297873;     aNHRqaAKwNdefoyBKldkCPIfTKHSpa26297873 = aNHRqaAKwNdefoyBKldkCPIfTKHSpa35690284;     aNHRqaAKwNdefoyBKldkCPIfTKHSpa35690284 = aNHRqaAKwNdefoyBKldkCPIfTKHSpa24571719;     aNHRqaAKwNdefoyBKldkCPIfTKHSpa24571719 = aNHRqaAKwNdefoyBKldkCPIfTKHSpa96871920;     aNHRqaAKwNdefoyBKldkCPIfTKHSpa96871920 = aNHRqaAKwNdefoyBKldkCPIfTKHSpa66884358;     aNHRqaAKwNdefoyBKldkCPIfTKHSpa66884358 = aNHRqaAKwNdefoyBKldkCPIfTKHSpa65841;     aNHRqaAKwNdefoyBKldkCPIfTKHSpa65841 = aNHRqaAKwNdefoyBKldkCPIfTKHSpa69175511;     aNHRqaAKwNdefoyBKldkCPIfTKHSpa69175511 = aNHRqaAKwNdefoyBKldkCPIfTKHSpa29010571;     aNHRqaAKwNdefoyBKldkCPIfTKHSpa29010571 = aNHRqaAKwNdefoyBKldkCPIfTKHSpa72221369;     aNHRqaAKwNdefoyBKldkCPIfTKHSpa72221369 = aNHRqaAKwNdefoyBKldkCPIfTKHSpa6571949;     aNHRqaAKwNdefoyBKldkCPIfTKHSpa6571949 = aNHRqaAKwNdefoyBKldkCPIfTKHSpa77090500;     aNHRqaAKwNdefoyBKldkCPIfTKHSpa77090500 = aNHRqaAKwNdefoyBKldkCPIfTKHSpa17185813;     aNHRqaAKwNdefoyBKldkCPIfTKHSpa17185813 = aNHRqaAKwNdefoyBKldkCPIfTKHSpa96326104;     aNHRqaAKwNdefoyBKldkCPIfTKHSpa96326104 = aNHRqaAKwNdefoyBKldkCPIfTKHSpa47057614;     aNHRqaAKwNdefoyBKldkCPIfTKHSpa47057614 = aNHRqaAKwNdefoyBKldkCPIfTKHSpa54497910;     aNHRqaAKwNdefoyBKldkCPIfTKHSpa54497910 = aNHRqaAKwNdefoyBKldkCPIfTKHSpa82827296;     aNHRqaAKwNdefoyBKldkCPIfTKHSpa82827296 = aNHRqaAKwNdefoyBKldkCPIfTKHSpa25408869;     aNHRqaAKwNdefoyBKldkCPIfTKHSpa25408869 = aNHRqaAKwNdefoyBKldkCPIfTKHSpa19616616;     aNHRqaAKwNdefoyBKldkCPIfTKHSpa19616616 = aNHRqaAKwNdefoyBKldkCPIfTKHSpa41757978;     aNHRqaAKwNdefoyBKldkCPIfTKHSpa41757978 = aNHRqaAKwNdefoyBKldkCPIfTKHSpa69079321;     aNHRqaAKwNdefoyBKldkCPIfTKHSpa69079321 = aNHRqaAKwNdefoyBKldkCPIfTKHSpa93636401;     aNHRqaAKwNdefoyBKldkCPIfTKHSpa93636401 = aNHRqaAKwNdefoyBKldkCPIfTKHSpa27590710;     aNHRqaAKwNdefoyBKldkCPIfTKHSpa27590710 = aNHRqaAKwNdefoyBKldkCPIfTKHSpa95920673;     aNHRqaAKwNdefoyBKldkCPIfTKHSpa95920673 = aNHRqaAKwNdefoyBKldkCPIfTKHSpa96106688;     aNHRqaAKwNdefoyBKldkCPIfTKHSpa96106688 = aNHRqaAKwNdefoyBKldkCPIfTKHSpa47176914;     aNHRqaAKwNdefoyBKldkCPIfTKHSpa47176914 = aNHRqaAKwNdefoyBKldkCPIfTKHSpa99292826;     aNHRqaAKwNdefoyBKldkCPIfTKHSpa99292826 = aNHRqaAKwNdefoyBKldkCPIfTKHSpa10467581;     aNHRqaAKwNdefoyBKldkCPIfTKHSpa10467581 = aNHRqaAKwNdefoyBKldkCPIfTKHSpa90030826;     aNHRqaAKwNdefoyBKldkCPIfTKHSpa90030826 = aNHRqaAKwNdefoyBKldkCPIfTKHSpa4715056;     aNHRqaAKwNdefoyBKldkCPIfTKHSpa4715056 = aNHRqaAKwNdefoyBKldkCPIfTKHSpa61523892;     aNHRqaAKwNdefoyBKldkCPIfTKHSpa61523892 = aNHRqaAKwNdefoyBKldkCPIfTKHSpa740523;     aNHRqaAKwNdefoyBKldkCPIfTKHSpa740523 = aNHRqaAKwNdefoyBKldkCPIfTKHSpa17303183;     aNHRqaAKwNdefoyBKldkCPIfTKHSpa17303183 = aNHRqaAKwNdefoyBKldkCPIfTKHSpa96760984;     aNHRqaAKwNdefoyBKldkCPIfTKHSpa96760984 = aNHRqaAKwNdefoyBKldkCPIfTKHSpa39260799;     aNHRqaAKwNdefoyBKldkCPIfTKHSpa39260799 = aNHRqaAKwNdefoyBKldkCPIfTKHSpa94465129;     aNHRqaAKwNdefoyBKldkCPIfTKHSpa94465129 = aNHRqaAKwNdefoyBKldkCPIfTKHSpa19554607;     aNHRqaAKwNdefoyBKldkCPIfTKHSpa19554607 = aNHRqaAKwNdefoyBKldkCPIfTKHSpa6010701;     aNHRqaAKwNdefoyBKldkCPIfTKHSpa6010701 = aNHRqaAKwNdefoyBKldkCPIfTKHSpa55085246;     aNHRqaAKwNdefoyBKldkCPIfTKHSpa55085246 = aNHRqaAKwNdefoyBKldkCPIfTKHSpa81715737;     aNHRqaAKwNdefoyBKldkCPIfTKHSpa81715737 = aNHRqaAKwNdefoyBKldkCPIfTKHSpa288858;     aNHRqaAKwNdefoyBKldkCPIfTKHSpa288858 = aNHRqaAKwNdefoyBKldkCPIfTKHSpa44313875;     aNHRqaAKwNdefoyBKldkCPIfTKHSpa44313875 = aNHRqaAKwNdefoyBKldkCPIfTKHSpa81585880;     aNHRqaAKwNdefoyBKldkCPIfTKHSpa81585880 = aNHRqaAKwNdefoyBKldkCPIfTKHSpa81006773;     aNHRqaAKwNdefoyBKldkCPIfTKHSpa81006773 = aNHRqaAKwNdefoyBKldkCPIfTKHSpa4495586;     aNHRqaAKwNdefoyBKldkCPIfTKHSpa4495586 = aNHRqaAKwNdefoyBKldkCPIfTKHSpa29541315;     aNHRqaAKwNdefoyBKldkCPIfTKHSpa29541315 = aNHRqaAKwNdefoyBKldkCPIfTKHSpa3971821;     aNHRqaAKwNdefoyBKldkCPIfTKHSpa3971821 = aNHRqaAKwNdefoyBKldkCPIfTKHSpa44856882;     aNHRqaAKwNdefoyBKldkCPIfTKHSpa44856882 = aNHRqaAKwNdefoyBKldkCPIfTKHSpa90045384;     aNHRqaAKwNdefoyBKldkCPIfTKHSpa90045384 = aNHRqaAKwNdefoyBKldkCPIfTKHSpa7969205;     aNHRqaAKwNdefoyBKldkCPIfTKHSpa7969205 = aNHRqaAKwNdefoyBKldkCPIfTKHSpa7360171;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void BWndTfhJUgVXhkdOPpENRamGG27053725() {     double RmuaRAkunBcduxrpyNcuCoYaxSvTLH58524253 = -835497812;    double RmuaRAkunBcduxrpyNcuCoYaxSvTLH79003022 = -745399483;    double RmuaRAkunBcduxrpyNcuCoYaxSvTLH88745016 = -780741694;    double RmuaRAkunBcduxrpyNcuCoYaxSvTLH91903236 = -747643249;    double RmuaRAkunBcduxrpyNcuCoYaxSvTLH80146532 = -987886050;    double RmuaRAkunBcduxrpyNcuCoYaxSvTLH75872162 = -277972062;    double RmuaRAkunBcduxrpyNcuCoYaxSvTLH23299174 = -783300080;    double RmuaRAkunBcduxrpyNcuCoYaxSvTLH34470767 = 71924641;    double RmuaRAkunBcduxrpyNcuCoYaxSvTLH29115032 = -292978830;    double RmuaRAkunBcduxrpyNcuCoYaxSvTLH2776895 = -759284849;    double RmuaRAkunBcduxrpyNcuCoYaxSvTLH58730514 = -836821001;    double RmuaRAkunBcduxrpyNcuCoYaxSvTLH98336704 = -637315322;    double RmuaRAkunBcduxrpyNcuCoYaxSvTLH62380504 = -779563680;    double RmuaRAkunBcduxrpyNcuCoYaxSvTLH5180366 = 73049037;    double RmuaRAkunBcduxrpyNcuCoYaxSvTLH99822560 = -622132520;    double RmuaRAkunBcduxrpyNcuCoYaxSvTLH72575340 = 58967084;    double RmuaRAkunBcduxrpyNcuCoYaxSvTLH59681846 = -638593670;    double RmuaRAkunBcduxrpyNcuCoYaxSvTLH46051194 = -4953238;    double RmuaRAkunBcduxrpyNcuCoYaxSvTLH50345919 = -356211626;    double RmuaRAkunBcduxrpyNcuCoYaxSvTLH97135199 = -982385870;    double RmuaRAkunBcduxrpyNcuCoYaxSvTLH50022501 = -149489595;    double RmuaRAkunBcduxrpyNcuCoYaxSvTLH21778292 = -404475195;    double RmuaRAkunBcduxrpyNcuCoYaxSvTLH91976571 = -773582201;    double RmuaRAkunBcduxrpyNcuCoYaxSvTLH99576135 = -181708820;    double RmuaRAkunBcduxrpyNcuCoYaxSvTLH24617913 = -105525810;    double RmuaRAkunBcduxrpyNcuCoYaxSvTLH35953402 = -864687101;    double RmuaRAkunBcduxrpyNcuCoYaxSvTLH35473628 = -299870252;    double RmuaRAkunBcduxrpyNcuCoYaxSvTLH30220774 = -455868161;    double RmuaRAkunBcduxrpyNcuCoYaxSvTLH46483527 = -12982056;    double RmuaRAkunBcduxrpyNcuCoYaxSvTLH82125030 = -861031379;    double RmuaRAkunBcduxrpyNcuCoYaxSvTLH98268950 = -469131269;    double RmuaRAkunBcduxrpyNcuCoYaxSvTLH14348613 = -240618031;    double RmuaRAkunBcduxrpyNcuCoYaxSvTLH58408947 = -772942330;    double RmuaRAkunBcduxrpyNcuCoYaxSvTLH59414146 = -86293836;    double RmuaRAkunBcduxrpyNcuCoYaxSvTLH33768110 = -397412672;    double RmuaRAkunBcduxrpyNcuCoYaxSvTLH52766588 = -46343560;    double RmuaRAkunBcduxrpyNcuCoYaxSvTLH24721525 = -733841517;    double RmuaRAkunBcduxrpyNcuCoYaxSvTLH31659505 = -589900684;    double RmuaRAkunBcduxrpyNcuCoYaxSvTLH70388897 = 60698922;    double RmuaRAkunBcduxrpyNcuCoYaxSvTLH507775 = -748926292;    double RmuaRAkunBcduxrpyNcuCoYaxSvTLH88790044 = -84726658;    double RmuaRAkunBcduxrpyNcuCoYaxSvTLH94874473 = -234234133;    double RmuaRAkunBcduxrpyNcuCoYaxSvTLH99866784 = -763340639;    double RmuaRAkunBcduxrpyNcuCoYaxSvTLH37921455 = -334503006;    double RmuaRAkunBcduxrpyNcuCoYaxSvTLH30446920 = -95935368;    double RmuaRAkunBcduxrpyNcuCoYaxSvTLH54882502 = -639543172;    double RmuaRAkunBcduxrpyNcuCoYaxSvTLH26111860 = -829357242;    double RmuaRAkunBcduxrpyNcuCoYaxSvTLH91344829 = -264933037;    double RmuaRAkunBcduxrpyNcuCoYaxSvTLH69997495 = 10285947;    double RmuaRAkunBcduxrpyNcuCoYaxSvTLH48955084 = -297765439;    double RmuaRAkunBcduxrpyNcuCoYaxSvTLH93661244 = -308578242;    double RmuaRAkunBcduxrpyNcuCoYaxSvTLH95362289 = -819287189;    double RmuaRAkunBcduxrpyNcuCoYaxSvTLH47285839 = 37856234;    double RmuaRAkunBcduxrpyNcuCoYaxSvTLH72619807 = -650065519;    double RmuaRAkunBcduxrpyNcuCoYaxSvTLH77031223 = -903795198;    double RmuaRAkunBcduxrpyNcuCoYaxSvTLH36745962 = -331022618;    double RmuaRAkunBcduxrpyNcuCoYaxSvTLH87026451 = -971817282;    double RmuaRAkunBcduxrpyNcuCoYaxSvTLH89168881 = -499032874;    double RmuaRAkunBcduxrpyNcuCoYaxSvTLH67285323 = -542117439;    double RmuaRAkunBcduxrpyNcuCoYaxSvTLH44193131 = -23198949;    double RmuaRAkunBcduxrpyNcuCoYaxSvTLH40398534 = -978101811;    double RmuaRAkunBcduxrpyNcuCoYaxSvTLH93078399 = -227431920;    double RmuaRAkunBcduxrpyNcuCoYaxSvTLH87987239 = -915093303;    double RmuaRAkunBcduxrpyNcuCoYaxSvTLH46990002 = -431947452;    double RmuaRAkunBcduxrpyNcuCoYaxSvTLH4507945 = -190153581;    double RmuaRAkunBcduxrpyNcuCoYaxSvTLH44381901 = -496202971;    double RmuaRAkunBcduxrpyNcuCoYaxSvTLH39927758 = -864372993;    double RmuaRAkunBcduxrpyNcuCoYaxSvTLH2966359 = -593269845;    double RmuaRAkunBcduxrpyNcuCoYaxSvTLH71412255 = -529538292;    double RmuaRAkunBcduxrpyNcuCoYaxSvTLH47055972 = -475788961;    double RmuaRAkunBcduxrpyNcuCoYaxSvTLH47853816 = -207191399;    double RmuaRAkunBcduxrpyNcuCoYaxSvTLH28022341 = 51307014;    double RmuaRAkunBcduxrpyNcuCoYaxSvTLH75662297 = 34347840;    double RmuaRAkunBcduxrpyNcuCoYaxSvTLH49838145 = -607285334;    double RmuaRAkunBcduxrpyNcuCoYaxSvTLH8345156 = -797659212;    double RmuaRAkunBcduxrpyNcuCoYaxSvTLH55148028 = -915255463;    double RmuaRAkunBcduxrpyNcuCoYaxSvTLH21911507 = -641134557;    double RmuaRAkunBcduxrpyNcuCoYaxSvTLH54055117 = -339079195;    double RmuaRAkunBcduxrpyNcuCoYaxSvTLH69129215 = 14226547;    double RmuaRAkunBcduxrpyNcuCoYaxSvTLH69735410 = -465982638;    double RmuaRAkunBcduxrpyNcuCoYaxSvTLH9841542 = 64670140;    double RmuaRAkunBcduxrpyNcuCoYaxSvTLH44128799 = 65062785;    double RmuaRAkunBcduxrpyNcuCoYaxSvTLH60223279 = -366154108;    double RmuaRAkunBcduxrpyNcuCoYaxSvTLH97528443 = -715216618;    double RmuaRAkunBcduxrpyNcuCoYaxSvTLH88463786 = -452453138;    double RmuaRAkunBcduxrpyNcuCoYaxSvTLH2906661 = -649844080;    double RmuaRAkunBcduxrpyNcuCoYaxSvTLH67062773 = -178474266;    double RmuaRAkunBcduxrpyNcuCoYaxSvTLH85789139 = -22876812;    double RmuaRAkunBcduxrpyNcuCoYaxSvTLH82382922 = -182498638;    double RmuaRAkunBcduxrpyNcuCoYaxSvTLH97022148 = 33609945;    double RmuaRAkunBcduxrpyNcuCoYaxSvTLH65740137 = -74526278;    double RmuaRAkunBcduxrpyNcuCoYaxSvTLH35552644 = -134808644;    double RmuaRAkunBcduxrpyNcuCoYaxSvTLH64374182 = 52216754;    double RmuaRAkunBcduxrpyNcuCoYaxSvTLH26195766 = -916102130;    double RmuaRAkunBcduxrpyNcuCoYaxSvTLH60109240 = -770824481;    double RmuaRAkunBcduxrpyNcuCoYaxSvTLH95711644 = -857294739;    double RmuaRAkunBcduxrpyNcuCoYaxSvTLH6887234 = -319140830;    double RmuaRAkunBcduxrpyNcuCoYaxSvTLH52876783 = -231393188;    double RmuaRAkunBcduxrpyNcuCoYaxSvTLH33413510 = -44349426;    double RmuaRAkunBcduxrpyNcuCoYaxSvTLH86065018 = -835497812;     RmuaRAkunBcduxrpyNcuCoYaxSvTLH58524253 = RmuaRAkunBcduxrpyNcuCoYaxSvTLH79003022;     RmuaRAkunBcduxrpyNcuCoYaxSvTLH79003022 = RmuaRAkunBcduxrpyNcuCoYaxSvTLH88745016;     RmuaRAkunBcduxrpyNcuCoYaxSvTLH88745016 = RmuaRAkunBcduxrpyNcuCoYaxSvTLH91903236;     RmuaRAkunBcduxrpyNcuCoYaxSvTLH91903236 = RmuaRAkunBcduxrpyNcuCoYaxSvTLH80146532;     RmuaRAkunBcduxrpyNcuCoYaxSvTLH80146532 = RmuaRAkunBcduxrpyNcuCoYaxSvTLH75872162;     RmuaRAkunBcduxrpyNcuCoYaxSvTLH75872162 = RmuaRAkunBcduxrpyNcuCoYaxSvTLH23299174;     RmuaRAkunBcduxrpyNcuCoYaxSvTLH23299174 = RmuaRAkunBcduxrpyNcuCoYaxSvTLH34470767;     RmuaRAkunBcduxrpyNcuCoYaxSvTLH34470767 = RmuaRAkunBcduxrpyNcuCoYaxSvTLH29115032;     RmuaRAkunBcduxrpyNcuCoYaxSvTLH29115032 = RmuaRAkunBcduxrpyNcuCoYaxSvTLH2776895;     RmuaRAkunBcduxrpyNcuCoYaxSvTLH2776895 = RmuaRAkunBcduxrpyNcuCoYaxSvTLH58730514;     RmuaRAkunBcduxrpyNcuCoYaxSvTLH58730514 = RmuaRAkunBcduxrpyNcuCoYaxSvTLH98336704;     RmuaRAkunBcduxrpyNcuCoYaxSvTLH98336704 = RmuaRAkunBcduxrpyNcuCoYaxSvTLH62380504;     RmuaRAkunBcduxrpyNcuCoYaxSvTLH62380504 = RmuaRAkunBcduxrpyNcuCoYaxSvTLH5180366;     RmuaRAkunBcduxrpyNcuCoYaxSvTLH5180366 = RmuaRAkunBcduxrpyNcuCoYaxSvTLH99822560;     RmuaRAkunBcduxrpyNcuCoYaxSvTLH99822560 = RmuaRAkunBcduxrpyNcuCoYaxSvTLH72575340;     RmuaRAkunBcduxrpyNcuCoYaxSvTLH72575340 = RmuaRAkunBcduxrpyNcuCoYaxSvTLH59681846;     RmuaRAkunBcduxrpyNcuCoYaxSvTLH59681846 = RmuaRAkunBcduxrpyNcuCoYaxSvTLH46051194;     RmuaRAkunBcduxrpyNcuCoYaxSvTLH46051194 = RmuaRAkunBcduxrpyNcuCoYaxSvTLH50345919;     RmuaRAkunBcduxrpyNcuCoYaxSvTLH50345919 = RmuaRAkunBcduxrpyNcuCoYaxSvTLH97135199;     RmuaRAkunBcduxrpyNcuCoYaxSvTLH97135199 = RmuaRAkunBcduxrpyNcuCoYaxSvTLH50022501;     RmuaRAkunBcduxrpyNcuCoYaxSvTLH50022501 = RmuaRAkunBcduxrpyNcuCoYaxSvTLH21778292;     RmuaRAkunBcduxrpyNcuCoYaxSvTLH21778292 = RmuaRAkunBcduxrpyNcuCoYaxSvTLH91976571;     RmuaRAkunBcduxrpyNcuCoYaxSvTLH91976571 = RmuaRAkunBcduxrpyNcuCoYaxSvTLH99576135;     RmuaRAkunBcduxrpyNcuCoYaxSvTLH99576135 = RmuaRAkunBcduxrpyNcuCoYaxSvTLH24617913;     RmuaRAkunBcduxrpyNcuCoYaxSvTLH24617913 = RmuaRAkunBcduxrpyNcuCoYaxSvTLH35953402;     RmuaRAkunBcduxrpyNcuCoYaxSvTLH35953402 = RmuaRAkunBcduxrpyNcuCoYaxSvTLH35473628;     RmuaRAkunBcduxrpyNcuCoYaxSvTLH35473628 = RmuaRAkunBcduxrpyNcuCoYaxSvTLH30220774;     RmuaRAkunBcduxrpyNcuCoYaxSvTLH30220774 = RmuaRAkunBcduxrpyNcuCoYaxSvTLH46483527;     RmuaRAkunBcduxrpyNcuCoYaxSvTLH46483527 = RmuaRAkunBcduxrpyNcuCoYaxSvTLH82125030;     RmuaRAkunBcduxrpyNcuCoYaxSvTLH82125030 = RmuaRAkunBcduxrpyNcuCoYaxSvTLH98268950;     RmuaRAkunBcduxrpyNcuCoYaxSvTLH98268950 = RmuaRAkunBcduxrpyNcuCoYaxSvTLH14348613;     RmuaRAkunBcduxrpyNcuCoYaxSvTLH14348613 = RmuaRAkunBcduxrpyNcuCoYaxSvTLH58408947;     RmuaRAkunBcduxrpyNcuCoYaxSvTLH58408947 = RmuaRAkunBcduxrpyNcuCoYaxSvTLH59414146;     RmuaRAkunBcduxrpyNcuCoYaxSvTLH59414146 = RmuaRAkunBcduxrpyNcuCoYaxSvTLH33768110;     RmuaRAkunBcduxrpyNcuCoYaxSvTLH33768110 = RmuaRAkunBcduxrpyNcuCoYaxSvTLH52766588;     RmuaRAkunBcduxrpyNcuCoYaxSvTLH52766588 = RmuaRAkunBcduxrpyNcuCoYaxSvTLH24721525;     RmuaRAkunBcduxrpyNcuCoYaxSvTLH24721525 = RmuaRAkunBcduxrpyNcuCoYaxSvTLH31659505;     RmuaRAkunBcduxrpyNcuCoYaxSvTLH31659505 = RmuaRAkunBcduxrpyNcuCoYaxSvTLH70388897;     RmuaRAkunBcduxrpyNcuCoYaxSvTLH70388897 = RmuaRAkunBcduxrpyNcuCoYaxSvTLH507775;     RmuaRAkunBcduxrpyNcuCoYaxSvTLH507775 = RmuaRAkunBcduxrpyNcuCoYaxSvTLH88790044;     RmuaRAkunBcduxrpyNcuCoYaxSvTLH88790044 = RmuaRAkunBcduxrpyNcuCoYaxSvTLH94874473;     RmuaRAkunBcduxrpyNcuCoYaxSvTLH94874473 = RmuaRAkunBcduxrpyNcuCoYaxSvTLH99866784;     RmuaRAkunBcduxrpyNcuCoYaxSvTLH99866784 = RmuaRAkunBcduxrpyNcuCoYaxSvTLH37921455;     RmuaRAkunBcduxrpyNcuCoYaxSvTLH37921455 = RmuaRAkunBcduxrpyNcuCoYaxSvTLH30446920;     RmuaRAkunBcduxrpyNcuCoYaxSvTLH30446920 = RmuaRAkunBcduxrpyNcuCoYaxSvTLH54882502;     RmuaRAkunBcduxrpyNcuCoYaxSvTLH54882502 = RmuaRAkunBcduxrpyNcuCoYaxSvTLH26111860;     RmuaRAkunBcduxrpyNcuCoYaxSvTLH26111860 = RmuaRAkunBcduxrpyNcuCoYaxSvTLH91344829;     RmuaRAkunBcduxrpyNcuCoYaxSvTLH91344829 = RmuaRAkunBcduxrpyNcuCoYaxSvTLH69997495;     RmuaRAkunBcduxrpyNcuCoYaxSvTLH69997495 = RmuaRAkunBcduxrpyNcuCoYaxSvTLH48955084;     RmuaRAkunBcduxrpyNcuCoYaxSvTLH48955084 = RmuaRAkunBcduxrpyNcuCoYaxSvTLH93661244;     RmuaRAkunBcduxrpyNcuCoYaxSvTLH93661244 = RmuaRAkunBcduxrpyNcuCoYaxSvTLH95362289;     RmuaRAkunBcduxrpyNcuCoYaxSvTLH95362289 = RmuaRAkunBcduxrpyNcuCoYaxSvTLH47285839;     RmuaRAkunBcduxrpyNcuCoYaxSvTLH47285839 = RmuaRAkunBcduxrpyNcuCoYaxSvTLH72619807;     RmuaRAkunBcduxrpyNcuCoYaxSvTLH72619807 = RmuaRAkunBcduxrpyNcuCoYaxSvTLH77031223;     RmuaRAkunBcduxrpyNcuCoYaxSvTLH77031223 = RmuaRAkunBcduxrpyNcuCoYaxSvTLH36745962;     RmuaRAkunBcduxrpyNcuCoYaxSvTLH36745962 = RmuaRAkunBcduxrpyNcuCoYaxSvTLH87026451;     RmuaRAkunBcduxrpyNcuCoYaxSvTLH87026451 = RmuaRAkunBcduxrpyNcuCoYaxSvTLH89168881;     RmuaRAkunBcduxrpyNcuCoYaxSvTLH89168881 = RmuaRAkunBcduxrpyNcuCoYaxSvTLH67285323;     RmuaRAkunBcduxrpyNcuCoYaxSvTLH67285323 = RmuaRAkunBcduxrpyNcuCoYaxSvTLH44193131;     RmuaRAkunBcduxrpyNcuCoYaxSvTLH44193131 = RmuaRAkunBcduxrpyNcuCoYaxSvTLH40398534;     RmuaRAkunBcduxrpyNcuCoYaxSvTLH40398534 = RmuaRAkunBcduxrpyNcuCoYaxSvTLH93078399;     RmuaRAkunBcduxrpyNcuCoYaxSvTLH93078399 = RmuaRAkunBcduxrpyNcuCoYaxSvTLH87987239;     RmuaRAkunBcduxrpyNcuCoYaxSvTLH87987239 = RmuaRAkunBcduxrpyNcuCoYaxSvTLH46990002;     RmuaRAkunBcduxrpyNcuCoYaxSvTLH46990002 = RmuaRAkunBcduxrpyNcuCoYaxSvTLH4507945;     RmuaRAkunBcduxrpyNcuCoYaxSvTLH4507945 = RmuaRAkunBcduxrpyNcuCoYaxSvTLH44381901;     RmuaRAkunBcduxrpyNcuCoYaxSvTLH44381901 = RmuaRAkunBcduxrpyNcuCoYaxSvTLH39927758;     RmuaRAkunBcduxrpyNcuCoYaxSvTLH39927758 = RmuaRAkunBcduxrpyNcuCoYaxSvTLH2966359;     RmuaRAkunBcduxrpyNcuCoYaxSvTLH2966359 = RmuaRAkunBcduxrpyNcuCoYaxSvTLH71412255;     RmuaRAkunBcduxrpyNcuCoYaxSvTLH71412255 = RmuaRAkunBcduxrpyNcuCoYaxSvTLH47055972;     RmuaRAkunBcduxrpyNcuCoYaxSvTLH47055972 = RmuaRAkunBcduxrpyNcuCoYaxSvTLH47853816;     RmuaRAkunBcduxrpyNcuCoYaxSvTLH47853816 = RmuaRAkunBcduxrpyNcuCoYaxSvTLH28022341;     RmuaRAkunBcduxrpyNcuCoYaxSvTLH28022341 = RmuaRAkunBcduxrpyNcuCoYaxSvTLH75662297;     RmuaRAkunBcduxrpyNcuCoYaxSvTLH75662297 = RmuaRAkunBcduxrpyNcuCoYaxSvTLH49838145;     RmuaRAkunBcduxrpyNcuCoYaxSvTLH49838145 = RmuaRAkunBcduxrpyNcuCoYaxSvTLH8345156;     RmuaRAkunBcduxrpyNcuCoYaxSvTLH8345156 = RmuaRAkunBcduxrpyNcuCoYaxSvTLH55148028;     RmuaRAkunBcduxrpyNcuCoYaxSvTLH55148028 = RmuaRAkunBcduxrpyNcuCoYaxSvTLH21911507;     RmuaRAkunBcduxrpyNcuCoYaxSvTLH21911507 = RmuaRAkunBcduxrpyNcuCoYaxSvTLH54055117;     RmuaRAkunBcduxrpyNcuCoYaxSvTLH54055117 = RmuaRAkunBcduxrpyNcuCoYaxSvTLH69129215;     RmuaRAkunBcduxrpyNcuCoYaxSvTLH69129215 = RmuaRAkunBcduxrpyNcuCoYaxSvTLH69735410;     RmuaRAkunBcduxrpyNcuCoYaxSvTLH69735410 = RmuaRAkunBcduxrpyNcuCoYaxSvTLH9841542;     RmuaRAkunBcduxrpyNcuCoYaxSvTLH9841542 = RmuaRAkunBcduxrpyNcuCoYaxSvTLH44128799;     RmuaRAkunBcduxrpyNcuCoYaxSvTLH44128799 = RmuaRAkunBcduxrpyNcuCoYaxSvTLH60223279;     RmuaRAkunBcduxrpyNcuCoYaxSvTLH60223279 = RmuaRAkunBcduxrpyNcuCoYaxSvTLH97528443;     RmuaRAkunBcduxrpyNcuCoYaxSvTLH97528443 = RmuaRAkunBcduxrpyNcuCoYaxSvTLH88463786;     RmuaRAkunBcduxrpyNcuCoYaxSvTLH88463786 = RmuaRAkunBcduxrpyNcuCoYaxSvTLH2906661;     RmuaRAkunBcduxrpyNcuCoYaxSvTLH2906661 = RmuaRAkunBcduxrpyNcuCoYaxSvTLH67062773;     RmuaRAkunBcduxrpyNcuCoYaxSvTLH67062773 = RmuaRAkunBcduxrpyNcuCoYaxSvTLH85789139;     RmuaRAkunBcduxrpyNcuCoYaxSvTLH85789139 = RmuaRAkunBcduxrpyNcuCoYaxSvTLH82382922;     RmuaRAkunBcduxrpyNcuCoYaxSvTLH82382922 = RmuaRAkunBcduxrpyNcuCoYaxSvTLH97022148;     RmuaRAkunBcduxrpyNcuCoYaxSvTLH97022148 = RmuaRAkunBcduxrpyNcuCoYaxSvTLH65740137;     RmuaRAkunBcduxrpyNcuCoYaxSvTLH65740137 = RmuaRAkunBcduxrpyNcuCoYaxSvTLH35552644;     RmuaRAkunBcduxrpyNcuCoYaxSvTLH35552644 = RmuaRAkunBcduxrpyNcuCoYaxSvTLH64374182;     RmuaRAkunBcduxrpyNcuCoYaxSvTLH64374182 = RmuaRAkunBcduxrpyNcuCoYaxSvTLH26195766;     RmuaRAkunBcduxrpyNcuCoYaxSvTLH26195766 = RmuaRAkunBcduxrpyNcuCoYaxSvTLH60109240;     RmuaRAkunBcduxrpyNcuCoYaxSvTLH60109240 = RmuaRAkunBcduxrpyNcuCoYaxSvTLH95711644;     RmuaRAkunBcduxrpyNcuCoYaxSvTLH95711644 = RmuaRAkunBcduxrpyNcuCoYaxSvTLH6887234;     RmuaRAkunBcduxrpyNcuCoYaxSvTLH6887234 = RmuaRAkunBcduxrpyNcuCoYaxSvTLH52876783;     RmuaRAkunBcduxrpyNcuCoYaxSvTLH52876783 = RmuaRAkunBcduxrpyNcuCoYaxSvTLH33413510;     RmuaRAkunBcduxrpyNcuCoYaxSvTLH33413510 = RmuaRAkunBcduxrpyNcuCoYaxSvTLH86065018;     RmuaRAkunBcduxrpyNcuCoYaxSvTLH86065018 = RmuaRAkunBcduxrpyNcuCoYaxSvTLH58524253;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void MHXneMLaylEOCwgJFfwztsaXZ36658452() {     double WxzroUTjoRLrqUpLpTYvEsMZnEytwT80346474 = -303713144;    double WxzroUTjoRLrqUpLpTYvEsMZnEytwT40470827 = -27998336;    double WxzroUTjoRLrqUpLpTYvEsMZnEytwT34472287 = -827959226;    double WxzroUTjoRLrqUpLpTYvEsMZnEytwT23278382 = -952427425;    double WxzroUTjoRLrqUpLpTYvEsMZnEytwT40280864 = -865136971;    double WxzroUTjoRLrqUpLpTYvEsMZnEytwT99890477 = -289515220;    double WxzroUTjoRLrqUpLpTYvEsMZnEytwT52319759 = -846618204;    double WxzroUTjoRLrqUpLpTYvEsMZnEytwT21333396 = 63743793;    double WxzroUTjoRLrqUpLpTYvEsMZnEytwT25638672 = -278774248;    double WxzroUTjoRLrqUpLpTYvEsMZnEytwT64060120 = -629503247;    double WxzroUTjoRLrqUpLpTYvEsMZnEytwT29646783 = -392578704;    double WxzroUTjoRLrqUpLpTYvEsMZnEytwT14518588 = -740496929;    double WxzroUTjoRLrqUpLpTYvEsMZnEytwT95369446 = -217597469;    double WxzroUTjoRLrqUpLpTYvEsMZnEytwT72146833 = -777027761;    double WxzroUTjoRLrqUpLpTYvEsMZnEytwT95080355 = -548974439;    double WxzroUTjoRLrqUpLpTYvEsMZnEytwT20546067 = -383399457;    double WxzroUTjoRLrqUpLpTYvEsMZnEytwT53130905 = 75581612;    double WxzroUTjoRLrqUpLpTYvEsMZnEytwT8576497 = 73325845;    double WxzroUTjoRLrqUpLpTYvEsMZnEytwT54983143 = -429347283;    double WxzroUTjoRLrqUpLpTYvEsMZnEytwT78244842 = -373630926;    double WxzroUTjoRLrqUpLpTYvEsMZnEytwT7176787 = -981568298;    double WxzroUTjoRLrqUpLpTYvEsMZnEytwT86180270 = -475226359;    double WxzroUTjoRLrqUpLpTYvEsMZnEytwT1447976 = -329609557;    double WxzroUTjoRLrqUpLpTYvEsMZnEytwT36853758 = -591807686;    double WxzroUTjoRLrqUpLpTYvEsMZnEytwT98548579 = -16422783;    double WxzroUTjoRLrqUpLpTYvEsMZnEytwT25529256 = -91872629;    double WxzroUTjoRLrqUpLpTYvEsMZnEytwT8510232 = -926674296;    double WxzroUTjoRLrqUpLpTYvEsMZnEytwT65800600 = -320316393;    double WxzroUTjoRLrqUpLpTYvEsMZnEytwT94380440 = -779927974;    double WxzroUTjoRLrqUpLpTYvEsMZnEytwT27942108 = -137245573;    double WxzroUTjoRLrqUpLpTYvEsMZnEytwT49434216 = -874859016;    double WxzroUTjoRLrqUpLpTYvEsMZnEytwT33239939 = -16506862;    double WxzroUTjoRLrqUpLpTYvEsMZnEytwT83728411 = -515546213;    double WxzroUTjoRLrqUpLpTYvEsMZnEytwT31953263 = -862113463;    double WxzroUTjoRLrqUpLpTYvEsMZnEytwT14602323 = -547231274;    double WxzroUTjoRLrqUpLpTYvEsMZnEytwT22343548 = -60759540;    double WxzroUTjoRLrqUpLpTYvEsMZnEytwT67803781 = -783458614;    double WxzroUTjoRLrqUpLpTYvEsMZnEytwT35597367 = -71443442;    double WxzroUTjoRLrqUpLpTYvEsMZnEytwT30769343 = -811706359;    double WxzroUTjoRLrqUpLpTYvEsMZnEytwT13178421 = -106475293;    double WxzroUTjoRLrqUpLpTYvEsMZnEytwT43165890 = -518865916;    double WxzroUTjoRLrqUpLpTYvEsMZnEytwT11376645 = 78299789;    double WxzroUTjoRLrqUpLpTYvEsMZnEytwT47234183 = -807307454;    double WxzroUTjoRLrqUpLpTYvEsMZnEytwT86016313 = -243309176;    double WxzroUTjoRLrqUpLpTYvEsMZnEytwT10362731 = -282623997;    double WxzroUTjoRLrqUpLpTYvEsMZnEytwT94088981 = -342975403;    double WxzroUTjoRLrqUpLpTYvEsMZnEytwT51779972 = 89635238;    double WxzroUTjoRLrqUpLpTYvEsMZnEytwT73184581 = -3429026;    double WxzroUTjoRLrqUpLpTYvEsMZnEytwT77061587 = -174830476;    double WxzroUTjoRLrqUpLpTYvEsMZnEytwT65002561 = -276820624;    double WxzroUTjoRLrqUpLpTYvEsMZnEytwT82123063 = -352467567;    double WxzroUTjoRLrqUpLpTYvEsMZnEytwT91750953 = -44665270;    double WxzroUTjoRLrqUpLpTYvEsMZnEytwT38508704 = 74261094;    double WxzroUTjoRLrqUpLpTYvEsMZnEytwT644930 = -841074578;    double WxzroUTjoRLrqUpLpTYvEsMZnEytwT29481665 = -864916948;    double WxzroUTjoRLrqUpLpTYvEsMZnEytwT94166204 = -828486785;    double WxzroUTjoRLrqUpLpTYvEsMZnEytwT39022851 = -698388780;    double WxzroUTjoRLrqUpLpTYvEsMZnEytwT97618529 = -136151540;    double WxzroUTjoRLrqUpLpTYvEsMZnEytwT24729802 = -836004642;    double WxzroUTjoRLrqUpLpTYvEsMZnEytwT14751608 = -673264342;    double WxzroUTjoRLrqUpLpTYvEsMZnEytwT91380245 = -362840925;    double WxzroUTjoRLrqUpLpTYvEsMZnEytwT86519158 = -426301811;    double WxzroUTjoRLrqUpLpTYvEsMZnEytwT26952956 = -156328234;    double WxzroUTjoRLrqUpLpTYvEsMZnEytwT97696564 = -41528675;    double WxzroUTjoRLrqUpLpTYvEsMZnEytwT14625905 = -754644231;    double WxzroUTjoRLrqUpLpTYvEsMZnEytwT96406844 = -276071843;    double WxzroUTjoRLrqUpLpTYvEsMZnEytwT30790177 = -124950716;    double WxzroUTjoRLrqUpLpTYvEsMZnEytwT63416184 = -355484006;    double WxzroUTjoRLrqUpLpTYvEsMZnEytwT57544510 = -129796487;    double WxzroUTjoRLrqUpLpTYvEsMZnEytwT72736808 = -388214900;    double WxzroUTjoRLrqUpLpTYvEsMZnEytwT52742285 = -599940844;    double WxzroUTjoRLrqUpLpTYvEsMZnEytwT17533538 = -852974947;    double WxzroUTjoRLrqUpLpTYvEsMZnEytwT77807154 = -114967797;    double WxzroUTjoRLrqUpLpTYvEsMZnEytwT41804723 = -222871990;    double WxzroUTjoRLrqUpLpTYvEsMZnEytwT35078952 = -854765010;    double WxzroUTjoRLrqUpLpTYvEsMZnEytwT95800141 = -959868088;    double WxzroUTjoRLrqUpLpTYvEsMZnEytwT38946087 = -667918906;    double WxzroUTjoRLrqUpLpTYvEsMZnEytwT15431663 = 13699619;    double WxzroUTjoRLrqUpLpTYvEsMZnEytwT26491027 = -209183689;    double WxzroUTjoRLrqUpLpTYvEsMZnEytwT4459599 = -673447381;    double WxzroUTjoRLrqUpLpTYvEsMZnEytwT73749284 = -81507867;    double WxzroUTjoRLrqUpLpTYvEsMZnEytwT35325651 = -823245271;    double WxzroUTjoRLrqUpLpTYvEsMZnEytwT88739012 = -45485918;    double WxzroUTjoRLrqUpLpTYvEsMZnEytwT29377879 = -403107351;    double WxzroUTjoRLrqUpLpTYvEsMZnEytwT45819044 = -784778006;    double WxzroUTjoRLrqUpLpTYvEsMZnEytwT57683262 = -730193747;    double WxzroUTjoRLrqUpLpTYvEsMZnEytwT94731234 = 9232043;    double WxzroUTjoRLrqUpLpTYvEsMZnEytwT83083481 = -674471635;    double WxzroUTjoRLrqUpLpTYvEsMZnEytwT2471599 = -997196516;    double WxzroUTjoRLrqUpLpTYvEsMZnEytwT20436118 = -718744490;    double WxzroUTjoRLrqUpLpTYvEsMZnEytwT83320697 = -362370761;    double WxzroUTjoRLrqUpLpTYvEsMZnEytwT70185252 = -547307074;    double WxzroUTjoRLrqUpLpTYvEsMZnEytwT10867565 = -235438800;    double WxzroUTjoRLrqUpLpTYvEsMZnEytwT16017735 = -38442017;    double WxzroUTjoRLrqUpLpTYvEsMZnEytwT21798175 = -743634369;    double WxzroUTjoRLrqUpLpTYvEsMZnEytwT56646731 = 7435894;    double WxzroUTjoRLrqUpLpTYvEsMZnEytwT84423688 = -765371978;    double WxzroUTjoRLrqUpLpTYvEsMZnEytwT49537619 = -665778779;    double WxzroUTjoRLrqUpLpTYvEsMZnEytwT71390409 = -488664945;    double WxzroUTjoRLrqUpLpTYvEsMZnEytwT13955887 = -303713144;     WxzroUTjoRLrqUpLpTYvEsMZnEytwT80346474 = WxzroUTjoRLrqUpLpTYvEsMZnEytwT40470827;     WxzroUTjoRLrqUpLpTYvEsMZnEytwT40470827 = WxzroUTjoRLrqUpLpTYvEsMZnEytwT34472287;     WxzroUTjoRLrqUpLpTYvEsMZnEytwT34472287 = WxzroUTjoRLrqUpLpTYvEsMZnEytwT23278382;     WxzroUTjoRLrqUpLpTYvEsMZnEytwT23278382 = WxzroUTjoRLrqUpLpTYvEsMZnEytwT40280864;     WxzroUTjoRLrqUpLpTYvEsMZnEytwT40280864 = WxzroUTjoRLrqUpLpTYvEsMZnEytwT99890477;     WxzroUTjoRLrqUpLpTYvEsMZnEytwT99890477 = WxzroUTjoRLrqUpLpTYvEsMZnEytwT52319759;     WxzroUTjoRLrqUpLpTYvEsMZnEytwT52319759 = WxzroUTjoRLrqUpLpTYvEsMZnEytwT21333396;     WxzroUTjoRLrqUpLpTYvEsMZnEytwT21333396 = WxzroUTjoRLrqUpLpTYvEsMZnEytwT25638672;     WxzroUTjoRLrqUpLpTYvEsMZnEytwT25638672 = WxzroUTjoRLrqUpLpTYvEsMZnEytwT64060120;     WxzroUTjoRLrqUpLpTYvEsMZnEytwT64060120 = WxzroUTjoRLrqUpLpTYvEsMZnEytwT29646783;     WxzroUTjoRLrqUpLpTYvEsMZnEytwT29646783 = WxzroUTjoRLrqUpLpTYvEsMZnEytwT14518588;     WxzroUTjoRLrqUpLpTYvEsMZnEytwT14518588 = WxzroUTjoRLrqUpLpTYvEsMZnEytwT95369446;     WxzroUTjoRLrqUpLpTYvEsMZnEytwT95369446 = WxzroUTjoRLrqUpLpTYvEsMZnEytwT72146833;     WxzroUTjoRLrqUpLpTYvEsMZnEytwT72146833 = WxzroUTjoRLrqUpLpTYvEsMZnEytwT95080355;     WxzroUTjoRLrqUpLpTYvEsMZnEytwT95080355 = WxzroUTjoRLrqUpLpTYvEsMZnEytwT20546067;     WxzroUTjoRLrqUpLpTYvEsMZnEytwT20546067 = WxzroUTjoRLrqUpLpTYvEsMZnEytwT53130905;     WxzroUTjoRLrqUpLpTYvEsMZnEytwT53130905 = WxzroUTjoRLrqUpLpTYvEsMZnEytwT8576497;     WxzroUTjoRLrqUpLpTYvEsMZnEytwT8576497 = WxzroUTjoRLrqUpLpTYvEsMZnEytwT54983143;     WxzroUTjoRLrqUpLpTYvEsMZnEytwT54983143 = WxzroUTjoRLrqUpLpTYvEsMZnEytwT78244842;     WxzroUTjoRLrqUpLpTYvEsMZnEytwT78244842 = WxzroUTjoRLrqUpLpTYvEsMZnEytwT7176787;     WxzroUTjoRLrqUpLpTYvEsMZnEytwT7176787 = WxzroUTjoRLrqUpLpTYvEsMZnEytwT86180270;     WxzroUTjoRLrqUpLpTYvEsMZnEytwT86180270 = WxzroUTjoRLrqUpLpTYvEsMZnEytwT1447976;     WxzroUTjoRLrqUpLpTYvEsMZnEytwT1447976 = WxzroUTjoRLrqUpLpTYvEsMZnEytwT36853758;     WxzroUTjoRLrqUpLpTYvEsMZnEytwT36853758 = WxzroUTjoRLrqUpLpTYvEsMZnEytwT98548579;     WxzroUTjoRLrqUpLpTYvEsMZnEytwT98548579 = WxzroUTjoRLrqUpLpTYvEsMZnEytwT25529256;     WxzroUTjoRLrqUpLpTYvEsMZnEytwT25529256 = WxzroUTjoRLrqUpLpTYvEsMZnEytwT8510232;     WxzroUTjoRLrqUpLpTYvEsMZnEytwT8510232 = WxzroUTjoRLrqUpLpTYvEsMZnEytwT65800600;     WxzroUTjoRLrqUpLpTYvEsMZnEytwT65800600 = WxzroUTjoRLrqUpLpTYvEsMZnEytwT94380440;     WxzroUTjoRLrqUpLpTYvEsMZnEytwT94380440 = WxzroUTjoRLrqUpLpTYvEsMZnEytwT27942108;     WxzroUTjoRLrqUpLpTYvEsMZnEytwT27942108 = WxzroUTjoRLrqUpLpTYvEsMZnEytwT49434216;     WxzroUTjoRLrqUpLpTYvEsMZnEytwT49434216 = WxzroUTjoRLrqUpLpTYvEsMZnEytwT33239939;     WxzroUTjoRLrqUpLpTYvEsMZnEytwT33239939 = WxzroUTjoRLrqUpLpTYvEsMZnEytwT83728411;     WxzroUTjoRLrqUpLpTYvEsMZnEytwT83728411 = WxzroUTjoRLrqUpLpTYvEsMZnEytwT31953263;     WxzroUTjoRLrqUpLpTYvEsMZnEytwT31953263 = WxzroUTjoRLrqUpLpTYvEsMZnEytwT14602323;     WxzroUTjoRLrqUpLpTYvEsMZnEytwT14602323 = WxzroUTjoRLrqUpLpTYvEsMZnEytwT22343548;     WxzroUTjoRLrqUpLpTYvEsMZnEytwT22343548 = WxzroUTjoRLrqUpLpTYvEsMZnEytwT67803781;     WxzroUTjoRLrqUpLpTYvEsMZnEytwT67803781 = WxzroUTjoRLrqUpLpTYvEsMZnEytwT35597367;     WxzroUTjoRLrqUpLpTYvEsMZnEytwT35597367 = WxzroUTjoRLrqUpLpTYvEsMZnEytwT30769343;     WxzroUTjoRLrqUpLpTYvEsMZnEytwT30769343 = WxzroUTjoRLrqUpLpTYvEsMZnEytwT13178421;     WxzroUTjoRLrqUpLpTYvEsMZnEytwT13178421 = WxzroUTjoRLrqUpLpTYvEsMZnEytwT43165890;     WxzroUTjoRLrqUpLpTYvEsMZnEytwT43165890 = WxzroUTjoRLrqUpLpTYvEsMZnEytwT11376645;     WxzroUTjoRLrqUpLpTYvEsMZnEytwT11376645 = WxzroUTjoRLrqUpLpTYvEsMZnEytwT47234183;     WxzroUTjoRLrqUpLpTYvEsMZnEytwT47234183 = WxzroUTjoRLrqUpLpTYvEsMZnEytwT86016313;     WxzroUTjoRLrqUpLpTYvEsMZnEytwT86016313 = WxzroUTjoRLrqUpLpTYvEsMZnEytwT10362731;     WxzroUTjoRLrqUpLpTYvEsMZnEytwT10362731 = WxzroUTjoRLrqUpLpTYvEsMZnEytwT94088981;     WxzroUTjoRLrqUpLpTYvEsMZnEytwT94088981 = WxzroUTjoRLrqUpLpTYvEsMZnEytwT51779972;     WxzroUTjoRLrqUpLpTYvEsMZnEytwT51779972 = WxzroUTjoRLrqUpLpTYvEsMZnEytwT73184581;     WxzroUTjoRLrqUpLpTYvEsMZnEytwT73184581 = WxzroUTjoRLrqUpLpTYvEsMZnEytwT77061587;     WxzroUTjoRLrqUpLpTYvEsMZnEytwT77061587 = WxzroUTjoRLrqUpLpTYvEsMZnEytwT65002561;     WxzroUTjoRLrqUpLpTYvEsMZnEytwT65002561 = WxzroUTjoRLrqUpLpTYvEsMZnEytwT82123063;     WxzroUTjoRLrqUpLpTYvEsMZnEytwT82123063 = WxzroUTjoRLrqUpLpTYvEsMZnEytwT91750953;     WxzroUTjoRLrqUpLpTYvEsMZnEytwT91750953 = WxzroUTjoRLrqUpLpTYvEsMZnEytwT38508704;     WxzroUTjoRLrqUpLpTYvEsMZnEytwT38508704 = WxzroUTjoRLrqUpLpTYvEsMZnEytwT644930;     WxzroUTjoRLrqUpLpTYvEsMZnEytwT644930 = WxzroUTjoRLrqUpLpTYvEsMZnEytwT29481665;     WxzroUTjoRLrqUpLpTYvEsMZnEytwT29481665 = WxzroUTjoRLrqUpLpTYvEsMZnEytwT94166204;     WxzroUTjoRLrqUpLpTYvEsMZnEytwT94166204 = WxzroUTjoRLrqUpLpTYvEsMZnEytwT39022851;     WxzroUTjoRLrqUpLpTYvEsMZnEytwT39022851 = WxzroUTjoRLrqUpLpTYvEsMZnEytwT97618529;     WxzroUTjoRLrqUpLpTYvEsMZnEytwT97618529 = WxzroUTjoRLrqUpLpTYvEsMZnEytwT24729802;     WxzroUTjoRLrqUpLpTYvEsMZnEytwT24729802 = WxzroUTjoRLrqUpLpTYvEsMZnEytwT14751608;     WxzroUTjoRLrqUpLpTYvEsMZnEytwT14751608 = WxzroUTjoRLrqUpLpTYvEsMZnEytwT91380245;     WxzroUTjoRLrqUpLpTYvEsMZnEytwT91380245 = WxzroUTjoRLrqUpLpTYvEsMZnEytwT86519158;     WxzroUTjoRLrqUpLpTYvEsMZnEytwT86519158 = WxzroUTjoRLrqUpLpTYvEsMZnEytwT26952956;     WxzroUTjoRLrqUpLpTYvEsMZnEytwT26952956 = WxzroUTjoRLrqUpLpTYvEsMZnEytwT97696564;     WxzroUTjoRLrqUpLpTYvEsMZnEytwT97696564 = WxzroUTjoRLrqUpLpTYvEsMZnEytwT14625905;     WxzroUTjoRLrqUpLpTYvEsMZnEytwT14625905 = WxzroUTjoRLrqUpLpTYvEsMZnEytwT96406844;     WxzroUTjoRLrqUpLpTYvEsMZnEytwT96406844 = WxzroUTjoRLrqUpLpTYvEsMZnEytwT30790177;     WxzroUTjoRLrqUpLpTYvEsMZnEytwT30790177 = WxzroUTjoRLrqUpLpTYvEsMZnEytwT63416184;     WxzroUTjoRLrqUpLpTYvEsMZnEytwT63416184 = WxzroUTjoRLrqUpLpTYvEsMZnEytwT57544510;     WxzroUTjoRLrqUpLpTYvEsMZnEytwT57544510 = WxzroUTjoRLrqUpLpTYvEsMZnEytwT72736808;     WxzroUTjoRLrqUpLpTYvEsMZnEytwT72736808 = WxzroUTjoRLrqUpLpTYvEsMZnEytwT52742285;     WxzroUTjoRLrqUpLpTYvEsMZnEytwT52742285 = WxzroUTjoRLrqUpLpTYvEsMZnEytwT17533538;     WxzroUTjoRLrqUpLpTYvEsMZnEytwT17533538 = WxzroUTjoRLrqUpLpTYvEsMZnEytwT77807154;     WxzroUTjoRLrqUpLpTYvEsMZnEytwT77807154 = WxzroUTjoRLrqUpLpTYvEsMZnEytwT41804723;     WxzroUTjoRLrqUpLpTYvEsMZnEytwT41804723 = WxzroUTjoRLrqUpLpTYvEsMZnEytwT35078952;     WxzroUTjoRLrqUpLpTYvEsMZnEytwT35078952 = WxzroUTjoRLrqUpLpTYvEsMZnEytwT95800141;     WxzroUTjoRLrqUpLpTYvEsMZnEytwT95800141 = WxzroUTjoRLrqUpLpTYvEsMZnEytwT38946087;     WxzroUTjoRLrqUpLpTYvEsMZnEytwT38946087 = WxzroUTjoRLrqUpLpTYvEsMZnEytwT15431663;     WxzroUTjoRLrqUpLpTYvEsMZnEytwT15431663 = WxzroUTjoRLrqUpLpTYvEsMZnEytwT26491027;     WxzroUTjoRLrqUpLpTYvEsMZnEytwT26491027 = WxzroUTjoRLrqUpLpTYvEsMZnEytwT4459599;     WxzroUTjoRLrqUpLpTYvEsMZnEytwT4459599 = WxzroUTjoRLrqUpLpTYvEsMZnEytwT73749284;     WxzroUTjoRLrqUpLpTYvEsMZnEytwT73749284 = WxzroUTjoRLrqUpLpTYvEsMZnEytwT35325651;     WxzroUTjoRLrqUpLpTYvEsMZnEytwT35325651 = WxzroUTjoRLrqUpLpTYvEsMZnEytwT88739012;     WxzroUTjoRLrqUpLpTYvEsMZnEytwT88739012 = WxzroUTjoRLrqUpLpTYvEsMZnEytwT29377879;     WxzroUTjoRLrqUpLpTYvEsMZnEytwT29377879 = WxzroUTjoRLrqUpLpTYvEsMZnEytwT45819044;     WxzroUTjoRLrqUpLpTYvEsMZnEytwT45819044 = WxzroUTjoRLrqUpLpTYvEsMZnEytwT57683262;     WxzroUTjoRLrqUpLpTYvEsMZnEytwT57683262 = WxzroUTjoRLrqUpLpTYvEsMZnEytwT94731234;     WxzroUTjoRLrqUpLpTYvEsMZnEytwT94731234 = WxzroUTjoRLrqUpLpTYvEsMZnEytwT83083481;     WxzroUTjoRLrqUpLpTYvEsMZnEytwT83083481 = WxzroUTjoRLrqUpLpTYvEsMZnEytwT2471599;     WxzroUTjoRLrqUpLpTYvEsMZnEytwT2471599 = WxzroUTjoRLrqUpLpTYvEsMZnEytwT20436118;     WxzroUTjoRLrqUpLpTYvEsMZnEytwT20436118 = WxzroUTjoRLrqUpLpTYvEsMZnEytwT83320697;     WxzroUTjoRLrqUpLpTYvEsMZnEytwT83320697 = WxzroUTjoRLrqUpLpTYvEsMZnEytwT70185252;     WxzroUTjoRLrqUpLpTYvEsMZnEytwT70185252 = WxzroUTjoRLrqUpLpTYvEsMZnEytwT10867565;     WxzroUTjoRLrqUpLpTYvEsMZnEytwT10867565 = WxzroUTjoRLrqUpLpTYvEsMZnEytwT16017735;     WxzroUTjoRLrqUpLpTYvEsMZnEytwT16017735 = WxzroUTjoRLrqUpLpTYvEsMZnEytwT21798175;     WxzroUTjoRLrqUpLpTYvEsMZnEytwT21798175 = WxzroUTjoRLrqUpLpTYvEsMZnEytwT56646731;     WxzroUTjoRLrqUpLpTYvEsMZnEytwT56646731 = WxzroUTjoRLrqUpLpTYvEsMZnEytwT84423688;     WxzroUTjoRLrqUpLpTYvEsMZnEytwT84423688 = WxzroUTjoRLrqUpLpTYvEsMZnEytwT49537619;     WxzroUTjoRLrqUpLpTYvEsMZnEytwT49537619 = WxzroUTjoRLrqUpLpTYvEsMZnEytwT71390409;     WxzroUTjoRLrqUpLpTYvEsMZnEytwT71390409 = WxzroUTjoRLrqUpLpTYvEsMZnEytwT13955887;     WxzroUTjoRLrqUpLpTYvEsMZnEytwT13955887 = WxzroUTjoRLrqUpLpTYvEsMZnEytwT80346474;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void xtXihOycTUAwJfmgurMaLZEbS98505709() {     double UlXAcWZqtqrxghdlMcAGGKEGkucmOV31510557 = -126303487;    double UlXAcWZqtqrxghdlMcAGGKEGkucmOV71837429 = -581549014;    double UlXAcWZqtqrxghdlMcAGGKEGkucmOV1543851 = -390010912;    double UlXAcWZqtqrxghdlMcAGGKEGkucmOV99802101 = -787614042;    double UlXAcWZqtqrxghdlMcAGGKEGkucmOV87804975 = -327336867;    double UlXAcWZqtqrxghdlMcAGGKEGkucmOV68714463 = -298910039;    double UlXAcWZqtqrxghdlMcAGGKEGkucmOV31508784 = -615697085;    double UlXAcWZqtqrxghdlMcAGGKEGkucmOV20567695 = -401797282;    double UlXAcWZqtqrxghdlMcAGGKEGkucmOV59037421 = -984868407;    double UlXAcWZqtqrxghdlMcAGGKEGkucmOV99016398 = -935433165;    double UlXAcWZqtqrxghdlMcAGGKEGkucmOV78634496 = -972906549;    double UlXAcWZqtqrxghdlMcAGGKEGkucmOV99445576 = -263393105;    double UlXAcWZqtqrxghdlMcAGGKEGkucmOV80383916 = -867752674;    double UlXAcWZqtqrxghdlMcAGGKEGkucmOV9110487 = 28770601;    double UlXAcWZqtqrxghdlMcAGGKEGkucmOV52790241 = -288779206;    double UlXAcWZqtqrxghdlMcAGGKEGkucmOV10552700 = -488578062;    double UlXAcWZqtqrxghdlMcAGGKEGkucmOV8579898 = -220672546;    double UlXAcWZqtqrxghdlMcAGGKEGkucmOV73808838 = -256300498;    double UlXAcWZqtqrxghdlMcAGGKEGkucmOV98340854 = -413277264;    double UlXAcWZqtqrxghdlMcAGGKEGkucmOV72641538 = -934534129;    double UlXAcWZqtqrxghdlMcAGGKEGkucmOV88864741 = -515434234;    double UlXAcWZqtqrxghdlMcAGGKEGkucmOV67482749 = -724684102;    double UlXAcWZqtqrxghdlMcAGGKEGkucmOV45853968 = -876751609;    double UlXAcWZqtqrxghdlMcAGGKEGkucmOV83931951 = -190426168;    double UlXAcWZqtqrxghdlMcAGGKEGkucmOV36797548 = -678108921;    double UlXAcWZqtqrxghdlMcAGGKEGkucmOV1081606 = -228979641;    double UlXAcWZqtqrxghdlMcAGGKEGkucmOV43507632 = -359100278;    double UlXAcWZqtqrxghdlMcAGGKEGkucmOV29001725 = -288607847;    double UlXAcWZqtqrxghdlMcAGGKEGkucmOV22813312 = -798585990;    double UlXAcWZqtqrxghdlMcAGGKEGkucmOV10676960 = -730496070;    double UlXAcWZqtqrxghdlMcAGGKEGkucmOV26940163 = -819246313;    double UlXAcWZqtqrxghdlMcAGGKEGkucmOV92343660 = -955920291;    double UlXAcWZqtqrxghdlMcAGGKEGkucmOV11554939 = -513132703;    double UlXAcWZqtqrxghdlMcAGGKEGkucmOV39410243 = -851085139;    double UlXAcWZqtqrxghdlMcAGGKEGkucmOV99770336 = -9417022;    double UlXAcWZqtqrxghdlMcAGGKEGkucmOV74755438 = -75714718;    double UlXAcWZqtqrxghdlMcAGGKEGkucmOV79035919 = -744135881;    double UlXAcWZqtqrxghdlMcAGGKEGkucmOV56660420 = -864135771;    double UlXAcWZqtqrxghdlMcAGGKEGkucmOV47930097 = -241064419;    double UlXAcWZqtqrxghdlMcAGGKEGkucmOV2618661 = -655847618;    double UlXAcWZqtqrxghdlMcAGGKEGkucmOV25324120 = -656930194;    double UlXAcWZqtqrxghdlMcAGGKEGkucmOV85093485 = -33569301;    double UlXAcWZqtqrxghdlMcAGGKEGkucmOV5917983 = -323650471;    double UlXAcWZqtqrxghdlMcAGGKEGkucmOV86834770 = -737104817;    double UlXAcWZqtqrxghdlMcAGGKEGkucmOV78342535 = -633925633;    double UlXAcWZqtqrxghdlMcAGGKEGkucmOV67317594 = -100115149;    double UlXAcWZqtqrxghdlMcAGGKEGkucmOV79014672 = -456583106;    double UlXAcWZqtqrxghdlMcAGGKEGkucmOV64793703 = -998556075;    double UlXAcWZqtqrxghdlMcAGGKEGkucmOV97342616 = 62053210;    double UlXAcWZqtqrxghdlMcAGGKEGkucmOV92667974 = -659891816;    double UlXAcWZqtqrxghdlMcAGGKEGkucmOV15654929 = -428339779;    double UlXAcWZqtqrxghdlMcAGGKEGkucmOV60815370 = -782969377;    double UlXAcWZqtqrxghdlMcAGGKEGkucmOV50104259 = -953590011;    double UlXAcWZqtqrxghdlMcAGGKEGkucmOV48693018 = -903121992;    double UlXAcWZqtqrxghdlMcAGGKEGkucmOV9640968 = -471997060;    double UlXAcWZqtqrxghdlMcAGGKEGkucmOV64027808 = -401619386;    double UlXAcWZqtqrxghdlMcAGGKEGkucmOV25983461 = -704797406;    double UlXAcWZqtqrxghdlMcAGGKEGkucmOV17611900 = -99584744;    double UlXAcWZqtqrxghdlMcAGGKEGkucmOV63004554 = -9505121;    double UlXAcWZqtqrxghdlMcAGGKEGkucmOV86723369 = 1642773;    double UlXAcWZqtqrxghdlMcAGGKEGkucmOV25206832 = -939809761;    double UlXAcWZqtqrxghdlMcAGGKEGkucmOV2507059 = -227089238;    double UlXAcWZqtqrxghdlMcAGGKEGkucmOV97754383 = -603211293;    double UlXAcWZqtqrxghdlMcAGGKEGkucmOV48360462 = -154372337;    double UlXAcWZqtqrxghdlMcAGGKEGkucmOV72076236 = -16186852;    double UlXAcWZqtqrxghdlMcAGGKEGkucmOV86290835 = 83013741;    double UlXAcWZqtqrxghdlMcAGGKEGkucmOV87890638 = -750260402;    double UlXAcWZqtqrxghdlMcAGGKEGkucmOV40973674 = 83332464;    double UlXAcWZqtqrxghdlMcAGGKEGkucmOV9340151 = -961812378;    double UlXAcWZqtqrxghdlMcAGGKEGkucmOV78034802 = -113064489;    double UlXAcWZqtqrxghdlMcAGGKEGkucmOV31516780 = -744442181;    double UlXAcWZqtqrxghdlMcAGGKEGkucmOV51919477 = -356536776;    double UlXAcWZqtqrxghdlMcAGGKEGkucmOV25878742 = 84763920;    double UlXAcWZqtqrxghdlMcAGGKEGkucmOV95722194 = -757429647;    double UlXAcWZqtqrxghdlMcAGGKEGkucmOV47317419 = -177603935;    double UlXAcWZqtqrxghdlMcAGGKEGkucmOV3771256 = -381864933;    double UlXAcWZqtqrxghdlMcAGGKEGkucmOV61564767 = -301033631;    double UlXAcWZqtqrxghdlMcAGGKEGkucmOV59019198 = -39646793;    double UlXAcWZqtqrxghdlMcAGGKEGkucmOV5589416 = -556500535;    double UlXAcWZqtqrxghdlMcAGGKEGkucmOV69479954 = -477993773;    double UlXAcWZqtqrxghdlMcAGGKEGkucmOV22066934 = -772396536;    double UlXAcWZqtqrxghdlMcAGGKEGkucmOV78713928 = -360544203;    double UlXAcWZqtqrxghdlMcAGGKEGkucmOV31659108 = -250661057;    double UlXAcWZqtqrxghdlMcAGGKEGkucmOV30145338 = -38694174;    double UlXAcWZqtqrxghdlMcAGGKEGkucmOV95022031 = -202156292;    double UlXAcWZqtqrxghdlMcAGGKEGkucmOV66124793 = 63723064;    double UlXAcWZqtqrxghdlMcAGGKEGkucmOV42239402 = 97669720;    double UlXAcWZqtqrxghdlMcAGGKEGkucmOV62861920 = -610010711;    double UlXAcWZqtqrxghdlMcAGGKEGkucmOV29769275 = -279088079;    double UlXAcWZqtqrxghdlMcAGGKEGkucmOV35742529 = -607797637;    double UlXAcWZqtqrxghdlMcAGGKEGkucmOV48771977 = -370917312;    double UlXAcWZqtqrxghdlMcAGGKEGkucmOV61424020 = -544551138;    double UlXAcWZqtqrxghdlMcAGGKEGkucmOV93655866 = -754630650;    double UlXAcWZqtqrxghdlMcAGGKEGkucmOV61206728 = -142707193;    double UlXAcWZqtqrxghdlMcAGGKEGkucmOV77411829 = -716037857;    double UlXAcWZqtqrxghdlMcAGGKEGkucmOV22817062 = -329840956;    double UlXAcWZqtqrxghdlMcAGGKEGkucmOV87339102 = -430358008;    double UlXAcWZqtqrxghdlMcAGGKEGkucmOV57557520 = -69278134;    double UlXAcWZqtqrxghdlMcAGGKEGkucmOV14758535 = -620917965;    double UlXAcWZqtqrxghdlMcAGGKEGkucmOV92051700 = -126303487;     UlXAcWZqtqrxghdlMcAGGKEGkucmOV31510557 = UlXAcWZqtqrxghdlMcAGGKEGkucmOV71837429;     UlXAcWZqtqrxghdlMcAGGKEGkucmOV71837429 = UlXAcWZqtqrxghdlMcAGGKEGkucmOV1543851;     UlXAcWZqtqrxghdlMcAGGKEGkucmOV1543851 = UlXAcWZqtqrxghdlMcAGGKEGkucmOV99802101;     UlXAcWZqtqrxghdlMcAGGKEGkucmOV99802101 = UlXAcWZqtqrxghdlMcAGGKEGkucmOV87804975;     UlXAcWZqtqrxghdlMcAGGKEGkucmOV87804975 = UlXAcWZqtqrxghdlMcAGGKEGkucmOV68714463;     UlXAcWZqtqrxghdlMcAGGKEGkucmOV68714463 = UlXAcWZqtqrxghdlMcAGGKEGkucmOV31508784;     UlXAcWZqtqrxghdlMcAGGKEGkucmOV31508784 = UlXAcWZqtqrxghdlMcAGGKEGkucmOV20567695;     UlXAcWZqtqrxghdlMcAGGKEGkucmOV20567695 = UlXAcWZqtqrxghdlMcAGGKEGkucmOV59037421;     UlXAcWZqtqrxghdlMcAGGKEGkucmOV59037421 = UlXAcWZqtqrxghdlMcAGGKEGkucmOV99016398;     UlXAcWZqtqrxghdlMcAGGKEGkucmOV99016398 = UlXAcWZqtqrxghdlMcAGGKEGkucmOV78634496;     UlXAcWZqtqrxghdlMcAGGKEGkucmOV78634496 = UlXAcWZqtqrxghdlMcAGGKEGkucmOV99445576;     UlXAcWZqtqrxghdlMcAGGKEGkucmOV99445576 = UlXAcWZqtqrxghdlMcAGGKEGkucmOV80383916;     UlXAcWZqtqrxghdlMcAGGKEGkucmOV80383916 = UlXAcWZqtqrxghdlMcAGGKEGkucmOV9110487;     UlXAcWZqtqrxghdlMcAGGKEGkucmOV9110487 = UlXAcWZqtqrxghdlMcAGGKEGkucmOV52790241;     UlXAcWZqtqrxghdlMcAGGKEGkucmOV52790241 = UlXAcWZqtqrxghdlMcAGGKEGkucmOV10552700;     UlXAcWZqtqrxghdlMcAGGKEGkucmOV10552700 = UlXAcWZqtqrxghdlMcAGGKEGkucmOV8579898;     UlXAcWZqtqrxghdlMcAGGKEGkucmOV8579898 = UlXAcWZqtqrxghdlMcAGGKEGkucmOV73808838;     UlXAcWZqtqrxghdlMcAGGKEGkucmOV73808838 = UlXAcWZqtqrxghdlMcAGGKEGkucmOV98340854;     UlXAcWZqtqrxghdlMcAGGKEGkucmOV98340854 = UlXAcWZqtqrxghdlMcAGGKEGkucmOV72641538;     UlXAcWZqtqrxghdlMcAGGKEGkucmOV72641538 = UlXAcWZqtqrxghdlMcAGGKEGkucmOV88864741;     UlXAcWZqtqrxghdlMcAGGKEGkucmOV88864741 = UlXAcWZqtqrxghdlMcAGGKEGkucmOV67482749;     UlXAcWZqtqrxghdlMcAGGKEGkucmOV67482749 = UlXAcWZqtqrxghdlMcAGGKEGkucmOV45853968;     UlXAcWZqtqrxghdlMcAGGKEGkucmOV45853968 = UlXAcWZqtqrxghdlMcAGGKEGkucmOV83931951;     UlXAcWZqtqrxghdlMcAGGKEGkucmOV83931951 = UlXAcWZqtqrxghdlMcAGGKEGkucmOV36797548;     UlXAcWZqtqrxghdlMcAGGKEGkucmOV36797548 = UlXAcWZqtqrxghdlMcAGGKEGkucmOV1081606;     UlXAcWZqtqrxghdlMcAGGKEGkucmOV1081606 = UlXAcWZqtqrxghdlMcAGGKEGkucmOV43507632;     UlXAcWZqtqrxghdlMcAGGKEGkucmOV43507632 = UlXAcWZqtqrxghdlMcAGGKEGkucmOV29001725;     UlXAcWZqtqrxghdlMcAGGKEGkucmOV29001725 = UlXAcWZqtqrxghdlMcAGGKEGkucmOV22813312;     UlXAcWZqtqrxghdlMcAGGKEGkucmOV22813312 = UlXAcWZqtqrxghdlMcAGGKEGkucmOV10676960;     UlXAcWZqtqrxghdlMcAGGKEGkucmOV10676960 = UlXAcWZqtqrxghdlMcAGGKEGkucmOV26940163;     UlXAcWZqtqrxghdlMcAGGKEGkucmOV26940163 = UlXAcWZqtqrxghdlMcAGGKEGkucmOV92343660;     UlXAcWZqtqrxghdlMcAGGKEGkucmOV92343660 = UlXAcWZqtqrxghdlMcAGGKEGkucmOV11554939;     UlXAcWZqtqrxghdlMcAGGKEGkucmOV11554939 = UlXAcWZqtqrxghdlMcAGGKEGkucmOV39410243;     UlXAcWZqtqrxghdlMcAGGKEGkucmOV39410243 = UlXAcWZqtqrxghdlMcAGGKEGkucmOV99770336;     UlXAcWZqtqrxghdlMcAGGKEGkucmOV99770336 = UlXAcWZqtqrxghdlMcAGGKEGkucmOV74755438;     UlXAcWZqtqrxghdlMcAGGKEGkucmOV74755438 = UlXAcWZqtqrxghdlMcAGGKEGkucmOV79035919;     UlXAcWZqtqrxghdlMcAGGKEGkucmOV79035919 = UlXAcWZqtqrxghdlMcAGGKEGkucmOV56660420;     UlXAcWZqtqrxghdlMcAGGKEGkucmOV56660420 = UlXAcWZqtqrxghdlMcAGGKEGkucmOV47930097;     UlXAcWZqtqrxghdlMcAGGKEGkucmOV47930097 = UlXAcWZqtqrxghdlMcAGGKEGkucmOV2618661;     UlXAcWZqtqrxghdlMcAGGKEGkucmOV2618661 = UlXAcWZqtqrxghdlMcAGGKEGkucmOV25324120;     UlXAcWZqtqrxghdlMcAGGKEGkucmOV25324120 = UlXAcWZqtqrxghdlMcAGGKEGkucmOV85093485;     UlXAcWZqtqrxghdlMcAGGKEGkucmOV85093485 = UlXAcWZqtqrxghdlMcAGGKEGkucmOV5917983;     UlXAcWZqtqrxghdlMcAGGKEGkucmOV5917983 = UlXAcWZqtqrxghdlMcAGGKEGkucmOV86834770;     UlXAcWZqtqrxghdlMcAGGKEGkucmOV86834770 = UlXAcWZqtqrxghdlMcAGGKEGkucmOV78342535;     UlXAcWZqtqrxghdlMcAGGKEGkucmOV78342535 = UlXAcWZqtqrxghdlMcAGGKEGkucmOV67317594;     UlXAcWZqtqrxghdlMcAGGKEGkucmOV67317594 = UlXAcWZqtqrxghdlMcAGGKEGkucmOV79014672;     UlXAcWZqtqrxghdlMcAGGKEGkucmOV79014672 = UlXAcWZqtqrxghdlMcAGGKEGkucmOV64793703;     UlXAcWZqtqrxghdlMcAGGKEGkucmOV64793703 = UlXAcWZqtqrxghdlMcAGGKEGkucmOV97342616;     UlXAcWZqtqrxghdlMcAGGKEGkucmOV97342616 = UlXAcWZqtqrxghdlMcAGGKEGkucmOV92667974;     UlXAcWZqtqrxghdlMcAGGKEGkucmOV92667974 = UlXAcWZqtqrxghdlMcAGGKEGkucmOV15654929;     UlXAcWZqtqrxghdlMcAGGKEGkucmOV15654929 = UlXAcWZqtqrxghdlMcAGGKEGkucmOV60815370;     UlXAcWZqtqrxghdlMcAGGKEGkucmOV60815370 = UlXAcWZqtqrxghdlMcAGGKEGkucmOV50104259;     UlXAcWZqtqrxghdlMcAGGKEGkucmOV50104259 = UlXAcWZqtqrxghdlMcAGGKEGkucmOV48693018;     UlXAcWZqtqrxghdlMcAGGKEGkucmOV48693018 = UlXAcWZqtqrxghdlMcAGGKEGkucmOV9640968;     UlXAcWZqtqrxghdlMcAGGKEGkucmOV9640968 = UlXAcWZqtqrxghdlMcAGGKEGkucmOV64027808;     UlXAcWZqtqrxghdlMcAGGKEGkucmOV64027808 = UlXAcWZqtqrxghdlMcAGGKEGkucmOV25983461;     UlXAcWZqtqrxghdlMcAGGKEGkucmOV25983461 = UlXAcWZqtqrxghdlMcAGGKEGkucmOV17611900;     UlXAcWZqtqrxghdlMcAGGKEGkucmOV17611900 = UlXAcWZqtqrxghdlMcAGGKEGkucmOV63004554;     UlXAcWZqtqrxghdlMcAGGKEGkucmOV63004554 = UlXAcWZqtqrxghdlMcAGGKEGkucmOV86723369;     UlXAcWZqtqrxghdlMcAGGKEGkucmOV86723369 = UlXAcWZqtqrxghdlMcAGGKEGkucmOV25206832;     UlXAcWZqtqrxghdlMcAGGKEGkucmOV25206832 = UlXAcWZqtqrxghdlMcAGGKEGkucmOV2507059;     UlXAcWZqtqrxghdlMcAGGKEGkucmOV2507059 = UlXAcWZqtqrxghdlMcAGGKEGkucmOV97754383;     UlXAcWZqtqrxghdlMcAGGKEGkucmOV97754383 = UlXAcWZqtqrxghdlMcAGGKEGkucmOV48360462;     UlXAcWZqtqrxghdlMcAGGKEGkucmOV48360462 = UlXAcWZqtqrxghdlMcAGGKEGkucmOV72076236;     UlXAcWZqtqrxghdlMcAGGKEGkucmOV72076236 = UlXAcWZqtqrxghdlMcAGGKEGkucmOV86290835;     UlXAcWZqtqrxghdlMcAGGKEGkucmOV86290835 = UlXAcWZqtqrxghdlMcAGGKEGkucmOV87890638;     UlXAcWZqtqrxghdlMcAGGKEGkucmOV87890638 = UlXAcWZqtqrxghdlMcAGGKEGkucmOV40973674;     UlXAcWZqtqrxghdlMcAGGKEGkucmOV40973674 = UlXAcWZqtqrxghdlMcAGGKEGkucmOV9340151;     UlXAcWZqtqrxghdlMcAGGKEGkucmOV9340151 = UlXAcWZqtqrxghdlMcAGGKEGkucmOV78034802;     UlXAcWZqtqrxghdlMcAGGKEGkucmOV78034802 = UlXAcWZqtqrxghdlMcAGGKEGkucmOV31516780;     UlXAcWZqtqrxghdlMcAGGKEGkucmOV31516780 = UlXAcWZqtqrxghdlMcAGGKEGkucmOV51919477;     UlXAcWZqtqrxghdlMcAGGKEGkucmOV51919477 = UlXAcWZqtqrxghdlMcAGGKEGkucmOV25878742;     UlXAcWZqtqrxghdlMcAGGKEGkucmOV25878742 = UlXAcWZqtqrxghdlMcAGGKEGkucmOV95722194;     UlXAcWZqtqrxghdlMcAGGKEGkucmOV95722194 = UlXAcWZqtqrxghdlMcAGGKEGkucmOV47317419;     UlXAcWZqtqrxghdlMcAGGKEGkucmOV47317419 = UlXAcWZqtqrxghdlMcAGGKEGkucmOV3771256;     UlXAcWZqtqrxghdlMcAGGKEGkucmOV3771256 = UlXAcWZqtqrxghdlMcAGGKEGkucmOV61564767;     UlXAcWZqtqrxghdlMcAGGKEGkucmOV61564767 = UlXAcWZqtqrxghdlMcAGGKEGkucmOV59019198;     UlXAcWZqtqrxghdlMcAGGKEGkucmOV59019198 = UlXAcWZqtqrxghdlMcAGGKEGkucmOV5589416;     UlXAcWZqtqrxghdlMcAGGKEGkucmOV5589416 = UlXAcWZqtqrxghdlMcAGGKEGkucmOV69479954;     UlXAcWZqtqrxghdlMcAGGKEGkucmOV69479954 = UlXAcWZqtqrxghdlMcAGGKEGkucmOV22066934;     UlXAcWZqtqrxghdlMcAGGKEGkucmOV22066934 = UlXAcWZqtqrxghdlMcAGGKEGkucmOV78713928;     UlXAcWZqtqrxghdlMcAGGKEGkucmOV78713928 = UlXAcWZqtqrxghdlMcAGGKEGkucmOV31659108;     UlXAcWZqtqrxghdlMcAGGKEGkucmOV31659108 = UlXAcWZqtqrxghdlMcAGGKEGkucmOV30145338;     UlXAcWZqtqrxghdlMcAGGKEGkucmOV30145338 = UlXAcWZqtqrxghdlMcAGGKEGkucmOV95022031;     UlXAcWZqtqrxghdlMcAGGKEGkucmOV95022031 = UlXAcWZqtqrxghdlMcAGGKEGkucmOV66124793;     UlXAcWZqtqrxghdlMcAGGKEGkucmOV66124793 = UlXAcWZqtqrxghdlMcAGGKEGkucmOV42239402;     UlXAcWZqtqrxghdlMcAGGKEGkucmOV42239402 = UlXAcWZqtqrxghdlMcAGGKEGkucmOV62861920;     UlXAcWZqtqrxghdlMcAGGKEGkucmOV62861920 = UlXAcWZqtqrxghdlMcAGGKEGkucmOV29769275;     UlXAcWZqtqrxghdlMcAGGKEGkucmOV29769275 = UlXAcWZqtqrxghdlMcAGGKEGkucmOV35742529;     UlXAcWZqtqrxghdlMcAGGKEGkucmOV35742529 = UlXAcWZqtqrxghdlMcAGGKEGkucmOV48771977;     UlXAcWZqtqrxghdlMcAGGKEGkucmOV48771977 = UlXAcWZqtqrxghdlMcAGGKEGkucmOV61424020;     UlXAcWZqtqrxghdlMcAGGKEGkucmOV61424020 = UlXAcWZqtqrxghdlMcAGGKEGkucmOV93655866;     UlXAcWZqtqrxghdlMcAGGKEGkucmOV93655866 = UlXAcWZqtqrxghdlMcAGGKEGkucmOV61206728;     UlXAcWZqtqrxghdlMcAGGKEGkucmOV61206728 = UlXAcWZqtqrxghdlMcAGGKEGkucmOV77411829;     UlXAcWZqtqrxghdlMcAGGKEGkucmOV77411829 = UlXAcWZqtqrxghdlMcAGGKEGkucmOV22817062;     UlXAcWZqtqrxghdlMcAGGKEGkucmOV22817062 = UlXAcWZqtqrxghdlMcAGGKEGkucmOV87339102;     UlXAcWZqtqrxghdlMcAGGKEGkucmOV87339102 = UlXAcWZqtqrxghdlMcAGGKEGkucmOV57557520;     UlXAcWZqtqrxghdlMcAGGKEGkucmOV57557520 = UlXAcWZqtqrxghdlMcAGGKEGkucmOV14758535;     UlXAcWZqtqrxghdlMcAGGKEGkucmOV14758535 = UlXAcWZqtqrxghdlMcAGGKEGkucmOV92051700;     UlXAcWZqtqrxghdlMcAGGKEGkucmOV92051700 = UlXAcWZqtqrxghdlMcAGGKEGkucmOV31510557;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void NCvVDCjNFUCdgSscfTNBZPBHZ8110437() {     double NeOnmcwbHYMnMEJOYvNIbGValWaZvM53332778 = -694518818;    double NeOnmcwbHYMnMEJOYvNIbGValWaZvM33305234 = -964147867;    double NeOnmcwbHYMnMEJOYvNIbGValWaZvM47271121 = -437228444;    double NeOnmcwbHYMnMEJOYvNIbGValWaZvM31177248 = -992398217;    double NeOnmcwbHYMnMEJOYvNIbGValWaZvM47939306 = -204587789;    double NeOnmcwbHYMnMEJOYvNIbGValWaZvM92732778 = -310453197;    double NeOnmcwbHYMnMEJOYvNIbGValWaZvM60529368 = -679015209;    double NeOnmcwbHYMnMEJOYvNIbGValWaZvM7430325 = -409978130;    double NeOnmcwbHYMnMEJOYvNIbGValWaZvM55561061 = -970663825;    double NeOnmcwbHYMnMEJOYvNIbGValWaZvM60299625 = -805651562;    double NeOnmcwbHYMnMEJOYvNIbGValWaZvM49550764 = -528664252;    double NeOnmcwbHYMnMEJOYvNIbGValWaZvM15627460 = -366574711;    double NeOnmcwbHYMnMEJOYvNIbGValWaZvM13372859 = -305786463;    double NeOnmcwbHYMnMEJOYvNIbGValWaZvM76076954 = -821306197;    double NeOnmcwbHYMnMEJOYvNIbGValWaZvM48048036 = -215621125;    double NeOnmcwbHYMnMEJOYvNIbGValWaZvM58523426 = -930944603;    double NeOnmcwbHYMnMEJOYvNIbGValWaZvM2028957 = -606497264;    double NeOnmcwbHYMnMEJOYvNIbGValWaZvM36334142 = -178021416;    double NeOnmcwbHYMnMEJOYvNIbGValWaZvM2978079 = -486412921;    double NeOnmcwbHYMnMEJOYvNIbGValWaZvM53751181 = -325779185;    double NeOnmcwbHYMnMEJOYvNIbGValWaZvM46019027 = -247512936;    double NeOnmcwbHYMnMEJOYvNIbGValWaZvM31884728 = -795435266;    double NeOnmcwbHYMnMEJOYvNIbGValWaZvM55325373 = -432778964;    double NeOnmcwbHYMnMEJOYvNIbGValWaZvM21209573 = -600525033;    double NeOnmcwbHYMnMEJOYvNIbGValWaZvM10728215 = -589005893;    double NeOnmcwbHYMnMEJOYvNIbGValWaZvM90657459 = -556165169;    double NeOnmcwbHYMnMEJOYvNIbGValWaZvM16544236 = -985904323;    double NeOnmcwbHYMnMEJOYvNIbGValWaZvM64581550 = -153056080;    double NeOnmcwbHYMnMEJOYvNIbGValWaZvM70710224 = -465531907;    double NeOnmcwbHYMnMEJOYvNIbGValWaZvM56494037 = -6710265;    double NeOnmcwbHYMnMEJOYvNIbGValWaZvM78105428 = -124974060;    double NeOnmcwbHYMnMEJOYvNIbGValWaZvM11234987 = -731809122;    double NeOnmcwbHYMnMEJOYvNIbGValWaZvM36874403 = -255736586;    double NeOnmcwbHYMnMEJOYvNIbGValWaZvM11949360 = -526904766;    double NeOnmcwbHYMnMEJOYvNIbGValWaZvM80604549 = -159235624;    double NeOnmcwbHYMnMEJOYvNIbGValWaZvM44332398 = -90130698;    double NeOnmcwbHYMnMEJOYvNIbGValWaZvM22118177 = -793752978;    double NeOnmcwbHYMnMEJOYvNIbGValWaZvM60598282 = -345678529;    double NeOnmcwbHYMnMEJOYvNIbGValWaZvM8310544 = -13469700;    double NeOnmcwbHYMnMEJOYvNIbGValWaZvM15289307 = -13396619;    double NeOnmcwbHYMnMEJOYvNIbGValWaZvM79699965 = 8930548;    double NeOnmcwbHYMnMEJOYvNIbGValWaZvM1595657 = -821035379;    double NeOnmcwbHYMnMEJOYvNIbGValWaZvM53285381 = -367617286;    double NeOnmcwbHYMnMEJOYvNIbGValWaZvM34929629 = -645910986;    double NeOnmcwbHYMnMEJOYvNIbGValWaZvM58258346 = -820614263;    double NeOnmcwbHYMnMEJOYvNIbGValWaZvM6524074 = -903547379;    double NeOnmcwbHYMnMEJOYvNIbGValWaZvM4682784 = -637590626;    double NeOnmcwbHYMnMEJOYvNIbGValWaZvM46633456 = -737052064;    double NeOnmcwbHYMnMEJOYvNIbGValWaZvM4406710 = -123063213;    double NeOnmcwbHYMnMEJOYvNIbGValWaZvM8715451 = -638947001;    double NeOnmcwbHYMnMEJOYvNIbGValWaZvM4116748 = -472229105;    double NeOnmcwbHYMnMEJOYvNIbGValWaZvM57204034 = -8347458;    double NeOnmcwbHYMnMEJOYvNIbGValWaZvM41327124 = -917185151;    double NeOnmcwbHYMnMEJOYvNIbGValWaZvM76718140 = 5868948;    double NeOnmcwbHYMnMEJOYvNIbGValWaZvM62091410 = -433118809;    double NeOnmcwbHYMnMEJOYvNIbGValWaZvM21448051 = -899083553;    double NeOnmcwbHYMnMEJOYvNIbGValWaZvM77979861 = -431368904;    double NeOnmcwbHYMnMEJOYvNIbGValWaZvM26061548 = -836703411;    double NeOnmcwbHYMnMEJOYvNIbGValWaZvM20449033 = -303392325;    double NeOnmcwbHYMnMEJOYvNIbGValWaZvM57281846 = -648422620;    double NeOnmcwbHYMnMEJOYvNIbGValWaZvM76188543 = -324548875;    double NeOnmcwbHYMnMEJOYvNIbGValWaZvM95947817 = -425959129;    double NeOnmcwbHYMnMEJOYvNIbGValWaZvM36720100 = -944446223;    double NeOnmcwbHYMnMEJOYvNIbGValWaZvM99067024 = -863953561;    double NeOnmcwbHYMnMEJOYvNIbGValWaZvM82194196 = -580677502;    double NeOnmcwbHYMnMEJOYvNIbGValWaZvM38315778 = -796855131;    double NeOnmcwbHYMnMEJOYvNIbGValWaZvM78753056 = -10838126;    double NeOnmcwbHYMnMEJOYvNIbGValWaZvM1423500 = -778881698;    double NeOnmcwbHYMnMEJOYvNIbGValWaZvM95472404 = -562070573;    double NeOnmcwbHYMnMEJOYvNIbGValWaZvM3715639 = -25490428;    double NeOnmcwbHYMnMEJOYvNIbGValWaZvM36405250 = -37191625;    double NeOnmcwbHYMnMEJOYvNIbGValWaZvM41430674 = -160818736;    double NeOnmcwbHYMnMEJOYvNIbGValWaZvM28023599 = -64551717;    double NeOnmcwbHYMnMEJOYvNIbGValWaZvM87688771 = -373016303;    double NeOnmcwbHYMnMEJOYvNIbGValWaZvM74051215 = -234709733;    double NeOnmcwbHYMnMEJOYvNIbGValWaZvM44423370 = -426477558;    double NeOnmcwbHYMnMEJOYvNIbGValWaZvM78599346 = -327817981;    double NeOnmcwbHYMnMEJOYvNIbGValWaZvM20395744 = -786867979;    double NeOnmcwbHYMnMEJOYvNIbGValWaZvM62951226 = -779910771;    double NeOnmcwbHYMnMEJOYvNIbGValWaZvM4204142 = -685458515;    double NeOnmcwbHYMnMEJOYvNIbGValWaZvM85974676 = -918574544;    double NeOnmcwbHYMnMEJOYvNIbGValWaZvM69910780 = -148852259;    double NeOnmcwbHYMnMEJOYvNIbGValWaZvM60174841 = 70007133;    double NeOnmcwbHYMnMEJOYvNIbGValWaZvM61994774 = -826584907;    double NeOnmcwbHYMnMEJOYvNIbGValWaZvM52377290 = -534481160;    double NeOnmcwbHYMnMEJOYvNIbGValWaZvM20901395 = -16626602;    double NeOnmcwbHYMnMEJOYvNIbGValWaZvM69907863 = -814623971;    double NeOnmcwbHYMnMEJOYvNIbGValWaZvM60156263 = -161605534;    double NeOnmcwbHYMnMEJOYvNIbGValWaZvM49857950 = 6214042;    double NeOnmcwbHYMnMEJOYvNIbGValWaZvM59156499 = -260152072;    double NeOnmcwbHYMnMEJOYvNIbGValWaZvM66352537 = -658761795;    double NeOnmcwbHYMnMEJOYvNIbGValWaZvM96056628 = -957049568;    double NeOnmcwbHYMnMEJOYvNIbGValWaZvM40149249 = 57713796;    double NeOnmcwbHYMnMEJOYvNIbGValWaZvM51028697 = -365047080;    double NeOnmcwbHYMnMEJOYvNIbGValWaZvM39100763 = -688847744;    double NeOnmcwbHYMnMEJOYvNIbGValWaZvM83752148 = -565110323;    double NeOnmcwbHYMnMEJOYvNIbGValWaZvM64875557 = -876589156;    double NeOnmcwbHYMnMEJOYvNIbGValWaZvM54218357 = -503663725;    double NeOnmcwbHYMnMEJOYvNIbGValWaZvM52735433 = 34766516;    double NeOnmcwbHYMnMEJOYvNIbGValWaZvM19942569 = -694518818;     NeOnmcwbHYMnMEJOYvNIbGValWaZvM53332778 = NeOnmcwbHYMnMEJOYvNIbGValWaZvM33305234;     NeOnmcwbHYMnMEJOYvNIbGValWaZvM33305234 = NeOnmcwbHYMnMEJOYvNIbGValWaZvM47271121;     NeOnmcwbHYMnMEJOYvNIbGValWaZvM47271121 = NeOnmcwbHYMnMEJOYvNIbGValWaZvM31177248;     NeOnmcwbHYMnMEJOYvNIbGValWaZvM31177248 = NeOnmcwbHYMnMEJOYvNIbGValWaZvM47939306;     NeOnmcwbHYMnMEJOYvNIbGValWaZvM47939306 = NeOnmcwbHYMnMEJOYvNIbGValWaZvM92732778;     NeOnmcwbHYMnMEJOYvNIbGValWaZvM92732778 = NeOnmcwbHYMnMEJOYvNIbGValWaZvM60529368;     NeOnmcwbHYMnMEJOYvNIbGValWaZvM60529368 = NeOnmcwbHYMnMEJOYvNIbGValWaZvM7430325;     NeOnmcwbHYMnMEJOYvNIbGValWaZvM7430325 = NeOnmcwbHYMnMEJOYvNIbGValWaZvM55561061;     NeOnmcwbHYMnMEJOYvNIbGValWaZvM55561061 = NeOnmcwbHYMnMEJOYvNIbGValWaZvM60299625;     NeOnmcwbHYMnMEJOYvNIbGValWaZvM60299625 = NeOnmcwbHYMnMEJOYvNIbGValWaZvM49550764;     NeOnmcwbHYMnMEJOYvNIbGValWaZvM49550764 = NeOnmcwbHYMnMEJOYvNIbGValWaZvM15627460;     NeOnmcwbHYMnMEJOYvNIbGValWaZvM15627460 = NeOnmcwbHYMnMEJOYvNIbGValWaZvM13372859;     NeOnmcwbHYMnMEJOYvNIbGValWaZvM13372859 = NeOnmcwbHYMnMEJOYvNIbGValWaZvM76076954;     NeOnmcwbHYMnMEJOYvNIbGValWaZvM76076954 = NeOnmcwbHYMnMEJOYvNIbGValWaZvM48048036;     NeOnmcwbHYMnMEJOYvNIbGValWaZvM48048036 = NeOnmcwbHYMnMEJOYvNIbGValWaZvM58523426;     NeOnmcwbHYMnMEJOYvNIbGValWaZvM58523426 = NeOnmcwbHYMnMEJOYvNIbGValWaZvM2028957;     NeOnmcwbHYMnMEJOYvNIbGValWaZvM2028957 = NeOnmcwbHYMnMEJOYvNIbGValWaZvM36334142;     NeOnmcwbHYMnMEJOYvNIbGValWaZvM36334142 = NeOnmcwbHYMnMEJOYvNIbGValWaZvM2978079;     NeOnmcwbHYMnMEJOYvNIbGValWaZvM2978079 = NeOnmcwbHYMnMEJOYvNIbGValWaZvM53751181;     NeOnmcwbHYMnMEJOYvNIbGValWaZvM53751181 = NeOnmcwbHYMnMEJOYvNIbGValWaZvM46019027;     NeOnmcwbHYMnMEJOYvNIbGValWaZvM46019027 = NeOnmcwbHYMnMEJOYvNIbGValWaZvM31884728;     NeOnmcwbHYMnMEJOYvNIbGValWaZvM31884728 = NeOnmcwbHYMnMEJOYvNIbGValWaZvM55325373;     NeOnmcwbHYMnMEJOYvNIbGValWaZvM55325373 = NeOnmcwbHYMnMEJOYvNIbGValWaZvM21209573;     NeOnmcwbHYMnMEJOYvNIbGValWaZvM21209573 = NeOnmcwbHYMnMEJOYvNIbGValWaZvM10728215;     NeOnmcwbHYMnMEJOYvNIbGValWaZvM10728215 = NeOnmcwbHYMnMEJOYvNIbGValWaZvM90657459;     NeOnmcwbHYMnMEJOYvNIbGValWaZvM90657459 = NeOnmcwbHYMnMEJOYvNIbGValWaZvM16544236;     NeOnmcwbHYMnMEJOYvNIbGValWaZvM16544236 = NeOnmcwbHYMnMEJOYvNIbGValWaZvM64581550;     NeOnmcwbHYMnMEJOYvNIbGValWaZvM64581550 = NeOnmcwbHYMnMEJOYvNIbGValWaZvM70710224;     NeOnmcwbHYMnMEJOYvNIbGValWaZvM70710224 = NeOnmcwbHYMnMEJOYvNIbGValWaZvM56494037;     NeOnmcwbHYMnMEJOYvNIbGValWaZvM56494037 = NeOnmcwbHYMnMEJOYvNIbGValWaZvM78105428;     NeOnmcwbHYMnMEJOYvNIbGValWaZvM78105428 = NeOnmcwbHYMnMEJOYvNIbGValWaZvM11234987;     NeOnmcwbHYMnMEJOYvNIbGValWaZvM11234987 = NeOnmcwbHYMnMEJOYvNIbGValWaZvM36874403;     NeOnmcwbHYMnMEJOYvNIbGValWaZvM36874403 = NeOnmcwbHYMnMEJOYvNIbGValWaZvM11949360;     NeOnmcwbHYMnMEJOYvNIbGValWaZvM11949360 = NeOnmcwbHYMnMEJOYvNIbGValWaZvM80604549;     NeOnmcwbHYMnMEJOYvNIbGValWaZvM80604549 = NeOnmcwbHYMnMEJOYvNIbGValWaZvM44332398;     NeOnmcwbHYMnMEJOYvNIbGValWaZvM44332398 = NeOnmcwbHYMnMEJOYvNIbGValWaZvM22118177;     NeOnmcwbHYMnMEJOYvNIbGValWaZvM22118177 = NeOnmcwbHYMnMEJOYvNIbGValWaZvM60598282;     NeOnmcwbHYMnMEJOYvNIbGValWaZvM60598282 = NeOnmcwbHYMnMEJOYvNIbGValWaZvM8310544;     NeOnmcwbHYMnMEJOYvNIbGValWaZvM8310544 = NeOnmcwbHYMnMEJOYvNIbGValWaZvM15289307;     NeOnmcwbHYMnMEJOYvNIbGValWaZvM15289307 = NeOnmcwbHYMnMEJOYvNIbGValWaZvM79699965;     NeOnmcwbHYMnMEJOYvNIbGValWaZvM79699965 = NeOnmcwbHYMnMEJOYvNIbGValWaZvM1595657;     NeOnmcwbHYMnMEJOYvNIbGValWaZvM1595657 = NeOnmcwbHYMnMEJOYvNIbGValWaZvM53285381;     NeOnmcwbHYMnMEJOYvNIbGValWaZvM53285381 = NeOnmcwbHYMnMEJOYvNIbGValWaZvM34929629;     NeOnmcwbHYMnMEJOYvNIbGValWaZvM34929629 = NeOnmcwbHYMnMEJOYvNIbGValWaZvM58258346;     NeOnmcwbHYMnMEJOYvNIbGValWaZvM58258346 = NeOnmcwbHYMnMEJOYvNIbGValWaZvM6524074;     NeOnmcwbHYMnMEJOYvNIbGValWaZvM6524074 = NeOnmcwbHYMnMEJOYvNIbGValWaZvM4682784;     NeOnmcwbHYMnMEJOYvNIbGValWaZvM4682784 = NeOnmcwbHYMnMEJOYvNIbGValWaZvM46633456;     NeOnmcwbHYMnMEJOYvNIbGValWaZvM46633456 = NeOnmcwbHYMnMEJOYvNIbGValWaZvM4406710;     NeOnmcwbHYMnMEJOYvNIbGValWaZvM4406710 = NeOnmcwbHYMnMEJOYvNIbGValWaZvM8715451;     NeOnmcwbHYMnMEJOYvNIbGValWaZvM8715451 = NeOnmcwbHYMnMEJOYvNIbGValWaZvM4116748;     NeOnmcwbHYMnMEJOYvNIbGValWaZvM4116748 = NeOnmcwbHYMnMEJOYvNIbGValWaZvM57204034;     NeOnmcwbHYMnMEJOYvNIbGValWaZvM57204034 = NeOnmcwbHYMnMEJOYvNIbGValWaZvM41327124;     NeOnmcwbHYMnMEJOYvNIbGValWaZvM41327124 = NeOnmcwbHYMnMEJOYvNIbGValWaZvM76718140;     NeOnmcwbHYMnMEJOYvNIbGValWaZvM76718140 = NeOnmcwbHYMnMEJOYvNIbGValWaZvM62091410;     NeOnmcwbHYMnMEJOYvNIbGValWaZvM62091410 = NeOnmcwbHYMnMEJOYvNIbGValWaZvM21448051;     NeOnmcwbHYMnMEJOYvNIbGValWaZvM21448051 = NeOnmcwbHYMnMEJOYvNIbGValWaZvM77979861;     NeOnmcwbHYMnMEJOYvNIbGValWaZvM77979861 = NeOnmcwbHYMnMEJOYvNIbGValWaZvM26061548;     NeOnmcwbHYMnMEJOYvNIbGValWaZvM26061548 = NeOnmcwbHYMnMEJOYvNIbGValWaZvM20449033;     NeOnmcwbHYMnMEJOYvNIbGValWaZvM20449033 = NeOnmcwbHYMnMEJOYvNIbGValWaZvM57281846;     NeOnmcwbHYMnMEJOYvNIbGValWaZvM57281846 = NeOnmcwbHYMnMEJOYvNIbGValWaZvM76188543;     NeOnmcwbHYMnMEJOYvNIbGValWaZvM76188543 = NeOnmcwbHYMnMEJOYvNIbGValWaZvM95947817;     NeOnmcwbHYMnMEJOYvNIbGValWaZvM95947817 = NeOnmcwbHYMnMEJOYvNIbGValWaZvM36720100;     NeOnmcwbHYMnMEJOYvNIbGValWaZvM36720100 = NeOnmcwbHYMnMEJOYvNIbGValWaZvM99067024;     NeOnmcwbHYMnMEJOYvNIbGValWaZvM99067024 = NeOnmcwbHYMnMEJOYvNIbGValWaZvM82194196;     NeOnmcwbHYMnMEJOYvNIbGValWaZvM82194196 = NeOnmcwbHYMnMEJOYvNIbGValWaZvM38315778;     NeOnmcwbHYMnMEJOYvNIbGValWaZvM38315778 = NeOnmcwbHYMnMEJOYvNIbGValWaZvM78753056;     NeOnmcwbHYMnMEJOYvNIbGValWaZvM78753056 = NeOnmcwbHYMnMEJOYvNIbGValWaZvM1423500;     NeOnmcwbHYMnMEJOYvNIbGValWaZvM1423500 = NeOnmcwbHYMnMEJOYvNIbGValWaZvM95472404;     NeOnmcwbHYMnMEJOYvNIbGValWaZvM95472404 = NeOnmcwbHYMnMEJOYvNIbGValWaZvM3715639;     NeOnmcwbHYMnMEJOYvNIbGValWaZvM3715639 = NeOnmcwbHYMnMEJOYvNIbGValWaZvM36405250;     NeOnmcwbHYMnMEJOYvNIbGValWaZvM36405250 = NeOnmcwbHYMnMEJOYvNIbGValWaZvM41430674;     NeOnmcwbHYMnMEJOYvNIbGValWaZvM41430674 = NeOnmcwbHYMnMEJOYvNIbGValWaZvM28023599;     NeOnmcwbHYMnMEJOYvNIbGValWaZvM28023599 = NeOnmcwbHYMnMEJOYvNIbGValWaZvM87688771;     NeOnmcwbHYMnMEJOYvNIbGValWaZvM87688771 = NeOnmcwbHYMnMEJOYvNIbGValWaZvM74051215;     NeOnmcwbHYMnMEJOYvNIbGValWaZvM74051215 = NeOnmcwbHYMnMEJOYvNIbGValWaZvM44423370;     NeOnmcwbHYMnMEJOYvNIbGValWaZvM44423370 = NeOnmcwbHYMnMEJOYvNIbGValWaZvM78599346;     NeOnmcwbHYMnMEJOYvNIbGValWaZvM78599346 = NeOnmcwbHYMnMEJOYvNIbGValWaZvM20395744;     NeOnmcwbHYMnMEJOYvNIbGValWaZvM20395744 = NeOnmcwbHYMnMEJOYvNIbGValWaZvM62951226;     NeOnmcwbHYMnMEJOYvNIbGValWaZvM62951226 = NeOnmcwbHYMnMEJOYvNIbGValWaZvM4204142;     NeOnmcwbHYMnMEJOYvNIbGValWaZvM4204142 = NeOnmcwbHYMnMEJOYvNIbGValWaZvM85974676;     NeOnmcwbHYMnMEJOYvNIbGValWaZvM85974676 = NeOnmcwbHYMnMEJOYvNIbGValWaZvM69910780;     NeOnmcwbHYMnMEJOYvNIbGValWaZvM69910780 = NeOnmcwbHYMnMEJOYvNIbGValWaZvM60174841;     NeOnmcwbHYMnMEJOYvNIbGValWaZvM60174841 = NeOnmcwbHYMnMEJOYvNIbGValWaZvM61994774;     NeOnmcwbHYMnMEJOYvNIbGValWaZvM61994774 = NeOnmcwbHYMnMEJOYvNIbGValWaZvM52377290;     NeOnmcwbHYMnMEJOYvNIbGValWaZvM52377290 = NeOnmcwbHYMnMEJOYvNIbGValWaZvM20901395;     NeOnmcwbHYMnMEJOYvNIbGValWaZvM20901395 = NeOnmcwbHYMnMEJOYvNIbGValWaZvM69907863;     NeOnmcwbHYMnMEJOYvNIbGValWaZvM69907863 = NeOnmcwbHYMnMEJOYvNIbGValWaZvM60156263;     NeOnmcwbHYMnMEJOYvNIbGValWaZvM60156263 = NeOnmcwbHYMnMEJOYvNIbGValWaZvM49857950;     NeOnmcwbHYMnMEJOYvNIbGValWaZvM49857950 = NeOnmcwbHYMnMEJOYvNIbGValWaZvM59156499;     NeOnmcwbHYMnMEJOYvNIbGValWaZvM59156499 = NeOnmcwbHYMnMEJOYvNIbGValWaZvM66352537;     NeOnmcwbHYMnMEJOYvNIbGValWaZvM66352537 = NeOnmcwbHYMnMEJOYvNIbGValWaZvM96056628;     NeOnmcwbHYMnMEJOYvNIbGValWaZvM96056628 = NeOnmcwbHYMnMEJOYvNIbGValWaZvM40149249;     NeOnmcwbHYMnMEJOYvNIbGValWaZvM40149249 = NeOnmcwbHYMnMEJOYvNIbGValWaZvM51028697;     NeOnmcwbHYMnMEJOYvNIbGValWaZvM51028697 = NeOnmcwbHYMnMEJOYvNIbGValWaZvM39100763;     NeOnmcwbHYMnMEJOYvNIbGValWaZvM39100763 = NeOnmcwbHYMnMEJOYvNIbGValWaZvM83752148;     NeOnmcwbHYMnMEJOYvNIbGValWaZvM83752148 = NeOnmcwbHYMnMEJOYvNIbGValWaZvM64875557;     NeOnmcwbHYMnMEJOYvNIbGValWaZvM64875557 = NeOnmcwbHYMnMEJOYvNIbGValWaZvM54218357;     NeOnmcwbHYMnMEJOYvNIbGValWaZvM54218357 = NeOnmcwbHYMnMEJOYvNIbGValWaZvM52735433;     NeOnmcwbHYMnMEJOYvNIbGValWaZvM52735433 = NeOnmcwbHYMnMEJOYvNIbGValWaZvM19942569;     NeOnmcwbHYMnMEJOYvNIbGValWaZvM19942569 = NeOnmcwbHYMnMEJOYvNIbGValWaZvM53332778;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void lxcLvhWgSEwTDnjsFIIjJuoBA69957694() {     double ypWUpBbhpLwgnstCkQwhgeCAUtQOXe4496861 = -517109161;    double ypWUpBbhpLwgnstCkQwhgeCAUtQOXe64671836 = -417698546;    double ypWUpBbhpLwgnstCkQwhgeCAUtQOXe14342684 = 719871;    double ypWUpBbhpLwgnstCkQwhgeCAUtQOXe7700968 = -827584834;    double ypWUpBbhpLwgnstCkQwhgeCAUtQOXe95463418 = -766787685;    double ypWUpBbhpLwgnstCkQwhgeCAUtQOXe61556764 = -319848015;    double ypWUpBbhpLwgnstCkQwhgeCAUtQOXe39718393 = -448094090;    double ypWUpBbhpLwgnstCkQwhgeCAUtQOXe6664624 = -875519206;    double ypWUpBbhpLwgnstCkQwhgeCAUtQOXe88959810 = -576757984;    double ypWUpBbhpLwgnstCkQwhgeCAUtQOXe95255903 = -11581480;    double ypWUpBbhpLwgnstCkQwhgeCAUtQOXe98538477 = -8992097;    double ypWUpBbhpLwgnstCkQwhgeCAUtQOXe554449 = -989470887;    double ypWUpBbhpLwgnstCkQwhgeCAUtQOXe98387328 = -955941668;    double ypWUpBbhpLwgnstCkQwhgeCAUtQOXe13040608 = -15507836;    double ypWUpBbhpLwgnstCkQwhgeCAUtQOXe5757922 = 44574107;    double ypWUpBbhpLwgnstCkQwhgeCAUtQOXe48530059 = 63876792;    double ypWUpBbhpLwgnstCkQwhgeCAUtQOXe57477948 = -902751422;    double ypWUpBbhpLwgnstCkQwhgeCAUtQOXe1566484 = -507647759;    double ypWUpBbhpLwgnstCkQwhgeCAUtQOXe46335791 = -470342903;    double ypWUpBbhpLwgnstCkQwhgeCAUtQOXe48147877 = -886682387;    double ypWUpBbhpLwgnstCkQwhgeCAUtQOXe27706982 = -881378872;    double ypWUpBbhpLwgnstCkQwhgeCAUtQOXe13187207 = 55106992;    double ypWUpBbhpLwgnstCkQwhgeCAUtQOXe99731365 = -979921017;    double ypWUpBbhpLwgnstCkQwhgeCAUtQOXe68287766 = -199143515;    double ypWUpBbhpLwgnstCkQwhgeCAUtQOXe48977183 = -150692031;    double ypWUpBbhpLwgnstCkQwhgeCAUtQOXe66209810 = -693272180;    double ypWUpBbhpLwgnstCkQwhgeCAUtQOXe51541635 = -418330305;    double ypWUpBbhpLwgnstCkQwhgeCAUtQOXe27782676 = -121347533;    double ypWUpBbhpLwgnstCkQwhgeCAUtQOXe99143096 = -484189923;    double ypWUpBbhpLwgnstCkQwhgeCAUtQOXe39228889 = -599960762;    double ypWUpBbhpLwgnstCkQwhgeCAUtQOXe55611376 = -69361356;    double ypWUpBbhpLwgnstCkQwhgeCAUtQOXe70338709 = -571222551;    double ypWUpBbhpLwgnstCkQwhgeCAUtQOXe64700930 = -253323076;    double ypWUpBbhpLwgnstCkQwhgeCAUtQOXe19406340 = -515876442;    double ypWUpBbhpLwgnstCkQwhgeCAUtQOXe65772563 = -721421372;    double ypWUpBbhpLwgnstCkQwhgeCAUtQOXe96744288 = -105085876;    double ypWUpBbhpLwgnstCkQwhgeCAUtQOXe33350315 = -754430245;    double ypWUpBbhpLwgnstCkQwhgeCAUtQOXe81661335 = -38370858;    double ypWUpBbhpLwgnstCkQwhgeCAUtQOXe25471297 = -542827760;    double ypWUpBbhpLwgnstCkQwhgeCAUtQOXe4729548 = -562768943;    double ypWUpBbhpLwgnstCkQwhgeCAUtQOXe61858195 = -129133730;    double ypWUpBbhpLwgnstCkQwhgeCAUtQOXe75312497 = -932904469;    double ypWUpBbhpLwgnstCkQwhgeCAUtQOXe11969181 = -983960303;    double ypWUpBbhpLwgnstCkQwhgeCAUtQOXe35748086 = -39706627;    double ypWUpBbhpLwgnstCkQwhgeCAUtQOXe26238151 = -71915899;    double ypWUpBbhpLwgnstCkQwhgeCAUtQOXe79752686 = -660687125;    double ypWUpBbhpLwgnstCkQwhgeCAUtQOXe31917485 = -83808969;    double ypWUpBbhpLwgnstCkQwhgeCAUtQOXe38242578 = -632179114;    double ypWUpBbhpLwgnstCkQwhgeCAUtQOXe24687739 = -986179528;    double ypWUpBbhpLwgnstCkQwhgeCAUtQOXe36380864 = 77981806;    double ypWUpBbhpLwgnstCkQwhgeCAUtQOXe37648612 = -548101317;    double ypWUpBbhpLwgnstCkQwhgeCAUtQOXe26268451 = -746651565;    double ypWUpBbhpLwgnstCkQwhgeCAUtQOXe52922679 = -845036257;    double ypWUpBbhpLwgnstCkQwhgeCAUtQOXe24766229 = -56178466;    double ypWUpBbhpLwgnstCkQwhgeCAUtQOXe42250713 = -40198922;    double ypWUpBbhpLwgnstCkQwhgeCAUtQOXe91309654 = -472216154;    double ypWUpBbhpLwgnstCkQwhgeCAUtQOXe64940471 = -437777530;    double ypWUpBbhpLwgnstCkQwhgeCAUtQOXe46054918 = -800136615;    double ypWUpBbhpLwgnstCkQwhgeCAUtQOXe58723785 = -576892804;    double ypWUpBbhpLwgnstCkQwhgeCAUtQOXe29253608 = 26484495;    double ypWUpBbhpLwgnstCkQwhgeCAUtQOXe10015129 = -901517711;    double ypWUpBbhpLwgnstCkQwhgeCAUtQOXe11935717 = -226746557;    double ypWUpBbhpLwgnstCkQwhgeCAUtQOXe7521528 = -291329283;    double ypWUpBbhpLwgnstCkQwhgeCAUtQOXe49730922 = -976797223;    double ypWUpBbhpLwgnstCkQwhgeCAUtQOXe39644527 = -942220124;    double ypWUpBbhpLwgnstCkQwhgeCAUtQOXe28199769 = -437769547;    double ypWUpBbhpLwgnstCkQwhgeCAUtQOXe35853519 = -636147812;    double ypWUpBbhpLwgnstCkQwhgeCAUtQOXe78980989 = -340065227;    double ypWUpBbhpLwgnstCkQwhgeCAUtQOXe47268045 = -294086464;    double ypWUpBbhpLwgnstCkQwhgeCAUtQOXe9013633 = -850340018;    double ypWUpBbhpLwgnstCkQwhgeCAUtQOXe15179744 = -181692963;    double ypWUpBbhpLwgnstCkQwhgeCAUtQOXe75816613 = -764380565;    double ypWUpBbhpLwgnstCkQwhgeCAUtQOXe76095186 = -964820000;    double ypWUpBbhpLwgnstCkQwhgeCAUtQOXe41606243 = -907573960;    double ypWUpBbhpLwgnstCkQwhgeCAUtQOXe86289681 = -657548657;    double ypWUpBbhpLwgnstCkQwhgeCAUtQOXe52394484 = -948474404;    double ypWUpBbhpLwgnstCkQwhgeCAUtQOXe1218027 = 39067294;    double ypWUpBbhpLwgnstCkQwhgeCAUtQOXe63983279 = -840214390;    double ypWUpBbhpLwgnstCkQwhgeCAUtQOXe42049615 = -27227617;    double ypWUpBbhpLwgnstCkQwhgeCAUtQOXe69224497 = -490004907;    double ypWUpBbhpLwgnstCkQwhgeCAUtQOXe34292326 = -509463212;    double ypWUpBbhpLwgnstCkQwhgeCAUtQOXe13299057 = -786151192;    double ypWUpBbhpLwgnstCkQwhgeCAUtQOXe3094938 = -135168006;    double ypWUpBbhpLwgnstCkQwhgeCAUtQOXe62762232 = -462171730;    double ypWUpBbhpLwgnstCkQwhgeCAUtQOXe1580277 = 48140554;    double ypWUpBbhpLwgnstCkQwhgeCAUtQOXe29342926 = -322709791;    double ypWUpBbhpLwgnstCkQwhgeCAUtQOXe17416030 = -726186295;    double ypWUpBbhpLwgnstCkQwhgeCAUtQOXe39934701 = -97144610;    double ypWUpBbhpLwgnstCkQwhgeCAUtQOXe77155626 = -375677521;    double ypWUpBbhpLwgnstCkQwhgeCAUtQOXe74462909 = -149205219;    double ypWUpBbhpLwgnstCkQwhgeCAUtQOXe31803817 = -667308346;    double ypWUpBbhpLwgnstCkQwhgeCAUtQOXe87295396 = -954293631;    double ypWUpBbhpLwgnstCkQwhgeCAUtQOXe22937550 = -461478055;    double ypWUpBbhpLwgnstCkQwhgeCAUtQOXe96217689 = -469312255;    double ypWUpBbhpLwgnstCkQwhgeCAUtQOXe94714418 = -661251233;    double ypWUpBbhpLwgnstCkQwhgeCAUtQOXe49922478 = -902387174;    double ypWUpBbhpLwgnstCkQwhgeCAUtQOXe67790970 = -541575186;    double ypWUpBbhpLwgnstCkQwhgeCAUtQOXe62238258 = 92836920;    double ypWUpBbhpLwgnstCkQwhgeCAUtQOXe96103558 = -97486504;    double ypWUpBbhpLwgnstCkQwhgeCAUtQOXe98038382 = -517109161;     ypWUpBbhpLwgnstCkQwhgeCAUtQOXe4496861 = ypWUpBbhpLwgnstCkQwhgeCAUtQOXe64671836;     ypWUpBbhpLwgnstCkQwhgeCAUtQOXe64671836 = ypWUpBbhpLwgnstCkQwhgeCAUtQOXe14342684;     ypWUpBbhpLwgnstCkQwhgeCAUtQOXe14342684 = ypWUpBbhpLwgnstCkQwhgeCAUtQOXe7700968;     ypWUpBbhpLwgnstCkQwhgeCAUtQOXe7700968 = ypWUpBbhpLwgnstCkQwhgeCAUtQOXe95463418;     ypWUpBbhpLwgnstCkQwhgeCAUtQOXe95463418 = ypWUpBbhpLwgnstCkQwhgeCAUtQOXe61556764;     ypWUpBbhpLwgnstCkQwhgeCAUtQOXe61556764 = ypWUpBbhpLwgnstCkQwhgeCAUtQOXe39718393;     ypWUpBbhpLwgnstCkQwhgeCAUtQOXe39718393 = ypWUpBbhpLwgnstCkQwhgeCAUtQOXe6664624;     ypWUpBbhpLwgnstCkQwhgeCAUtQOXe6664624 = ypWUpBbhpLwgnstCkQwhgeCAUtQOXe88959810;     ypWUpBbhpLwgnstCkQwhgeCAUtQOXe88959810 = ypWUpBbhpLwgnstCkQwhgeCAUtQOXe95255903;     ypWUpBbhpLwgnstCkQwhgeCAUtQOXe95255903 = ypWUpBbhpLwgnstCkQwhgeCAUtQOXe98538477;     ypWUpBbhpLwgnstCkQwhgeCAUtQOXe98538477 = ypWUpBbhpLwgnstCkQwhgeCAUtQOXe554449;     ypWUpBbhpLwgnstCkQwhgeCAUtQOXe554449 = ypWUpBbhpLwgnstCkQwhgeCAUtQOXe98387328;     ypWUpBbhpLwgnstCkQwhgeCAUtQOXe98387328 = ypWUpBbhpLwgnstCkQwhgeCAUtQOXe13040608;     ypWUpBbhpLwgnstCkQwhgeCAUtQOXe13040608 = ypWUpBbhpLwgnstCkQwhgeCAUtQOXe5757922;     ypWUpBbhpLwgnstCkQwhgeCAUtQOXe5757922 = ypWUpBbhpLwgnstCkQwhgeCAUtQOXe48530059;     ypWUpBbhpLwgnstCkQwhgeCAUtQOXe48530059 = ypWUpBbhpLwgnstCkQwhgeCAUtQOXe57477948;     ypWUpBbhpLwgnstCkQwhgeCAUtQOXe57477948 = ypWUpBbhpLwgnstCkQwhgeCAUtQOXe1566484;     ypWUpBbhpLwgnstCkQwhgeCAUtQOXe1566484 = ypWUpBbhpLwgnstCkQwhgeCAUtQOXe46335791;     ypWUpBbhpLwgnstCkQwhgeCAUtQOXe46335791 = ypWUpBbhpLwgnstCkQwhgeCAUtQOXe48147877;     ypWUpBbhpLwgnstCkQwhgeCAUtQOXe48147877 = ypWUpBbhpLwgnstCkQwhgeCAUtQOXe27706982;     ypWUpBbhpLwgnstCkQwhgeCAUtQOXe27706982 = ypWUpBbhpLwgnstCkQwhgeCAUtQOXe13187207;     ypWUpBbhpLwgnstCkQwhgeCAUtQOXe13187207 = ypWUpBbhpLwgnstCkQwhgeCAUtQOXe99731365;     ypWUpBbhpLwgnstCkQwhgeCAUtQOXe99731365 = ypWUpBbhpLwgnstCkQwhgeCAUtQOXe68287766;     ypWUpBbhpLwgnstCkQwhgeCAUtQOXe68287766 = ypWUpBbhpLwgnstCkQwhgeCAUtQOXe48977183;     ypWUpBbhpLwgnstCkQwhgeCAUtQOXe48977183 = ypWUpBbhpLwgnstCkQwhgeCAUtQOXe66209810;     ypWUpBbhpLwgnstCkQwhgeCAUtQOXe66209810 = ypWUpBbhpLwgnstCkQwhgeCAUtQOXe51541635;     ypWUpBbhpLwgnstCkQwhgeCAUtQOXe51541635 = ypWUpBbhpLwgnstCkQwhgeCAUtQOXe27782676;     ypWUpBbhpLwgnstCkQwhgeCAUtQOXe27782676 = ypWUpBbhpLwgnstCkQwhgeCAUtQOXe99143096;     ypWUpBbhpLwgnstCkQwhgeCAUtQOXe99143096 = ypWUpBbhpLwgnstCkQwhgeCAUtQOXe39228889;     ypWUpBbhpLwgnstCkQwhgeCAUtQOXe39228889 = ypWUpBbhpLwgnstCkQwhgeCAUtQOXe55611376;     ypWUpBbhpLwgnstCkQwhgeCAUtQOXe55611376 = ypWUpBbhpLwgnstCkQwhgeCAUtQOXe70338709;     ypWUpBbhpLwgnstCkQwhgeCAUtQOXe70338709 = ypWUpBbhpLwgnstCkQwhgeCAUtQOXe64700930;     ypWUpBbhpLwgnstCkQwhgeCAUtQOXe64700930 = ypWUpBbhpLwgnstCkQwhgeCAUtQOXe19406340;     ypWUpBbhpLwgnstCkQwhgeCAUtQOXe19406340 = ypWUpBbhpLwgnstCkQwhgeCAUtQOXe65772563;     ypWUpBbhpLwgnstCkQwhgeCAUtQOXe65772563 = ypWUpBbhpLwgnstCkQwhgeCAUtQOXe96744288;     ypWUpBbhpLwgnstCkQwhgeCAUtQOXe96744288 = ypWUpBbhpLwgnstCkQwhgeCAUtQOXe33350315;     ypWUpBbhpLwgnstCkQwhgeCAUtQOXe33350315 = ypWUpBbhpLwgnstCkQwhgeCAUtQOXe81661335;     ypWUpBbhpLwgnstCkQwhgeCAUtQOXe81661335 = ypWUpBbhpLwgnstCkQwhgeCAUtQOXe25471297;     ypWUpBbhpLwgnstCkQwhgeCAUtQOXe25471297 = ypWUpBbhpLwgnstCkQwhgeCAUtQOXe4729548;     ypWUpBbhpLwgnstCkQwhgeCAUtQOXe4729548 = ypWUpBbhpLwgnstCkQwhgeCAUtQOXe61858195;     ypWUpBbhpLwgnstCkQwhgeCAUtQOXe61858195 = ypWUpBbhpLwgnstCkQwhgeCAUtQOXe75312497;     ypWUpBbhpLwgnstCkQwhgeCAUtQOXe75312497 = ypWUpBbhpLwgnstCkQwhgeCAUtQOXe11969181;     ypWUpBbhpLwgnstCkQwhgeCAUtQOXe11969181 = ypWUpBbhpLwgnstCkQwhgeCAUtQOXe35748086;     ypWUpBbhpLwgnstCkQwhgeCAUtQOXe35748086 = ypWUpBbhpLwgnstCkQwhgeCAUtQOXe26238151;     ypWUpBbhpLwgnstCkQwhgeCAUtQOXe26238151 = ypWUpBbhpLwgnstCkQwhgeCAUtQOXe79752686;     ypWUpBbhpLwgnstCkQwhgeCAUtQOXe79752686 = ypWUpBbhpLwgnstCkQwhgeCAUtQOXe31917485;     ypWUpBbhpLwgnstCkQwhgeCAUtQOXe31917485 = ypWUpBbhpLwgnstCkQwhgeCAUtQOXe38242578;     ypWUpBbhpLwgnstCkQwhgeCAUtQOXe38242578 = ypWUpBbhpLwgnstCkQwhgeCAUtQOXe24687739;     ypWUpBbhpLwgnstCkQwhgeCAUtQOXe24687739 = ypWUpBbhpLwgnstCkQwhgeCAUtQOXe36380864;     ypWUpBbhpLwgnstCkQwhgeCAUtQOXe36380864 = ypWUpBbhpLwgnstCkQwhgeCAUtQOXe37648612;     ypWUpBbhpLwgnstCkQwhgeCAUtQOXe37648612 = ypWUpBbhpLwgnstCkQwhgeCAUtQOXe26268451;     ypWUpBbhpLwgnstCkQwhgeCAUtQOXe26268451 = ypWUpBbhpLwgnstCkQwhgeCAUtQOXe52922679;     ypWUpBbhpLwgnstCkQwhgeCAUtQOXe52922679 = ypWUpBbhpLwgnstCkQwhgeCAUtQOXe24766229;     ypWUpBbhpLwgnstCkQwhgeCAUtQOXe24766229 = ypWUpBbhpLwgnstCkQwhgeCAUtQOXe42250713;     ypWUpBbhpLwgnstCkQwhgeCAUtQOXe42250713 = ypWUpBbhpLwgnstCkQwhgeCAUtQOXe91309654;     ypWUpBbhpLwgnstCkQwhgeCAUtQOXe91309654 = ypWUpBbhpLwgnstCkQwhgeCAUtQOXe64940471;     ypWUpBbhpLwgnstCkQwhgeCAUtQOXe64940471 = ypWUpBbhpLwgnstCkQwhgeCAUtQOXe46054918;     ypWUpBbhpLwgnstCkQwhgeCAUtQOXe46054918 = ypWUpBbhpLwgnstCkQwhgeCAUtQOXe58723785;     ypWUpBbhpLwgnstCkQwhgeCAUtQOXe58723785 = ypWUpBbhpLwgnstCkQwhgeCAUtQOXe29253608;     ypWUpBbhpLwgnstCkQwhgeCAUtQOXe29253608 = ypWUpBbhpLwgnstCkQwhgeCAUtQOXe10015129;     ypWUpBbhpLwgnstCkQwhgeCAUtQOXe10015129 = ypWUpBbhpLwgnstCkQwhgeCAUtQOXe11935717;     ypWUpBbhpLwgnstCkQwhgeCAUtQOXe11935717 = ypWUpBbhpLwgnstCkQwhgeCAUtQOXe7521528;     ypWUpBbhpLwgnstCkQwhgeCAUtQOXe7521528 = ypWUpBbhpLwgnstCkQwhgeCAUtQOXe49730922;     ypWUpBbhpLwgnstCkQwhgeCAUtQOXe49730922 = ypWUpBbhpLwgnstCkQwhgeCAUtQOXe39644527;     ypWUpBbhpLwgnstCkQwhgeCAUtQOXe39644527 = ypWUpBbhpLwgnstCkQwhgeCAUtQOXe28199769;     ypWUpBbhpLwgnstCkQwhgeCAUtQOXe28199769 = ypWUpBbhpLwgnstCkQwhgeCAUtQOXe35853519;     ypWUpBbhpLwgnstCkQwhgeCAUtQOXe35853519 = ypWUpBbhpLwgnstCkQwhgeCAUtQOXe78980989;     ypWUpBbhpLwgnstCkQwhgeCAUtQOXe78980989 = ypWUpBbhpLwgnstCkQwhgeCAUtQOXe47268045;     ypWUpBbhpLwgnstCkQwhgeCAUtQOXe47268045 = ypWUpBbhpLwgnstCkQwhgeCAUtQOXe9013633;     ypWUpBbhpLwgnstCkQwhgeCAUtQOXe9013633 = ypWUpBbhpLwgnstCkQwhgeCAUtQOXe15179744;     ypWUpBbhpLwgnstCkQwhgeCAUtQOXe15179744 = ypWUpBbhpLwgnstCkQwhgeCAUtQOXe75816613;     ypWUpBbhpLwgnstCkQwhgeCAUtQOXe75816613 = ypWUpBbhpLwgnstCkQwhgeCAUtQOXe76095186;     ypWUpBbhpLwgnstCkQwhgeCAUtQOXe76095186 = ypWUpBbhpLwgnstCkQwhgeCAUtQOXe41606243;     ypWUpBbhpLwgnstCkQwhgeCAUtQOXe41606243 = ypWUpBbhpLwgnstCkQwhgeCAUtQOXe86289681;     ypWUpBbhpLwgnstCkQwhgeCAUtQOXe86289681 = ypWUpBbhpLwgnstCkQwhgeCAUtQOXe52394484;     ypWUpBbhpLwgnstCkQwhgeCAUtQOXe52394484 = ypWUpBbhpLwgnstCkQwhgeCAUtQOXe1218027;     ypWUpBbhpLwgnstCkQwhgeCAUtQOXe1218027 = ypWUpBbhpLwgnstCkQwhgeCAUtQOXe63983279;     ypWUpBbhpLwgnstCkQwhgeCAUtQOXe63983279 = ypWUpBbhpLwgnstCkQwhgeCAUtQOXe42049615;     ypWUpBbhpLwgnstCkQwhgeCAUtQOXe42049615 = ypWUpBbhpLwgnstCkQwhgeCAUtQOXe69224497;     ypWUpBbhpLwgnstCkQwhgeCAUtQOXe69224497 = ypWUpBbhpLwgnstCkQwhgeCAUtQOXe34292326;     ypWUpBbhpLwgnstCkQwhgeCAUtQOXe34292326 = ypWUpBbhpLwgnstCkQwhgeCAUtQOXe13299057;     ypWUpBbhpLwgnstCkQwhgeCAUtQOXe13299057 = ypWUpBbhpLwgnstCkQwhgeCAUtQOXe3094938;     ypWUpBbhpLwgnstCkQwhgeCAUtQOXe3094938 = ypWUpBbhpLwgnstCkQwhgeCAUtQOXe62762232;     ypWUpBbhpLwgnstCkQwhgeCAUtQOXe62762232 = ypWUpBbhpLwgnstCkQwhgeCAUtQOXe1580277;     ypWUpBbhpLwgnstCkQwhgeCAUtQOXe1580277 = ypWUpBbhpLwgnstCkQwhgeCAUtQOXe29342926;     ypWUpBbhpLwgnstCkQwhgeCAUtQOXe29342926 = ypWUpBbhpLwgnstCkQwhgeCAUtQOXe17416030;     ypWUpBbhpLwgnstCkQwhgeCAUtQOXe17416030 = ypWUpBbhpLwgnstCkQwhgeCAUtQOXe39934701;     ypWUpBbhpLwgnstCkQwhgeCAUtQOXe39934701 = ypWUpBbhpLwgnstCkQwhgeCAUtQOXe77155626;     ypWUpBbhpLwgnstCkQwhgeCAUtQOXe77155626 = ypWUpBbhpLwgnstCkQwhgeCAUtQOXe74462909;     ypWUpBbhpLwgnstCkQwhgeCAUtQOXe74462909 = ypWUpBbhpLwgnstCkQwhgeCAUtQOXe31803817;     ypWUpBbhpLwgnstCkQwhgeCAUtQOXe31803817 = ypWUpBbhpLwgnstCkQwhgeCAUtQOXe87295396;     ypWUpBbhpLwgnstCkQwhgeCAUtQOXe87295396 = ypWUpBbhpLwgnstCkQwhgeCAUtQOXe22937550;     ypWUpBbhpLwgnstCkQwhgeCAUtQOXe22937550 = ypWUpBbhpLwgnstCkQwhgeCAUtQOXe96217689;     ypWUpBbhpLwgnstCkQwhgeCAUtQOXe96217689 = ypWUpBbhpLwgnstCkQwhgeCAUtQOXe94714418;     ypWUpBbhpLwgnstCkQwhgeCAUtQOXe94714418 = ypWUpBbhpLwgnstCkQwhgeCAUtQOXe49922478;     ypWUpBbhpLwgnstCkQwhgeCAUtQOXe49922478 = ypWUpBbhpLwgnstCkQwhgeCAUtQOXe67790970;     ypWUpBbhpLwgnstCkQwhgeCAUtQOXe67790970 = ypWUpBbhpLwgnstCkQwhgeCAUtQOXe62238258;     ypWUpBbhpLwgnstCkQwhgeCAUtQOXe62238258 = ypWUpBbhpLwgnstCkQwhgeCAUtQOXe96103558;     ypWUpBbhpLwgnstCkQwhgeCAUtQOXe96103558 = ypWUpBbhpLwgnstCkQwhgeCAUtQOXe98038382;     ypWUpBbhpLwgnstCkQwhgeCAUtQOXe98038382 = ypWUpBbhpLwgnstCkQwhgeCAUtQOXe4496861;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void cxsDkgPQzPIQNsUulxRtwRCTi79562421() {     double uaheCtdOaFkLVhMjHJKPojdTzZHnhZ26319082 = 14675507;    double uaheCtdOaFkLVhMjHJKPojdTzZHnhZ26139641 = -800297399;    double uaheCtdOaFkLVhMjHJKPojdTzZHnhZ60069954 = -46497661;    double uaheCtdOaFkLVhMjHJKPojdTzZHnhZ39076114 = 67630990;    double uaheCtdOaFkLVhMjHJKPojdTzZHnhZ55597749 = -644038606;    double uaheCtdOaFkLVhMjHJKPojdTzZHnhZ85575080 = -331391173;    double uaheCtdOaFkLVhMjHJKPojdTzZHnhZ68738977 = -511412213;    double uaheCtdOaFkLVhMjHJKPojdTzZHnhZ93527252 = -883700054;    double uaheCtdOaFkLVhMjHJKPojdTzZHnhZ85483450 = -562553402;    double uaheCtdOaFkLVhMjHJKPojdTzZHnhZ56539129 = -981799877;    double uaheCtdOaFkLVhMjHJKPojdTzZHnhZ69454746 = -664749800;    double uaheCtdOaFkLVhMjHJKPojdTzZHnhZ16736332 = 7347507;    double uaheCtdOaFkLVhMjHJKPojdTzZHnhZ31376271 = -393975457;    double uaheCtdOaFkLVhMjHJKPojdTzZHnhZ80007075 = -865584633;    double uaheCtdOaFkLVhMjHJKPojdTzZHnhZ1015717 = -982267812;    double uaheCtdOaFkLVhMjHJKPojdTzZHnhZ96500784 = -378489749;    double uaheCtdOaFkLVhMjHJKPojdTzZHnhZ50927008 = -188576141;    double uaheCtdOaFkLVhMjHJKPojdTzZHnhZ64091786 = -429368677;    double uaheCtdOaFkLVhMjHJKPojdTzZHnhZ50973014 = -543478559;    double uaheCtdOaFkLVhMjHJKPojdTzZHnhZ29257520 = -277927443;    double uaheCtdOaFkLVhMjHJKPojdTzZHnhZ84861266 = -613457575;    double uaheCtdOaFkLVhMjHJKPojdTzZHnhZ77589185 = -15644173;    double uaheCtdOaFkLVhMjHJKPojdTzZHnhZ9202770 = -535948372;    double uaheCtdOaFkLVhMjHJKPojdTzZHnhZ5565388 = -609242381;    double uaheCtdOaFkLVhMjHJKPojdTzZHnhZ22907850 = -61589003;    double uaheCtdOaFkLVhMjHJKPojdTzZHnhZ55785664 = 79542292;    double uaheCtdOaFkLVhMjHJKPojdTzZHnhZ24578239 = 54865651;    double uaheCtdOaFkLVhMjHJKPojdTzZHnhZ63362501 = 14204234;    double uaheCtdOaFkLVhMjHJKPojdTzZHnhZ47040009 = -151135841;    double uaheCtdOaFkLVhMjHJKPojdTzZHnhZ85045966 = -976174956;    double uaheCtdOaFkLVhMjHJKPojdTzZHnhZ6776642 = -475089103;    double uaheCtdOaFkLVhMjHJKPojdTzZHnhZ89230034 = -347111382;    double uaheCtdOaFkLVhMjHJKPojdTzZHnhZ90020394 = 4073041;    double uaheCtdOaFkLVhMjHJKPojdTzZHnhZ91945456 = -191696069;    double uaheCtdOaFkLVhMjHJKPojdTzZHnhZ46606776 = -871239974;    double uaheCtdOaFkLVhMjHJKPojdTzZHnhZ66321248 = -119501856;    double uaheCtdOaFkLVhMjHJKPojdTzZHnhZ76432571 = -804047342;    double uaheCtdOaFkLVhMjHJKPojdTzZHnhZ85599197 = -619913615;    double uaheCtdOaFkLVhMjHJKPojdTzZHnhZ85851743 = -315233040;    double uaheCtdOaFkLVhMjHJKPojdTzZHnhZ17400193 = 79682056;    double uaheCtdOaFkLVhMjHJKPojdTzZHnhZ16234042 = -563272988;    double uaheCtdOaFkLVhMjHJKPojdTzZHnhZ91814668 = -620370546;    double uaheCtdOaFkLVhMjHJKPojdTzZHnhZ59336579 = 72072882;    double uaheCtdOaFkLVhMjHJKPojdTzZHnhZ83842944 = 51487204;    double uaheCtdOaFkLVhMjHJKPojdTzZHnhZ6153962 = -258604528;    double uaheCtdOaFkLVhMjHJKPojdTzZHnhZ18959165 = -364119355;    double uaheCtdOaFkLVhMjHJKPojdTzZHnhZ57585596 = -264816489;    double uaheCtdOaFkLVhMjHJKPojdTzZHnhZ20082330 = -370675102;    double uaheCtdOaFkLVhMjHJKPojdTzZHnhZ31751831 = -71295950;    double uaheCtdOaFkLVhMjHJKPojdTzZHnhZ52428340 = 98926621;    double uaheCtdOaFkLVhMjHJKPojdTzZHnhZ26110432 = -591990642;    double uaheCtdOaFkLVhMjHJKPojdTzZHnhZ22657115 = 27970354;    double uaheCtdOaFkLVhMjHJKPojdTzZHnhZ44145544 = -808631396;    double uaheCtdOaFkLVhMjHJKPojdTzZHnhZ52791351 = -247187526;    double uaheCtdOaFkLVhMjHJKPojdTzZHnhZ94701154 = -1320671;    double uaheCtdOaFkLVhMjHJKPojdTzZHnhZ48729897 = -969680321;    double uaheCtdOaFkLVhMjHJKPojdTzZHnhZ16936871 = -164349028;    double uaheCtdOaFkLVhMjHJKPojdTzZHnhZ54504566 = -437255281;    double uaheCtdOaFkLVhMjHJKPojdTzZHnhZ16168264 = -870780007;    double uaheCtdOaFkLVhMjHJKPojdTzZHnhZ99812085 = -623580898;    double uaheCtdOaFkLVhMjHJKPojdTzZHnhZ60996841 = -286256825;    double uaheCtdOaFkLVhMjHJKPojdTzZHnhZ5376476 = -425616448;    double uaheCtdOaFkLVhMjHJKPojdTzZHnhZ46487243 = -632564213;    double uaheCtdOaFkLVhMjHJKPojdTzZHnhZ437485 = -586378447;    double uaheCtdOaFkLVhMjHJKPojdTzZHnhZ49762487 = -406710774;    double uaheCtdOaFkLVhMjHJKPojdTzZHnhZ80224711 = -217638419;    double uaheCtdOaFkLVhMjHJKPojdTzZHnhZ26715937 = -996725535;    double uaheCtdOaFkLVhMjHJKPojdTzZHnhZ39430814 = -102279389;    double uaheCtdOaFkLVhMjHJKPojdTzZHnhZ33400299 = -994344659;    double uaheCtdOaFkLVhMjHJKPojdTzZHnhZ34694468 = -762765957;    double uaheCtdOaFkLVhMjHJKPojdTzZHnhZ20068214 = -574442407;    double uaheCtdOaFkLVhMjHJKPojdTzZHnhZ65327811 = -568662526;    double uaheCtdOaFkLVhMjHJKPojdTzZHnhZ78240043 = -14135637;    double uaheCtdOaFkLVhMjHJKPojdTzZHnhZ33572821 = -523160616;    double uaheCtdOaFkLVhMjHJKPojdTzZHnhZ13023479 = -714654455;    double uaheCtdOaFkLVhMjHJKPojdTzZHnhZ93046597 = -993087029;    double uaheCtdOaFkLVhMjHJKPojdTzZHnhZ18252606 = 12282945;    double uaheCtdOaFkLVhMjHJKPojdTzZHnhZ25359825 = -487435576;    double uaheCtdOaFkLVhMjHJKPojdTzZHnhZ99411426 = -250637853;    double uaheCtdOaFkLVhMjHJKPojdTzZHnhZ3948685 = -697469649;    double uaheCtdOaFkLVhMjHJKPojdTzZHnhZ98200067 = -655641220;    double uaheCtdOaFkLVhMjHJKPojdTzZHnhZ4495909 = -574459248;    double uaheCtdOaFkLVhMjHJKPojdTzZHnhZ31610671 = -914499817;    double uaheCtdOaFkLVhMjHJKPojdTzZHnhZ94611668 = -150062463;    double uaheCtdOaFkLVhMjHJKPojdTzZHnhZ58935535 = -284184314;    double uaheCtdOaFkLVhMjHJKPojdTzZHnhZ84119527 = -403059458;    double uaheCtdOaFkLVhMjHJKPojdTzZHnhZ45084491 = -538479986;    double uaheCtdOaFkLVhMjHJKPojdTzZHnhZ37229044 = -748739434;    double uaheCtdOaFkLVhMjHJKPojdTzZHnhZ97244302 = -90375399;    double uaheCtdOaFkLVhMjHJKPojdTzZHnhZ97876879 = -901559654;    double uaheCtdOaFkLVhMjHJKPojdTzZHnhZ49384378 = -955152829;    double uaheCtdOaFkLVhMjHJKPojdTzZHnhZ21928005 = -266792061;    double uaheCtdOaFkLVhMjHJKPojdTzZHnhZ69430933 = -749133609;    double uaheCtdOaFkLVhMjHJKPojdTzZHnhZ86039658 = -691652142;    double uaheCtdOaFkLVhMjHJKPojdTzZHnhZ56403352 = -634061120;    double uaheCtdOaFkLVhMjHJKPojdTzZHnhZ10857566 = -37656541;    double uaheCtdOaFkLVhMjHJKPojdTzZHnhZ45327425 = -987806334;    double uaheCtdOaFkLVhMjHJKPojdTzZHnhZ58899095 = -341548672;    double uaheCtdOaFkLVhMjHJKPojdTzZHnhZ34080458 = -541802023;    double uaheCtdOaFkLVhMjHJKPojdTzZHnhZ25929251 = 14675507;     uaheCtdOaFkLVhMjHJKPojdTzZHnhZ26319082 = uaheCtdOaFkLVhMjHJKPojdTzZHnhZ26139641;     uaheCtdOaFkLVhMjHJKPojdTzZHnhZ26139641 = uaheCtdOaFkLVhMjHJKPojdTzZHnhZ60069954;     uaheCtdOaFkLVhMjHJKPojdTzZHnhZ60069954 = uaheCtdOaFkLVhMjHJKPojdTzZHnhZ39076114;     uaheCtdOaFkLVhMjHJKPojdTzZHnhZ39076114 = uaheCtdOaFkLVhMjHJKPojdTzZHnhZ55597749;     uaheCtdOaFkLVhMjHJKPojdTzZHnhZ55597749 = uaheCtdOaFkLVhMjHJKPojdTzZHnhZ85575080;     uaheCtdOaFkLVhMjHJKPojdTzZHnhZ85575080 = uaheCtdOaFkLVhMjHJKPojdTzZHnhZ68738977;     uaheCtdOaFkLVhMjHJKPojdTzZHnhZ68738977 = uaheCtdOaFkLVhMjHJKPojdTzZHnhZ93527252;     uaheCtdOaFkLVhMjHJKPojdTzZHnhZ93527252 = uaheCtdOaFkLVhMjHJKPojdTzZHnhZ85483450;     uaheCtdOaFkLVhMjHJKPojdTzZHnhZ85483450 = uaheCtdOaFkLVhMjHJKPojdTzZHnhZ56539129;     uaheCtdOaFkLVhMjHJKPojdTzZHnhZ56539129 = uaheCtdOaFkLVhMjHJKPojdTzZHnhZ69454746;     uaheCtdOaFkLVhMjHJKPojdTzZHnhZ69454746 = uaheCtdOaFkLVhMjHJKPojdTzZHnhZ16736332;     uaheCtdOaFkLVhMjHJKPojdTzZHnhZ16736332 = uaheCtdOaFkLVhMjHJKPojdTzZHnhZ31376271;     uaheCtdOaFkLVhMjHJKPojdTzZHnhZ31376271 = uaheCtdOaFkLVhMjHJKPojdTzZHnhZ80007075;     uaheCtdOaFkLVhMjHJKPojdTzZHnhZ80007075 = uaheCtdOaFkLVhMjHJKPojdTzZHnhZ1015717;     uaheCtdOaFkLVhMjHJKPojdTzZHnhZ1015717 = uaheCtdOaFkLVhMjHJKPojdTzZHnhZ96500784;     uaheCtdOaFkLVhMjHJKPojdTzZHnhZ96500784 = uaheCtdOaFkLVhMjHJKPojdTzZHnhZ50927008;     uaheCtdOaFkLVhMjHJKPojdTzZHnhZ50927008 = uaheCtdOaFkLVhMjHJKPojdTzZHnhZ64091786;     uaheCtdOaFkLVhMjHJKPojdTzZHnhZ64091786 = uaheCtdOaFkLVhMjHJKPojdTzZHnhZ50973014;     uaheCtdOaFkLVhMjHJKPojdTzZHnhZ50973014 = uaheCtdOaFkLVhMjHJKPojdTzZHnhZ29257520;     uaheCtdOaFkLVhMjHJKPojdTzZHnhZ29257520 = uaheCtdOaFkLVhMjHJKPojdTzZHnhZ84861266;     uaheCtdOaFkLVhMjHJKPojdTzZHnhZ84861266 = uaheCtdOaFkLVhMjHJKPojdTzZHnhZ77589185;     uaheCtdOaFkLVhMjHJKPojdTzZHnhZ77589185 = uaheCtdOaFkLVhMjHJKPojdTzZHnhZ9202770;     uaheCtdOaFkLVhMjHJKPojdTzZHnhZ9202770 = uaheCtdOaFkLVhMjHJKPojdTzZHnhZ5565388;     uaheCtdOaFkLVhMjHJKPojdTzZHnhZ5565388 = uaheCtdOaFkLVhMjHJKPojdTzZHnhZ22907850;     uaheCtdOaFkLVhMjHJKPojdTzZHnhZ22907850 = uaheCtdOaFkLVhMjHJKPojdTzZHnhZ55785664;     uaheCtdOaFkLVhMjHJKPojdTzZHnhZ55785664 = uaheCtdOaFkLVhMjHJKPojdTzZHnhZ24578239;     uaheCtdOaFkLVhMjHJKPojdTzZHnhZ24578239 = uaheCtdOaFkLVhMjHJKPojdTzZHnhZ63362501;     uaheCtdOaFkLVhMjHJKPojdTzZHnhZ63362501 = uaheCtdOaFkLVhMjHJKPojdTzZHnhZ47040009;     uaheCtdOaFkLVhMjHJKPojdTzZHnhZ47040009 = uaheCtdOaFkLVhMjHJKPojdTzZHnhZ85045966;     uaheCtdOaFkLVhMjHJKPojdTzZHnhZ85045966 = uaheCtdOaFkLVhMjHJKPojdTzZHnhZ6776642;     uaheCtdOaFkLVhMjHJKPojdTzZHnhZ6776642 = uaheCtdOaFkLVhMjHJKPojdTzZHnhZ89230034;     uaheCtdOaFkLVhMjHJKPojdTzZHnhZ89230034 = uaheCtdOaFkLVhMjHJKPojdTzZHnhZ90020394;     uaheCtdOaFkLVhMjHJKPojdTzZHnhZ90020394 = uaheCtdOaFkLVhMjHJKPojdTzZHnhZ91945456;     uaheCtdOaFkLVhMjHJKPojdTzZHnhZ91945456 = uaheCtdOaFkLVhMjHJKPojdTzZHnhZ46606776;     uaheCtdOaFkLVhMjHJKPojdTzZHnhZ46606776 = uaheCtdOaFkLVhMjHJKPojdTzZHnhZ66321248;     uaheCtdOaFkLVhMjHJKPojdTzZHnhZ66321248 = uaheCtdOaFkLVhMjHJKPojdTzZHnhZ76432571;     uaheCtdOaFkLVhMjHJKPojdTzZHnhZ76432571 = uaheCtdOaFkLVhMjHJKPojdTzZHnhZ85599197;     uaheCtdOaFkLVhMjHJKPojdTzZHnhZ85599197 = uaheCtdOaFkLVhMjHJKPojdTzZHnhZ85851743;     uaheCtdOaFkLVhMjHJKPojdTzZHnhZ85851743 = uaheCtdOaFkLVhMjHJKPojdTzZHnhZ17400193;     uaheCtdOaFkLVhMjHJKPojdTzZHnhZ17400193 = uaheCtdOaFkLVhMjHJKPojdTzZHnhZ16234042;     uaheCtdOaFkLVhMjHJKPojdTzZHnhZ16234042 = uaheCtdOaFkLVhMjHJKPojdTzZHnhZ91814668;     uaheCtdOaFkLVhMjHJKPojdTzZHnhZ91814668 = uaheCtdOaFkLVhMjHJKPojdTzZHnhZ59336579;     uaheCtdOaFkLVhMjHJKPojdTzZHnhZ59336579 = uaheCtdOaFkLVhMjHJKPojdTzZHnhZ83842944;     uaheCtdOaFkLVhMjHJKPojdTzZHnhZ83842944 = uaheCtdOaFkLVhMjHJKPojdTzZHnhZ6153962;     uaheCtdOaFkLVhMjHJKPojdTzZHnhZ6153962 = uaheCtdOaFkLVhMjHJKPojdTzZHnhZ18959165;     uaheCtdOaFkLVhMjHJKPojdTzZHnhZ18959165 = uaheCtdOaFkLVhMjHJKPojdTzZHnhZ57585596;     uaheCtdOaFkLVhMjHJKPojdTzZHnhZ57585596 = uaheCtdOaFkLVhMjHJKPojdTzZHnhZ20082330;     uaheCtdOaFkLVhMjHJKPojdTzZHnhZ20082330 = uaheCtdOaFkLVhMjHJKPojdTzZHnhZ31751831;     uaheCtdOaFkLVhMjHJKPojdTzZHnhZ31751831 = uaheCtdOaFkLVhMjHJKPojdTzZHnhZ52428340;     uaheCtdOaFkLVhMjHJKPojdTzZHnhZ52428340 = uaheCtdOaFkLVhMjHJKPojdTzZHnhZ26110432;     uaheCtdOaFkLVhMjHJKPojdTzZHnhZ26110432 = uaheCtdOaFkLVhMjHJKPojdTzZHnhZ22657115;     uaheCtdOaFkLVhMjHJKPojdTzZHnhZ22657115 = uaheCtdOaFkLVhMjHJKPojdTzZHnhZ44145544;     uaheCtdOaFkLVhMjHJKPojdTzZHnhZ44145544 = uaheCtdOaFkLVhMjHJKPojdTzZHnhZ52791351;     uaheCtdOaFkLVhMjHJKPojdTzZHnhZ52791351 = uaheCtdOaFkLVhMjHJKPojdTzZHnhZ94701154;     uaheCtdOaFkLVhMjHJKPojdTzZHnhZ94701154 = uaheCtdOaFkLVhMjHJKPojdTzZHnhZ48729897;     uaheCtdOaFkLVhMjHJKPojdTzZHnhZ48729897 = uaheCtdOaFkLVhMjHJKPojdTzZHnhZ16936871;     uaheCtdOaFkLVhMjHJKPojdTzZHnhZ16936871 = uaheCtdOaFkLVhMjHJKPojdTzZHnhZ54504566;     uaheCtdOaFkLVhMjHJKPojdTzZHnhZ54504566 = uaheCtdOaFkLVhMjHJKPojdTzZHnhZ16168264;     uaheCtdOaFkLVhMjHJKPojdTzZHnhZ16168264 = uaheCtdOaFkLVhMjHJKPojdTzZHnhZ99812085;     uaheCtdOaFkLVhMjHJKPojdTzZHnhZ99812085 = uaheCtdOaFkLVhMjHJKPojdTzZHnhZ60996841;     uaheCtdOaFkLVhMjHJKPojdTzZHnhZ60996841 = uaheCtdOaFkLVhMjHJKPojdTzZHnhZ5376476;     uaheCtdOaFkLVhMjHJKPojdTzZHnhZ5376476 = uaheCtdOaFkLVhMjHJKPojdTzZHnhZ46487243;     uaheCtdOaFkLVhMjHJKPojdTzZHnhZ46487243 = uaheCtdOaFkLVhMjHJKPojdTzZHnhZ437485;     uaheCtdOaFkLVhMjHJKPojdTzZHnhZ437485 = uaheCtdOaFkLVhMjHJKPojdTzZHnhZ49762487;     uaheCtdOaFkLVhMjHJKPojdTzZHnhZ49762487 = uaheCtdOaFkLVhMjHJKPojdTzZHnhZ80224711;     uaheCtdOaFkLVhMjHJKPojdTzZHnhZ80224711 = uaheCtdOaFkLVhMjHJKPojdTzZHnhZ26715937;     uaheCtdOaFkLVhMjHJKPojdTzZHnhZ26715937 = uaheCtdOaFkLVhMjHJKPojdTzZHnhZ39430814;     uaheCtdOaFkLVhMjHJKPojdTzZHnhZ39430814 = uaheCtdOaFkLVhMjHJKPojdTzZHnhZ33400299;     uaheCtdOaFkLVhMjHJKPojdTzZHnhZ33400299 = uaheCtdOaFkLVhMjHJKPojdTzZHnhZ34694468;     uaheCtdOaFkLVhMjHJKPojdTzZHnhZ34694468 = uaheCtdOaFkLVhMjHJKPojdTzZHnhZ20068214;     uaheCtdOaFkLVhMjHJKPojdTzZHnhZ20068214 = uaheCtdOaFkLVhMjHJKPojdTzZHnhZ65327811;     uaheCtdOaFkLVhMjHJKPojdTzZHnhZ65327811 = uaheCtdOaFkLVhMjHJKPojdTzZHnhZ78240043;     uaheCtdOaFkLVhMjHJKPojdTzZHnhZ78240043 = uaheCtdOaFkLVhMjHJKPojdTzZHnhZ33572821;     uaheCtdOaFkLVhMjHJKPojdTzZHnhZ33572821 = uaheCtdOaFkLVhMjHJKPojdTzZHnhZ13023479;     uaheCtdOaFkLVhMjHJKPojdTzZHnhZ13023479 = uaheCtdOaFkLVhMjHJKPojdTzZHnhZ93046597;     uaheCtdOaFkLVhMjHJKPojdTzZHnhZ93046597 = uaheCtdOaFkLVhMjHJKPojdTzZHnhZ18252606;     uaheCtdOaFkLVhMjHJKPojdTzZHnhZ18252606 = uaheCtdOaFkLVhMjHJKPojdTzZHnhZ25359825;     uaheCtdOaFkLVhMjHJKPojdTzZHnhZ25359825 = uaheCtdOaFkLVhMjHJKPojdTzZHnhZ99411426;     uaheCtdOaFkLVhMjHJKPojdTzZHnhZ99411426 = uaheCtdOaFkLVhMjHJKPojdTzZHnhZ3948685;     uaheCtdOaFkLVhMjHJKPojdTzZHnhZ3948685 = uaheCtdOaFkLVhMjHJKPojdTzZHnhZ98200067;     uaheCtdOaFkLVhMjHJKPojdTzZHnhZ98200067 = uaheCtdOaFkLVhMjHJKPojdTzZHnhZ4495909;     uaheCtdOaFkLVhMjHJKPojdTzZHnhZ4495909 = uaheCtdOaFkLVhMjHJKPojdTzZHnhZ31610671;     uaheCtdOaFkLVhMjHJKPojdTzZHnhZ31610671 = uaheCtdOaFkLVhMjHJKPojdTzZHnhZ94611668;     uaheCtdOaFkLVhMjHJKPojdTzZHnhZ94611668 = uaheCtdOaFkLVhMjHJKPojdTzZHnhZ58935535;     uaheCtdOaFkLVhMjHJKPojdTzZHnhZ58935535 = uaheCtdOaFkLVhMjHJKPojdTzZHnhZ84119527;     uaheCtdOaFkLVhMjHJKPojdTzZHnhZ84119527 = uaheCtdOaFkLVhMjHJKPojdTzZHnhZ45084491;     uaheCtdOaFkLVhMjHJKPojdTzZHnhZ45084491 = uaheCtdOaFkLVhMjHJKPojdTzZHnhZ37229044;     uaheCtdOaFkLVhMjHJKPojdTzZHnhZ37229044 = uaheCtdOaFkLVhMjHJKPojdTzZHnhZ97244302;     uaheCtdOaFkLVhMjHJKPojdTzZHnhZ97244302 = uaheCtdOaFkLVhMjHJKPojdTzZHnhZ97876879;     uaheCtdOaFkLVhMjHJKPojdTzZHnhZ97876879 = uaheCtdOaFkLVhMjHJKPojdTzZHnhZ49384378;     uaheCtdOaFkLVhMjHJKPojdTzZHnhZ49384378 = uaheCtdOaFkLVhMjHJKPojdTzZHnhZ21928005;     uaheCtdOaFkLVhMjHJKPojdTzZHnhZ21928005 = uaheCtdOaFkLVhMjHJKPojdTzZHnhZ69430933;     uaheCtdOaFkLVhMjHJKPojdTzZHnhZ69430933 = uaheCtdOaFkLVhMjHJKPojdTzZHnhZ86039658;     uaheCtdOaFkLVhMjHJKPojdTzZHnhZ86039658 = uaheCtdOaFkLVhMjHJKPojdTzZHnhZ56403352;     uaheCtdOaFkLVhMjHJKPojdTzZHnhZ56403352 = uaheCtdOaFkLVhMjHJKPojdTzZHnhZ10857566;     uaheCtdOaFkLVhMjHJKPojdTzZHnhZ10857566 = uaheCtdOaFkLVhMjHJKPojdTzZHnhZ45327425;     uaheCtdOaFkLVhMjHJKPojdTzZHnhZ45327425 = uaheCtdOaFkLVhMjHJKPojdTzZHnhZ58899095;     uaheCtdOaFkLVhMjHJKPojdTzZHnhZ58899095 = uaheCtdOaFkLVhMjHJKPojdTzZHnhZ34080458;     uaheCtdOaFkLVhMjHJKPojdTzZHnhZ34080458 = uaheCtdOaFkLVhMjHJKPojdTzZHnhZ25929251;     uaheCtdOaFkLVhMjHJKPojdTzZHnhZ25929251 = uaheCtdOaFkLVhMjHJKPojdTzZHnhZ26319082;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void bnAHScThsKcUSKkMcuKmcpEnu41409679() {     double mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw77483164 = -907914836;    double mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw57506244 = -253848078;    double mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw27141518 = -708549347;    double mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw15599834 = -867555627;    double mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw3121861 = -106238502;    double mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw54399065 = -340785992;    double mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw47928002 = -280491094;    double mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw92761551 = -249241129;    double mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw18882200 = -168647562;    double mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw91495407 = -187729795;    double mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw18442459 = -145077646;    double mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw1663321 = -615548669;    double mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw16390741 = 55869337;    double mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw16970730 = -59786272;    double mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw58725602 = -722072579;    double mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw86507417 = -483668353;    double mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw6376000 = -484830299;    double mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw29324128 = -758995020;    double mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw94330726 = -527408541;    double mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw23654216 = -838830645;    double mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw66549221 = -147323511;    double mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw58891664 = -265101915;    double mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw53608762 = 16909576;    double mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw52643581 = -207860863;    double mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw61156818 = -723275141;    double mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw31338015 = -57564720;    double mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw59575639 = -477560331;    double mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw26563627 = 45912780;    double mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw75472880 = -169793857;    double mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw67780818 = -469425454;    double mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw84282589 = -419476400;    double mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw48333757 = -186524811;    double mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw17846922 = 6486551;    double mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw99402436 = -180667745;    double mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw31774791 = -333425722;    double mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw18733139 = -134457034;    double mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw87664709 = -764724609;    double mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw6662250 = -312605945;    double mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw3012498 = -844591100;    double mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw6840434 = -469690269;    double mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw98392270 = -701337266;    double mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw65531509 = -732239637;    double mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw18020378 = -544270135;    double mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw84661401 = -442308437;    double mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw74133766 = -609906164;    double mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw92187777 = -121259101;    double mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw84820297 = -811034832;    double mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw11691453 = -265802152;    double mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw52032860 = -934412265;    double mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw80093753 = -284144571;    double mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw59642296 = -667862854;    double mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw91721531 = -710333753;    double mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw55741099 = -736482502;    double mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw839440 = -309234940;    double mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw74860457 = -708400783;    double mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw18591501 = -542812921;    double mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw3897482 = -170757654;    double mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw74497936 = -400688485;    double mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw54443016 = -44280486;    double mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw71783846 = 51326217;    double mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw94823426 = -863225661;    double mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw21364376 = -226403875;    double mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw17288671 = 20552727;    double mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw51101382 = -699222109;    double mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw7212818 = -768253396;    double mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw70108702 = -958552835;    double mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw83816399 = -522035221;    double mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw16988304 = -763462918;    double mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw85195939 = -726360551;    double mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw39992463 = -487615546;    double mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw98842707 = -718943745;    double mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw99713749 = -72224355;    double mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw26311631 = -914403921;    double mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw87490292 = 42281727;    double mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw25261945 = -37493380;    double mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw1017712 = -415083874;    double mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw40871286 = -720831781;    double mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw68947361 = -540781987;    double mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw78509815 = -597954699;    double mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw68969040 = -502016041;    double mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw46517717 = -246529889;    double mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw47884186 = -111758180;    double mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw74530766 = -19674956;    double mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw95379127 = -885649286;    double mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw8138522 = -801562600;    double mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw92561058 = -709142647;    double mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw92592657 = -450042310;    double mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw17007483 = -684278509;    double mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw24541979 = -472266962;    double mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw13183290 = -790612801;    double mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw14835658 = -963699380;    double mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw13166774 = -264036125;    double mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw52219234 = -168325459;    double mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw31228651 = -795917318;    double mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw12017007 = -606464608;    double mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw77027895 = -374933392;    double mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw48242839 = -652792364;    double mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw66918996 = -845048027;    double mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw77448583 = -674055042;    double mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw4025065 = -907914836;     mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw77483164 = mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw57506244;     mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw57506244 = mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw27141518;     mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw27141518 = mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw15599834;     mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw15599834 = mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw3121861;     mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw3121861 = mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw54399065;     mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw54399065 = mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw47928002;     mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw47928002 = mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw92761551;     mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw92761551 = mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw18882200;     mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw18882200 = mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw91495407;     mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw91495407 = mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw18442459;     mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw18442459 = mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw1663321;     mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw1663321 = mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw16390741;     mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw16390741 = mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw16970730;     mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw16970730 = mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw58725602;     mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw58725602 = mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw86507417;     mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw86507417 = mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw6376000;     mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw6376000 = mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw29324128;     mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw29324128 = mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw94330726;     mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw94330726 = mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw23654216;     mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw23654216 = mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw66549221;     mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw66549221 = mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw58891664;     mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw58891664 = mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw53608762;     mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw53608762 = mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw52643581;     mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw52643581 = mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw61156818;     mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw61156818 = mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw31338015;     mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw31338015 = mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw59575639;     mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw59575639 = mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw26563627;     mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw26563627 = mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw75472880;     mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw75472880 = mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw67780818;     mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw67780818 = mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw84282589;     mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw84282589 = mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw48333757;     mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw48333757 = mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw17846922;     mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw17846922 = mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw99402436;     mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw99402436 = mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw31774791;     mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw31774791 = mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw18733139;     mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw18733139 = mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw87664709;     mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw87664709 = mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw6662250;     mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw6662250 = mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw3012498;     mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw3012498 = mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw6840434;     mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw6840434 = mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw98392270;     mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw98392270 = mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw65531509;     mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw65531509 = mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw18020378;     mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw18020378 = mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw84661401;     mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw84661401 = mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw74133766;     mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw74133766 = mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw92187777;     mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw92187777 = mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw84820297;     mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw84820297 = mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw11691453;     mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw11691453 = mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw52032860;     mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw52032860 = mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw80093753;     mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw80093753 = mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw59642296;     mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw59642296 = mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw91721531;     mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw91721531 = mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw55741099;     mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw55741099 = mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw839440;     mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw839440 = mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw74860457;     mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw74860457 = mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw18591501;     mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw18591501 = mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw3897482;     mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw3897482 = mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw74497936;     mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw74497936 = mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw54443016;     mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw54443016 = mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw71783846;     mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw71783846 = mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw94823426;     mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw94823426 = mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw21364376;     mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw21364376 = mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw17288671;     mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw17288671 = mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw51101382;     mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw51101382 = mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw7212818;     mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw7212818 = mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw70108702;     mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw70108702 = mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw83816399;     mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw83816399 = mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw16988304;     mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw16988304 = mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw85195939;     mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw85195939 = mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw39992463;     mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw39992463 = mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw98842707;     mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw98842707 = mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw99713749;     mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw99713749 = mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw26311631;     mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw26311631 = mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw87490292;     mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw87490292 = mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw25261945;     mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw25261945 = mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw1017712;     mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw1017712 = mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw40871286;     mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw40871286 = mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw68947361;     mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw68947361 = mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw78509815;     mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw78509815 = mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw68969040;     mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw68969040 = mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw46517717;     mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw46517717 = mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw47884186;     mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw47884186 = mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw74530766;     mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw74530766 = mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw95379127;     mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw95379127 = mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw8138522;     mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw8138522 = mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw92561058;     mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw92561058 = mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw92592657;     mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw92592657 = mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw17007483;     mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw17007483 = mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw24541979;     mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw24541979 = mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw13183290;     mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw13183290 = mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw14835658;     mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw14835658 = mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw13166774;     mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw13166774 = mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw52219234;     mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw52219234 = mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw31228651;     mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw31228651 = mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw12017007;     mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw12017007 = mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw77027895;     mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw77027895 = mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw48242839;     mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw48242839 = mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw66918996;     mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw66918996 = mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw77448583;     mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw77448583 = mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw4025065;     mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw4025065 = mfmXNZjfQvgbtTIJMzKCIIfEgHQZYw77483164;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void MRVImmBAiNgzUKIoIqPTJOODm51014406() {     double ffZtAacnBjSRKsKcGOfBpKEilcLPsE99305385 = -376130167;    double ffZtAacnBjSRKsKcGOfBpKEilcLPsE18974048 = -636446930;    double ffZtAacnBjSRKsKcGOfBpKEilcLPsE72868788 = -755766879;    double ffZtAacnBjSRKsKcGOfBpKEilcLPsE46974980 = 27660198;    double ffZtAacnBjSRKsKcGOfBpKEilcLPsE63256192 = 16510576;    double ffZtAacnBjSRKsKcGOfBpKEilcLPsE78417381 = -352329150;    double ffZtAacnBjSRKsKcGOfBpKEilcLPsE76948587 = -343809218;    double ffZtAacnBjSRKsKcGOfBpKEilcLPsE79624180 = -257421977;    double ffZtAacnBjSRKsKcGOfBpKEilcLPsE15405840 = -154442980;    double ffZtAacnBjSRKsKcGOfBpKEilcLPsE52778633 = -57948192;    double ffZtAacnBjSRKsKcGOfBpKEilcLPsE89358727 = -800835348;    double ffZtAacnBjSRKsKcGOfBpKEilcLPsE17845204 = -718730275;    double ffZtAacnBjSRKsKcGOfBpKEilcLPsE49379683 = -482164452;    double ffZtAacnBjSRKsKcGOfBpKEilcLPsE83937196 = -909863069;    double ffZtAacnBjSRKsKcGOfBpKEilcLPsE53983397 = -648914498;    double ffZtAacnBjSRKsKcGOfBpKEilcLPsE34478144 = -926034894;    double ffZtAacnBjSRKsKcGOfBpKEilcLPsE99825059 = -870655017;    double ffZtAacnBjSRKsKcGOfBpKEilcLPsE91849430 = -680715938;    double ffZtAacnBjSRKsKcGOfBpKEilcLPsE98967949 = -600544198;    double ffZtAacnBjSRKsKcGOfBpKEilcLPsE4763859 = -230075701;    double ffZtAacnBjSRKsKcGOfBpKEilcLPsE23703507 = -979402213;    double ffZtAacnBjSRKsKcGOfBpKEilcLPsE23293643 = -335853079;    double ffZtAacnBjSRKsKcGOfBpKEilcLPsE63080166 = -639117779;    double ffZtAacnBjSRKsKcGOfBpKEilcLPsE89921203 = -617959728;    double ffZtAacnBjSRKsKcGOfBpKEilcLPsE35087485 = -634172114;    double ffZtAacnBjSRKsKcGOfBpKEilcLPsE20913869 = -384750248;    double ffZtAacnBjSRKsKcGOfBpKEilcLPsE32612243 = -4364376;    double ffZtAacnBjSRKsKcGOfBpKEilcLPsE62143452 = -918535453;    double ffZtAacnBjSRKsKcGOfBpKEilcLPsE23369793 = -936739775;    double ffZtAacnBjSRKsKcGOfBpKEilcLPsE13597896 = -845639648;    double ffZtAacnBjSRKsKcGOfBpKEilcLPsE35447855 = -825204147;    double ffZtAacnBjSRKsKcGOfBpKEilcLPsE67225082 = 37586358;    double ffZtAacnBjSRKsKcGOfBpKEilcLPsE43166386 = -836117331;    double ffZtAacnBjSRKsKcGOfBpKEilcLPsE71941554 = -956487372;    double ffZtAacnBjSRKsKcGOfBpKEilcLPsE12609003 = -483244324;    double ffZtAacnBjSRKsKcGOfBpKEilcLPsE88310099 = -148873014;    double ffZtAacnBjSRKsKcGOfBpKEilcLPsE30746967 = -814341706;    double ffZtAacnBjSRKsKcGOfBpKEilcLPsE10600112 = -894148702;    double ffZtAacnBjSRKsKcGOfBpKEilcLPsE63392943 = -616996381;    double ffZtAacnBjSRKsKcGOfBpKEilcLPsE19511080 = -927239270;    double ffZtAacnBjSRKsKcGOfBpKEilcLPsE52768117 = -35476524;    double ffZtAacnBjSRKsKcGOfBpKEilcLPsE82033680 = -419705714;    double ffZtAacnBjSRKsKcGOfBpKEilcLPsE65387777 = -588236950;    double ffZtAacnBjSRKsKcGOfBpKEilcLPsE32756260 = -351114607;    double ffZtAacnBjSRKsKcGOfBpKEilcLPsE54049577 = -796594794;    double ffZtAacnBjSRKsKcGOfBpKEilcLPsE31394257 = -924691331;    double ffZtAacnBjSRKsKcGOfBpKEilcLPsE10488409 = -992042352;    double ffZtAacnBjSRKsKcGOfBpKEilcLPsE93531204 = -4298140;    double ffZtAacnBjSRKsKcGOfBpKEilcLPsE59096953 = -19528687;    double ffZtAacnBjSRKsKcGOfBpKEilcLPsE96141229 = -263199756;    double ffZtAacnBjSRKsKcGOfBpKEilcLPsE48104115 = -711752180;    double ffZtAacnBjSRKsKcGOfBpKEilcLPsE88110195 = 64288166;    double ffZtAacnBjSRKsKcGOfBpKEilcLPsE46963964 = -700077642;    double ffZtAacnBjSRKsKcGOfBpKEilcLPsE28864562 = -500243999;    double ffZtAacnBjSRKsKcGOfBpKEilcLPsE27310899 = -669522532;    double ffZtAacnBjSRKsKcGOfBpKEilcLPsE76011743 = 59722911;    double ffZtAacnBjSRKsKcGOfBpKEilcLPsE55893881 = -997329151;    double ffZtAacnBjSRKsKcGOfBpKEilcLPsE82947584 = -37807152;    double ffZtAacnBjSRKsKcGOfBpKEilcLPsE11887495 = -338167689;    double ffZtAacnBjSRKsKcGOfBpKEilcLPsE42342324 = -598739176;    double ffZtAacnBjSRKsKcGOfBpKEilcLPsE45805138 = -247964774;    double ffZtAacnBjSRKsKcGOfBpKEilcLPsE14805135 = -425273766;    double ffZtAacnBjSRKsKcGOfBpKEilcLPsE56254387 = -320682203;    double ffZtAacnBjSRKsKcGOfBpKEilcLPsE1807945 = -308803332;    double ffZtAacnBjSRKsKcGOfBpKEilcLPsE17330778 = -232744046;    double ffZtAacnBjSRKsKcGOfBpKEilcLPsE22133645 = -738421707;    double ffZtAacnBjSRKsKcGOfBpKEilcLPsE74678817 = -882612944;    double ffZtAacnBjSRKsKcGOfBpKEilcLPsE77438129 = -525677080;    double ffZtAacnBjSRKsKcGOfBpKEilcLPsE71328194 = -326618746;    double ffZtAacnBjSRKsKcGOfBpKEilcLPsE65673298 = -400041485;    double ffZtAacnBjSRKsKcGOfBpKEilcLPsE3731178 = -11693189;    double ffZtAacnBjSRKsKcGOfBpKEilcLPsE89224947 = -976506315;    double ffZtAacnBjSRKsKcGOfBpKEilcLPsE28456488 = 36280443;    double ffZtAacnBjSRKsKcGOfBpKEilcLPsE79456870 = -673304929;    double ffZtAacnBjSRKsKcGOfBpKEilcLPsE51995742 = -94599177;    double ffZtAacnBjSRKsKcGOfBpKEilcLPsE41669826 = -459696500;    double ffZtAacnBjSRKsKcGOfBpKEilcLPsE57905865 = -747616130;    double ffZtAacnBjSRKsKcGOfBpKEilcLPsE30323907 = -188003173;    double ffZtAacnBjSRKsKcGOfBpKEilcLPsE35871626 = -821364935;    double ffZtAacnBjSRKsKcGOfBpKEilcLPsE3693229 = -709480783;    double ffZtAacnBjSRKsKcGOfBpKEilcLPsE10425460 = -392707896;    double ffZtAacnBjSRKsKcGOfBpKEilcLPsE39081038 = 99933764;    double ffZtAacnBjSRKsKcGOfBpKEilcLPsE3046500 = -799006766;    double ffZtAacnBjSRKsKcGOfBpKEilcLPsE27228564 = -573540019;    double ffZtAacnBjSRKsKcGOfBpKEilcLPsE65493780 = -33887469;    double ffZtAacnBjSRKsKcGOfBpKEilcLPsE47337660 = -789492313;    double ffZtAacnBjSRKsKcGOfBpKEilcLPsE20261119 = -262336001;    double ffZtAacnBjSRKsKcGOfBpKEilcLPsE14301825 = -235873333;    double ffZtAacnBjSRKsKcGOfBpKEilcLPsE44630655 = -186964840;    double ffZtAacnBjSRKsKcGOfBpKEilcLPsE36597260 = -442967236;    double ffZtAacnBjSRKsKcGOfBpKEilcLPsE32416218 = -151543863;    double ffZtAacnBjSRKsKcGOfBpKEilcLPsE47799382 = -676534555;    double ffZtAacnBjSRKsKcGOfBpKEilcLPsE98712617 = -455981013;    double ffZtAacnBjSRKsKcGOfBpKEilcLPsE21050620 = 81742795;    double ffZtAacnBjSRKsKcGOfBpKEilcLPsE73705941 = -579274496;    double ffZtAacnBjSRKsKcGOfBpKEilcLPsE37962982 = -610202758;    double ffZtAacnBjSRKsKcGOfBpKEilcLPsE25779294 = 976488;    double ffZtAacnBjSRKsKcGOfBpKEilcLPsE63579833 = -179433618;    double ffZtAacnBjSRKsKcGOfBpKEilcLPsE15425482 = -18370561;    double ffZtAacnBjSRKsKcGOfBpKEilcLPsE31915932 = -376130167;     ffZtAacnBjSRKsKcGOfBpKEilcLPsE99305385 = ffZtAacnBjSRKsKcGOfBpKEilcLPsE18974048;     ffZtAacnBjSRKsKcGOfBpKEilcLPsE18974048 = ffZtAacnBjSRKsKcGOfBpKEilcLPsE72868788;     ffZtAacnBjSRKsKcGOfBpKEilcLPsE72868788 = ffZtAacnBjSRKsKcGOfBpKEilcLPsE46974980;     ffZtAacnBjSRKsKcGOfBpKEilcLPsE46974980 = ffZtAacnBjSRKsKcGOfBpKEilcLPsE63256192;     ffZtAacnBjSRKsKcGOfBpKEilcLPsE63256192 = ffZtAacnBjSRKsKcGOfBpKEilcLPsE78417381;     ffZtAacnBjSRKsKcGOfBpKEilcLPsE78417381 = ffZtAacnBjSRKsKcGOfBpKEilcLPsE76948587;     ffZtAacnBjSRKsKcGOfBpKEilcLPsE76948587 = ffZtAacnBjSRKsKcGOfBpKEilcLPsE79624180;     ffZtAacnBjSRKsKcGOfBpKEilcLPsE79624180 = ffZtAacnBjSRKsKcGOfBpKEilcLPsE15405840;     ffZtAacnBjSRKsKcGOfBpKEilcLPsE15405840 = ffZtAacnBjSRKsKcGOfBpKEilcLPsE52778633;     ffZtAacnBjSRKsKcGOfBpKEilcLPsE52778633 = ffZtAacnBjSRKsKcGOfBpKEilcLPsE89358727;     ffZtAacnBjSRKsKcGOfBpKEilcLPsE89358727 = ffZtAacnBjSRKsKcGOfBpKEilcLPsE17845204;     ffZtAacnBjSRKsKcGOfBpKEilcLPsE17845204 = ffZtAacnBjSRKsKcGOfBpKEilcLPsE49379683;     ffZtAacnBjSRKsKcGOfBpKEilcLPsE49379683 = ffZtAacnBjSRKsKcGOfBpKEilcLPsE83937196;     ffZtAacnBjSRKsKcGOfBpKEilcLPsE83937196 = ffZtAacnBjSRKsKcGOfBpKEilcLPsE53983397;     ffZtAacnBjSRKsKcGOfBpKEilcLPsE53983397 = ffZtAacnBjSRKsKcGOfBpKEilcLPsE34478144;     ffZtAacnBjSRKsKcGOfBpKEilcLPsE34478144 = ffZtAacnBjSRKsKcGOfBpKEilcLPsE99825059;     ffZtAacnBjSRKsKcGOfBpKEilcLPsE99825059 = ffZtAacnBjSRKsKcGOfBpKEilcLPsE91849430;     ffZtAacnBjSRKsKcGOfBpKEilcLPsE91849430 = ffZtAacnBjSRKsKcGOfBpKEilcLPsE98967949;     ffZtAacnBjSRKsKcGOfBpKEilcLPsE98967949 = ffZtAacnBjSRKsKcGOfBpKEilcLPsE4763859;     ffZtAacnBjSRKsKcGOfBpKEilcLPsE4763859 = ffZtAacnBjSRKsKcGOfBpKEilcLPsE23703507;     ffZtAacnBjSRKsKcGOfBpKEilcLPsE23703507 = ffZtAacnBjSRKsKcGOfBpKEilcLPsE23293643;     ffZtAacnBjSRKsKcGOfBpKEilcLPsE23293643 = ffZtAacnBjSRKsKcGOfBpKEilcLPsE63080166;     ffZtAacnBjSRKsKcGOfBpKEilcLPsE63080166 = ffZtAacnBjSRKsKcGOfBpKEilcLPsE89921203;     ffZtAacnBjSRKsKcGOfBpKEilcLPsE89921203 = ffZtAacnBjSRKsKcGOfBpKEilcLPsE35087485;     ffZtAacnBjSRKsKcGOfBpKEilcLPsE35087485 = ffZtAacnBjSRKsKcGOfBpKEilcLPsE20913869;     ffZtAacnBjSRKsKcGOfBpKEilcLPsE20913869 = ffZtAacnBjSRKsKcGOfBpKEilcLPsE32612243;     ffZtAacnBjSRKsKcGOfBpKEilcLPsE32612243 = ffZtAacnBjSRKsKcGOfBpKEilcLPsE62143452;     ffZtAacnBjSRKsKcGOfBpKEilcLPsE62143452 = ffZtAacnBjSRKsKcGOfBpKEilcLPsE23369793;     ffZtAacnBjSRKsKcGOfBpKEilcLPsE23369793 = ffZtAacnBjSRKsKcGOfBpKEilcLPsE13597896;     ffZtAacnBjSRKsKcGOfBpKEilcLPsE13597896 = ffZtAacnBjSRKsKcGOfBpKEilcLPsE35447855;     ffZtAacnBjSRKsKcGOfBpKEilcLPsE35447855 = ffZtAacnBjSRKsKcGOfBpKEilcLPsE67225082;     ffZtAacnBjSRKsKcGOfBpKEilcLPsE67225082 = ffZtAacnBjSRKsKcGOfBpKEilcLPsE43166386;     ffZtAacnBjSRKsKcGOfBpKEilcLPsE43166386 = ffZtAacnBjSRKsKcGOfBpKEilcLPsE71941554;     ffZtAacnBjSRKsKcGOfBpKEilcLPsE71941554 = ffZtAacnBjSRKsKcGOfBpKEilcLPsE12609003;     ffZtAacnBjSRKsKcGOfBpKEilcLPsE12609003 = ffZtAacnBjSRKsKcGOfBpKEilcLPsE88310099;     ffZtAacnBjSRKsKcGOfBpKEilcLPsE88310099 = ffZtAacnBjSRKsKcGOfBpKEilcLPsE30746967;     ffZtAacnBjSRKsKcGOfBpKEilcLPsE30746967 = ffZtAacnBjSRKsKcGOfBpKEilcLPsE10600112;     ffZtAacnBjSRKsKcGOfBpKEilcLPsE10600112 = ffZtAacnBjSRKsKcGOfBpKEilcLPsE63392943;     ffZtAacnBjSRKsKcGOfBpKEilcLPsE63392943 = ffZtAacnBjSRKsKcGOfBpKEilcLPsE19511080;     ffZtAacnBjSRKsKcGOfBpKEilcLPsE19511080 = ffZtAacnBjSRKsKcGOfBpKEilcLPsE52768117;     ffZtAacnBjSRKsKcGOfBpKEilcLPsE52768117 = ffZtAacnBjSRKsKcGOfBpKEilcLPsE82033680;     ffZtAacnBjSRKsKcGOfBpKEilcLPsE82033680 = ffZtAacnBjSRKsKcGOfBpKEilcLPsE65387777;     ffZtAacnBjSRKsKcGOfBpKEilcLPsE65387777 = ffZtAacnBjSRKsKcGOfBpKEilcLPsE32756260;     ffZtAacnBjSRKsKcGOfBpKEilcLPsE32756260 = ffZtAacnBjSRKsKcGOfBpKEilcLPsE54049577;     ffZtAacnBjSRKsKcGOfBpKEilcLPsE54049577 = ffZtAacnBjSRKsKcGOfBpKEilcLPsE31394257;     ffZtAacnBjSRKsKcGOfBpKEilcLPsE31394257 = ffZtAacnBjSRKsKcGOfBpKEilcLPsE10488409;     ffZtAacnBjSRKsKcGOfBpKEilcLPsE10488409 = ffZtAacnBjSRKsKcGOfBpKEilcLPsE93531204;     ffZtAacnBjSRKsKcGOfBpKEilcLPsE93531204 = ffZtAacnBjSRKsKcGOfBpKEilcLPsE59096953;     ffZtAacnBjSRKsKcGOfBpKEilcLPsE59096953 = ffZtAacnBjSRKsKcGOfBpKEilcLPsE96141229;     ffZtAacnBjSRKsKcGOfBpKEilcLPsE96141229 = ffZtAacnBjSRKsKcGOfBpKEilcLPsE48104115;     ffZtAacnBjSRKsKcGOfBpKEilcLPsE48104115 = ffZtAacnBjSRKsKcGOfBpKEilcLPsE88110195;     ffZtAacnBjSRKsKcGOfBpKEilcLPsE88110195 = ffZtAacnBjSRKsKcGOfBpKEilcLPsE46963964;     ffZtAacnBjSRKsKcGOfBpKEilcLPsE46963964 = ffZtAacnBjSRKsKcGOfBpKEilcLPsE28864562;     ffZtAacnBjSRKsKcGOfBpKEilcLPsE28864562 = ffZtAacnBjSRKsKcGOfBpKEilcLPsE27310899;     ffZtAacnBjSRKsKcGOfBpKEilcLPsE27310899 = ffZtAacnBjSRKsKcGOfBpKEilcLPsE76011743;     ffZtAacnBjSRKsKcGOfBpKEilcLPsE76011743 = ffZtAacnBjSRKsKcGOfBpKEilcLPsE55893881;     ffZtAacnBjSRKsKcGOfBpKEilcLPsE55893881 = ffZtAacnBjSRKsKcGOfBpKEilcLPsE82947584;     ffZtAacnBjSRKsKcGOfBpKEilcLPsE82947584 = ffZtAacnBjSRKsKcGOfBpKEilcLPsE11887495;     ffZtAacnBjSRKsKcGOfBpKEilcLPsE11887495 = ffZtAacnBjSRKsKcGOfBpKEilcLPsE42342324;     ffZtAacnBjSRKsKcGOfBpKEilcLPsE42342324 = ffZtAacnBjSRKsKcGOfBpKEilcLPsE45805138;     ffZtAacnBjSRKsKcGOfBpKEilcLPsE45805138 = ffZtAacnBjSRKsKcGOfBpKEilcLPsE14805135;     ffZtAacnBjSRKsKcGOfBpKEilcLPsE14805135 = ffZtAacnBjSRKsKcGOfBpKEilcLPsE56254387;     ffZtAacnBjSRKsKcGOfBpKEilcLPsE56254387 = ffZtAacnBjSRKsKcGOfBpKEilcLPsE1807945;     ffZtAacnBjSRKsKcGOfBpKEilcLPsE1807945 = ffZtAacnBjSRKsKcGOfBpKEilcLPsE17330778;     ffZtAacnBjSRKsKcGOfBpKEilcLPsE17330778 = ffZtAacnBjSRKsKcGOfBpKEilcLPsE22133645;     ffZtAacnBjSRKsKcGOfBpKEilcLPsE22133645 = ffZtAacnBjSRKsKcGOfBpKEilcLPsE74678817;     ffZtAacnBjSRKsKcGOfBpKEilcLPsE74678817 = ffZtAacnBjSRKsKcGOfBpKEilcLPsE77438129;     ffZtAacnBjSRKsKcGOfBpKEilcLPsE77438129 = ffZtAacnBjSRKsKcGOfBpKEilcLPsE71328194;     ffZtAacnBjSRKsKcGOfBpKEilcLPsE71328194 = ffZtAacnBjSRKsKcGOfBpKEilcLPsE65673298;     ffZtAacnBjSRKsKcGOfBpKEilcLPsE65673298 = ffZtAacnBjSRKsKcGOfBpKEilcLPsE3731178;     ffZtAacnBjSRKsKcGOfBpKEilcLPsE3731178 = ffZtAacnBjSRKsKcGOfBpKEilcLPsE89224947;     ffZtAacnBjSRKsKcGOfBpKEilcLPsE89224947 = ffZtAacnBjSRKsKcGOfBpKEilcLPsE28456488;     ffZtAacnBjSRKsKcGOfBpKEilcLPsE28456488 = ffZtAacnBjSRKsKcGOfBpKEilcLPsE79456870;     ffZtAacnBjSRKsKcGOfBpKEilcLPsE79456870 = ffZtAacnBjSRKsKcGOfBpKEilcLPsE51995742;     ffZtAacnBjSRKsKcGOfBpKEilcLPsE51995742 = ffZtAacnBjSRKsKcGOfBpKEilcLPsE41669826;     ffZtAacnBjSRKsKcGOfBpKEilcLPsE41669826 = ffZtAacnBjSRKsKcGOfBpKEilcLPsE57905865;     ffZtAacnBjSRKsKcGOfBpKEilcLPsE57905865 = ffZtAacnBjSRKsKcGOfBpKEilcLPsE30323907;     ffZtAacnBjSRKsKcGOfBpKEilcLPsE30323907 = ffZtAacnBjSRKsKcGOfBpKEilcLPsE35871626;     ffZtAacnBjSRKsKcGOfBpKEilcLPsE35871626 = ffZtAacnBjSRKsKcGOfBpKEilcLPsE3693229;     ffZtAacnBjSRKsKcGOfBpKEilcLPsE3693229 = ffZtAacnBjSRKsKcGOfBpKEilcLPsE10425460;     ffZtAacnBjSRKsKcGOfBpKEilcLPsE10425460 = ffZtAacnBjSRKsKcGOfBpKEilcLPsE39081038;     ffZtAacnBjSRKsKcGOfBpKEilcLPsE39081038 = ffZtAacnBjSRKsKcGOfBpKEilcLPsE3046500;     ffZtAacnBjSRKsKcGOfBpKEilcLPsE3046500 = ffZtAacnBjSRKsKcGOfBpKEilcLPsE27228564;     ffZtAacnBjSRKsKcGOfBpKEilcLPsE27228564 = ffZtAacnBjSRKsKcGOfBpKEilcLPsE65493780;     ffZtAacnBjSRKsKcGOfBpKEilcLPsE65493780 = ffZtAacnBjSRKsKcGOfBpKEilcLPsE47337660;     ffZtAacnBjSRKsKcGOfBpKEilcLPsE47337660 = ffZtAacnBjSRKsKcGOfBpKEilcLPsE20261119;     ffZtAacnBjSRKsKcGOfBpKEilcLPsE20261119 = ffZtAacnBjSRKsKcGOfBpKEilcLPsE14301825;     ffZtAacnBjSRKsKcGOfBpKEilcLPsE14301825 = ffZtAacnBjSRKsKcGOfBpKEilcLPsE44630655;     ffZtAacnBjSRKsKcGOfBpKEilcLPsE44630655 = ffZtAacnBjSRKsKcGOfBpKEilcLPsE36597260;     ffZtAacnBjSRKsKcGOfBpKEilcLPsE36597260 = ffZtAacnBjSRKsKcGOfBpKEilcLPsE32416218;     ffZtAacnBjSRKsKcGOfBpKEilcLPsE32416218 = ffZtAacnBjSRKsKcGOfBpKEilcLPsE47799382;     ffZtAacnBjSRKsKcGOfBpKEilcLPsE47799382 = ffZtAacnBjSRKsKcGOfBpKEilcLPsE98712617;     ffZtAacnBjSRKsKcGOfBpKEilcLPsE98712617 = ffZtAacnBjSRKsKcGOfBpKEilcLPsE21050620;     ffZtAacnBjSRKsKcGOfBpKEilcLPsE21050620 = ffZtAacnBjSRKsKcGOfBpKEilcLPsE73705941;     ffZtAacnBjSRKsKcGOfBpKEilcLPsE73705941 = ffZtAacnBjSRKsKcGOfBpKEilcLPsE37962982;     ffZtAacnBjSRKsKcGOfBpKEilcLPsE37962982 = ffZtAacnBjSRKsKcGOfBpKEilcLPsE25779294;     ffZtAacnBjSRKsKcGOfBpKEilcLPsE25779294 = ffZtAacnBjSRKsKcGOfBpKEilcLPsE63579833;     ffZtAacnBjSRKsKcGOfBpKEilcLPsE63579833 = ffZtAacnBjSRKsKcGOfBpKEilcLPsE15425482;     ffZtAacnBjSRKsKcGOfBpKEilcLPsE15425482 = ffZtAacnBjSRKsKcGOfBpKEilcLPsE31915932;     ffZtAacnBjSRKsKcGOfBpKEilcLPsE31915932 = ffZtAacnBjSRKsKcGOfBpKEilcLPsE99305385;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void zSCOxEoyjtsdsYhevtiyFrjVw12861664() {     double mTyyHMMbmPqnBIkOZseHLUHUIrMsBh50469468 = -198720510;    double mTyyHMMbmPqnBIkOZseHLUHUIrMsBh50340651 = -89997609;    double mTyyHMMbmPqnBIkOZseHLUHUIrMsBh39940352 = -317818565;    double mTyyHMMbmPqnBIkOZseHLUHUIrMsBh23498700 = -907526419;    double mTyyHMMbmPqnBIkOZseHLUHUIrMsBh10780304 = -545689320;    double mTyyHMMbmPqnBIkOZseHLUHUIrMsBh47241366 = -361723968;    double mTyyHMMbmPqnBIkOZseHLUHUIrMsBh56137612 = -112888099;    double mTyyHMMbmPqnBIkOZseHLUHUIrMsBh78858479 = -722963053;    double mTyyHMMbmPqnBIkOZseHLUHUIrMsBh48804589 = -860537139;    double mTyyHMMbmPqnBIkOZseHLUHUIrMsBh87734911 = -363878110;    double mTyyHMMbmPqnBIkOZseHLUHUIrMsBh38346441 = -281163194;    double mTyyHMMbmPqnBIkOZseHLUHUIrMsBh2772193 = -241626451;    double mTyyHMMbmPqnBIkOZseHLUHUIrMsBh34394153 = -32319657;    double mTyyHMMbmPqnBIkOZseHLUHUIrMsBh20900851 = -104064708;    double mTyyHMMbmPqnBIkOZseHLUHUIrMsBh11693283 = -388719266;    double mTyyHMMbmPqnBIkOZseHLUHUIrMsBh24484777 = 68786501;    double mTyyHMMbmPqnBIkOZseHLUHUIrMsBh55274051 = -66909175;    double mTyyHMMbmPqnBIkOZseHLUHUIrMsBh57081772 = 89657719;    double mTyyHMMbmPqnBIkOZseHLUHUIrMsBh42325662 = -584474179;    double mTyyHMMbmPqnBIkOZseHLUHUIrMsBh99160554 = -790978903;    double mTyyHMMbmPqnBIkOZseHLUHUIrMsBh5391462 = -513268149;    double mTyyHMMbmPqnBIkOZseHLUHUIrMsBh4596122 = -585310821;    double mTyyHMMbmPqnBIkOZseHLUHUIrMsBh7486159 = -86259832;    double mTyyHMMbmPqnBIkOZseHLUHUIrMsBh36999397 = -216578210;    double mTyyHMMbmPqnBIkOZseHLUHUIrMsBh73336453 = -195858251;    double mTyyHMMbmPqnBIkOZseHLUHUIrMsBh96466218 = -521857259;    double mTyyHMMbmPqnBIkOZseHLUHUIrMsBh67609642 = -536790358;    double mTyyHMMbmPqnBIkOZseHLUHUIrMsBh25344578 = -886826906;    double mTyyHMMbmPqnBIkOZseHLUHUIrMsBh51802665 = -955397791;    double mTyyHMMbmPqnBIkOZseHLUHUIrMsBh96332747 = -338890145;    double mTyyHMMbmPqnBIkOZseHLUHUIrMsBh12953803 = -769591443;    double mTyyHMMbmPqnBIkOZseHLUHUIrMsBh26328805 = -901827071;    double mTyyHMMbmPqnBIkOZseHLUHUIrMsBh70992913 = -833703821;    double mTyyHMMbmPqnBIkOZseHLUHUIrMsBh79398533 = -945459048;    double mTyyHMMbmPqnBIkOZseHLUHUIrMsBh97777017 = 54569929;    double mTyyHMMbmPqnBIkOZseHLUHUIrMsBh40721990 = -163828192;    double mTyyHMMbmPqnBIkOZseHLUHUIrMsBh41979105 = -775018973;    double mTyyHMMbmPqnBIkOZseHLUHUIrMsBh31663165 = -586841032;    double mTyyHMMbmPqnBIkOZseHLUHUIrMsBh80553697 = -46354441;    double mTyyHMMbmPqnBIkOZseHLUHUIrMsBh8951320 = -376611594;    double mTyyHMMbmPqnBIkOZseHLUHUIrMsBh34926347 = -173540802;    double mTyyHMMbmPqnBIkOZseHLUHUIrMsBh55750522 = -531574805;    double mTyyHMMbmPqnBIkOZseHLUHUIrMsBh24071576 = -104579967;    double mTyyHMMbmPqnBIkOZseHLUHUIrMsBh33574717 = -844910248;    double mTyyHMMbmPqnBIkOZseHLUHUIrMsBh22029382 = -47896430;    double mTyyHMMbmPqnBIkOZseHLUHUIrMsBh4622870 = -681831077;    double mTyyHMMbmPqnBIkOZseHLUHUIrMsBh37723109 = -438260695;    double mTyyHMMbmPqnBIkOZseHLUHUIrMsBh85140327 = -999425190;    double mTyyHMMbmPqnBIkOZseHLUHUIrMsBh79377982 = -882645002;    double mTyyHMMbmPqnBIkOZseHLUHUIrMsBh23806643 = -646270949;    double mTyyHMMbmPqnBIkOZseHLUHUIrMsBh81635980 = -787624392;    double mTyyHMMbmPqnBIkOZseHLUHUIrMsBh57174612 = -674015941;    double mTyyHMMbmPqnBIkOZseHLUHUIrMsBh58559519 = -627928747;    double mTyyHMMbmPqnBIkOZseHLUHUIrMsBh76912650 = -562291413;    double mTyyHMMbmPqnBIkOZseHLUHUIrMsBh7470203 = -276602645;    double mTyyHMMbmPqnBIkOZseHLUHUIrMsBh45873346 = -613409689;    double mTyyHMMbmPqnBIkOZseHLUHUIrMsBh42854492 = 96262222;    double mTyyHMMbmPqnBIkOZseHLUHUIrMsBh2940955 = -1240356;    double mTyyHMMbmPqnBIkOZseHLUHUIrMsBh50162247 = -611668168;    double mTyyHMMbmPqnBIkOZseHLUHUIrMsBh14314085 = 76167939;    double mTyyHMMbmPqnBIkOZseHLUHUIrMsBh79631724 = -824933611;    double mTyyHMMbmPqnBIkOZseHLUHUIrMsBh30793034 = -226061193;    double mTyyHMMbmPqnBIkOZseHLUHUIrMsBh27055815 = -767565263;    double mTyyHMMbmPqnBIkOZseHLUHUIrMsBh52471842 = -421646994;    double mTyyHMMbmPqnBIkOZseHLUHUIrMsBh74781109 = -594286667;    double mTyyHMMbmPqnBIkOZseHLUHUIrMsBh12017636 = -379336123;    double mTyyHMMbmPqnBIkOZseHLUHUIrMsBh31779280 = -407922630;    double mTyyHMMbmPqnBIkOZseHLUHUIrMsBh54995619 = -86860610;    double mTyyHMMbmPqnBIkOZseHLUHUIrMsBh23123834 = -58634637;    double mTyyHMMbmPqnBIkOZseHLUHUIrMsBh70971293 = -124891074;    double mTyyHMMbmPqnBIkOZseHLUHUIrMsBh82505672 = -156194526;    double mTyyHMMbmPqnBIkOZseHLUHUIrMsBh23610886 = -480068144;    double mTyyHMMbmPqnBIkOZseHLUHUIrMsBh76528075 = -863987841;    double mTyyHMMbmPqnBIkOZseHLUHUIrMsBh33374342 = -107862586;    double mTyyHMMbmPqnBIkOZseHLUHUIrMsBh64234208 = -517438102;    double mTyyHMMbmPqnBIkOZseHLUHUIrMsBh49640940 = -981693345;    double mTyyHMMbmPqnBIkOZseHLUHUIrMsBh80524546 = -380730855;    double mTyyHMMbmPqnBIkOZseHLUHUIrMsBh73911442 = -241349585;    double mTyyHMMbmPqnBIkOZseHLUHUIrMsBh14970015 = -68681781;    double mTyyHMMbmPqnBIkOZseHLUHUIrMsBh68713583 = -514027175;    double mTyyHMMbmPqnBIkOZseHLUHUIrMsBh58743109 = 16403435;    double mTyyHMMbmPqnBIkOZseHLUHUIrMsBh82469314 = -537365169;    double mTyyHMMbmPqnBIkOZseHLUHUIrMsBh45966596 = 95818095;    double mTyyHMMbmPqnBIkOZseHLUHUIrMsBh27996022 = -209126842;    double mTyyHMMbmPqnBIkOZseHLUHUIrMsBh14696768 = -551265754;    double mTyyHMMbmPqnBIkOZseHLUHUIrMsBh55779191 = 4424498;    double mTyyHMMbmPqnBIkOZseHLUHUIrMsBh67769286 = -173898324;    double mTyyHMMbmPqnBIkOZseHLUHUIrMsBh94080263 = -171412408;    double mTyyHMMbmPqnBIkOZseHLUHUIrMsBh71928331 = -568856403;    double mTyyHMMbmPqnBIkOZseHLUHUIrMsBh51903671 = -332020383;    double mTyyHMMbmPqnBIkOZseHLUHUIrMsBh97867497 = -160090414;    double mTyyHMMbmPqnBIkOZseHLUHUIrMsBh39038150 = -673778618;    double mTyyHMMbmPqnBIkOZseHLUHUIrMsBh81500918 = -975172864;    double mTyyHMMbmPqnBIkOZseHLUHUIrMsBh66239612 = -22522381;    double mTyyHMMbmPqnBIkOZseHLUHUIrMsBh29319596 = -551677984;    double mTyyHMMbmPqnBIkOZseHLUHUIrMsBh4133313 = -947479609;    double mTyyHMMbmPqnBIkOZseHLUHUIrMsBh28694707 = -764009542;    double mTyyHMMbmPqnBIkOZseHLUHUIrMsBh71599734 = -682932973;    double mTyyHMMbmPqnBIkOZseHLUHUIrMsBh58793608 = -150623581;    double mTyyHMMbmPqnBIkOZseHLUHUIrMsBh10011746 = -198720510;     mTyyHMMbmPqnBIkOZseHLUHUIrMsBh50469468 = mTyyHMMbmPqnBIkOZseHLUHUIrMsBh50340651;     mTyyHMMbmPqnBIkOZseHLUHUIrMsBh50340651 = mTyyHMMbmPqnBIkOZseHLUHUIrMsBh39940352;     mTyyHMMbmPqnBIkOZseHLUHUIrMsBh39940352 = mTyyHMMbmPqnBIkOZseHLUHUIrMsBh23498700;     mTyyHMMbmPqnBIkOZseHLUHUIrMsBh23498700 = mTyyHMMbmPqnBIkOZseHLUHUIrMsBh10780304;     mTyyHMMbmPqnBIkOZseHLUHUIrMsBh10780304 = mTyyHMMbmPqnBIkOZseHLUHUIrMsBh47241366;     mTyyHMMbmPqnBIkOZseHLUHUIrMsBh47241366 = mTyyHMMbmPqnBIkOZseHLUHUIrMsBh56137612;     mTyyHMMbmPqnBIkOZseHLUHUIrMsBh56137612 = mTyyHMMbmPqnBIkOZseHLUHUIrMsBh78858479;     mTyyHMMbmPqnBIkOZseHLUHUIrMsBh78858479 = mTyyHMMbmPqnBIkOZseHLUHUIrMsBh48804589;     mTyyHMMbmPqnBIkOZseHLUHUIrMsBh48804589 = mTyyHMMbmPqnBIkOZseHLUHUIrMsBh87734911;     mTyyHMMbmPqnBIkOZseHLUHUIrMsBh87734911 = mTyyHMMbmPqnBIkOZseHLUHUIrMsBh38346441;     mTyyHMMbmPqnBIkOZseHLUHUIrMsBh38346441 = mTyyHMMbmPqnBIkOZseHLUHUIrMsBh2772193;     mTyyHMMbmPqnBIkOZseHLUHUIrMsBh2772193 = mTyyHMMbmPqnBIkOZseHLUHUIrMsBh34394153;     mTyyHMMbmPqnBIkOZseHLUHUIrMsBh34394153 = mTyyHMMbmPqnBIkOZseHLUHUIrMsBh20900851;     mTyyHMMbmPqnBIkOZseHLUHUIrMsBh20900851 = mTyyHMMbmPqnBIkOZseHLUHUIrMsBh11693283;     mTyyHMMbmPqnBIkOZseHLUHUIrMsBh11693283 = mTyyHMMbmPqnBIkOZseHLUHUIrMsBh24484777;     mTyyHMMbmPqnBIkOZseHLUHUIrMsBh24484777 = mTyyHMMbmPqnBIkOZseHLUHUIrMsBh55274051;     mTyyHMMbmPqnBIkOZseHLUHUIrMsBh55274051 = mTyyHMMbmPqnBIkOZseHLUHUIrMsBh57081772;     mTyyHMMbmPqnBIkOZseHLUHUIrMsBh57081772 = mTyyHMMbmPqnBIkOZseHLUHUIrMsBh42325662;     mTyyHMMbmPqnBIkOZseHLUHUIrMsBh42325662 = mTyyHMMbmPqnBIkOZseHLUHUIrMsBh99160554;     mTyyHMMbmPqnBIkOZseHLUHUIrMsBh99160554 = mTyyHMMbmPqnBIkOZseHLUHUIrMsBh5391462;     mTyyHMMbmPqnBIkOZseHLUHUIrMsBh5391462 = mTyyHMMbmPqnBIkOZseHLUHUIrMsBh4596122;     mTyyHMMbmPqnBIkOZseHLUHUIrMsBh4596122 = mTyyHMMbmPqnBIkOZseHLUHUIrMsBh7486159;     mTyyHMMbmPqnBIkOZseHLUHUIrMsBh7486159 = mTyyHMMbmPqnBIkOZseHLUHUIrMsBh36999397;     mTyyHMMbmPqnBIkOZseHLUHUIrMsBh36999397 = mTyyHMMbmPqnBIkOZseHLUHUIrMsBh73336453;     mTyyHMMbmPqnBIkOZseHLUHUIrMsBh73336453 = mTyyHMMbmPqnBIkOZseHLUHUIrMsBh96466218;     mTyyHMMbmPqnBIkOZseHLUHUIrMsBh96466218 = mTyyHMMbmPqnBIkOZseHLUHUIrMsBh67609642;     mTyyHMMbmPqnBIkOZseHLUHUIrMsBh67609642 = mTyyHMMbmPqnBIkOZseHLUHUIrMsBh25344578;     mTyyHMMbmPqnBIkOZseHLUHUIrMsBh25344578 = mTyyHMMbmPqnBIkOZseHLUHUIrMsBh51802665;     mTyyHMMbmPqnBIkOZseHLUHUIrMsBh51802665 = mTyyHMMbmPqnBIkOZseHLUHUIrMsBh96332747;     mTyyHMMbmPqnBIkOZseHLUHUIrMsBh96332747 = mTyyHMMbmPqnBIkOZseHLUHUIrMsBh12953803;     mTyyHMMbmPqnBIkOZseHLUHUIrMsBh12953803 = mTyyHMMbmPqnBIkOZseHLUHUIrMsBh26328805;     mTyyHMMbmPqnBIkOZseHLUHUIrMsBh26328805 = mTyyHMMbmPqnBIkOZseHLUHUIrMsBh70992913;     mTyyHMMbmPqnBIkOZseHLUHUIrMsBh70992913 = mTyyHMMbmPqnBIkOZseHLUHUIrMsBh79398533;     mTyyHMMbmPqnBIkOZseHLUHUIrMsBh79398533 = mTyyHMMbmPqnBIkOZseHLUHUIrMsBh97777017;     mTyyHMMbmPqnBIkOZseHLUHUIrMsBh97777017 = mTyyHMMbmPqnBIkOZseHLUHUIrMsBh40721990;     mTyyHMMbmPqnBIkOZseHLUHUIrMsBh40721990 = mTyyHMMbmPqnBIkOZseHLUHUIrMsBh41979105;     mTyyHMMbmPqnBIkOZseHLUHUIrMsBh41979105 = mTyyHMMbmPqnBIkOZseHLUHUIrMsBh31663165;     mTyyHMMbmPqnBIkOZseHLUHUIrMsBh31663165 = mTyyHMMbmPqnBIkOZseHLUHUIrMsBh80553697;     mTyyHMMbmPqnBIkOZseHLUHUIrMsBh80553697 = mTyyHMMbmPqnBIkOZseHLUHUIrMsBh8951320;     mTyyHMMbmPqnBIkOZseHLUHUIrMsBh8951320 = mTyyHMMbmPqnBIkOZseHLUHUIrMsBh34926347;     mTyyHMMbmPqnBIkOZseHLUHUIrMsBh34926347 = mTyyHMMbmPqnBIkOZseHLUHUIrMsBh55750522;     mTyyHMMbmPqnBIkOZseHLUHUIrMsBh55750522 = mTyyHMMbmPqnBIkOZseHLUHUIrMsBh24071576;     mTyyHMMbmPqnBIkOZseHLUHUIrMsBh24071576 = mTyyHMMbmPqnBIkOZseHLUHUIrMsBh33574717;     mTyyHMMbmPqnBIkOZseHLUHUIrMsBh33574717 = mTyyHMMbmPqnBIkOZseHLUHUIrMsBh22029382;     mTyyHMMbmPqnBIkOZseHLUHUIrMsBh22029382 = mTyyHMMbmPqnBIkOZseHLUHUIrMsBh4622870;     mTyyHMMbmPqnBIkOZseHLUHUIrMsBh4622870 = mTyyHMMbmPqnBIkOZseHLUHUIrMsBh37723109;     mTyyHMMbmPqnBIkOZseHLUHUIrMsBh37723109 = mTyyHMMbmPqnBIkOZseHLUHUIrMsBh85140327;     mTyyHMMbmPqnBIkOZseHLUHUIrMsBh85140327 = mTyyHMMbmPqnBIkOZseHLUHUIrMsBh79377982;     mTyyHMMbmPqnBIkOZseHLUHUIrMsBh79377982 = mTyyHMMbmPqnBIkOZseHLUHUIrMsBh23806643;     mTyyHMMbmPqnBIkOZseHLUHUIrMsBh23806643 = mTyyHMMbmPqnBIkOZseHLUHUIrMsBh81635980;     mTyyHMMbmPqnBIkOZseHLUHUIrMsBh81635980 = mTyyHMMbmPqnBIkOZseHLUHUIrMsBh57174612;     mTyyHMMbmPqnBIkOZseHLUHUIrMsBh57174612 = mTyyHMMbmPqnBIkOZseHLUHUIrMsBh58559519;     mTyyHMMbmPqnBIkOZseHLUHUIrMsBh58559519 = mTyyHMMbmPqnBIkOZseHLUHUIrMsBh76912650;     mTyyHMMbmPqnBIkOZseHLUHUIrMsBh76912650 = mTyyHMMbmPqnBIkOZseHLUHUIrMsBh7470203;     mTyyHMMbmPqnBIkOZseHLUHUIrMsBh7470203 = mTyyHMMbmPqnBIkOZseHLUHUIrMsBh45873346;     mTyyHMMbmPqnBIkOZseHLUHUIrMsBh45873346 = mTyyHMMbmPqnBIkOZseHLUHUIrMsBh42854492;     mTyyHMMbmPqnBIkOZseHLUHUIrMsBh42854492 = mTyyHMMbmPqnBIkOZseHLUHUIrMsBh2940955;     mTyyHMMbmPqnBIkOZseHLUHUIrMsBh2940955 = mTyyHMMbmPqnBIkOZseHLUHUIrMsBh50162247;     mTyyHMMbmPqnBIkOZseHLUHUIrMsBh50162247 = mTyyHMMbmPqnBIkOZseHLUHUIrMsBh14314085;     mTyyHMMbmPqnBIkOZseHLUHUIrMsBh14314085 = mTyyHMMbmPqnBIkOZseHLUHUIrMsBh79631724;     mTyyHMMbmPqnBIkOZseHLUHUIrMsBh79631724 = mTyyHMMbmPqnBIkOZseHLUHUIrMsBh30793034;     mTyyHMMbmPqnBIkOZseHLUHUIrMsBh30793034 = mTyyHMMbmPqnBIkOZseHLUHUIrMsBh27055815;     mTyyHMMbmPqnBIkOZseHLUHUIrMsBh27055815 = mTyyHMMbmPqnBIkOZseHLUHUIrMsBh52471842;     mTyyHMMbmPqnBIkOZseHLUHUIrMsBh52471842 = mTyyHMMbmPqnBIkOZseHLUHUIrMsBh74781109;     mTyyHMMbmPqnBIkOZseHLUHUIrMsBh74781109 = mTyyHMMbmPqnBIkOZseHLUHUIrMsBh12017636;     mTyyHMMbmPqnBIkOZseHLUHUIrMsBh12017636 = mTyyHMMbmPqnBIkOZseHLUHUIrMsBh31779280;     mTyyHMMbmPqnBIkOZseHLUHUIrMsBh31779280 = mTyyHMMbmPqnBIkOZseHLUHUIrMsBh54995619;     mTyyHMMbmPqnBIkOZseHLUHUIrMsBh54995619 = mTyyHMMbmPqnBIkOZseHLUHUIrMsBh23123834;     mTyyHMMbmPqnBIkOZseHLUHUIrMsBh23123834 = mTyyHMMbmPqnBIkOZseHLUHUIrMsBh70971293;     mTyyHMMbmPqnBIkOZseHLUHUIrMsBh70971293 = mTyyHMMbmPqnBIkOZseHLUHUIrMsBh82505672;     mTyyHMMbmPqnBIkOZseHLUHUIrMsBh82505672 = mTyyHMMbmPqnBIkOZseHLUHUIrMsBh23610886;     mTyyHMMbmPqnBIkOZseHLUHUIrMsBh23610886 = mTyyHMMbmPqnBIkOZseHLUHUIrMsBh76528075;     mTyyHMMbmPqnBIkOZseHLUHUIrMsBh76528075 = mTyyHMMbmPqnBIkOZseHLUHUIrMsBh33374342;     mTyyHMMbmPqnBIkOZseHLUHUIrMsBh33374342 = mTyyHMMbmPqnBIkOZseHLUHUIrMsBh64234208;     mTyyHMMbmPqnBIkOZseHLUHUIrMsBh64234208 = mTyyHMMbmPqnBIkOZseHLUHUIrMsBh49640940;     mTyyHMMbmPqnBIkOZseHLUHUIrMsBh49640940 = mTyyHMMbmPqnBIkOZseHLUHUIrMsBh80524546;     mTyyHMMbmPqnBIkOZseHLUHUIrMsBh80524546 = mTyyHMMbmPqnBIkOZseHLUHUIrMsBh73911442;     mTyyHMMbmPqnBIkOZseHLUHUIrMsBh73911442 = mTyyHMMbmPqnBIkOZseHLUHUIrMsBh14970015;     mTyyHMMbmPqnBIkOZseHLUHUIrMsBh14970015 = mTyyHMMbmPqnBIkOZseHLUHUIrMsBh68713583;     mTyyHMMbmPqnBIkOZseHLUHUIrMsBh68713583 = mTyyHMMbmPqnBIkOZseHLUHUIrMsBh58743109;     mTyyHMMbmPqnBIkOZseHLUHUIrMsBh58743109 = mTyyHMMbmPqnBIkOZseHLUHUIrMsBh82469314;     mTyyHMMbmPqnBIkOZseHLUHUIrMsBh82469314 = mTyyHMMbmPqnBIkOZseHLUHUIrMsBh45966596;     mTyyHMMbmPqnBIkOZseHLUHUIrMsBh45966596 = mTyyHMMbmPqnBIkOZseHLUHUIrMsBh27996022;     mTyyHMMbmPqnBIkOZseHLUHUIrMsBh27996022 = mTyyHMMbmPqnBIkOZseHLUHUIrMsBh14696768;     mTyyHMMbmPqnBIkOZseHLUHUIrMsBh14696768 = mTyyHMMbmPqnBIkOZseHLUHUIrMsBh55779191;     mTyyHMMbmPqnBIkOZseHLUHUIrMsBh55779191 = mTyyHMMbmPqnBIkOZseHLUHUIrMsBh67769286;     mTyyHMMbmPqnBIkOZseHLUHUIrMsBh67769286 = mTyyHMMbmPqnBIkOZseHLUHUIrMsBh94080263;     mTyyHMMbmPqnBIkOZseHLUHUIrMsBh94080263 = mTyyHMMbmPqnBIkOZseHLUHUIrMsBh71928331;     mTyyHMMbmPqnBIkOZseHLUHUIrMsBh71928331 = mTyyHMMbmPqnBIkOZseHLUHUIrMsBh51903671;     mTyyHMMbmPqnBIkOZseHLUHUIrMsBh51903671 = mTyyHMMbmPqnBIkOZseHLUHUIrMsBh97867497;     mTyyHMMbmPqnBIkOZseHLUHUIrMsBh97867497 = mTyyHMMbmPqnBIkOZseHLUHUIrMsBh39038150;     mTyyHMMbmPqnBIkOZseHLUHUIrMsBh39038150 = mTyyHMMbmPqnBIkOZseHLUHUIrMsBh81500918;     mTyyHMMbmPqnBIkOZseHLUHUIrMsBh81500918 = mTyyHMMbmPqnBIkOZseHLUHUIrMsBh66239612;     mTyyHMMbmPqnBIkOZseHLUHUIrMsBh66239612 = mTyyHMMbmPqnBIkOZseHLUHUIrMsBh29319596;     mTyyHMMbmPqnBIkOZseHLUHUIrMsBh29319596 = mTyyHMMbmPqnBIkOZseHLUHUIrMsBh4133313;     mTyyHMMbmPqnBIkOZseHLUHUIrMsBh4133313 = mTyyHMMbmPqnBIkOZseHLUHUIrMsBh28694707;     mTyyHMMbmPqnBIkOZseHLUHUIrMsBh28694707 = mTyyHMMbmPqnBIkOZseHLUHUIrMsBh71599734;     mTyyHMMbmPqnBIkOZseHLUHUIrMsBh71599734 = mTyyHMMbmPqnBIkOZseHLUHUIrMsBh58793608;     mTyyHMMbmPqnBIkOZseHLUHUIrMsBh58793608 = mTyyHMMbmPqnBIkOZseHLUHUIrMsBh10011746;     mTyyHMMbmPqnBIkOZseHLUHUIrMsBh10011746 = mTyyHMMbmPqnBIkOZseHLUHUIrMsBh50469468;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void lDBkzQhvsqcqIXgBIGNRGhmbz22466390() {     double XaZSjJePRWMjwnllktxCkiziVqVsPP72291689 = -766935842;    double XaZSjJePRWMjwnllktxCkiziVqVsPP11808455 = -472596462;    double XaZSjJePRWMjwnllktxCkiziVqVsPP85667621 = -365036097;    double XaZSjJePRWMjwnllktxCkiziVqVsPP54873846 = -12310595;    double XaZSjJePRWMjwnllktxCkiziVqVsPP70914634 = -422940241;    double XaZSjJePRWMjwnllktxCkiziVqVsPP71259682 = -373267126;    double XaZSjJePRWMjwnllktxCkiziVqVsPP85158196 = -176206223;    double XaZSjJePRWMjwnllktxCkiziVqVsPP65721108 = -731143901;    double XaZSjJePRWMjwnllktxCkiziVqVsPP45328229 = -846332557;    double XaZSjJePRWMjwnllktxCkiziVqVsPP49018137 = -234096507;    double XaZSjJePRWMjwnllktxCkiziVqVsPP9262710 = -936920896;    double XaZSjJePRWMjwnllktxCkiziVqVsPP18954076 = -344808058;    double XaZSjJePRWMjwnllktxCkiziVqVsPP67383095 = -570353446;    double XaZSjJePRWMjwnllktxCkiziVqVsPP87867318 = -954141505;    double XaZSjJePRWMjwnllktxCkiziVqVsPP6951078 = -315561184;    double XaZSjJePRWMjwnllktxCkiziVqVsPP72455502 = -373580040;    double XaZSjJePRWMjwnllktxCkiziVqVsPP48723110 = -452733893;    double XaZSjJePRWMjwnllktxCkiziVqVsPP19607076 = -932063199;    double XaZSjJePRWMjwnllktxCkiziVqVsPP46962886 = -657609836;    double XaZSjJePRWMjwnllktxCkiziVqVsPP80270197 = -182223959;    double XaZSjJePRWMjwnllktxCkiziVqVsPP62545746 = -245346852;    double XaZSjJePRWMjwnllktxCkiziVqVsPP68998100 = -656061986;    double XaZSjJePRWMjwnllktxCkiziVqVsPP16957563 = -742287187;    double XaZSjJePRWMjwnllktxCkiziVqVsPP74277018 = -626677075;    double XaZSjJePRWMjwnllktxCkiziVqVsPP47267120 = -106755224;    double XaZSjJePRWMjwnllktxCkiziVqVsPP86042072 = -849042787;    double XaZSjJePRWMjwnllktxCkiziVqVsPP40646246 = -63594402;    double XaZSjJePRWMjwnllktxCkiziVqVsPP60924403 = -751275139;    double XaZSjJePRWMjwnllktxCkiziVqVsPP99699577 = -622343708;    double XaZSjJePRWMjwnllktxCkiziVqVsPP42149825 = -715104339;    double XaZSjJePRWMjwnllktxCkiziVqVsPP64119068 = -75319191;    double XaZSjJePRWMjwnllktxCkiziVqVsPP45220131 = -677715902;    double XaZSjJePRWMjwnllktxCkiziVqVsPP96312378 = -576307704;    double XaZSjJePRWMjwnllktxCkiziVqVsPP51937651 = -621278675;    double XaZSjJePRWMjwnllktxCkiziVqVsPP78611229 = -95248674;    double XaZSjJePRWMjwnllktxCkiziVqVsPP10298950 = -178244171;    double XaZSjJePRWMjwnllktxCkiziVqVsPP85061361 = -824636070;    double XaZSjJePRWMjwnllktxCkiziVqVsPP35601027 = -68383789;    double XaZSjJePRWMjwnllktxCkiziVqVsPP40934143 = -918759722;    double XaZSjJePRWMjwnllktxCkiziVqVsPP21621966 = -834160595;    double XaZSjJePRWMjwnllktxCkiziVqVsPP89302192 = -607680060;    double XaZSjJePRWMjwnllktxCkiziVqVsPP72252692 = -219040882;    double XaZSjJePRWMjwnllktxCkiziVqVsPP71438975 = -148546781;    double XaZSjJePRWMjwnllktxCkiziVqVsPP81669575 = -753716417;    double XaZSjJePRWMjwnllktxCkiziVqVsPP1945193 = -234585059;    double XaZSjJePRWMjwnllktxCkiziVqVsPP43829349 = -385263307;    double XaZSjJePRWMjwnllktxCkiziVqVsPP63391221 = -619268215;    double XaZSjJePRWMjwnllktxCkiziVqVsPP66980079 = -737921178;    double XaZSjJePRWMjwnllktxCkiziVqVsPP86442074 = 32238576;    double XaZSjJePRWMjwnllktxCkiziVqVsPP39854119 = -625326134;    double XaZSjJePRWMjwnllktxCkiziVqVsPP70097799 = -831513717;    double XaZSjJePRWMjwnllktxCkiziVqVsPP53563276 = -999394022;    double XaZSjJePRWMjwnllktxCkiziVqVsPP49782384 = -591523887;    double XaZSjJePRWMjwnllktxCkiziVqVsPP4937773 = -753300473;    double XaZSjJePRWMjwnllktxCkiziVqVsPP59920644 = -237724394;    double XaZSjJePRWMjwnllktxCkiziVqVsPP3293590 = -10873857;    double XaZSjJePRWMjwnllktxCkiziVqVsPP94850891 = -730309275;    double XaZSjJePRWMjwnllktxCkiziVqVsPP11390604 = -738359022;    double XaZSjJePRWMjwnllktxCkiziVqVsPP7606726 = -905555372;    double XaZSjJePRWMjwnllktxCkiziVqVsPP84872562 = -573897454;    double XaZSjJePRWMjwnllktxCkiziVqVsPP30613436 = -209672724;    double XaZSjJePRWMjwnllktxCkiziVqVsPP24233793 = -424931084;    double XaZSjJePRWMjwnllktxCkiziVqVsPP66021531 = -8800193;    double XaZSjJePRWMjwnllktxCkiziVqVsPP3178405 = -31228218;    double XaZSjJePRWMjwnllktxCkiziVqVsPP84899069 = -58777317;    double XaZSjJePRWMjwnllktxCkiziVqVsPP64042579 = -159204995;    double XaZSjJePRWMjwnllktxCkiziVqVsPP22641698 = -768500354;    double XaZSjJePRWMjwnllktxCkiziVqVsPP15445445 = -949074771;    double XaZSjJePRWMjwnllktxCkiziVqVsPP9256089 = -758892832;    double XaZSjJePRWMjwnllktxCkiziVqVsPP96652128 = -37317013;    double XaZSjJePRWMjwnllktxCkiziVqVsPP87394141 = -548943971;    double XaZSjJePRWMjwnllktxCkiziVqVsPP13122084 = -284350105;    double XaZSjJePRWMjwnllktxCkiziVqVsPP78672932 = 86696522;    double XaZSjJePRWMjwnllktxCkiziVqVsPP25340920 = -823449242;    double XaZSjJePRWMjwnllktxCkiziVqVsPP90968004 = -574543900;    double XaZSjJePRWMjwnllktxCkiziVqVsPP90293053 = 73694030;    double XaZSjJePRWMjwnllktxCkiziVqVsPP97559125 = -407515205;    double XaZSjJePRWMjwnllktxCkiziVqVsPP35287988 = -988570771;    double XaZSjJePRWMjwnllktxCkiziVqVsPP72331825 = -292092017;    double XaZSjJePRWMjwnllktxCkiziVqVsPP3437772 = -721491917;    double XaZSjJePRWMjwnllktxCkiziVqVsPP22650852 = -129774573;    double XaZSjJePRWMjwnllktxCkiziVqVsPP73666166 = -325673225;    double XaZSjJePRWMjwnllktxCkiziVqVsPP74482329 = -683513715;    double XaZSjJePRWMjwnllktxCkiziVqVsPP59845458 = -997017575;    double XaZSjJePRWMjwnllktxCkiziVqVsPP72052025 = -883590623;    double XaZSjJePRWMjwnllktxCkiziVqVsPP10555793 = -75925169;    double XaZSjJePRWMjwnllktxCkiziVqVsPP95437747 = 13807984;    double XaZSjJePRWMjwnllktxCkiziVqVsPP91374605 = -823007232;    double XaZSjJePRWMjwnllktxCkiziVqVsPP92017007 = -283554281;    double XaZSjJePRWMjwnllktxCkiziVqVsPP75317640 = 15625182;    double XaZSjJePRWMjwnllktxCkiziVqVsPP15448058 = -447934897;    double XaZSjJePRWMjwnllktxCkiziVqVsPP73670758 = 13722952;    double XaZSjJePRWMjwnllktxCkiziVqVsPP27994302 = -162828418;    double XaZSjJePRWMjwnllktxCkiziVqVsPP56061581 = -244862268;    double XaZSjJePRWMjwnllktxCkiziVqVsPP91008529 = -524487871;    double XaZSjJePRWMjwnllktxCkiziVqVsPP65068399 = -82748976;    double XaZSjJePRWMjwnllktxCkiziVqVsPP6231162 = -110240690;    double XaZSjJePRWMjwnllktxCkiziVqVsPP68260571 = -17318564;    double XaZSjJePRWMjwnllktxCkiziVqVsPP96770506 = -594939100;    double XaZSjJePRWMjwnllktxCkiziVqVsPP37902614 = -766935842;     XaZSjJePRWMjwnllktxCkiziVqVsPP72291689 = XaZSjJePRWMjwnllktxCkiziVqVsPP11808455;     XaZSjJePRWMjwnllktxCkiziVqVsPP11808455 = XaZSjJePRWMjwnllktxCkiziVqVsPP85667621;     XaZSjJePRWMjwnllktxCkiziVqVsPP85667621 = XaZSjJePRWMjwnllktxCkiziVqVsPP54873846;     XaZSjJePRWMjwnllktxCkiziVqVsPP54873846 = XaZSjJePRWMjwnllktxCkiziVqVsPP70914634;     XaZSjJePRWMjwnllktxCkiziVqVsPP70914634 = XaZSjJePRWMjwnllktxCkiziVqVsPP71259682;     XaZSjJePRWMjwnllktxCkiziVqVsPP71259682 = XaZSjJePRWMjwnllktxCkiziVqVsPP85158196;     XaZSjJePRWMjwnllktxCkiziVqVsPP85158196 = XaZSjJePRWMjwnllktxCkiziVqVsPP65721108;     XaZSjJePRWMjwnllktxCkiziVqVsPP65721108 = XaZSjJePRWMjwnllktxCkiziVqVsPP45328229;     XaZSjJePRWMjwnllktxCkiziVqVsPP45328229 = XaZSjJePRWMjwnllktxCkiziVqVsPP49018137;     XaZSjJePRWMjwnllktxCkiziVqVsPP49018137 = XaZSjJePRWMjwnllktxCkiziVqVsPP9262710;     XaZSjJePRWMjwnllktxCkiziVqVsPP9262710 = XaZSjJePRWMjwnllktxCkiziVqVsPP18954076;     XaZSjJePRWMjwnllktxCkiziVqVsPP18954076 = XaZSjJePRWMjwnllktxCkiziVqVsPP67383095;     XaZSjJePRWMjwnllktxCkiziVqVsPP67383095 = XaZSjJePRWMjwnllktxCkiziVqVsPP87867318;     XaZSjJePRWMjwnllktxCkiziVqVsPP87867318 = XaZSjJePRWMjwnllktxCkiziVqVsPP6951078;     XaZSjJePRWMjwnllktxCkiziVqVsPP6951078 = XaZSjJePRWMjwnllktxCkiziVqVsPP72455502;     XaZSjJePRWMjwnllktxCkiziVqVsPP72455502 = XaZSjJePRWMjwnllktxCkiziVqVsPP48723110;     XaZSjJePRWMjwnllktxCkiziVqVsPP48723110 = XaZSjJePRWMjwnllktxCkiziVqVsPP19607076;     XaZSjJePRWMjwnllktxCkiziVqVsPP19607076 = XaZSjJePRWMjwnllktxCkiziVqVsPP46962886;     XaZSjJePRWMjwnllktxCkiziVqVsPP46962886 = XaZSjJePRWMjwnllktxCkiziVqVsPP80270197;     XaZSjJePRWMjwnllktxCkiziVqVsPP80270197 = XaZSjJePRWMjwnllktxCkiziVqVsPP62545746;     XaZSjJePRWMjwnllktxCkiziVqVsPP62545746 = XaZSjJePRWMjwnllktxCkiziVqVsPP68998100;     XaZSjJePRWMjwnllktxCkiziVqVsPP68998100 = XaZSjJePRWMjwnllktxCkiziVqVsPP16957563;     XaZSjJePRWMjwnllktxCkiziVqVsPP16957563 = XaZSjJePRWMjwnllktxCkiziVqVsPP74277018;     XaZSjJePRWMjwnllktxCkiziVqVsPP74277018 = XaZSjJePRWMjwnllktxCkiziVqVsPP47267120;     XaZSjJePRWMjwnllktxCkiziVqVsPP47267120 = XaZSjJePRWMjwnllktxCkiziVqVsPP86042072;     XaZSjJePRWMjwnllktxCkiziVqVsPP86042072 = XaZSjJePRWMjwnllktxCkiziVqVsPP40646246;     XaZSjJePRWMjwnllktxCkiziVqVsPP40646246 = XaZSjJePRWMjwnllktxCkiziVqVsPP60924403;     XaZSjJePRWMjwnllktxCkiziVqVsPP60924403 = XaZSjJePRWMjwnllktxCkiziVqVsPP99699577;     XaZSjJePRWMjwnllktxCkiziVqVsPP99699577 = XaZSjJePRWMjwnllktxCkiziVqVsPP42149825;     XaZSjJePRWMjwnllktxCkiziVqVsPP42149825 = XaZSjJePRWMjwnllktxCkiziVqVsPP64119068;     XaZSjJePRWMjwnllktxCkiziVqVsPP64119068 = XaZSjJePRWMjwnllktxCkiziVqVsPP45220131;     XaZSjJePRWMjwnllktxCkiziVqVsPP45220131 = XaZSjJePRWMjwnllktxCkiziVqVsPP96312378;     XaZSjJePRWMjwnllktxCkiziVqVsPP96312378 = XaZSjJePRWMjwnllktxCkiziVqVsPP51937651;     XaZSjJePRWMjwnllktxCkiziVqVsPP51937651 = XaZSjJePRWMjwnllktxCkiziVqVsPP78611229;     XaZSjJePRWMjwnllktxCkiziVqVsPP78611229 = XaZSjJePRWMjwnllktxCkiziVqVsPP10298950;     XaZSjJePRWMjwnllktxCkiziVqVsPP10298950 = XaZSjJePRWMjwnllktxCkiziVqVsPP85061361;     XaZSjJePRWMjwnllktxCkiziVqVsPP85061361 = XaZSjJePRWMjwnllktxCkiziVqVsPP35601027;     XaZSjJePRWMjwnllktxCkiziVqVsPP35601027 = XaZSjJePRWMjwnllktxCkiziVqVsPP40934143;     XaZSjJePRWMjwnllktxCkiziVqVsPP40934143 = XaZSjJePRWMjwnllktxCkiziVqVsPP21621966;     XaZSjJePRWMjwnllktxCkiziVqVsPP21621966 = XaZSjJePRWMjwnllktxCkiziVqVsPP89302192;     XaZSjJePRWMjwnllktxCkiziVqVsPP89302192 = XaZSjJePRWMjwnllktxCkiziVqVsPP72252692;     XaZSjJePRWMjwnllktxCkiziVqVsPP72252692 = XaZSjJePRWMjwnllktxCkiziVqVsPP71438975;     XaZSjJePRWMjwnllktxCkiziVqVsPP71438975 = XaZSjJePRWMjwnllktxCkiziVqVsPP81669575;     XaZSjJePRWMjwnllktxCkiziVqVsPP81669575 = XaZSjJePRWMjwnllktxCkiziVqVsPP1945193;     XaZSjJePRWMjwnllktxCkiziVqVsPP1945193 = XaZSjJePRWMjwnllktxCkiziVqVsPP43829349;     XaZSjJePRWMjwnllktxCkiziVqVsPP43829349 = XaZSjJePRWMjwnllktxCkiziVqVsPP63391221;     XaZSjJePRWMjwnllktxCkiziVqVsPP63391221 = XaZSjJePRWMjwnllktxCkiziVqVsPP66980079;     XaZSjJePRWMjwnllktxCkiziVqVsPP66980079 = XaZSjJePRWMjwnllktxCkiziVqVsPP86442074;     XaZSjJePRWMjwnllktxCkiziVqVsPP86442074 = XaZSjJePRWMjwnllktxCkiziVqVsPP39854119;     XaZSjJePRWMjwnllktxCkiziVqVsPP39854119 = XaZSjJePRWMjwnllktxCkiziVqVsPP70097799;     XaZSjJePRWMjwnllktxCkiziVqVsPP70097799 = XaZSjJePRWMjwnllktxCkiziVqVsPP53563276;     XaZSjJePRWMjwnllktxCkiziVqVsPP53563276 = XaZSjJePRWMjwnllktxCkiziVqVsPP49782384;     XaZSjJePRWMjwnllktxCkiziVqVsPP49782384 = XaZSjJePRWMjwnllktxCkiziVqVsPP4937773;     XaZSjJePRWMjwnllktxCkiziVqVsPP4937773 = XaZSjJePRWMjwnllktxCkiziVqVsPP59920644;     XaZSjJePRWMjwnllktxCkiziVqVsPP59920644 = XaZSjJePRWMjwnllktxCkiziVqVsPP3293590;     XaZSjJePRWMjwnllktxCkiziVqVsPP3293590 = XaZSjJePRWMjwnllktxCkiziVqVsPP94850891;     XaZSjJePRWMjwnllktxCkiziVqVsPP94850891 = XaZSjJePRWMjwnllktxCkiziVqVsPP11390604;     XaZSjJePRWMjwnllktxCkiziVqVsPP11390604 = XaZSjJePRWMjwnllktxCkiziVqVsPP7606726;     XaZSjJePRWMjwnllktxCkiziVqVsPP7606726 = XaZSjJePRWMjwnllktxCkiziVqVsPP84872562;     XaZSjJePRWMjwnllktxCkiziVqVsPP84872562 = XaZSjJePRWMjwnllktxCkiziVqVsPP30613436;     XaZSjJePRWMjwnllktxCkiziVqVsPP30613436 = XaZSjJePRWMjwnllktxCkiziVqVsPP24233793;     XaZSjJePRWMjwnllktxCkiziVqVsPP24233793 = XaZSjJePRWMjwnllktxCkiziVqVsPP66021531;     XaZSjJePRWMjwnllktxCkiziVqVsPP66021531 = XaZSjJePRWMjwnllktxCkiziVqVsPP3178405;     XaZSjJePRWMjwnllktxCkiziVqVsPP3178405 = XaZSjJePRWMjwnllktxCkiziVqVsPP84899069;     XaZSjJePRWMjwnllktxCkiziVqVsPP84899069 = XaZSjJePRWMjwnllktxCkiziVqVsPP64042579;     XaZSjJePRWMjwnllktxCkiziVqVsPP64042579 = XaZSjJePRWMjwnllktxCkiziVqVsPP22641698;     XaZSjJePRWMjwnllktxCkiziVqVsPP22641698 = XaZSjJePRWMjwnllktxCkiziVqVsPP15445445;     XaZSjJePRWMjwnllktxCkiziVqVsPP15445445 = XaZSjJePRWMjwnllktxCkiziVqVsPP9256089;     XaZSjJePRWMjwnllktxCkiziVqVsPP9256089 = XaZSjJePRWMjwnllktxCkiziVqVsPP96652128;     XaZSjJePRWMjwnllktxCkiziVqVsPP96652128 = XaZSjJePRWMjwnllktxCkiziVqVsPP87394141;     XaZSjJePRWMjwnllktxCkiziVqVsPP87394141 = XaZSjJePRWMjwnllktxCkiziVqVsPP13122084;     XaZSjJePRWMjwnllktxCkiziVqVsPP13122084 = XaZSjJePRWMjwnllktxCkiziVqVsPP78672932;     XaZSjJePRWMjwnllktxCkiziVqVsPP78672932 = XaZSjJePRWMjwnllktxCkiziVqVsPP25340920;     XaZSjJePRWMjwnllktxCkiziVqVsPP25340920 = XaZSjJePRWMjwnllktxCkiziVqVsPP90968004;     XaZSjJePRWMjwnllktxCkiziVqVsPP90968004 = XaZSjJePRWMjwnllktxCkiziVqVsPP90293053;     XaZSjJePRWMjwnllktxCkiziVqVsPP90293053 = XaZSjJePRWMjwnllktxCkiziVqVsPP97559125;     XaZSjJePRWMjwnllktxCkiziVqVsPP97559125 = XaZSjJePRWMjwnllktxCkiziVqVsPP35287988;     XaZSjJePRWMjwnllktxCkiziVqVsPP35287988 = XaZSjJePRWMjwnllktxCkiziVqVsPP72331825;     XaZSjJePRWMjwnllktxCkiziVqVsPP72331825 = XaZSjJePRWMjwnllktxCkiziVqVsPP3437772;     XaZSjJePRWMjwnllktxCkiziVqVsPP3437772 = XaZSjJePRWMjwnllktxCkiziVqVsPP22650852;     XaZSjJePRWMjwnllktxCkiziVqVsPP22650852 = XaZSjJePRWMjwnllktxCkiziVqVsPP73666166;     XaZSjJePRWMjwnllktxCkiziVqVsPP73666166 = XaZSjJePRWMjwnllktxCkiziVqVsPP74482329;     XaZSjJePRWMjwnllktxCkiziVqVsPP74482329 = XaZSjJePRWMjwnllktxCkiziVqVsPP59845458;     XaZSjJePRWMjwnllktxCkiziVqVsPP59845458 = XaZSjJePRWMjwnllktxCkiziVqVsPP72052025;     XaZSjJePRWMjwnllktxCkiziVqVsPP72052025 = XaZSjJePRWMjwnllktxCkiziVqVsPP10555793;     XaZSjJePRWMjwnllktxCkiziVqVsPP10555793 = XaZSjJePRWMjwnllktxCkiziVqVsPP95437747;     XaZSjJePRWMjwnllktxCkiziVqVsPP95437747 = XaZSjJePRWMjwnllktxCkiziVqVsPP91374605;     XaZSjJePRWMjwnllktxCkiziVqVsPP91374605 = XaZSjJePRWMjwnllktxCkiziVqVsPP92017007;     XaZSjJePRWMjwnllktxCkiziVqVsPP92017007 = XaZSjJePRWMjwnllktxCkiziVqVsPP75317640;     XaZSjJePRWMjwnllktxCkiziVqVsPP75317640 = XaZSjJePRWMjwnllktxCkiziVqVsPP15448058;     XaZSjJePRWMjwnllktxCkiziVqVsPP15448058 = XaZSjJePRWMjwnllktxCkiziVqVsPP73670758;     XaZSjJePRWMjwnllktxCkiziVqVsPP73670758 = XaZSjJePRWMjwnllktxCkiziVqVsPP27994302;     XaZSjJePRWMjwnllktxCkiziVqVsPP27994302 = XaZSjJePRWMjwnllktxCkiziVqVsPP56061581;     XaZSjJePRWMjwnllktxCkiziVqVsPP56061581 = XaZSjJePRWMjwnllktxCkiziVqVsPP91008529;     XaZSjJePRWMjwnllktxCkiziVqVsPP91008529 = XaZSjJePRWMjwnllktxCkiziVqVsPP65068399;     XaZSjJePRWMjwnllktxCkiziVqVsPP65068399 = XaZSjJePRWMjwnllktxCkiziVqVsPP6231162;     XaZSjJePRWMjwnllktxCkiziVqVsPP6231162 = XaZSjJePRWMjwnllktxCkiziVqVsPP68260571;     XaZSjJePRWMjwnllktxCkiziVqVsPP68260571 = XaZSjJePRWMjwnllktxCkiziVqVsPP96770506;     XaZSjJePRWMjwnllktxCkiziVqVsPP96770506 = XaZSjJePRWMjwnllktxCkiziVqVsPP37902614;     XaZSjJePRWMjwnllktxCkiziVqVsPP37902614 = XaZSjJePRWMjwnllktxCkiziVqVsPP72291689;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void QafhjiuuDmNLBJKYxKWSwjUOj84313648() {     double rayeJkGgFjtqvuYWAPWURMtgqgVPCn23455772 = -589526184;    double rayeJkGgFjtqvuYWAPWURMtgqgVPCn43175058 = 73852859;    double rayeJkGgFjtqvuYWAPWURMtgqgVPCn52739185 = 72912217;    double rayeJkGgFjtqvuYWAPWURMtgqgVPCn31397566 = -947497212;    double rayeJkGgFjtqvuYWAPWURMtgqgVPCn18438747 = -985140137;    double rayeJkGgFjtqvuYWAPWURMtgqgVPCn40083668 = -382661944;    double rayeJkGgFjtqvuYWAPWURMtgqgVPCn64347221 = 54714896;    double rayeJkGgFjtqvuYWAPWURMtgqgVPCn64955407 = -96684976;    double rayeJkGgFjtqvuYWAPWURMtgqgVPCn78726978 = -452426716;    double rayeJkGgFjtqvuYWAPWURMtgqgVPCn83974415 = -540026425;    double rayeJkGgFjtqvuYWAPWURMtgqgVPCn58250422 = -417248742;    double rayeJkGgFjtqvuYWAPWURMtgqgVPCn3881065 = -967704233;    double rayeJkGgFjtqvuYWAPWURMtgqgVPCn52397565 = -120508651;    double rayeJkGgFjtqvuYWAPWURMtgqgVPCn24830972 = -148343144;    double rayeJkGgFjtqvuYWAPWURMtgqgVPCn64660963 = -55365952;    double rayeJkGgFjtqvuYWAPWURMtgqgVPCn62462136 = -478758645;    double rayeJkGgFjtqvuYWAPWURMtgqgVPCn4172103 = -748988051;    double rayeJkGgFjtqvuYWAPWURMtgqgVPCn84839417 = -161689542;    double rayeJkGgFjtqvuYWAPWURMtgqgVPCn90320597 = -641539818;    double rayeJkGgFjtqvuYWAPWURMtgqgVPCn74666893 = -743127162;    double rayeJkGgFjtqvuYWAPWURMtgqgVPCn44233701 = -879212788;    double rayeJkGgFjtqvuYWAPWURMtgqgVPCn50300579 = -905519728;    double rayeJkGgFjtqvuYWAPWURMtgqgVPCn61363555 = -189429239;    double rayeJkGgFjtqvuYWAPWURMtgqgVPCn21355212 = -225295557;    double rayeJkGgFjtqvuYWAPWURMtgqgVPCn85516088 = -768441362;    double rayeJkGgFjtqvuYWAPWURMtgqgVPCn61594423 = -986149799;    double rayeJkGgFjtqvuYWAPWURMtgqgVPCn75643646 = -596020384;    double rayeJkGgFjtqvuYWAPWURMtgqgVPCn24125529 = -719566593;    double rayeJkGgFjtqvuYWAPWURMtgqgVPCn28132449 = -641001724;    double rayeJkGgFjtqvuYWAPWURMtgqgVPCn24884676 = -208354837;    double rayeJkGgFjtqvuYWAPWURMtgqgVPCn41625016 = -19706487;    double rayeJkGgFjtqvuYWAPWURMtgqgVPCn4323853 = -517129331;    double rayeJkGgFjtqvuYWAPWURMtgqgVPCn24138905 = -573894194;    double rayeJkGgFjtqvuYWAPWURMtgqgVPCn59394630 = -610250350;    double rayeJkGgFjtqvuYWAPWURMtgqgVPCn63779244 = -657434421;    double rayeJkGgFjtqvuYWAPWURMtgqgVPCn62710840 = -193199350;    double rayeJkGgFjtqvuYWAPWURMtgqgVPCn96293499 = -785313337;    double rayeJkGgFjtqvuYWAPWURMtgqgVPCn56664080 = -861076118;    double rayeJkGgFjtqvuYWAPWURMtgqgVPCn58094897 = -348117782;    double rayeJkGgFjtqvuYWAPWURMtgqgVPCn11062206 = -283532919;    double rayeJkGgFjtqvuYWAPWURMtgqgVPCn71460422 = -745744338;    double rayeJkGgFjtqvuYWAPWURMtgqgVPCn45969534 = -330909972;    double rayeJkGgFjtqvuYWAPWURMtgqgVPCn30122774 = -764889799;    double rayeJkGgFjtqvuYWAPWURMtgqgVPCn82488032 = -147512058;    double rayeJkGgFjtqvuYWAPWURMtgqgVPCn69924997 = -585886695;    double rayeJkGgFjtqvuYWAPWURMtgqgVPCn17057962 = -142403053;    double rayeJkGgFjtqvuYWAPWURMtgqgVPCn90625921 = -65486558;    double rayeJkGgFjtqvuYWAPWURMtgqgVPCn58589202 = -633048228;    double rayeJkGgFjtqvuYWAPWURMtgqgVPCn6723104 = -830877739;    double rayeJkGgFjtqvuYWAPWURMtgqgVPCn67519532 = 91602674;    double rayeJkGgFjtqvuYWAPWURMtgqgVPCn3629664 = -907385929;    double rayeJkGgFjtqvuYWAPWURMtgqgVPCn22627693 = -637698129;    double rayeJkGgFjtqvuYWAPWURMtgqgVPCn61377939 = -519374993;    double rayeJkGgFjtqvuYWAPWURMtgqgVPCn52985861 = -815347887;    double rayeJkGgFjtqvuYWAPWURMtgqgVPCn40079947 = -944804507;    double rayeJkGgFjtqvuYWAPWURMtgqgVPCn73155192 = -684006457;    double rayeJkGgFjtqvuYWAPWURMtgqgVPCn81811502 = -736717902;    double rayeJkGgFjtqvuYWAPWURMtgqgVPCn31383974 = -701792226;    double rayeJkGgFjtqvuYWAPWURMtgqgVPCn45881477 = -79055851;    double rayeJkGgFjtqvuYWAPWURMtgqgVPCn56844324 = -998990339;    double rayeJkGgFjtqvuYWAPWURMtgqgVPCn64440021 = -786641560;    double rayeJkGgFjtqvuYWAPWURMtgqgVPCn40221693 = -225718512;    double rayeJkGgFjtqvuYWAPWURMtgqgVPCn36822958 = -455683253;    double rayeJkGgFjtqvuYWAPWURMtgqgVPCn53842302 = -144071880;    double rayeJkGgFjtqvuYWAPWURMtgqgVPCn42349400 = -420319939;    double rayeJkGgFjtqvuYWAPWURMtgqgVPCn53926570 = -900119411;    double rayeJkGgFjtqvuYWAPWURMtgqgVPCn79742160 = -293810040;    double rayeJkGgFjtqvuYWAPWURMtgqgVPCn93002934 = -510258301;    double rayeJkGgFjtqvuYWAPWURMtgqgVPCn61051728 = -490908723;    double rayeJkGgFjtqvuYWAPWURMtgqgVPCn1950124 = -862166603;    double rayeJkGgFjtqvuYWAPWURMtgqgVPCn66168636 = -693445308;    double rayeJkGgFjtqvuYWAPWURMtgqgVPCn47508022 = -887911933;    double rayeJkGgFjtqvuYWAPWURMtgqgVPCn26744520 = -813571761;    double rayeJkGgFjtqvuYWAPWURMtgqgVPCn79258391 = -258006899;    double rayeJkGgFjtqvuYWAPWURMtgqgVPCn3206472 = -997382824;    double rayeJkGgFjtqvuYWAPWURMtgqgVPCn98264167 = -448302816;    double rayeJkGgFjtqvuYWAPWURMtgqgVPCn20177806 = -40629930;    double rayeJkGgFjtqvuYWAPWURMtgqgVPCn78875523 = 58082818;    double rayeJkGgFjtqvuYWAPWURMtgqgVPCn51430214 = -639408862;    double rayeJkGgFjtqvuYWAPWURMtgqgVPCn68458127 = -526038309;    double rayeJkGgFjtqvuYWAPWURMtgqgVPCn70968501 = -820663241;    double rayeJkGgFjtqvuYWAPWURMtgqgVPCn17054444 = -962972157;    double rayeJkGgFjtqvuYWAPWURMtgqgVPCn17402425 = -888688854;    double rayeJkGgFjtqvuYWAPWURMtgqgVPCn60612916 = -632604399;    double rayeJkGgFjtqvuYWAPWURMtgqgVPCn21255013 = -300968908;    double rayeJkGgFjtqvuYWAPWURMtgqgVPCn18997324 = -382008358;    double rayeJkGgFjtqvuYWAPWURMtgqgVPCn42945914 = -997754339;    double rayeJkGgFjtqvuYWAPWURMtgqgVPCn71153044 = -758546308;    double rayeJkGgFjtqvuYWAPWURMtgqgVPCn19314684 = -665445844;    double rayeJkGgFjtqvuYWAPWURMtgqgVPCn90624051 = -973427965;    double rayeJkGgFjtqvuYWAPWURMtgqgVPCn80899337 = -456481448;    double rayeJkGgFjtqvuYWAPWURMtgqgVPCn64909526 = 16478888;    double rayeJkGgFjtqvuYWAPWURMtgqgVPCn10782603 = -682020268;    double rayeJkGgFjtqvuYWAPWURMtgqgVPCn1250574 = -349127443;    double rayeJkGgFjtqvuYWAPWURMtgqgVPCn46622185 = -496891360;    double rayeJkGgFjtqvuYWAPWURMtgqgVPCn31238729 = -420025827;    double rayeJkGgFjtqvuYWAPWURMtgqgVPCn9146576 = -875226720;    double rayeJkGgFjtqvuYWAPWURMtgqgVPCn76280472 = -520817919;    double rayeJkGgFjtqvuYWAPWURMtgqgVPCn40138632 = -727192120;    double rayeJkGgFjtqvuYWAPWURMtgqgVPCn15998428 = -589526184;     rayeJkGgFjtqvuYWAPWURMtgqgVPCn23455772 = rayeJkGgFjtqvuYWAPWURMtgqgVPCn43175058;     rayeJkGgFjtqvuYWAPWURMtgqgVPCn43175058 = rayeJkGgFjtqvuYWAPWURMtgqgVPCn52739185;     rayeJkGgFjtqvuYWAPWURMtgqgVPCn52739185 = rayeJkGgFjtqvuYWAPWURMtgqgVPCn31397566;     rayeJkGgFjtqvuYWAPWURMtgqgVPCn31397566 = rayeJkGgFjtqvuYWAPWURMtgqgVPCn18438747;     rayeJkGgFjtqvuYWAPWURMtgqgVPCn18438747 = rayeJkGgFjtqvuYWAPWURMtgqgVPCn40083668;     rayeJkGgFjtqvuYWAPWURMtgqgVPCn40083668 = rayeJkGgFjtqvuYWAPWURMtgqgVPCn64347221;     rayeJkGgFjtqvuYWAPWURMtgqgVPCn64347221 = rayeJkGgFjtqvuYWAPWURMtgqgVPCn64955407;     rayeJkGgFjtqvuYWAPWURMtgqgVPCn64955407 = rayeJkGgFjtqvuYWAPWURMtgqgVPCn78726978;     rayeJkGgFjtqvuYWAPWURMtgqgVPCn78726978 = rayeJkGgFjtqvuYWAPWURMtgqgVPCn83974415;     rayeJkGgFjtqvuYWAPWURMtgqgVPCn83974415 = rayeJkGgFjtqvuYWAPWURMtgqgVPCn58250422;     rayeJkGgFjtqvuYWAPWURMtgqgVPCn58250422 = rayeJkGgFjtqvuYWAPWURMtgqgVPCn3881065;     rayeJkGgFjtqvuYWAPWURMtgqgVPCn3881065 = rayeJkGgFjtqvuYWAPWURMtgqgVPCn52397565;     rayeJkGgFjtqvuYWAPWURMtgqgVPCn52397565 = rayeJkGgFjtqvuYWAPWURMtgqgVPCn24830972;     rayeJkGgFjtqvuYWAPWURMtgqgVPCn24830972 = rayeJkGgFjtqvuYWAPWURMtgqgVPCn64660963;     rayeJkGgFjtqvuYWAPWURMtgqgVPCn64660963 = rayeJkGgFjtqvuYWAPWURMtgqgVPCn62462136;     rayeJkGgFjtqvuYWAPWURMtgqgVPCn62462136 = rayeJkGgFjtqvuYWAPWURMtgqgVPCn4172103;     rayeJkGgFjtqvuYWAPWURMtgqgVPCn4172103 = rayeJkGgFjtqvuYWAPWURMtgqgVPCn84839417;     rayeJkGgFjtqvuYWAPWURMtgqgVPCn84839417 = rayeJkGgFjtqvuYWAPWURMtgqgVPCn90320597;     rayeJkGgFjtqvuYWAPWURMtgqgVPCn90320597 = rayeJkGgFjtqvuYWAPWURMtgqgVPCn74666893;     rayeJkGgFjtqvuYWAPWURMtgqgVPCn74666893 = rayeJkGgFjtqvuYWAPWURMtgqgVPCn44233701;     rayeJkGgFjtqvuYWAPWURMtgqgVPCn44233701 = rayeJkGgFjtqvuYWAPWURMtgqgVPCn50300579;     rayeJkGgFjtqvuYWAPWURMtgqgVPCn50300579 = rayeJkGgFjtqvuYWAPWURMtgqgVPCn61363555;     rayeJkGgFjtqvuYWAPWURMtgqgVPCn61363555 = rayeJkGgFjtqvuYWAPWURMtgqgVPCn21355212;     rayeJkGgFjtqvuYWAPWURMtgqgVPCn21355212 = rayeJkGgFjtqvuYWAPWURMtgqgVPCn85516088;     rayeJkGgFjtqvuYWAPWURMtgqgVPCn85516088 = rayeJkGgFjtqvuYWAPWURMtgqgVPCn61594423;     rayeJkGgFjtqvuYWAPWURMtgqgVPCn61594423 = rayeJkGgFjtqvuYWAPWURMtgqgVPCn75643646;     rayeJkGgFjtqvuYWAPWURMtgqgVPCn75643646 = rayeJkGgFjtqvuYWAPWURMtgqgVPCn24125529;     rayeJkGgFjtqvuYWAPWURMtgqgVPCn24125529 = rayeJkGgFjtqvuYWAPWURMtgqgVPCn28132449;     rayeJkGgFjtqvuYWAPWURMtgqgVPCn28132449 = rayeJkGgFjtqvuYWAPWURMtgqgVPCn24884676;     rayeJkGgFjtqvuYWAPWURMtgqgVPCn24884676 = rayeJkGgFjtqvuYWAPWURMtgqgVPCn41625016;     rayeJkGgFjtqvuYWAPWURMtgqgVPCn41625016 = rayeJkGgFjtqvuYWAPWURMtgqgVPCn4323853;     rayeJkGgFjtqvuYWAPWURMtgqgVPCn4323853 = rayeJkGgFjtqvuYWAPWURMtgqgVPCn24138905;     rayeJkGgFjtqvuYWAPWURMtgqgVPCn24138905 = rayeJkGgFjtqvuYWAPWURMtgqgVPCn59394630;     rayeJkGgFjtqvuYWAPWURMtgqgVPCn59394630 = rayeJkGgFjtqvuYWAPWURMtgqgVPCn63779244;     rayeJkGgFjtqvuYWAPWURMtgqgVPCn63779244 = rayeJkGgFjtqvuYWAPWURMtgqgVPCn62710840;     rayeJkGgFjtqvuYWAPWURMtgqgVPCn62710840 = rayeJkGgFjtqvuYWAPWURMtgqgVPCn96293499;     rayeJkGgFjtqvuYWAPWURMtgqgVPCn96293499 = rayeJkGgFjtqvuYWAPWURMtgqgVPCn56664080;     rayeJkGgFjtqvuYWAPWURMtgqgVPCn56664080 = rayeJkGgFjtqvuYWAPWURMtgqgVPCn58094897;     rayeJkGgFjtqvuYWAPWURMtgqgVPCn58094897 = rayeJkGgFjtqvuYWAPWURMtgqgVPCn11062206;     rayeJkGgFjtqvuYWAPWURMtgqgVPCn11062206 = rayeJkGgFjtqvuYWAPWURMtgqgVPCn71460422;     rayeJkGgFjtqvuYWAPWURMtgqgVPCn71460422 = rayeJkGgFjtqvuYWAPWURMtgqgVPCn45969534;     rayeJkGgFjtqvuYWAPWURMtgqgVPCn45969534 = rayeJkGgFjtqvuYWAPWURMtgqgVPCn30122774;     rayeJkGgFjtqvuYWAPWURMtgqgVPCn30122774 = rayeJkGgFjtqvuYWAPWURMtgqgVPCn82488032;     rayeJkGgFjtqvuYWAPWURMtgqgVPCn82488032 = rayeJkGgFjtqvuYWAPWURMtgqgVPCn69924997;     rayeJkGgFjtqvuYWAPWURMtgqgVPCn69924997 = rayeJkGgFjtqvuYWAPWURMtgqgVPCn17057962;     rayeJkGgFjtqvuYWAPWURMtgqgVPCn17057962 = rayeJkGgFjtqvuYWAPWURMtgqgVPCn90625921;     rayeJkGgFjtqvuYWAPWURMtgqgVPCn90625921 = rayeJkGgFjtqvuYWAPWURMtgqgVPCn58589202;     rayeJkGgFjtqvuYWAPWURMtgqgVPCn58589202 = rayeJkGgFjtqvuYWAPWURMtgqgVPCn6723104;     rayeJkGgFjtqvuYWAPWURMtgqgVPCn6723104 = rayeJkGgFjtqvuYWAPWURMtgqgVPCn67519532;     rayeJkGgFjtqvuYWAPWURMtgqgVPCn67519532 = rayeJkGgFjtqvuYWAPWURMtgqgVPCn3629664;     rayeJkGgFjtqvuYWAPWURMtgqgVPCn3629664 = rayeJkGgFjtqvuYWAPWURMtgqgVPCn22627693;     rayeJkGgFjtqvuYWAPWURMtgqgVPCn22627693 = rayeJkGgFjtqvuYWAPWURMtgqgVPCn61377939;     rayeJkGgFjtqvuYWAPWURMtgqgVPCn61377939 = rayeJkGgFjtqvuYWAPWURMtgqgVPCn52985861;     rayeJkGgFjtqvuYWAPWURMtgqgVPCn52985861 = rayeJkGgFjtqvuYWAPWURMtgqgVPCn40079947;     rayeJkGgFjtqvuYWAPWURMtgqgVPCn40079947 = rayeJkGgFjtqvuYWAPWURMtgqgVPCn73155192;     rayeJkGgFjtqvuYWAPWURMtgqgVPCn73155192 = rayeJkGgFjtqvuYWAPWURMtgqgVPCn81811502;     rayeJkGgFjtqvuYWAPWURMtgqgVPCn81811502 = rayeJkGgFjtqvuYWAPWURMtgqgVPCn31383974;     rayeJkGgFjtqvuYWAPWURMtgqgVPCn31383974 = rayeJkGgFjtqvuYWAPWURMtgqgVPCn45881477;     rayeJkGgFjtqvuYWAPWURMtgqgVPCn45881477 = rayeJkGgFjtqvuYWAPWURMtgqgVPCn56844324;     rayeJkGgFjtqvuYWAPWURMtgqgVPCn56844324 = rayeJkGgFjtqvuYWAPWURMtgqgVPCn64440021;     rayeJkGgFjtqvuYWAPWURMtgqgVPCn64440021 = rayeJkGgFjtqvuYWAPWURMtgqgVPCn40221693;     rayeJkGgFjtqvuYWAPWURMtgqgVPCn40221693 = rayeJkGgFjtqvuYWAPWURMtgqgVPCn36822958;     rayeJkGgFjtqvuYWAPWURMtgqgVPCn36822958 = rayeJkGgFjtqvuYWAPWURMtgqgVPCn53842302;     rayeJkGgFjtqvuYWAPWURMtgqgVPCn53842302 = rayeJkGgFjtqvuYWAPWURMtgqgVPCn42349400;     rayeJkGgFjtqvuYWAPWURMtgqgVPCn42349400 = rayeJkGgFjtqvuYWAPWURMtgqgVPCn53926570;     rayeJkGgFjtqvuYWAPWURMtgqgVPCn53926570 = rayeJkGgFjtqvuYWAPWURMtgqgVPCn79742160;     rayeJkGgFjtqvuYWAPWURMtgqgVPCn79742160 = rayeJkGgFjtqvuYWAPWURMtgqgVPCn93002934;     rayeJkGgFjtqvuYWAPWURMtgqgVPCn93002934 = rayeJkGgFjtqvuYWAPWURMtgqgVPCn61051728;     rayeJkGgFjtqvuYWAPWURMtgqgVPCn61051728 = rayeJkGgFjtqvuYWAPWURMtgqgVPCn1950124;     rayeJkGgFjtqvuYWAPWURMtgqgVPCn1950124 = rayeJkGgFjtqvuYWAPWURMtgqgVPCn66168636;     rayeJkGgFjtqvuYWAPWURMtgqgVPCn66168636 = rayeJkGgFjtqvuYWAPWURMtgqgVPCn47508022;     rayeJkGgFjtqvuYWAPWURMtgqgVPCn47508022 = rayeJkGgFjtqvuYWAPWURMtgqgVPCn26744520;     rayeJkGgFjtqvuYWAPWURMtgqgVPCn26744520 = rayeJkGgFjtqvuYWAPWURMtgqgVPCn79258391;     rayeJkGgFjtqvuYWAPWURMtgqgVPCn79258391 = rayeJkGgFjtqvuYWAPWURMtgqgVPCn3206472;     rayeJkGgFjtqvuYWAPWURMtgqgVPCn3206472 = rayeJkGgFjtqvuYWAPWURMtgqgVPCn98264167;     rayeJkGgFjtqvuYWAPWURMtgqgVPCn98264167 = rayeJkGgFjtqvuYWAPWURMtgqgVPCn20177806;     rayeJkGgFjtqvuYWAPWURMtgqgVPCn20177806 = rayeJkGgFjtqvuYWAPWURMtgqgVPCn78875523;     rayeJkGgFjtqvuYWAPWURMtgqgVPCn78875523 = rayeJkGgFjtqvuYWAPWURMtgqgVPCn51430214;     rayeJkGgFjtqvuYWAPWURMtgqgVPCn51430214 = rayeJkGgFjtqvuYWAPWURMtgqgVPCn68458127;     rayeJkGgFjtqvuYWAPWURMtgqgVPCn68458127 = rayeJkGgFjtqvuYWAPWURMtgqgVPCn70968501;     rayeJkGgFjtqvuYWAPWURMtgqgVPCn70968501 = rayeJkGgFjtqvuYWAPWURMtgqgVPCn17054444;     rayeJkGgFjtqvuYWAPWURMtgqgVPCn17054444 = rayeJkGgFjtqvuYWAPWURMtgqgVPCn17402425;     rayeJkGgFjtqvuYWAPWURMtgqgVPCn17402425 = rayeJkGgFjtqvuYWAPWURMtgqgVPCn60612916;     rayeJkGgFjtqvuYWAPWURMtgqgVPCn60612916 = rayeJkGgFjtqvuYWAPWURMtgqgVPCn21255013;     rayeJkGgFjtqvuYWAPWURMtgqgVPCn21255013 = rayeJkGgFjtqvuYWAPWURMtgqgVPCn18997324;     rayeJkGgFjtqvuYWAPWURMtgqgVPCn18997324 = rayeJkGgFjtqvuYWAPWURMtgqgVPCn42945914;     rayeJkGgFjtqvuYWAPWURMtgqgVPCn42945914 = rayeJkGgFjtqvuYWAPWURMtgqgVPCn71153044;     rayeJkGgFjtqvuYWAPWURMtgqgVPCn71153044 = rayeJkGgFjtqvuYWAPWURMtgqgVPCn19314684;     rayeJkGgFjtqvuYWAPWURMtgqgVPCn19314684 = rayeJkGgFjtqvuYWAPWURMtgqgVPCn90624051;     rayeJkGgFjtqvuYWAPWURMtgqgVPCn90624051 = rayeJkGgFjtqvuYWAPWURMtgqgVPCn80899337;     rayeJkGgFjtqvuYWAPWURMtgqgVPCn80899337 = rayeJkGgFjtqvuYWAPWURMtgqgVPCn64909526;     rayeJkGgFjtqvuYWAPWURMtgqgVPCn64909526 = rayeJkGgFjtqvuYWAPWURMtgqgVPCn10782603;     rayeJkGgFjtqvuYWAPWURMtgqgVPCn10782603 = rayeJkGgFjtqvuYWAPWURMtgqgVPCn1250574;     rayeJkGgFjtqvuYWAPWURMtgqgVPCn1250574 = rayeJkGgFjtqvuYWAPWURMtgqgVPCn46622185;     rayeJkGgFjtqvuYWAPWURMtgqgVPCn46622185 = rayeJkGgFjtqvuYWAPWURMtgqgVPCn31238729;     rayeJkGgFjtqvuYWAPWURMtgqgVPCn31238729 = rayeJkGgFjtqvuYWAPWURMtgqgVPCn9146576;     rayeJkGgFjtqvuYWAPWURMtgqgVPCn9146576 = rayeJkGgFjtqvuYWAPWURMtgqgVPCn76280472;     rayeJkGgFjtqvuYWAPWURMtgqgVPCn76280472 = rayeJkGgFjtqvuYWAPWURMtgqgVPCn40138632;     rayeJkGgFjtqvuYWAPWURMtgqgVPCn40138632 = rayeJkGgFjtqvuYWAPWURMtgqgVPCn15998428;     rayeJkGgFjtqvuYWAPWURMtgqgVPCn15998428 = rayeJkGgFjtqvuYWAPWURMtgqgVPCn23455772;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void NTueKJnSONttKakGDRQzGpNOE93918374() {     double yoTQRmAzuJmGZwngdubZIxkziMRkUm45277993 = -57741516;    double yoTQRmAzuJmGZwngdubZIxkziMRkUm4642862 = -308745994;    double yoTQRmAzuJmGZwngdubZIxkziMRkUm98466455 = 25694685;    double yoTQRmAzuJmGZwngdubZIxkziMRkUm62772712 = -52281388;    double yoTQRmAzuJmGZwngdubZIxkziMRkUm78573077 = -862391059;    double yoTQRmAzuJmGZwngdubZIxkziMRkUm64101983 = -394205102;    double yoTQRmAzuJmGZwngdubZIxkziMRkUm93367805 = -8603228;    double yoTQRmAzuJmGZwngdubZIxkziMRkUm51818036 = -104865824;    double yoTQRmAzuJmGZwngdubZIxkziMRkUm75250618 = -438222134;    double yoTQRmAzuJmGZwngdubZIxkziMRkUm45257641 = -410244823;    double yoTQRmAzuJmGZwngdubZIxkziMRkUm29166691 = 26993556;    double yoTQRmAzuJmGZwngdubZIxkziMRkUm20062948 = 29114160;    double yoTQRmAzuJmGZwngdubZIxkziMRkUm85386507 = -658542440;    double yoTQRmAzuJmGZwngdubZIxkziMRkUm91797439 = -998419941;    double yoTQRmAzuJmGZwngdubZIxkziMRkUm59918758 = 17792129;    double yoTQRmAzuJmGZwngdubZIxkziMRkUm10432862 = -921125186;    double yoTQRmAzuJmGZwngdubZIxkziMRkUm97621161 = -34812769;    double yoTQRmAzuJmGZwngdubZIxkziMRkUm47364720 = -83410460;    double yoTQRmAzuJmGZwngdubZIxkziMRkUm94957821 = -714675474;    double yoTQRmAzuJmGZwngdubZIxkziMRkUm55776536 = -134372217;    double yoTQRmAzuJmGZwngdubZIxkziMRkUm1387987 = -611291490;    double yoTQRmAzuJmGZwngdubZIxkziMRkUm14702558 = -976270892;    double yoTQRmAzuJmGZwngdubZIxkziMRkUm70834960 = -845456595;    double yoTQRmAzuJmGZwngdubZIxkziMRkUm58632834 = -635394423;    double yoTQRmAzuJmGZwngdubZIxkziMRkUm59446755 = -679338334;    double yoTQRmAzuJmGZwngdubZIxkziMRkUm51170277 = -213335327;    double yoTQRmAzuJmGZwngdubZIxkziMRkUm48680250 = -122824429;    double yoTQRmAzuJmGZwngdubZIxkziMRkUm59705354 = -584014825;    double yoTQRmAzuJmGZwngdubZIxkziMRkUm76029361 = -307947642;    double yoTQRmAzuJmGZwngdubZIxkziMRkUm70701754 = -584569031;    double yoTQRmAzuJmGZwngdubZIxkziMRkUm92790281 = -425434234;    double yoTQRmAzuJmGZwngdubZIxkziMRkUm23215179 = -293018162;    double yoTQRmAzuJmGZwngdubZIxkziMRkUm49458370 = -316498077;    double yoTQRmAzuJmGZwngdubZIxkziMRkUm31933748 = -286069978;    double yoTQRmAzuJmGZwngdubZIxkziMRkUm44613457 = -807253024;    double yoTQRmAzuJmGZwngdubZIxkziMRkUm32287800 = -207615329;    double yoTQRmAzuJmGZwngdubZIxkziMRkUm39375757 = -834930434;    double yoTQRmAzuJmGZwngdubZIxkziMRkUm60601942 = -342618876;    double yoTQRmAzuJmGZwngdubZIxkziMRkUm18475344 = -120523062;    double yoTQRmAzuJmGZwngdubZIxkziMRkUm23732852 = -741081921;    double yoTQRmAzuJmGZwngdubZIxkziMRkUm25836268 = -79883596;    double yoTQRmAzuJmGZwngdubZIxkziMRkUm62471705 = -18376050;    double yoTQRmAzuJmGZwngdubZIxkziMRkUm77490172 = -808856613;    double yoTQRmAzuJmGZwngdubZIxkziMRkUm30582891 = -56318227;    double yoTQRmAzuJmGZwngdubZIxkziMRkUm49840808 = -772575325;    double yoTQRmAzuJmGZwngdubZIxkziMRkUm56264440 = -945835283;    double yoTQRmAzuJmGZwngdubZIxkziMRkUm16294033 = -246494078;    double yoTQRmAzuJmGZwngdubZIxkziMRkUm40428954 = -371544216;    double yoTQRmAzuJmGZwngdubZIxkziMRkUm13787196 = 84005839;    double yoTQRmAzuJmGZwngdubZIxkziMRkUm83567009 = -987452511;    double yoTQRmAzuJmGZwngdubZIxkziMRkUm92091483 = -951275255;    double yoTQRmAzuJmGZwngdubZIxkziMRkUm19016356 = -963076210;    double yoTQRmAzuJmGZwngdubZIxkziMRkUm52600804 = -482970132;    double yoTQRmAzuJmGZwngdubZIxkziMRkUm81010983 = 93643053;    double yoTQRmAzuJmGZwngdubZIxkziMRkUm92530388 = -905926256;    double yoTQRmAzuJmGZwngdubZIxkziMRkUm30575436 = -81470624;    double yoTQRmAzuJmGZwngdubZIxkziMRkUm33807902 = -463289399;    double yoTQRmAzuJmGZwngdubZIxkziMRkUm39833622 = -338910892;    double yoTQRmAzuJmGZwngdubZIxkziMRkUm3325957 = -372943054;    double yoTQRmAzuJmGZwngdubZIxkziMRkUm27402801 = -549055733;    double yoTQRmAzuJmGZwngdubZIxkziMRkUm15421734 = -171380674;    double yoTQRmAzuJmGZwngdubZIxkziMRkUm33662452 = -424588403;    double yoTQRmAzuJmGZwngdubZIxkziMRkUm75788674 = -796918183;    double yoTQRmAzuJmGZwngdubZIxkziMRkUm4548864 = -853653104;    double yoTQRmAzuJmGZwngdubZIxkziMRkUm52467360 = -984810589;    double yoTQRmAzuJmGZwngdubZIxkziMRkUm5951513 = -679988283;    double yoTQRmAzuJmGZwngdubZIxkziMRkUm70604578 = -654387763;    double yoTQRmAzuJmGZwngdubZIxkziMRkUm53452760 = -272472463;    double yoTQRmAzuJmGZwngdubZIxkziMRkUm47183983 = -91166918;    double yoTQRmAzuJmGZwngdubZIxkziMRkUm27630959 = -774592542;    double yoTQRmAzuJmGZwngdubZIxkziMRkUm71057105 = 13805248;    double yoTQRmAzuJmGZwngdubZIxkziMRkUm37019220 = -692193894;    double yoTQRmAzuJmGZwngdubZIxkziMRkUm28889377 = -962887398;    double yoTQRmAzuJmGZwngdubZIxkziMRkUm71224969 = -973593554;    double yoTQRmAzuJmGZwngdubZIxkziMRkUm29940268 = 45511378;    double yoTQRmAzuJmGZwngdubZIxkziMRkUm38916282 = -492915441;    double yoTQRmAzuJmGZwngdubZIxkziMRkUm37212385 = -67414279;    double yoTQRmAzuJmGZwngdubZIxkziMRkUm40252069 = -689138368;    double yoTQRmAzuJmGZwngdubZIxkziMRkUm8792026 = -862819099;    double yoTQRmAzuJmGZwngdubZIxkziMRkUm3182315 = -733503051;    double yoTQRmAzuJmGZwngdubZIxkziMRkUm34876244 = -966841249;    double yoTQRmAzuJmGZwngdubZIxkziMRkUm8251296 = -751280213;    double yoTQRmAzuJmGZwngdubZIxkziMRkUm45918158 = -568020665;    double yoTQRmAzuJmGZwngdubZIxkziMRkUm92462352 = -320495132;    double yoTQRmAzuJmGZwngdubZIxkziMRkUm78610270 = -633293777;    double yoTQRmAzuJmGZwngdubZIxkziMRkUm73773925 = -462358025;    double yoTQRmAzuJmGZwngdubZIxkziMRkUm70614375 = -810048030;    double yoTQRmAzuJmGZwngdubZIxkziMRkUm68447387 = -310141131;    double yoTQRmAzuJmGZwngdubZIxkziMRkUm39403359 = -380143723;    double yoTQRmAzuJmGZwngdubZIxkziMRkUm14038021 = -625782400;    double yoTQRmAzuJmGZwngdubZIxkziMRkUm98479898 = -744325930;    double yoTQRmAzuJmGZwngdubZIxkziMRkUm99542134 = -396019542;    double yoTQRmAzuJmGZwngdubZIxkziMRkUm57275986 = -969675822;    double yoTQRmAzuJmGZwngdubZIxkziMRkUm91072542 = -571467330;    double yoTQRmAzuJmGZwngdubZIxkziMRkUm8311119 = -469701247;    double yoTQRmAzuJmGZwngdubZIxkziMRkUm92173816 = -655295194;    double yoTQRmAzuJmGZwngdubZIxkziMRkUm86683030 = -221457868;    double yoTQRmAzuJmGZwngdubZIxkziMRkUm72941308 = -955203510;    double yoTQRmAzuJmGZwngdubZIxkziMRkUm78115530 = -71507639;    double yoTQRmAzuJmGZwngdubZIxkziMRkUm43889296 = -57741516;     yoTQRmAzuJmGZwngdubZIxkziMRkUm45277993 = yoTQRmAzuJmGZwngdubZIxkziMRkUm4642862;     yoTQRmAzuJmGZwngdubZIxkziMRkUm4642862 = yoTQRmAzuJmGZwngdubZIxkziMRkUm98466455;     yoTQRmAzuJmGZwngdubZIxkziMRkUm98466455 = yoTQRmAzuJmGZwngdubZIxkziMRkUm62772712;     yoTQRmAzuJmGZwngdubZIxkziMRkUm62772712 = yoTQRmAzuJmGZwngdubZIxkziMRkUm78573077;     yoTQRmAzuJmGZwngdubZIxkziMRkUm78573077 = yoTQRmAzuJmGZwngdubZIxkziMRkUm64101983;     yoTQRmAzuJmGZwngdubZIxkziMRkUm64101983 = yoTQRmAzuJmGZwngdubZIxkziMRkUm93367805;     yoTQRmAzuJmGZwngdubZIxkziMRkUm93367805 = yoTQRmAzuJmGZwngdubZIxkziMRkUm51818036;     yoTQRmAzuJmGZwngdubZIxkziMRkUm51818036 = yoTQRmAzuJmGZwngdubZIxkziMRkUm75250618;     yoTQRmAzuJmGZwngdubZIxkziMRkUm75250618 = yoTQRmAzuJmGZwngdubZIxkziMRkUm45257641;     yoTQRmAzuJmGZwngdubZIxkziMRkUm45257641 = yoTQRmAzuJmGZwngdubZIxkziMRkUm29166691;     yoTQRmAzuJmGZwngdubZIxkziMRkUm29166691 = yoTQRmAzuJmGZwngdubZIxkziMRkUm20062948;     yoTQRmAzuJmGZwngdubZIxkziMRkUm20062948 = yoTQRmAzuJmGZwngdubZIxkziMRkUm85386507;     yoTQRmAzuJmGZwngdubZIxkziMRkUm85386507 = yoTQRmAzuJmGZwngdubZIxkziMRkUm91797439;     yoTQRmAzuJmGZwngdubZIxkziMRkUm91797439 = yoTQRmAzuJmGZwngdubZIxkziMRkUm59918758;     yoTQRmAzuJmGZwngdubZIxkziMRkUm59918758 = yoTQRmAzuJmGZwngdubZIxkziMRkUm10432862;     yoTQRmAzuJmGZwngdubZIxkziMRkUm10432862 = yoTQRmAzuJmGZwngdubZIxkziMRkUm97621161;     yoTQRmAzuJmGZwngdubZIxkziMRkUm97621161 = yoTQRmAzuJmGZwngdubZIxkziMRkUm47364720;     yoTQRmAzuJmGZwngdubZIxkziMRkUm47364720 = yoTQRmAzuJmGZwngdubZIxkziMRkUm94957821;     yoTQRmAzuJmGZwngdubZIxkziMRkUm94957821 = yoTQRmAzuJmGZwngdubZIxkziMRkUm55776536;     yoTQRmAzuJmGZwngdubZIxkziMRkUm55776536 = yoTQRmAzuJmGZwngdubZIxkziMRkUm1387987;     yoTQRmAzuJmGZwngdubZIxkziMRkUm1387987 = yoTQRmAzuJmGZwngdubZIxkziMRkUm14702558;     yoTQRmAzuJmGZwngdubZIxkziMRkUm14702558 = yoTQRmAzuJmGZwngdubZIxkziMRkUm70834960;     yoTQRmAzuJmGZwngdubZIxkziMRkUm70834960 = yoTQRmAzuJmGZwngdubZIxkziMRkUm58632834;     yoTQRmAzuJmGZwngdubZIxkziMRkUm58632834 = yoTQRmAzuJmGZwngdubZIxkziMRkUm59446755;     yoTQRmAzuJmGZwngdubZIxkziMRkUm59446755 = yoTQRmAzuJmGZwngdubZIxkziMRkUm51170277;     yoTQRmAzuJmGZwngdubZIxkziMRkUm51170277 = yoTQRmAzuJmGZwngdubZIxkziMRkUm48680250;     yoTQRmAzuJmGZwngdubZIxkziMRkUm48680250 = yoTQRmAzuJmGZwngdubZIxkziMRkUm59705354;     yoTQRmAzuJmGZwngdubZIxkziMRkUm59705354 = yoTQRmAzuJmGZwngdubZIxkziMRkUm76029361;     yoTQRmAzuJmGZwngdubZIxkziMRkUm76029361 = yoTQRmAzuJmGZwngdubZIxkziMRkUm70701754;     yoTQRmAzuJmGZwngdubZIxkziMRkUm70701754 = yoTQRmAzuJmGZwngdubZIxkziMRkUm92790281;     yoTQRmAzuJmGZwngdubZIxkziMRkUm92790281 = yoTQRmAzuJmGZwngdubZIxkziMRkUm23215179;     yoTQRmAzuJmGZwngdubZIxkziMRkUm23215179 = yoTQRmAzuJmGZwngdubZIxkziMRkUm49458370;     yoTQRmAzuJmGZwngdubZIxkziMRkUm49458370 = yoTQRmAzuJmGZwngdubZIxkziMRkUm31933748;     yoTQRmAzuJmGZwngdubZIxkziMRkUm31933748 = yoTQRmAzuJmGZwngdubZIxkziMRkUm44613457;     yoTQRmAzuJmGZwngdubZIxkziMRkUm44613457 = yoTQRmAzuJmGZwngdubZIxkziMRkUm32287800;     yoTQRmAzuJmGZwngdubZIxkziMRkUm32287800 = yoTQRmAzuJmGZwngdubZIxkziMRkUm39375757;     yoTQRmAzuJmGZwngdubZIxkziMRkUm39375757 = yoTQRmAzuJmGZwngdubZIxkziMRkUm60601942;     yoTQRmAzuJmGZwngdubZIxkziMRkUm60601942 = yoTQRmAzuJmGZwngdubZIxkziMRkUm18475344;     yoTQRmAzuJmGZwngdubZIxkziMRkUm18475344 = yoTQRmAzuJmGZwngdubZIxkziMRkUm23732852;     yoTQRmAzuJmGZwngdubZIxkziMRkUm23732852 = yoTQRmAzuJmGZwngdubZIxkziMRkUm25836268;     yoTQRmAzuJmGZwngdubZIxkziMRkUm25836268 = yoTQRmAzuJmGZwngdubZIxkziMRkUm62471705;     yoTQRmAzuJmGZwngdubZIxkziMRkUm62471705 = yoTQRmAzuJmGZwngdubZIxkziMRkUm77490172;     yoTQRmAzuJmGZwngdubZIxkziMRkUm77490172 = yoTQRmAzuJmGZwngdubZIxkziMRkUm30582891;     yoTQRmAzuJmGZwngdubZIxkziMRkUm30582891 = yoTQRmAzuJmGZwngdubZIxkziMRkUm49840808;     yoTQRmAzuJmGZwngdubZIxkziMRkUm49840808 = yoTQRmAzuJmGZwngdubZIxkziMRkUm56264440;     yoTQRmAzuJmGZwngdubZIxkziMRkUm56264440 = yoTQRmAzuJmGZwngdubZIxkziMRkUm16294033;     yoTQRmAzuJmGZwngdubZIxkziMRkUm16294033 = yoTQRmAzuJmGZwngdubZIxkziMRkUm40428954;     yoTQRmAzuJmGZwngdubZIxkziMRkUm40428954 = yoTQRmAzuJmGZwngdubZIxkziMRkUm13787196;     yoTQRmAzuJmGZwngdubZIxkziMRkUm13787196 = yoTQRmAzuJmGZwngdubZIxkziMRkUm83567009;     yoTQRmAzuJmGZwngdubZIxkziMRkUm83567009 = yoTQRmAzuJmGZwngdubZIxkziMRkUm92091483;     yoTQRmAzuJmGZwngdubZIxkziMRkUm92091483 = yoTQRmAzuJmGZwngdubZIxkziMRkUm19016356;     yoTQRmAzuJmGZwngdubZIxkziMRkUm19016356 = yoTQRmAzuJmGZwngdubZIxkziMRkUm52600804;     yoTQRmAzuJmGZwngdubZIxkziMRkUm52600804 = yoTQRmAzuJmGZwngdubZIxkziMRkUm81010983;     yoTQRmAzuJmGZwngdubZIxkziMRkUm81010983 = yoTQRmAzuJmGZwngdubZIxkziMRkUm92530388;     yoTQRmAzuJmGZwngdubZIxkziMRkUm92530388 = yoTQRmAzuJmGZwngdubZIxkziMRkUm30575436;     yoTQRmAzuJmGZwngdubZIxkziMRkUm30575436 = yoTQRmAzuJmGZwngdubZIxkziMRkUm33807902;     yoTQRmAzuJmGZwngdubZIxkziMRkUm33807902 = yoTQRmAzuJmGZwngdubZIxkziMRkUm39833622;     yoTQRmAzuJmGZwngdubZIxkziMRkUm39833622 = yoTQRmAzuJmGZwngdubZIxkziMRkUm3325957;     yoTQRmAzuJmGZwngdubZIxkziMRkUm3325957 = yoTQRmAzuJmGZwngdubZIxkziMRkUm27402801;     yoTQRmAzuJmGZwngdubZIxkziMRkUm27402801 = yoTQRmAzuJmGZwngdubZIxkziMRkUm15421734;     yoTQRmAzuJmGZwngdubZIxkziMRkUm15421734 = yoTQRmAzuJmGZwngdubZIxkziMRkUm33662452;     yoTQRmAzuJmGZwngdubZIxkziMRkUm33662452 = yoTQRmAzuJmGZwngdubZIxkziMRkUm75788674;     yoTQRmAzuJmGZwngdubZIxkziMRkUm75788674 = yoTQRmAzuJmGZwngdubZIxkziMRkUm4548864;     yoTQRmAzuJmGZwngdubZIxkziMRkUm4548864 = yoTQRmAzuJmGZwngdubZIxkziMRkUm52467360;     yoTQRmAzuJmGZwngdubZIxkziMRkUm52467360 = yoTQRmAzuJmGZwngdubZIxkziMRkUm5951513;     yoTQRmAzuJmGZwngdubZIxkziMRkUm5951513 = yoTQRmAzuJmGZwngdubZIxkziMRkUm70604578;     yoTQRmAzuJmGZwngdubZIxkziMRkUm70604578 = yoTQRmAzuJmGZwngdubZIxkziMRkUm53452760;     yoTQRmAzuJmGZwngdubZIxkziMRkUm53452760 = yoTQRmAzuJmGZwngdubZIxkziMRkUm47183983;     yoTQRmAzuJmGZwngdubZIxkziMRkUm47183983 = yoTQRmAzuJmGZwngdubZIxkziMRkUm27630959;     yoTQRmAzuJmGZwngdubZIxkziMRkUm27630959 = yoTQRmAzuJmGZwngdubZIxkziMRkUm71057105;     yoTQRmAzuJmGZwngdubZIxkziMRkUm71057105 = yoTQRmAzuJmGZwngdubZIxkziMRkUm37019220;     yoTQRmAzuJmGZwngdubZIxkziMRkUm37019220 = yoTQRmAzuJmGZwngdubZIxkziMRkUm28889377;     yoTQRmAzuJmGZwngdubZIxkziMRkUm28889377 = yoTQRmAzuJmGZwngdubZIxkziMRkUm71224969;     yoTQRmAzuJmGZwngdubZIxkziMRkUm71224969 = yoTQRmAzuJmGZwngdubZIxkziMRkUm29940268;     yoTQRmAzuJmGZwngdubZIxkziMRkUm29940268 = yoTQRmAzuJmGZwngdubZIxkziMRkUm38916282;     yoTQRmAzuJmGZwngdubZIxkziMRkUm38916282 = yoTQRmAzuJmGZwngdubZIxkziMRkUm37212385;     yoTQRmAzuJmGZwngdubZIxkziMRkUm37212385 = yoTQRmAzuJmGZwngdubZIxkziMRkUm40252069;     yoTQRmAzuJmGZwngdubZIxkziMRkUm40252069 = yoTQRmAzuJmGZwngdubZIxkziMRkUm8792026;     yoTQRmAzuJmGZwngdubZIxkziMRkUm8792026 = yoTQRmAzuJmGZwngdubZIxkziMRkUm3182315;     yoTQRmAzuJmGZwngdubZIxkziMRkUm3182315 = yoTQRmAzuJmGZwngdubZIxkziMRkUm34876244;     yoTQRmAzuJmGZwngdubZIxkziMRkUm34876244 = yoTQRmAzuJmGZwngdubZIxkziMRkUm8251296;     yoTQRmAzuJmGZwngdubZIxkziMRkUm8251296 = yoTQRmAzuJmGZwngdubZIxkziMRkUm45918158;     yoTQRmAzuJmGZwngdubZIxkziMRkUm45918158 = yoTQRmAzuJmGZwngdubZIxkziMRkUm92462352;     yoTQRmAzuJmGZwngdubZIxkziMRkUm92462352 = yoTQRmAzuJmGZwngdubZIxkziMRkUm78610270;     yoTQRmAzuJmGZwngdubZIxkziMRkUm78610270 = yoTQRmAzuJmGZwngdubZIxkziMRkUm73773925;     yoTQRmAzuJmGZwngdubZIxkziMRkUm73773925 = yoTQRmAzuJmGZwngdubZIxkziMRkUm70614375;     yoTQRmAzuJmGZwngdubZIxkziMRkUm70614375 = yoTQRmAzuJmGZwngdubZIxkziMRkUm68447387;     yoTQRmAzuJmGZwngdubZIxkziMRkUm68447387 = yoTQRmAzuJmGZwngdubZIxkziMRkUm39403359;     yoTQRmAzuJmGZwngdubZIxkziMRkUm39403359 = yoTQRmAzuJmGZwngdubZIxkziMRkUm14038021;     yoTQRmAzuJmGZwngdubZIxkziMRkUm14038021 = yoTQRmAzuJmGZwngdubZIxkziMRkUm98479898;     yoTQRmAzuJmGZwngdubZIxkziMRkUm98479898 = yoTQRmAzuJmGZwngdubZIxkziMRkUm99542134;     yoTQRmAzuJmGZwngdubZIxkziMRkUm99542134 = yoTQRmAzuJmGZwngdubZIxkziMRkUm57275986;     yoTQRmAzuJmGZwngdubZIxkziMRkUm57275986 = yoTQRmAzuJmGZwngdubZIxkziMRkUm91072542;     yoTQRmAzuJmGZwngdubZIxkziMRkUm91072542 = yoTQRmAzuJmGZwngdubZIxkziMRkUm8311119;     yoTQRmAzuJmGZwngdubZIxkziMRkUm8311119 = yoTQRmAzuJmGZwngdubZIxkziMRkUm92173816;     yoTQRmAzuJmGZwngdubZIxkziMRkUm92173816 = yoTQRmAzuJmGZwngdubZIxkziMRkUm86683030;     yoTQRmAzuJmGZwngdubZIxkziMRkUm86683030 = yoTQRmAzuJmGZwngdubZIxkziMRkUm72941308;     yoTQRmAzuJmGZwngdubZIxkziMRkUm72941308 = yoTQRmAzuJmGZwngdubZIxkziMRkUm78115530;     yoTQRmAzuJmGZwngdubZIxkziMRkUm78115530 = yoTQRmAzuJmGZwngdubZIxkziMRkUm43889296;     yoTQRmAzuJmGZwngdubZIxkziMRkUm43889296 = yoTQRmAzuJmGZwngdubZIxkziMRkUm45277993;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void zYRyAdOXwgrVqPAoKSCeGxmHo55765633() {     double MYdsNVLukYZwwbFdEQfgTYBkcjUDKS96442075 = -980331859;    double MYdsNVLukYZwwbFdEQfgTYBkcjUDKS36009465 = -862296672;    double MYdsNVLukYZwwbFdEQfgTYBkcjUDKS65538019 = -636357001;    double MYdsNVLukYZwwbFdEQfgTYBkcjUDKS39296432 = -987468004;    double MYdsNVLukYZwwbFdEQfgTYBkcjUDKS26097189 = -324590955;    double MYdsNVLukYZwwbFdEQfgTYBkcjUDKS32925969 = -403599921;    double MYdsNVLukYZwwbFdEQfgTYBkcjUDKS72556830 = -877682109;    double MYdsNVLukYZwwbFdEQfgTYBkcjUDKS51052335 = -570406900;    double MYdsNVLukYZwwbFdEQfgTYBkcjUDKS8649368 = -44316293;    double MYdsNVLukYZwwbFdEQfgTYBkcjUDKS80213920 = -716174740;    double MYdsNVLukYZwwbFdEQfgTYBkcjUDKS78154404 = -553334290;    double MYdsNVLukYZwwbFdEQfgTYBkcjUDKS4989937 = -593782016;    double MYdsNVLukYZwwbFdEQfgTYBkcjUDKS70400977 = -208697645;    double MYdsNVLukYZwwbFdEQfgTYBkcjUDKS28761093 = -192621580;    double MYdsNVLukYZwwbFdEQfgTYBkcjUDKS17628644 = -822012638;    double MYdsNVLukYZwwbFdEQfgTYBkcjUDKS439495 = 73696209;    double MYdsNVLukYZwwbFdEQfgTYBkcjUDKS53070154 = -331066928;    double MYdsNVLukYZwwbFdEQfgTYBkcjUDKS12597062 = -413036803;    double MYdsNVLukYZwwbFdEQfgTYBkcjUDKS38315533 = -698605456;    double MYdsNVLukYZwwbFdEQfgTYBkcjUDKS50173232 = -695275420;    double MYdsNVLukYZwwbFdEQfgTYBkcjUDKS83075941 = -145157426;    double MYdsNVLukYZwwbFdEQfgTYBkcjUDKS96005036 = -125728634;    double MYdsNVLukYZwwbFdEQfgTYBkcjUDKS15240952 = -292598647;    double MYdsNVLukYZwwbFdEQfgTYBkcjUDKS5711027 = -234012905;    double MYdsNVLukYZwwbFdEQfgTYBkcjUDKS97695723 = -241024472;    double MYdsNVLukYZwwbFdEQfgTYBkcjUDKS26722627 = -350442338;    double MYdsNVLukYZwwbFdEQfgTYBkcjUDKS83677649 = -655250411;    double MYdsNVLukYZwwbFdEQfgTYBkcjUDKS22906480 = -552306279;    double MYdsNVLukYZwwbFdEQfgTYBkcjUDKS4462234 = -326605658;    double MYdsNVLukYZwwbFdEQfgTYBkcjUDKS53436605 = -77819528;    double MYdsNVLukYZwwbFdEQfgTYBkcjUDKS70296229 = -369821530;    double MYdsNVLukYZwwbFdEQfgTYBkcjUDKS82318901 = -132431591;    double MYdsNVLukYZwwbFdEQfgTYBkcjUDKS77284896 = -314084567;    double MYdsNVLukYZwwbFdEQfgTYBkcjUDKS39390728 = -275041653;    double MYdsNVLukYZwwbFdEQfgTYBkcjUDKS29781471 = -269438771;    double MYdsNVLukYZwwbFdEQfgTYBkcjUDKS84699690 = -222570508;    double MYdsNVLukYZwwbFdEQfgTYBkcjUDKS50607895 = -795607701;    double MYdsNVLukYZwwbFdEQfgTYBkcjUDKS81664995 = -35311205;    double MYdsNVLukYZwwbFdEQfgTYBkcjUDKS35636097 = -649881122;    double MYdsNVLukYZwwbFdEQfgTYBkcjUDKS13173093 = -190454245;    double MYdsNVLukYZwwbFdEQfgTYBkcjUDKS7994498 = -217947874;    double MYdsNVLukYZwwbFdEQfgTYBkcjUDKS36188546 = -130245140;    double MYdsNVLukYZwwbFdEQfgTYBkcjUDKS36173972 = -325199630;    double MYdsNVLukYZwwbFdEQfgTYBkcjUDKS31401347 = -550113868;    double MYdsNVLukYZwwbFdEQfgTYBkcjUDKS17820613 = -23876961;    double MYdsNVLukYZwwbFdEQfgTYBkcjUDKS29493053 = -702975029;    double MYdsNVLukYZwwbFdEQfgTYBkcjUDKS43528734 = -792712421;    double MYdsNVLukYZwwbFdEQfgTYBkcjUDKS32038077 = -266671266;    double MYdsNVLukYZwwbFdEQfgTYBkcjUDKS34068226 = -779110476;    double MYdsNVLukYZwwbFdEQfgTYBkcjUDKS11232422 = -270523704;    double MYdsNVLukYZwwbFdEQfgTYBkcjUDKS25623348 = 72852533;    double MYdsNVLukYZwwbFdEQfgTYBkcjUDKS88080772 = -601380317;    double MYdsNVLukYZwwbFdEQfgTYBkcjUDKS64196359 = -410821238;    double MYdsNVLukYZwwbFdEQfgTYBkcjUDKS29059072 = 31595639;    double MYdsNVLukYZwwbFdEQfgTYBkcjUDKS72689692 = -513006368;    double MYdsNVLukYZwwbFdEQfgTYBkcjUDKS437039 = -754603225;    double MYdsNVLukYZwwbFdEQfgTYBkcjUDKS20768513 = -469698026;    double MYdsNVLukYZwwbFdEQfgTYBkcjUDKS59826992 = -302344096;    double MYdsNVLukYZwwbFdEQfgTYBkcjUDKS41600708 = -646443533;    double MYdsNVLukYZwwbFdEQfgTYBkcjUDKS99374562 = -974148617;    double MYdsNVLukYZwwbFdEQfgTYBkcjUDKS49248319 = -748349510;    double MYdsNVLukYZwwbFdEQfgTYBkcjUDKS49650351 = -225375830;    double MYdsNVLukYZwwbFdEQfgTYBkcjUDKS46590102 = -143801242;    double MYdsNVLukYZwwbFdEQfgTYBkcjUDKS55212762 = -966496765;    double MYdsNVLukYZwwbFdEQfgTYBkcjUDKS9917691 = -246353211;    double MYdsNVLukYZwwbFdEQfgTYBkcjUDKS95835503 = -320902699;    double MYdsNVLukYZwwbFdEQfgTYBkcjUDKS27705041 = -179697449;    double MYdsNVLukYZwwbFdEQfgTYBkcjUDKS31010250 = -933655992;    double MYdsNVLukYZwwbFdEQfgTYBkcjUDKS98979622 = -923182809;    double MYdsNVLukYZwwbFdEQfgTYBkcjUDKS32928953 = -499442131;    double MYdsNVLukYZwwbFdEQfgTYBkcjUDKS49831600 = -130696090;    double MYdsNVLukYZwwbFdEQfgTYBkcjUDKS71405158 = -195755723;    double MYdsNVLukYZwwbFdEQfgTYBkcjUDKS76960964 = -763155681;    double MYdsNVLukYZwwbFdEQfgTYBkcjUDKS25142441 = -408151211;    double MYdsNVLukYZwwbFdEQfgTYBkcjUDKS42178735 = -377327547;    double MYdsNVLukYZwwbFdEQfgTYBkcjUDKS46887396 = 85087714;    double MYdsNVLukYZwwbFdEQfgTYBkcjUDKS59831065 = -800529004;    double MYdsNVLukYZwwbFdEQfgTYBkcjUDKS83839605 = -742484779;    double MYdsNVLukYZwwbFdEQfgTYBkcjUDKS87890414 = -110135944;    double MYdsNVLukYZwwbFdEQfgTYBkcjUDKS68202670 = -538049443;    double MYdsNVLukYZwwbFdEQfgTYBkcjUDKS83193893 = -557729918;    double MYdsNVLukYZwwbFdEQfgTYBkcjUDKS51639573 = -288579146;    double MYdsNVLukYZwwbFdEQfgTYBkcjUDKS88838253 = -773195804;    double MYdsNVLukYZwwbFdEQfgTYBkcjUDKS93229811 = 43918045;    double MYdsNVLukYZwwbFdEQfgTYBkcjUDKS27813258 = -50672062;    double MYdsNVLukYZwwbFdEQfgTYBkcjUDKS82215456 = -768441214;    double MYdsNVLukYZwwbFdEQfgTYBkcjUDKS18122542 = -721610354;    double MYdsNVLukYZwwbFdEQfgTYBkcjUDKS48225825 = -245680207;    double MYdsNVLukYZwwbFdEQfgTYBkcjUDKS66701035 = -762035286;    double MYdsNVLukYZwwbFdEQfgTYBkcjUDKS29344432 = -514835547;    double MYdsNVLukYZwwbFdEQfgTYBkcjUDKS63931178 = -752872482;    double MYdsNVLukYZwwbFdEQfgTYBkcjUDKS90780903 = -393263605;    double MYdsNVLukYZwwbFdEQfgTYBkcjUDKS40064287 = -388867673;    double MYdsNVLukYZwwbFdEQfgTYBkcjUDKS36261535 = -675732506;    double MYdsNVLukYZwwbFdEQfgTYBkcjUDKS63924773 = -442104735;    double MYdsNVLukYZwwbFdEQfgTYBkcjUDKS58344146 = -992572044;    double MYdsNVLukYZwwbFdEQfgTYBkcjUDKS89598443 = -986443898;    double MYdsNVLukYZwwbFdEQfgTYBkcjUDKS80961209 = -358702865;    double MYdsNVLukYZwwbFdEQfgTYBkcjUDKS21483657 = -203760658;    double MYdsNVLukYZwwbFdEQfgTYBkcjUDKS21985110 = -980331859;     MYdsNVLukYZwwbFdEQfgTYBkcjUDKS96442075 = MYdsNVLukYZwwbFdEQfgTYBkcjUDKS36009465;     MYdsNVLukYZwwbFdEQfgTYBkcjUDKS36009465 = MYdsNVLukYZwwbFdEQfgTYBkcjUDKS65538019;     MYdsNVLukYZwwbFdEQfgTYBkcjUDKS65538019 = MYdsNVLukYZwwbFdEQfgTYBkcjUDKS39296432;     MYdsNVLukYZwwbFdEQfgTYBkcjUDKS39296432 = MYdsNVLukYZwwbFdEQfgTYBkcjUDKS26097189;     MYdsNVLukYZwwbFdEQfgTYBkcjUDKS26097189 = MYdsNVLukYZwwbFdEQfgTYBkcjUDKS32925969;     MYdsNVLukYZwwbFdEQfgTYBkcjUDKS32925969 = MYdsNVLukYZwwbFdEQfgTYBkcjUDKS72556830;     MYdsNVLukYZwwbFdEQfgTYBkcjUDKS72556830 = MYdsNVLukYZwwbFdEQfgTYBkcjUDKS51052335;     MYdsNVLukYZwwbFdEQfgTYBkcjUDKS51052335 = MYdsNVLukYZwwbFdEQfgTYBkcjUDKS8649368;     MYdsNVLukYZwwbFdEQfgTYBkcjUDKS8649368 = MYdsNVLukYZwwbFdEQfgTYBkcjUDKS80213920;     MYdsNVLukYZwwbFdEQfgTYBkcjUDKS80213920 = MYdsNVLukYZwwbFdEQfgTYBkcjUDKS78154404;     MYdsNVLukYZwwbFdEQfgTYBkcjUDKS78154404 = MYdsNVLukYZwwbFdEQfgTYBkcjUDKS4989937;     MYdsNVLukYZwwbFdEQfgTYBkcjUDKS4989937 = MYdsNVLukYZwwbFdEQfgTYBkcjUDKS70400977;     MYdsNVLukYZwwbFdEQfgTYBkcjUDKS70400977 = MYdsNVLukYZwwbFdEQfgTYBkcjUDKS28761093;     MYdsNVLukYZwwbFdEQfgTYBkcjUDKS28761093 = MYdsNVLukYZwwbFdEQfgTYBkcjUDKS17628644;     MYdsNVLukYZwwbFdEQfgTYBkcjUDKS17628644 = MYdsNVLukYZwwbFdEQfgTYBkcjUDKS439495;     MYdsNVLukYZwwbFdEQfgTYBkcjUDKS439495 = MYdsNVLukYZwwbFdEQfgTYBkcjUDKS53070154;     MYdsNVLukYZwwbFdEQfgTYBkcjUDKS53070154 = MYdsNVLukYZwwbFdEQfgTYBkcjUDKS12597062;     MYdsNVLukYZwwbFdEQfgTYBkcjUDKS12597062 = MYdsNVLukYZwwbFdEQfgTYBkcjUDKS38315533;     MYdsNVLukYZwwbFdEQfgTYBkcjUDKS38315533 = MYdsNVLukYZwwbFdEQfgTYBkcjUDKS50173232;     MYdsNVLukYZwwbFdEQfgTYBkcjUDKS50173232 = MYdsNVLukYZwwbFdEQfgTYBkcjUDKS83075941;     MYdsNVLukYZwwbFdEQfgTYBkcjUDKS83075941 = MYdsNVLukYZwwbFdEQfgTYBkcjUDKS96005036;     MYdsNVLukYZwwbFdEQfgTYBkcjUDKS96005036 = MYdsNVLukYZwwbFdEQfgTYBkcjUDKS15240952;     MYdsNVLukYZwwbFdEQfgTYBkcjUDKS15240952 = MYdsNVLukYZwwbFdEQfgTYBkcjUDKS5711027;     MYdsNVLukYZwwbFdEQfgTYBkcjUDKS5711027 = MYdsNVLukYZwwbFdEQfgTYBkcjUDKS97695723;     MYdsNVLukYZwwbFdEQfgTYBkcjUDKS97695723 = MYdsNVLukYZwwbFdEQfgTYBkcjUDKS26722627;     MYdsNVLukYZwwbFdEQfgTYBkcjUDKS26722627 = MYdsNVLukYZwwbFdEQfgTYBkcjUDKS83677649;     MYdsNVLukYZwwbFdEQfgTYBkcjUDKS83677649 = MYdsNVLukYZwwbFdEQfgTYBkcjUDKS22906480;     MYdsNVLukYZwwbFdEQfgTYBkcjUDKS22906480 = MYdsNVLukYZwwbFdEQfgTYBkcjUDKS4462234;     MYdsNVLukYZwwbFdEQfgTYBkcjUDKS4462234 = MYdsNVLukYZwwbFdEQfgTYBkcjUDKS53436605;     MYdsNVLukYZwwbFdEQfgTYBkcjUDKS53436605 = MYdsNVLukYZwwbFdEQfgTYBkcjUDKS70296229;     MYdsNVLukYZwwbFdEQfgTYBkcjUDKS70296229 = MYdsNVLukYZwwbFdEQfgTYBkcjUDKS82318901;     MYdsNVLukYZwwbFdEQfgTYBkcjUDKS82318901 = MYdsNVLukYZwwbFdEQfgTYBkcjUDKS77284896;     MYdsNVLukYZwwbFdEQfgTYBkcjUDKS77284896 = MYdsNVLukYZwwbFdEQfgTYBkcjUDKS39390728;     MYdsNVLukYZwwbFdEQfgTYBkcjUDKS39390728 = MYdsNVLukYZwwbFdEQfgTYBkcjUDKS29781471;     MYdsNVLukYZwwbFdEQfgTYBkcjUDKS29781471 = MYdsNVLukYZwwbFdEQfgTYBkcjUDKS84699690;     MYdsNVLukYZwwbFdEQfgTYBkcjUDKS84699690 = MYdsNVLukYZwwbFdEQfgTYBkcjUDKS50607895;     MYdsNVLukYZwwbFdEQfgTYBkcjUDKS50607895 = MYdsNVLukYZwwbFdEQfgTYBkcjUDKS81664995;     MYdsNVLukYZwwbFdEQfgTYBkcjUDKS81664995 = MYdsNVLukYZwwbFdEQfgTYBkcjUDKS35636097;     MYdsNVLukYZwwbFdEQfgTYBkcjUDKS35636097 = MYdsNVLukYZwwbFdEQfgTYBkcjUDKS13173093;     MYdsNVLukYZwwbFdEQfgTYBkcjUDKS13173093 = MYdsNVLukYZwwbFdEQfgTYBkcjUDKS7994498;     MYdsNVLukYZwwbFdEQfgTYBkcjUDKS7994498 = MYdsNVLukYZwwbFdEQfgTYBkcjUDKS36188546;     MYdsNVLukYZwwbFdEQfgTYBkcjUDKS36188546 = MYdsNVLukYZwwbFdEQfgTYBkcjUDKS36173972;     MYdsNVLukYZwwbFdEQfgTYBkcjUDKS36173972 = MYdsNVLukYZwwbFdEQfgTYBkcjUDKS31401347;     MYdsNVLukYZwwbFdEQfgTYBkcjUDKS31401347 = MYdsNVLukYZwwbFdEQfgTYBkcjUDKS17820613;     MYdsNVLukYZwwbFdEQfgTYBkcjUDKS17820613 = MYdsNVLukYZwwbFdEQfgTYBkcjUDKS29493053;     MYdsNVLukYZwwbFdEQfgTYBkcjUDKS29493053 = MYdsNVLukYZwwbFdEQfgTYBkcjUDKS43528734;     MYdsNVLukYZwwbFdEQfgTYBkcjUDKS43528734 = MYdsNVLukYZwwbFdEQfgTYBkcjUDKS32038077;     MYdsNVLukYZwwbFdEQfgTYBkcjUDKS32038077 = MYdsNVLukYZwwbFdEQfgTYBkcjUDKS34068226;     MYdsNVLukYZwwbFdEQfgTYBkcjUDKS34068226 = MYdsNVLukYZwwbFdEQfgTYBkcjUDKS11232422;     MYdsNVLukYZwwbFdEQfgTYBkcjUDKS11232422 = MYdsNVLukYZwwbFdEQfgTYBkcjUDKS25623348;     MYdsNVLukYZwwbFdEQfgTYBkcjUDKS25623348 = MYdsNVLukYZwwbFdEQfgTYBkcjUDKS88080772;     MYdsNVLukYZwwbFdEQfgTYBkcjUDKS88080772 = MYdsNVLukYZwwbFdEQfgTYBkcjUDKS64196359;     MYdsNVLukYZwwbFdEQfgTYBkcjUDKS64196359 = MYdsNVLukYZwwbFdEQfgTYBkcjUDKS29059072;     MYdsNVLukYZwwbFdEQfgTYBkcjUDKS29059072 = MYdsNVLukYZwwbFdEQfgTYBkcjUDKS72689692;     MYdsNVLukYZwwbFdEQfgTYBkcjUDKS72689692 = MYdsNVLukYZwwbFdEQfgTYBkcjUDKS437039;     MYdsNVLukYZwwbFdEQfgTYBkcjUDKS437039 = MYdsNVLukYZwwbFdEQfgTYBkcjUDKS20768513;     MYdsNVLukYZwwbFdEQfgTYBkcjUDKS20768513 = MYdsNVLukYZwwbFdEQfgTYBkcjUDKS59826992;     MYdsNVLukYZwwbFdEQfgTYBkcjUDKS59826992 = MYdsNVLukYZwwbFdEQfgTYBkcjUDKS41600708;     MYdsNVLukYZwwbFdEQfgTYBkcjUDKS41600708 = MYdsNVLukYZwwbFdEQfgTYBkcjUDKS99374562;     MYdsNVLukYZwwbFdEQfgTYBkcjUDKS99374562 = MYdsNVLukYZwwbFdEQfgTYBkcjUDKS49248319;     MYdsNVLukYZwwbFdEQfgTYBkcjUDKS49248319 = MYdsNVLukYZwwbFdEQfgTYBkcjUDKS49650351;     MYdsNVLukYZwwbFdEQfgTYBkcjUDKS49650351 = MYdsNVLukYZwwbFdEQfgTYBkcjUDKS46590102;     MYdsNVLukYZwwbFdEQfgTYBkcjUDKS46590102 = MYdsNVLukYZwwbFdEQfgTYBkcjUDKS55212762;     MYdsNVLukYZwwbFdEQfgTYBkcjUDKS55212762 = MYdsNVLukYZwwbFdEQfgTYBkcjUDKS9917691;     MYdsNVLukYZwwbFdEQfgTYBkcjUDKS9917691 = MYdsNVLukYZwwbFdEQfgTYBkcjUDKS95835503;     MYdsNVLukYZwwbFdEQfgTYBkcjUDKS95835503 = MYdsNVLukYZwwbFdEQfgTYBkcjUDKS27705041;     MYdsNVLukYZwwbFdEQfgTYBkcjUDKS27705041 = MYdsNVLukYZwwbFdEQfgTYBkcjUDKS31010250;     MYdsNVLukYZwwbFdEQfgTYBkcjUDKS31010250 = MYdsNVLukYZwwbFdEQfgTYBkcjUDKS98979622;     MYdsNVLukYZwwbFdEQfgTYBkcjUDKS98979622 = MYdsNVLukYZwwbFdEQfgTYBkcjUDKS32928953;     MYdsNVLukYZwwbFdEQfgTYBkcjUDKS32928953 = MYdsNVLukYZwwbFdEQfgTYBkcjUDKS49831600;     MYdsNVLukYZwwbFdEQfgTYBkcjUDKS49831600 = MYdsNVLukYZwwbFdEQfgTYBkcjUDKS71405158;     MYdsNVLukYZwwbFdEQfgTYBkcjUDKS71405158 = MYdsNVLukYZwwbFdEQfgTYBkcjUDKS76960964;     MYdsNVLukYZwwbFdEQfgTYBkcjUDKS76960964 = MYdsNVLukYZwwbFdEQfgTYBkcjUDKS25142441;     MYdsNVLukYZwwbFdEQfgTYBkcjUDKS25142441 = MYdsNVLukYZwwbFdEQfgTYBkcjUDKS42178735;     MYdsNVLukYZwwbFdEQfgTYBkcjUDKS42178735 = MYdsNVLukYZwwbFdEQfgTYBkcjUDKS46887396;     MYdsNVLukYZwwbFdEQfgTYBkcjUDKS46887396 = MYdsNVLukYZwwbFdEQfgTYBkcjUDKS59831065;     MYdsNVLukYZwwbFdEQfgTYBkcjUDKS59831065 = MYdsNVLukYZwwbFdEQfgTYBkcjUDKS83839605;     MYdsNVLukYZwwbFdEQfgTYBkcjUDKS83839605 = MYdsNVLukYZwwbFdEQfgTYBkcjUDKS87890414;     MYdsNVLukYZwwbFdEQfgTYBkcjUDKS87890414 = MYdsNVLukYZwwbFdEQfgTYBkcjUDKS68202670;     MYdsNVLukYZwwbFdEQfgTYBkcjUDKS68202670 = MYdsNVLukYZwwbFdEQfgTYBkcjUDKS83193893;     MYdsNVLukYZwwbFdEQfgTYBkcjUDKS83193893 = MYdsNVLukYZwwbFdEQfgTYBkcjUDKS51639573;     MYdsNVLukYZwwbFdEQfgTYBkcjUDKS51639573 = MYdsNVLukYZwwbFdEQfgTYBkcjUDKS88838253;     MYdsNVLukYZwwbFdEQfgTYBkcjUDKS88838253 = MYdsNVLukYZwwbFdEQfgTYBkcjUDKS93229811;     MYdsNVLukYZwwbFdEQfgTYBkcjUDKS93229811 = MYdsNVLukYZwwbFdEQfgTYBkcjUDKS27813258;     MYdsNVLukYZwwbFdEQfgTYBkcjUDKS27813258 = MYdsNVLukYZwwbFdEQfgTYBkcjUDKS82215456;     MYdsNVLukYZwwbFdEQfgTYBkcjUDKS82215456 = MYdsNVLukYZwwbFdEQfgTYBkcjUDKS18122542;     MYdsNVLukYZwwbFdEQfgTYBkcjUDKS18122542 = MYdsNVLukYZwwbFdEQfgTYBkcjUDKS48225825;     MYdsNVLukYZwwbFdEQfgTYBkcjUDKS48225825 = MYdsNVLukYZwwbFdEQfgTYBkcjUDKS66701035;     MYdsNVLukYZwwbFdEQfgTYBkcjUDKS66701035 = MYdsNVLukYZwwbFdEQfgTYBkcjUDKS29344432;     MYdsNVLukYZwwbFdEQfgTYBkcjUDKS29344432 = MYdsNVLukYZwwbFdEQfgTYBkcjUDKS63931178;     MYdsNVLukYZwwbFdEQfgTYBkcjUDKS63931178 = MYdsNVLukYZwwbFdEQfgTYBkcjUDKS90780903;     MYdsNVLukYZwwbFdEQfgTYBkcjUDKS90780903 = MYdsNVLukYZwwbFdEQfgTYBkcjUDKS40064287;     MYdsNVLukYZwwbFdEQfgTYBkcjUDKS40064287 = MYdsNVLukYZwwbFdEQfgTYBkcjUDKS36261535;     MYdsNVLukYZwwbFdEQfgTYBkcjUDKS36261535 = MYdsNVLukYZwwbFdEQfgTYBkcjUDKS63924773;     MYdsNVLukYZwwbFdEQfgTYBkcjUDKS63924773 = MYdsNVLukYZwwbFdEQfgTYBkcjUDKS58344146;     MYdsNVLukYZwwbFdEQfgTYBkcjUDKS58344146 = MYdsNVLukYZwwbFdEQfgTYBkcjUDKS89598443;     MYdsNVLukYZwwbFdEQfgTYBkcjUDKS89598443 = MYdsNVLukYZwwbFdEQfgTYBkcjUDKS80961209;     MYdsNVLukYZwwbFdEQfgTYBkcjUDKS80961209 = MYdsNVLukYZwwbFdEQfgTYBkcjUDKS21483657;     MYdsNVLukYZwwbFdEQfgTYBkcjUDKS21483657 = MYdsNVLukYZwwbFdEQfgTYBkcjUDKS21985110;     MYdsNVLukYZwwbFdEQfgTYBkcjUDKS21985110 = MYdsNVLukYZwwbFdEQfgTYBkcjUDKS96442075;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void sINVTlIXtrQbheeMHYZShAoPT65370359() {     double ExagPMQLVgKbqCnERyBQCderIXeGIx18264297 = -448547191;    double ExagPMQLVgKbqCnERyBQCderIXeGIx97477268 = -144895525;    double ExagPMQLVgKbqCnERyBQCderIXeGIx11265289 = -683574533;    double ExagPMQLVgKbqCnERyBQCderIXeGIx70671577 = -92252180;    double ExagPMQLVgKbqCnERyBQCderIXeGIx86231520 = -201841876;    double ExagPMQLVgKbqCnERyBQCderIXeGIx56944284 = -415143079;    double ExagPMQLVgKbqCnERyBQCderIXeGIx1577416 = -941000232;    double ExagPMQLVgKbqCnERyBQCderIXeGIx37914964 = -578587748;    double ExagPMQLVgKbqCnERyBQCderIXeGIx5173007 = -30111711;    double ExagPMQLVgKbqCnERyBQCderIXeGIx41497146 = -586393138;    double ExagPMQLVgKbqCnERyBQCderIXeGIx49070673 = -109091992;    double ExagPMQLVgKbqCnERyBQCderIXeGIx21171820 = -696963622;    double ExagPMQLVgKbqCnERyBQCderIXeGIx3389920 = -746731434;    double ExagPMQLVgKbqCnERyBQCderIXeGIx95727560 = 57301623;    double ExagPMQLVgKbqCnERyBQCderIXeGIx12886439 = -748854557;    double ExagPMQLVgKbqCnERyBQCderIXeGIx48410221 = -368670332;    double ExagPMQLVgKbqCnERyBQCderIXeGIx46519213 = -716891646;    double ExagPMQLVgKbqCnERyBQCderIXeGIx75122364 = -334757721;    double ExagPMQLVgKbqCnERyBQCderIXeGIx42952757 = -771741113;    double ExagPMQLVgKbqCnERyBQCderIXeGIx31282874 = -86520476;    double ExagPMQLVgKbqCnERyBQCderIXeGIx40230226 = -977236129;    double ExagPMQLVgKbqCnERyBQCderIXeGIx60407015 = -196479799;    double ExagPMQLVgKbqCnERyBQCderIXeGIx24712357 = -948626002;    double ExagPMQLVgKbqCnERyBQCderIXeGIx42988649 = -644111770;    double ExagPMQLVgKbqCnERyBQCderIXeGIx71626390 = -151921444;    double ExagPMQLVgKbqCnERyBQCderIXeGIx16298481 = -677627866;    double ExagPMQLVgKbqCnERyBQCderIXeGIx56714253 = -182054456;    double ExagPMQLVgKbqCnERyBQCderIXeGIx58486305 = -416754512;    double ExagPMQLVgKbqCnERyBQCderIXeGIx52359146 = 6448424;    double ExagPMQLVgKbqCnERyBQCderIXeGIx99253682 = -454033723;    double ExagPMQLVgKbqCnERyBQCderIXeGIx21461495 = -775549278;    double ExagPMQLVgKbqCnERyBQCderIXeGIx1210227 = 91679578;    double ExagPMQLVgKbqCnERyBQCderIXeGIx2604362 = -56688450;    double ExagPMQLVgKbqCnERyBQCderIXeGIx11929845 = 49138719;    double ExagPMQLVgKbqCnERyBQCderIXeGIx10615684 = -419257373;    double ExagPMQLVgKbqCnERyBQCderIXeGIx54276650 = -236986487;    double ExagPMQLVgKbqCnERyBQCderIXeGIx93690151 = -845224798;    double ExagPMQLVgKbqCnERyBQCderIXeGIx85602857 = -616853963;    double ExagPMQLVgKbqCnERyBQCderIXeGIx96016543 = -422286403;    double ExagPMQLVgKbqCnERyBQCderIXeGIx25843738 = -648003246;    double ExagPMQLVgKbqCnERyBQCderIXeGIx62370343 = -652087132;    double ExagPMQLVgKbqCnERyBQCderIXeGIx52690717 = -917711218;    double ExagPMQLVgKbqCnERyBQCderIXeGIx83541370 = -369166445;    double ExagPMQLVgKbqCnERyBQCderIXeGIx79496206 = -458920038;    double ExagPMQLVgKbqCnERyBQCderIXeGIx97736423 = -210565590;    double ExagPMQLVgKbqCnERyBQCderIXeGIx68699532 = -406407259;    double ExagPMQLVgKbqCnERyBQCderIXeGIx69196845 = -973719941;    double ExagPMQLVgKbqCnERyBQCderIXeGIx13877829 = -5167254;    double ExagPMQLVgKbqCnERyBQCderIXeGIx41132318 = -964226898;    double ExagPMQLVgKbqCnERyBQCderIXeGIx27279899 = -249578888;    double ExagPMQLVgKbqCnERyBQCderIXeGIx14085167 = 28963208;    double ExagPMQLVgKbqCnERyBQCderIXeGIx84469436 = -926758398;    double ExagPMQLVgKbqCnERyBQCderIXeGIx55419223 = -374416377;    double ExagPMQLVgKbqCnERyBQCderIXeGIx57084194 = -159413420;    double ExagPMQLVgKbqCnERyBQCderIXeGIx25140134 = -474128117;    double ExagPMQLVgKbqCnERyBQCderIXeGIx57857282 = -152067392;    double ExagPMQLVgKbqCnERyBQCderIXeGIx72764912 = -196269523;    double ExagPMQLVgKbqCnERyBQCderIXeGIx68276640 = 60537237;    double ExagPMQLVgKbqCnERyBQCderIXeGIx99045187 = -940330736;    double ExagPMQLVgKbqCnERyBQCderIXeGIx69933039 = -524214011;    double ExagPMQLVgKbqCnERyBQCderIXeGIx230031 = -133088624;    double ExagPMQLVgKbqCnERyBQCderIXeGIx43091110 = -424245721;    double ExagPMQLVgKbqCnERyBQCderIXeGIx85555818 = -485036173;    double ExagPMQLVgKbqCnERyBQCderIXeGIx5919324 = -576077989;    double ExagPMQLVgKbqCnERyBQCderIXeGIx20035651 = -810843861;    double ExagPMQLVgKbqCnERyBQCderIXeGIx47860446 = -100771571;    double ExagPMQLVgKbqCnERyBQCderIXeGIx18567459 = -540275173;    double ExagPMQLVgKbqCnERyBQCderIXeGIx91460074 = -695870154;    double ExagPMQLVgKbqCnERyBQCderIXeGIx85111877 = -523441005;    double ExagPMQLVgKbqCnERyBQCderIXeGIx58609789 = -411868070;    double ExagPMQLVgKbqCnERyBQCderIXeGIx54720069 = -523445534;    double ExagPMQLVgKbqCnERyBQCderIXeGIx60916356 = -37683;    double ExagPMQLVgKbqCnERyBQCderIXeGIx79105821 = -912471318;    double ExagPMQLVgKbqCnERyBQCderIXeGIx17109019 = -23737867;    double ExagPMQLVgKbqCnERyBQCderIXeGIx68912531 = -434433345;    double ExagPMQLVgKbqCnERyBQCderIXeGIx87539509 = 40475089;    double ExagPMQLVgKbqCnERyBQCderIXeGIx76865644 = -827313354;    double ExagPMQLVgKbqCnERyBQCderIXeGIx45216151 = -389705965;    double ExagPMQLVgKbqCnERyBQCderIXeGIx45252225 = -333546181;    double ExagPMQLVgKbqCnERyBQCderIXeGIx2926858 = -745514185;    double ExagPMQLVgKbqCnERyBQCderIXeGIx47101635 = -703907925;    double ExagPMQLVgKbqCnERyBQCderIXeGIx42836425 = -76887202;    double ExagPMQLVgKbqCnERyBQCderIXeGIx17353987 = -452527614;    double ExagPMQLVgKbqCnERyBQCderIXeGIx25079248 = -743972688;    double ExagPMQLVgKbqCnERyBQCderIXeGIx85168516 = -382996931;    double ExagPMQLVgKbqCnERyBQCderIXeGIx36992058 = -848790880;    double ExagPMQLVgKbqCnERyBQCderIXeGIx45791003 = -533904045;    double ExagPMQLVgKbqCnERyBQCderIXeGIx45520168 = -897275030;    double ExagPMQLVgKbqCnERyBQCderIXeGIx86789711 = -476733164;    double ExagPMQLVgKbqCnERyBQCderIXeGIx52758402 = -167189982;    double ExagPMQLVgKbqCnERyBQCderIXeGIx81511738 = 59283036;    double ExagPMQLVgKbqCnERyBQCderIXeGIx25413512 = -805762036;    double ExagPMQLVgKbqCnERyBQCderIXeGIx86557670 = -676523227;    double ExagPMQLVgKbqCnERyBQCderIXeGIx26083504 = -898072393;    double ExagPMQLVgKbqCnERyBQCderIXeGIx25613708 = -414914623;    double ExagPMQLVgKbqCnERyBQCderIXeGIx19279233 = -127841411;    double ExagPMQLVgKbqCnERyBQCderIXeGIx67134898 = -332675046;    double ExagPMQLVgKbqCnERyBQCderIXeGIx77622046 = -793088457;    double ExagPMQLVgKbqCnERyBQCderIXeGIx59460555 = -648076177;    double ExagPMQLVgKbqCnERyBQCderIXeGIx49875978 = -448547191;     ExagPMQLVgKbqCnERyBQCderIXeGIx18264297 = ExagPMQLVgKbqCnERyBQCderIXeGIx97477268;     ExagPMQLVgKbqCnERyBQCderIXeGIx97477268 = ExagPMQLVgKbqCnERyBQCderIXeGIx11265289;     ExagPMQLVgKbqCnERyBQCderIXeGIx11265289 = ExagPMQLVgKbqCnERyBQCderIXeGIx70671577;     ExagPMQLVgKbqCnERyBQCderIXeGIx70671577 = ExagPMQLVgKbqCnERyBQCderIXeGIx86231520;     ExagPMQLVgKbqCnERyBQCderIXeGIx86231520 = ExagPMQLVgKbqCnERyBQCderIXeGIx56944284;     ExagPMQLVgKbqCnERyBQCderIXeGIx56944284 = ExagPMQLVgKbqCnERyBQCderIXeGIx1577416;     ExagPMQLVgKbqCnERyBQCderIXeGIx1577416 = ExagPMQLVgKbqCnERyBQCderIXeGIx37914964;     ExagPMQLVgKbqCnERyBQCderIXeGIx37914964 = ExagPMQLVgKbqCnERyBQCderIXeGIx5173007;     ExagPMQLVgKbqCnERyBQCderIXeGIx5173007 = ExagPMQLVgKbqCnERyBQCderIXeGIx41497146;     ExagPMQLVgKbqCnERyBQCderIXeGIx41497146 = ExagPMQLVgKbqCnERyBQCderIXeGIx49070673;     ExagPMQLVgKbqCnERyBQCderIXeGIx49070673 = ExagPMQLVgKbqCnERyBQCderIXeGIx21171820;     ExagPMQLVgKbqCnERyBQCderIXeGIx21171820 = ExagPMQLVgKbqCnERyBQCderIXeGIx3389920;     ExagPMQLVgKbqCnERyBQCderIXeGIx3389920 = ExagPMQLVgKbqCnERyBQCderIXeGIx95727560;     ExagPMQLVgKbqCnERyBQCderIXeGIx95727560 = ExagPMQLVgKbqCnERyBQCderIXeGIx12886439;     ExagPMQLVgKbqCnERyBQCderIXeGIx12886439 = ExagPMQLVgKbqCnERyBQCderIXeGIx48410221;     ExagPMQLVgKbqCnERyBQCderIXeGIx48410221 = ExagPMQLVgKbqCnERyBQCderIXeGIx46519213;     ExagPMQLVgKbqCnERyBQCderIXeGIx46519213 = ExagPMQLVgKbqCnERyBQCderIXeGIx75122364;     ExagPMQLVgKbqCnERyBQCderIXeGIx75122364 = ExagPMQLVgKbqCnERyBQCderIXeGIx42952757;     ExagPMQLVgKbqCnERyBQCderIXeGIx42952757 = ExagPMQLVgKbqCnERyBQCderIXeGIx31282874;     ExagPMQLVgKbqCnERyBQCderIXeGIx31282874 = ExagPMQLVgKbqCnERyBQCderIXeGIx40230226;     ExagPMQLVgKbqCnERyBQCderIXeGIx40230226 = ExagPMQLVgKbqCnERyBQCderIXeGIx60407015;     ExagPMQLVgKbqCnERyBQCderIXeGIx60407015 = ExagPMQLVgKbqCnERyBQCderIXeGIx24712357;     ExagPMQLVgKbqCnERyBQCderIXeGIx24712357 = ExagPMQLVgKbqCnERyBQCderIXeGIx42988649;     ExagPMQLVgKbqCnERyBQCderIXeGIx42988649 = ExagPMQLVgKbqCnERyBQCderIXeGIx71626390;     ExagPMQLVgKbqCnERyBQCderIXeGIx71626390 = ExagPMQLVgKbqCnERyBQCderIXeGIx16298481;     ExagPMQLVgKbqCnERyBQCderIXeGIx16298481 = ExagPMQLVgKbqCnERyBQCderIXeGIx56714253;     ExagPMQLVgKbqCnERyBQCderIXeGIx56714253 = ExagPMQLVgKbqCnERyBQCderIXeGIx58486305;     ExagPMQLVgKbqCnERyBQCderIXeGIx58486305 = ExagPMQLVgKbqCnERyBQCderIXeGIx52359146;     ExagPMQLVgKbqCnERyBQCderIXeGIx52359146 = ExagPMQLVgKbqCnERyBQCderIXeGIx99253682;     ExagPMQLVgKbqCnERyBQCderIXeGIx99253682 = ExagPMQLVgKbqCnERyBQCderIXeGIx21461495;     ExagPMQLVgKbqCnERyBQCderIXeGIx21461495 = ExagPMQLVgKbqCnERyBQCderIXeGIx1210227;     ExagPMQLVgKbqCnERyBQCderIXeGIx1210227 = ExagPMQLVgKbqCnERyBQCderIXeGIx2604362;     ExagPMQLVgKbqCnERyBQCderIXeGIx2604362 = ExagPMQLVgKbqCnERyBQCderIXeGIx11929845;     ExagPMQLVgKbqCnERyBQCderIXeGIx11929845 = ExagPMQLVgKbqCnERyBQCderIXeGIx10615684;     ExagPMQLVgKbqCnERyBQCderIXeGIx10615684 = ExagPMQLVgKbqCnERyBQCderIXeGIx54276650;     ExagPMQLVgKbqCnERyBQCderIXeGIx54276650 = ExagPMQLVgKbqCnERyBQCderIXeGIx93690151;     ExagPMQLVgKbqCnERyBQCderIXeGIx93690151 = ExagPMQLVgKbqCnERyBQCderIXeGIx85602857;     ExagPMQLVgKbqCnERyBQCderIXeGIx85602857 = ExagPMQLVgKbqCnERyBQCderIXeGIx96016543;     ExagPMQLVgKbqCnERyBQCderIXeGIx96016543 = ExagPMQLVgKbqCnERyBQCderIXeGIx25843738;     ExagPMQLVgKbqCnERyBQCderIXeGIx25843738 = ExagPMQLVgKbqCnERyBQCderIXeGIx62370343;     ExagPMQLVgKbqCnERyBQCderIXeGIx62370343 = ExagPMQLVgKbqCnERyBQCderIXeGIx52690717;     ExagPMQLVgKbqCnERyBQCderIXeGIx52690717 = ExagPMQLVgKbqCnERyBQCderIXeGIx83541370;     ExagPMQLVgKbqCnERyBQCderIXeGIx83541370 = ExagPMQLVgKbqCnERyBQCderIXeGIx79496206;     ExagPMQLVgKbqCnERyBQCderIXeGIx79496206 = ExagPMQLVgKbqCnERyBQCderIXeGIx97736423;     ExagPMQLVgKbqCnERyBQCderIXeGIx97736423 = ExagPMQLVgKbqCnERyBQCderIXeGIx68699532;     ExagPMQLVgKbqCnERyBQCderIXeGIx68699532 = ExagPMQLVgKbqCnERyBQCderIXeGIx69196845;     ExagPMQLVgKbqCnERyBQCderIXeGIx69196845 = ExagPMQLVgKbqCnERyBQCderIXeGIx13877829;     ExagPMQLVgKbqCnERyBQCderIXeGIx13877829 = ExagPMQLVgKbqCnERyBQCderIXeGIx41132318;     ExagPMQLVgKbqCnERyBQCderIXeGIx41132318 = ExagPMQLVgKbqCnERyBQCderIXeGIx27279899;     ExagPMQLVgKbqCnERyBQCderIXeGIx27279899 = ExagPMQLVgKbqCnERyBQCderIXeGIx14085167;     ExagPMQLVgKbqCnERyBQCderIXeGIx14085167 = ExagPMQLVgKbqCnERyBQCderIXeGIx84469436;     ExagPMQLVgKbqCnERyBQCderIXeGIx84469436 = ExagPMQLVgKbqCnERyBQCderIXeGIx55419223;     ExagPMQLVgKbqCnERyBQCderIXeGIx55419223 = ExagPMQLVgKbqCnERyBQCderIXeGIx57084194;     ExagPMQLVgKbqCnERyBQCderIXeGIx57084194 = ExagPMQLVgKbqCnERyBQCderIXeGIx25140134;     ExagPMQLVgKbqCnERyBQCderIXeGIx25140134 = ExagPMQLVgKbqCnERyBQCderIXeGIx57857282;     ExagPMQLVgKbqCnERyBQCderIXeGIx57857282 = ExagPMQLVgKbqCnERyBQCderIXeGIx72764912;     ExagPMQLVgKbqCnERyBQCderIXeGIx72764912 = ExagPMQLVgKbqCnERyBQCderIXeGIx68276640;     ExagPMQLVgKbqCnERyBQCderIXeGIx68276640 = ExagPMQLVgKbqCnERyBQCderIXeGIx99045187;     ExagPMQLVgKbqCnERyBQCderIXeGIx99045187 = ExagPMQLVgKbqCnERyBQCderIXeGIx69933039;     ExagPMQLVgKbqCnERyBQCderIXeGIx69933039 = ExagPMQLVgKbqCnERyBQCderIXeGIx230031;     ExagPMQLVgKbqCnERyBQCderIXeGIx230031 = ExagPMQLVgKbqCnERyBQCderIXeGIx43091110;     ExagPMQLVgKbqCnERyBQCderIXeGIx43091110 = ExagPMQLVgKbqCnERyBQCderIXeGIx85555818;     ExagPMQLVgKbqCnERyBQCderIXeGIx85555818 = ExagPMQLVgKbqCnERyBQCderIXeGIx5919324;     ExagPMQLVgKbqCnERyBQCderIXeGIx5919324 = ExagPMQLVgKbqCnERyBQCderIXeGIx20035651;     ExagPMQLVgKbqCnERyBQCderIXeGIx20035651 = ExagPMQLVgKbqCnERyBQCderIXeGIx47860446;     ExagPMQLVgKbqCnERyBQCderIXeGIx47860446 = ExagPMQLVgKbqCnERyBQCderIXeGIx18567459;     ExagPMQLVgKbqCnERyBQCderIXeGIx18567459 = ExagPMQLVgKbqCnERyBQCderIXeGIx91460074;     ExagPMQLVgKbqCnERyBQCderIXeGIx91460074 = ExagPMQLVgKbqCnERyBQCderIXeGIx85111877;     ExagPMQLVgKbqCnERyBQCderIXeGIx85111877 = ExagPMQLVgKbqCnERyBQCderIXeGIx58609789;     ExagPMQLVgKbqCnERyBQCderIXeGIx58609789 = ExagPMQLVgKbqCnERyBQCderIXeGIx54720069;     ExagPMQLVgKbqCnERyBQCderIXeGIx54720069 = ExagPMQLVgKbqCnERyBQCderIXeGIx60916356;     ExagPMQLVgKbqCnERyBQCderIXeGIx60916356 = ExagPMQLVgKbqCnERyBQCderIXeGIx79105821;     ExagPMQLVgKbqCnERyBQCderIXeGIx79105821 = ExagPMQLVgKbqCnERyBQCderIXeGIx17109019;     ExagPMQLVgKbqCnERyBQCderIXeGIx17109019 = ExagPMQLVgKbqCnERyBQCderIXeGIx68912531;     ExagPMQLVgKbqCnERyBQCderIXeGIx68912531 = ExagPMQLVgKbqCnERyBQCderIXeGIx87539509;     ExagPMQLVgKbqCnERyBQCderIXeGIx87539509 = ExagPMQLVgKbqCnERyBQCderIXeGIx76865644;     ExagPMQLVgKbqCnERyBQCderIXeGIx76865644 = ExagPMQLVgKbqCnERyBQCderIXeGIx45216151;     ExagPMQLVgKbqCnERyBQCderIXeGIx45216151 = ExagPMQLVgKbqCnERyBQCderIXeGIx45252225;     ExagPMQLVgKbqCnERyBQCderIXeGIx45252225 = ExagPMQLVgKbqCnERyBQCderIXeGIx2926858;     ExagPMQLVgKbqCnERyBQCderIXeGIx2926858 = ExagPMQLVgKbqCnERyBQCderIXeGIx47101635;     ExagPMQLVgKbqCnERyBQCderIXeGIx47101635 = ExagPMQLVgKbqCnERyBQCderIXeGIx42836425;     ExagPMQLVgKbqCnERyBQCderIXeGIx42836425 = ExagPMQLVgKbqCnERyBQCderIXeGIx17353987;     ExagPMQLVgKbqCnERyBQCderIXeGIx17353987 = ExagPMQLVgKbqCnERyBQCderIXeGIx25079248;     ExagPMQLVgKbqCnERyBQCderIXeGIx25079248 = ExagPMQLVgKbqCnERyBQCderIXeGIx85168516;     ExagPMQLVgKbqCnERyBQCderIXeGIx85168516 = ExagPMQLVgKbqCnERyBQCderIXeGIx36992058;     ExagPMQLVgKbqCnERyBQCderIXeGIx36992058 = ExagPMQLVgKbqCnERyBQCderIXeGIx45791003;     ExagPMQLVgKbqCnERyBQCderIXeGIx45791003 = ExagPMQLVgKbqCnERyBQCderIXeGIx45520168;     ExagPMQLVgKbqCnERyBQCderIXeGIx45520168 = ExagPMQLVgKbqCnERyBQCderIXeGIx86789711;     ExagPMQLVgKbqCnERyBQCderIXeGIx86789711 = ExagPMQLVgKbqCnERyBQCderIXeGIx52758402;     ExagPMQLVgKbqCnERyBQCderIXeGIx52758402 = ExagPMQLVgKbqCnERyBQCderIXeGIx81511738;     ExagPMQLVgKbqCnERyBQCderIXeGIx81511738 = ExagPMQLVgKbqCnERyBQCderIXeGIx25413512;     ExagPMQLVgKbqCnERyBQCderIXeGIx25413512 = ExagPMQLVgKbqCnERyBQCderIXeGIx86557670;     ExagPMQLVgKbqCnERyBQCderIXeGIx86557670 = ExagPMQLVgKbqCnERyBQCderIXeGIx26083504;     ExagPMQLVgKbqCnERyBQCderIXeGIx26083504 = ExagPMQLVgKbqCnERyBQCderIXeGIx25613708;     ExagPMQLVgKbqCnERyBQCderIXeGIx25613708 = ExagPMQLVgKbqCnERyBQCderIXeGIx19279233;     ExagPMQLVgKbqCnERyBQCderIXeGIx19279233 = ExagPMQLVgKbqCnERyBQCderIXeGIx67134898;     ExagPMQLVgKbqCnERyBQCderIXeGIx67134898 = ExagPMQLVgKbqCnERyBQCderIXeGIx77622046;     ExagPMQLVgKbqCnERyBQCderIXeGIx77622046 = ExagPMQLVgKbqCnERyBQCderIXeGIx59460555;     ExagPMQLVgKbqCnERyBQCderIXeGIx59460555 = ExagPMQLVgKbqCnERyBQCderIXeGIx49875978;     ExagPMQLVgKbqCnERyBQCderIXeGIx49875978 = ExagPMQLVgKbqCnERyBQCderIXeGIx18264297;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void GPKLSNgzIPmhdYZtEhnWgpWZL27217618() {     double LFJCaEdGiJggXfwhPtqSEOrgtxLRmT69428379 = -271137533;    double LFJCaEdGiJggXfwhPtqSEOrgtxLRmT28843872 = -698446204;    double LFJCaEdGiJggXfwhPtqSEOrgtxLRmT78336852 = -245626218;    double LFJCaEdGiJggXfwhPtqSEOrgtxLRmT47195298 = 72561203;    double LFJCaEdGiJggXfwhPtqSEOrgtxLRmT33755632 = -764041772;    double LFJCaEdGiJggXfwhPtqSEOrgtxLRmT25768270 = -424537897;    double LFJCaEdGiJggXfwhPtqSEOrgtxLRmT80766440 = -710079113;    double LFJCaEdGiJggXfwhPtqSEOrgtxLRmT37149263 = 55871177;    double LFJCaEdGiJggXfwhPtqSEOrgtxLRmT38571757 = -736205870;    double LFJCaEdGiJggXfwhPtqSEOrgtxLRmT76453424 = -892323056;    double LFJCaEdGiJggXfwhPtqSEOrgtxLRmT98058385 = -689419838;    double LFJCaEdGiJggXfwhPtqSEOrgtxLRmT6098809 = -219859798;    double LFJCaEdGiJggXfwhPtqSEOrgtxLRmT88404389 = -296886639;    double LFJCaEdGiJggXfwhPtqSEOrgtxLRmT32691214 = -236900016;    double LFJCaEdGiJggXfwhPtqSEOrgtxLRmT70596324 = -488659325;    double LFJCaEdGiJggXfwhPtqSEOrgtxLRmT38416854 = -473848936;    double LFJCaEdGiJggXfwhPtqSEOrgtxLRmT1968206 = 86854196;    double LFJCaEdGiJggXfwhPtqSEOrgtxLRmT40354706 = -664384064;    double LFJCaEdGiJggXfwhPtqSEOrgtxLRmT86310469 = -755671094;    double LFJCaEdGiJggXfwhPtqSEOrgtxLRmT25679571 = -647423678;    double LFJCaEdGiJggXfwhPtqSEOrgtxLRmT21918181 = -511102064;    double LFJCaEdGiJggXfwhPtqSEOrgtxLRmT41709494 = -445937541;    double LFJCaEdGiJggXfwhPtqSEOrgtxLRmT69118349 = -395768055;    double LFJCaEdGiJggXfwhPtqSEOrgtxLRmT90066842 = -242730252;    double LFJCaEdGiJggXfwhPtqSEOrgtxLRmT9875359 = -813607582;    double LFJCaEdGiJggXfwhPtqSEOrgtxLRmT91850831 = -814734878;    double LFJCaEdGiJggXfwhPtqSEOrgtxLRmT91711653 = -714480438;    double LFJCaEdGiJggXfwhPtqSEOrgtxLRmT21687430 = -385045965;    double LFJCaEdGiJggXfwhPtqSEOrgtxLRmT80792017 = -12209591;    double LFJCaEdGiJggXfwhPtqSEOrgtxLRmT81988534 = 52715780;    double LFJCaEdGiJggXfwhPtqSEOrgtxLRmT98967442 = -719936574;    double LFJCaEdGiJggXfwhPtqSEOrgtxLRmT60313949 = -847733851;    double LFJCaEdGiJggXfwhPtqSEOrgtxLRmT30430889 = -54274940;    double LFJCaEdGiJggXfwhPtqSEOrgtxLRmT19386825 = 60167044;    double LFJCaEdGiJggXfwhPtqSEOrgtxLRmT95783697 = -981443121;    double LFJCaEdGiJggXfwhPtqSEOrgtxLRmT6688541 = -251941665;    double LFJCaEdGiJggXfwhPtqSEOrgtxLRmT4922290 = -805902065;    double LFJCaEdGiJggXfwhPtqSEOrgtxLRmT6665911 = -309546292;    double LFJCaEdGiJggXfwhPtqSEOrgtxLRmT13177298 = -951644463;    double LFJCaEdGiJggXfwhPtqSEOrgtxLRmT15283979 = -97375570;    double LFJCaEdGiJggXfwhPtqSEOrgtxLRmT44528573 = -790151410;    double LFJCaEdGiJggXfwhPtqSEOrgtxLRmT26407558 = 70419692;    double LFJCaEdGiJggXfwhPtqSEOrgtxLRmT42225169 = -985509462;    double LFJCaEdGiJggXfwhPtqSEOrgtxLRmT80314662 = -952715679;    double LFJCaEdGiJggXfwhPtqSEOrgtxLRmT65716228 = -561867227;    double LFJCaEdGiJggXfwhPtqSEOrgtxLRmT41928145 = -163547005;    double LFJCaEdGiJggXfwhPtqSEOrgtxLRmT96431546 = -419938284;    double LFJCaEdGiJggXfwhPtqSEOrgtxLRmT5486952 = 99705696;    double LFJCaEdGiJggXfwhPtqSEOrgtxLRmT61413347 = -727343213;    double LFJCaEdGiJggXfwhPtqSEOrgtxLRmT54945312 = -632650081;    double LFJCaEdGiJggXfwhPtqSEOrgtxLRmT47617032 = -46909004;    double LFJCaEdGiJggXfwhPtqSEOrgtxLRmT53533853 = -565062505;    double LFJCaEdGiJggXfwhPtqSEOrgtxLRmT67014779 = -302267483;    double LFJCaEdGiJggXfwhPtqSEOrgtxLRmT5132283 = -221460834;    double LFJCaEdGiJggXfwhPtqSEOrgtxLRmT5299437 = -81208230;    double LFJCaEdGiJggXfwhPtqSEOrgtxLRmT27718885 = -825199993;    double LFJCaEdGiJggXfwhPtqSEOrgtxLRmT59725523 = -202678150;    double LFJCaEdGiJggXfwhPtqSEOrgtxLRmT88270010 = 97104033;    double LFJCaEdGiJggXfwhPtqSEOrgtxLRmT37319939 = -113831215;    double LFJCaEdGiJggXfwhPtqSEOrgtxLRmT41904801 = -949306895;    double LFJCaEdGiJggXfwhPtqSEOrgtxLRmT34056617 = -710057460;    double LFJCaEdGiJggXfwhPtqSEOrgtxLRmT59079010 = -225033148;    double LFJCaEdGiJggXfwhPtqSEOrgtxLRmT56357246 = -931919232;    double LFJCaEdGiJggXfwhPtqSEOrgtxLRmT56583222 = -688921651;    double LFJCaEdGiJggXfwhPtqSEOrgtxLRmT77485982 = -72386482;    double LFJCaEdGiJggXfwhPtqSEOrgtxLRmT37744437 = -841685987;    double LFJCaEdGiJggXfwhPtqSEOrgtxLRmT75667920 = -65584859;    double LFJCaEdGiJggXfwhPtqSEOrgtxLRmT69017565 = -257053683;    double LFJCaEdGiJggXfwhPtqSEOrgtxLRmT36907517 = -255456896;    double LFJCaEdGiJggXfwhPtqSEOrgtxLRmT63907783 = -136717660;    double LFJCaEdGiJggXfwhPtqSEOrgtxLRmT33494564 = -667946872;    double LFJCaEdGiJggXfwhPtqSEOrgtxLRmT95302294 = -603599512;    double LFJCaEdGiJggXfwhPtqSEOrgtxLRmT27177409 = -712739602;    double LFJCaEdGiJggXfwhPtqSEOrgtxLRmT71026490 = -558295524;    double LFJCaEdGiJggXfwhPtqSEOrgtxLRmT81150997 = -857272269;    double LFJCaEdGiJggXfwhPtqSEOrgtxLRmT95510623 = -481521757;    double LFJCaEdGiJggXfwhPtqSEOrgtxLRmT99484324 = -460428079;    double LFJCaEdGiJggXfwhPtqSEOrgtxLRmT88803686 = -443052377;    double LFJCaEdGiJggXfwhPtqSEOrgtxLRmT24350614 = -680863026;    double LFJCaEdGiJggXfwhPtqSEOrgtxLRmT67947213 = -550060577;    double LFJCaEdGiJggXfwhPtqSEOrgtxLRmT95419284 = -294796594;    double LFJCaEdGiJggXfwhPtqSEOrgtxLRmT86224701 = -714186134;    double LFJCaEdGiJggXfwhPtqSEOrgtxLRmT60274083 = -657702753;    double LFJCaEdGiJggXfwhPtqSEOrgtxLRmT25846706 = -379559511;    double LFJCaEdGiJggXfwhPtqSEOrgtxLRmT34371503 = -900375216;    double LFJCaEdGiJggXfwhPtqSEOrgtxLRmT45433589 = -54874069;    double LFJCaEdGiJggXfwhPtqSEOrgtxLRmT93299170 = -445466369;    double LFJCaEdGiJggXfwhPtqSEOrgtxLRmT25298606 = -832814106;    double LFJCaEdGiJggXfwhPtqSEOrgtxLRmT14087388 = -858624727;    double LFJCaEdGiJggXfwhPtqSEOrgtxLRmT68064812 = -56243129;    double LFJCaEdGiJggXfwhPtqSEOrgtxLRmT46963018 = 50736484;    double LFJCaEdGiJggXfwhPtqSEOrgtxLRmT16652280 = -803006099;    double LFJCaEdGiJggXfwhPtqSEOrgtxLRmT69345971 = -95715077;    double LFJCaEdGiJggXfwhPtqSEOrgtxLRmT71272496 = 97662431;    double LFJCaEdGiJggXfwhPtqSEOrgtxLRmT81227362 = -387318111;    double LFJCaEdGiJggXfwhPtqSEOrgtxLRmT85449563 = -465118262;    double LFJCaEdGiJggXfwhPtqSEOrgtxLRmT70050312 = 2338924;    double LFJCaEdGiJggXfwhPtqSEOrgtxLRmT85641947 = -196587812;    double LFJCaEdGiJggXfwhPtqSEOrgtxLRmT2828681 = -780329197;    double LFJCaEdGiJggXfwhPtqSEOrgtxLRmT27971792 = -271137533;     LFJCaEdGiJggXfwhPtqSEOrgtxLRmT69428379 = LFJCaEdGiJggXfwhPtqSEOrgtxLRmT28843872;     LFJCaEdGiJggXfwhPtqSEOrgtxLRmT28843872 = LFJCaEdGiJggXfwhPtqSEOrgtxLRmT78336852;     LFJCaEdGiJggXfwhPtqSEOrgtxLRmT78336852 = LFJCaEdGiJggXfwhPtqSEOrgtxLRmT47195298;     LFJCaEdGiJggXfwhPtqSEOrgtxLRmT47195298 = LFJCaEdGiJggXfwhPtqSEOrgtxLRmT33755632;     LFJCaEdGiJggXfwhPtqSEOrgtxLRmT33755632 = LFJCaEdGiJggXfwhPtqSEOrgtxLRmT25768270;     LFJCaEdGiJggXfwhPtqSEOrgtxLRmT25768270 = LFJCaEdGiJggXfwhPtqSEOrgtxLRmT80766440;     LFJCaEdGiJggXfwhPtqSEOrgtxLRmT80766440 = LFJCaEdGiJggXfwhPtqSEOrgtxLRmT37149263;     LFJCaEdGiJggXfwhPtqSEOrgtxLRmT37149263 = LFJCaEdGiJggXfwhPtqSEOrgtxLRmT38571757;     LFJCaEdGiJggXfwhPtqSEOrgtxLRmT38571757 = LFJCaEdGiJggXfwhPtqSEOrgtxLRmT76453424;     LFJCaEdGiJggXfwhPtqSEOrgtxLRmT76453424 = LFJCaEdGiJggXfwhPtqSEOrgtxLRmT98058385;     LFJCaEdGiJggXfwhPtqSEOrgtxLRmT98058385 = LFJCaEdGiJggXfwhPtqSEOrgtxLRmT6098809;     LFJCaEdGiJggXfwhPtqSEOrgtxLRmT6098809 = LFJCaEdGiJggXfwhPtqSEOrgtxLRmT88404389;     LFJCaEdGiJggXfwhPtqSEOrgtxLRmT88404389 = LFJCaEdGiJggXfwhPtqSEOrgtxLRmT32691214;     LFJCaEdGiJggXfwhPtqSEOrgtxLRmT32691214 = LFJCaEdGiJggXfwhPtqSEOrgtxLRmT70596324;     LFJCaEdGiJggXfwhPtqSEOrgtxLRmT70596324 = LFJCaEdGiJggXfwhPtqSEOrgtxLRmT38416854;     LFJCaEdGiJggXfwhPtqSEOrgtxLRmT38416854 = LFJCaEdGiJggXfwhPtqSEOrgtxLRmT1968206;     LFJCaEdGiJggXfwhPtqSEOrgtxLRmT1968206 = LFJCaEdGiJggXfwhPtqSEOrgtxLRmT40354706;     LFJCaEdGiJggXfwhPtqSEOrgtxLRmT40354706 = LFJCaEdGiJggXfwhPtqSEOrgtxLRmT86310469;     LFJCaEdGiJggXfwhPtqSEOrgtxLRmT86310469 = LFJCaEdGiJggXfwhPtqSEOrgtxLRmT25679571;     LFJCaEdGiJggXfwhPtqSEOrgtxLRmT25679571 = LFJCaEdGiJggXfwhPtqSEOrgtxLRmT21918181;     LFJCaEdGiJggXfwhPtqSEOrgtxLRmT21918181 = LFJCaEdGiJggXfwhPtqSEOrgtxLRmT41709494;     LFJCaEdGiJggXfwhPtqSEOrgtxLRmT41709494 = LFJCaEdGiJggXfwhPtqSEOrgtxLRmT69118349;     LFJCaEdGiJggXfwhPtqSEOrgtxLRmT69118349 = LFJCaEdGiJggXfwhPtqSEOrgtxLRmT90066842;     LFJCaEdGiJggXfwhPtqSEOrgtxLRmT90066842 = LFJCaEdGiJggXfwhPtqSEOrgtxLRmT9875359;     LFJCaEdGiJggXfwhPtqSEOrgtxLRmT9875359 = LFJCaEdGiJggXfwhPtqSEOrgtxLRmT91850831;     LFJCaEdGiJggXfwhPtqSEOrgtxLRmT91850831 = LFJCaEdGiJggXfwhPtqSEOrgtxLRmT91711653;     LFJCaEdGiJggXfwhPtqSEOrgtxLRmT91711653 = LFJCaEdGiJggXfwhPtqSEOrgtxLRmT21687430;     LFJCaEdGiJggXfwhPtqSEOrgtxLRmT21687430 = LFJCaEdGiJggXfwhPtqSEOrgtxLRmT80792017;     LFJCaEdGiJggXfwhPtqSEOrgtxLRmT80792017 = LFJCaEdGiJggXfwhPtqSEOrgtxLRmT81988534;     LFJCaEdGiJggXfwhPtqSEOrgtxLRmT81988534 = LFJCaEdGiJggXfwhPtqSEOrgtxLRmT98967442;     LFJCaEdGiJggXfwhPtqSEOrgtxLRmT98967442 = LFJCaEdGiJggXfwhPtqSEOrgtxLRmT60313949;     LFJCaEdGiJggXfwhPtqSEOrgtxLRmT60313949 = LFJCaEdGiJggXfwhPtqSEOrgtxLRmT30430889;     LFJCaEdGiJggXfwhPtqSEOrgtxLRmT30430889 = LFJCaEdGiJggXfwhPtqSEOrgtxLRmT19386825;     LFJCaEdGiJggXfwhPtqSEOrgtxLRmT19386825 = LFJCaEdGiJggXfwhPtqSEOrgtxLRmT95783697;     LFJCaEdGiJggXfwhPtqSEOrgtxLRmT95783697 = LFJCaEdGiJggXfwhPtqSEOrgtxLRmT6688541;     LFJCaEdGiJggXfwhPtqSEOrgtxLRmT6688541 = LFJCaEdGiJggXfwhPtqSEOrgtxLRmT4922290;     LFJCaEdGiJggXfwhPtqSEOrgtxLRmT4922290 = LFJCaEdGiJggXfwhPtqSEOrgtxLRmT6665911;     LFJCaEdGiJggXfwhPtqSEOrgtxLRmT6665911 = LFJCaEdGiJggXfwhPtqSEOrgtxLRmT13177298;     LFJCaEdGiJggXfwhPtqSEOrgtxLRmT13177298 = LFJCaEdGiJggXfwhPtqSEOrgtxLRmT15283979;     LFJCaEdGiJggXfwhPtqSEOrgtxLRmT15283979 = LFJCaEdGiJggXfwhPtqSEOrgtxLRmT44528573;     LFJCaEdGiJggXfwhPtqSEOrgtxLRmT44528573 = LFJCaEdGiJggXfwhPtqSEOrgtxLRmT26407558;     LFJCaEdGiJggXfwhPtqSEOrgtxLRmT26407558 = LFJCaEdGiJggXfwhPtqSEOrgtxLRmT42225169;     LFJCaEdGiJggXfwhPtqSEOrgtxLRmT42225169 = LFJCaEdGiJggXfwhPtqSEOrgtxLRmT80314662;     LFJCaEdGiJggXfwhPtqSEOrgtxLRmT80314662 = LFJCaEdGiJggXfwhPtqSEOrgtxLRmT65716228;     LFJCaEdGiJggXfwhPtqSEOrgtxLRmT65716228 = LFJCaEdGiJggXfwhPtqSEOrgtxLRmT41928145;     LFJCaEdGiJggXfwhPtqSEOrgtxLRmT41928145 = LFJCaEdGiJggXfwhPtqSEOrgtxLRmT96431546;     LFJCaEdGiJggXfwhPtqSEOrgtxLRmT96431546 = LFJCaEdGiJggXfwhPtqSEOrgtxLRmT5486952;     LFJCaEdGiJggXfwhPtqSEOrgtxLRmT5486952 = LFJCaEdGiJggXfwhPtqSEOrgtxLRmT61413347;     LFJCaEdGiJggXfwhPtqSEOrgtxLRmT61413347 = LFJCaEdGiJggXfwhPtqSEOrgtxLRmT54945312;     LFJCaEdGiJggXfwhPtqSEOrgtxLRmT54945312 = LFJCaEdGiJggXfwhPtqSEOrgtxLRmT47617032;     LFJCaEdGiJggXfwhPtqSEOrgtxLRmT47617032 = LFJCaEdGiJggXfwhPtqSEOrgtxLRmT53533853;     LFJCaEdGiJggXfwhPtqSEOrgtxLRmT53533853 = LFJCaEdGiJggXfwhPtqSEOrgtxLRmT67014779;     LFJCaEdGiJggXfwhPtqSEOrgtxLRmT67014779 = LFJCaEdGiJggXfwhPtqSEOrgtxLRmT5132283;     LFJCaEdGiJggXfwhPtqSEOrgtxLRmT5132283 = LFJCaEdGiJggXfwhPtqSEOrgtxLRmT5299437;     LFJCaEdGiJggXfwhPtqSEOrgtxLRmT5299437 = LFJCaEdGiJggXfwhPtqSEOrgtxLRmT27718885;     LFJCaEdGiJggXfwhPtqSEOrgtxLRmT27718885 = LFJCaEdGiJggXfwhPtqSEOrgtxLRmT59725523;     LFJCaEdGiJggXfwhPtqSEOrgtxLRmT59725523 = LFJCaEdGiJggXfwhPtqSEOrgtxLRmT88270010;     LFJCaEdGiJggXfwhPtqSEOrgtxLRmT88270010 = LFJCaEdGiJggXfwhPtqSEOrgtxLRmT37319939;     LFJCaEdGiJggXfwhPtqSEOrgtxLRmT37319939 = LFJCaEdGiJggXfwhPtqSEOrgtxLRmT41904801;     LFJCaEdGiJggXfwhPtqSEOrgtxLRmT41904801 = LFJCaEdGiJggXfwhPtqSEOrgtxLRmT34056617;     LFJCaEdGiJggXfwhPtqSEOrgtxLRmT34056617 = LFJCaEdGiJggXfwhPtqSEOrgtxLRmT59079010;     LFJCaEdGiJggXfwhPtqSEOrgtxLRmT59079010 = LFJCaEdGiJggXfwhPtqSEOrgtxLRmT56357246;     LFJCaEdGiJggXfwhPtqSEOrgtxLRmT56357246 = LFJCaEdGiJggXfwhPtqSEOrgtxLRmT56583222;     LFJCaEdGiJggXfwhPtqSEOrgtxLRmT56583222 = LFJCaEdGiJggXfwhPtqSEOrgtxLRmT77485982;     LFJCaEdGiJggXfwhPtqSEOrgtxLRmT77485982 = LFJCaEdGiJggXfwhPtqSEOrgtxLRmT37744437;     LFJCaEdGiJggXfwhPtqSEOrgtxLRmT37744437 = LFJCaEdGiJggXfwhPtqSEOrgtxLRmT75667920;     LFJCaEdGiJggXfwhPtqSEOrgtxLRmT75667920 = LFJCaEdGiJggXfwhPtqSEOrgtxLRmT69017565;     LFJCaEdGiJggXfwhPtqSEOrgtxLRmT69017565 = LFJCaEdGiJggXfwhPtqSEOrgtxLRmT36907517;     LFJCaEdGiJggXfwhPtqSEOrgtxLRmT36907517 = LFJCaEdGiJggXfwhPtqSEOrgtxLRmT63907783;     LFJCaEdGiJggXfwhPtqSEOrgtxLRmT63907783 = LFJCaEdGiJggXfwhPtqSEOrgtxLRmT33494564;     LFJCaEdGiJggXfwhPtqSEOrgtxLRmT33494564 = LFJCaEdGiJggXfwhPtqSEOrgtxLRmT95302294;     LFJCaEdGiJggXfwhPtqSEOrgtxLRmT95302294 = LFJCaEdGiJggXfwhPtqSEOrgtxLRmT27177409;     LFJCaEdGiJggXfwhPtqSEOrgtxLRmT27177409 = LFJCaEdGiJggXfwhPtqSEOrgtxLRmT71026490;     LFJCaEdGiJggXfwhPtqSEOrgtxLRmT71026490 = LFJCaEdGiJggXfwhPtqSEOrgtxLRmT81150997;     LFJCaEdGiJggXfwhPtqSEOrgtxLRmT81150997 = LFJCaEdGiJggXfwhPtqSEOrgtxLRmT95510623;     LFJCaEdGiJggXfwhPtqSEOrgtxLRmT95510623 = LFJCaEdGiJggXfwhPtqSEOrgtxLRmT99484324;     LFJCaEdGiJggXfwhPtqSEOrgtxLRmT99484324 = LFJCaEdGiJggXfwhPtqSEOrgtxLRmT88803686;     LFJCaEdGiJggXfwhPtqSEOrgtxLRmT88803686 = LFJCaEdGiJggXfwhPtqSEOrgtxLRmT24350614;     LFJCaEdGiJggXfwhPtqSEOrgtxLRmT24350614 = LFJCaEdGiJggXfwhPtqSEOrgtxLRmT67947213;     LFJCaEdGiJggXfwhPtqSEOrgtxLRmT67947213 = LFJCaEdGiJggXfwhPtqSEOrgtxLRmT95419284;     LFJCaEdGiJggXfwhPtqSEOrgtxLRmT95419284 = LFJCaEdGiJggXfwhPtqSEOrgtxLRmT86224701;     LFJCaEdGiJggXfwhPtqSEOrgtxLRmT86224701 = LFJCaEdGiJggXfwhPtqSEOrgtxLRmT60274083;     LFJCaEdGiJggXfwhPtqSEOrgtxLRmT60274083 = LFJCaEdGiJggXfwhPtqSEOrgtxLRmT25846706;     LFJCaEdGiJggXfwhPtqSEOrgtxLRmT25846706 = LFJCaEdGiJggXfwhPtqSEOrgtxLRmT34371503;     LFJCaEdGiJggXfwhPtqSEOrgtxLRmT34371503 = LFJCaEdGiJggXfwhPtqSEOrgtxLRmT45433589;     LFJCaEdGiJggXfwhPtqSEOrgtxLRmT45433589 = LFJCaEdGiJggXfwhPtqSEOrgtxLRmT93299170;     LFJCaEdGiJggXfwhPtqSEOrgtxLRmT93299170 = LFJCaEdGiJggXfwhPtqSEOrgtxLRmT25298606;     LFJCaEdGiJggXfwhPtqSEOrgtxLRmT25298606 = LFJCaEdGiJggXfwhPtqSEOrgtxLRmT14087388;     LFJCaEdGiJggXfwhPtqSEOrgtxLRmT14087388 = LFJCaEdGiJggXfwhPtqSEOrgtxLRmT68064812;     LFJCaEdGiJggXfwhPtqSEOrgtxLRmT68064812 = LFJCaEdGiJggXfwhPtqSEOrgtxLRmT46963018;     LFJCaEdGiJggXfwhPtqSEOrgtxLRmT46963018 = LFJCaEdGiJggXfwhPtqSEOrgtxLRmT16652280;     LFJCaEdGiJggXfwhPtqSEOrgtxLRmT16652280 = LFJCaEdGiJggXfwhPtqSEOrgtxLRmT69345971;     LFJCaEdGiJggXfwhPtqSEOrgtxLRmT69345971 = LFJCaEdGiJggXfwhPtqSEOrgtxLRmT71272496;     LFJCaEdGiJggXfwhPtqSEOrgtxLRmT71272496 = LFJCaEdGiJggXfwhPtqSEOrgtxLRmT81227362;     LFJCaEdGiJggXfwhPtqSEOrgtxLRmT81227362 = LFJCaEdGiJggXfwhPtqSEOrgtxLRmT85449563;     LFJCaEdGiJggXfwhPtqSEOrgtxLRmT85449563 = LFJCaEdGiJggXfwhPtqSEOrgtxLRmT70050312;     LFJCaEdGiJggXfwhPtqSEOrgtxLRmT70050312 = LFJCaEdGiJggXfwhPtqSEOrgtxLRmT85641947;     LFJCaEdGiJggXfwhPtqSEOrgtxLRmT85641947 = LFJCaEdGiJggXfwhPtqSEOrgtxLRmT2828681;     LFJCaEdGiJggXfwhPtqSEOrgtxLRmT2828681 = LFJCaEdGiJggXfwhPtqSEOrgtxLRmT27971792;     LFJCaEdGiJggXfwhPtqSEOrgtxLRmT27971792 = LFJCaEdGiJggXfwhPtqSEOrgtxLRmT69428379;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void WinqiQZgWSYMNuvyweTCDccGP36822344() {     double ObrklOjERXSLNInItirMGfZRxDPyIo91250600 = -839352865;    double ObrklOjERXSLNInItirMGfZRxDPyIo90311675 = 18954943;    double ObrklOjERXSLNInItirMGfZRxDPyIo24064123 = -292843750;    double ObrklOjERXSLNInItirMGfZRxDPyIo78570443 = -132222973;    double ObrklOjERXSLNInItirMGfZRxDPyIo93889962 = -641292694;    double ObrklOjERXSLNInItirMGfZRxDPyIo49786585 = -436081055;    double ObrklOjERXSLNInItirMGfZRxDPyIo9787025 = -773397237;    double ObrklOjERXSLNInItirMGfZRxDPyIo24011893 = 47690329;    double ObrklOjERXSLNInItirMGfZRxDPyIo35095396 = -722001288;    double ObrklOjERXSLNInItirMGfZRxDPyIo37736650 = -762541453;    double ObrklOjERXSLNInItirMGfZRxDPyIo68974654 = -245177541;    double ObrklOjERXSLNInItirMGfZRxDPyIo22280692 = -323041404;    double ObrklOjERXSLNInItirMGfZRxDPyIo21393332 = -834920428;    double ObrklOjERXSLNInItirMGfZRxDPyIo99657681 = 13023186;    double ObrklOjERXSLNInItirMGfZRxDPyIo65854119 = -415501244;    double ObrklOjERXSLNInItirMGfZRxDPyIo86387579 = -916215477;    double ObrklOjERXSLNInItirMGfZRxDPyIo95417264 = -298970522;    double ObrklOjERXSLNInItirMGfZRxDPyIo2880010 = -586104982;    double ObrklOjERXSLNInItirMGfZRxDPyIo90947692 = -828806751;    double ObrklOjERXSLNInItirMGfZRxDPyIo6789213 = -38668734;    double ObrklOjERXSLNInItirMGfZRxDPyIo79072466 = -243180767;    double ObrklOjERXSLNInItirMGfZRxDPyIo6111473 = -516688705;    double ObrklOjERXSLNInItirMGfZRxDPyIo78589753 = 48204590;    double ObrklOjERXSLNInItirMGfZRxDPyIo27344464 = -652829118;    double ObrklOjERXSLNInItirMGfZRxDPyIo83806025 = -724504555;    double ObrklOjERXSLNInItirMGfZRxDPyIo81426685 = -41920406;    double ObrklOjERXSLNInItirMGfZRxDPyIo64748257 = -241284482;    double ObrklOjERXSLNInItirMGfZRxDPyIo57267256 = -249494198;    double ObrklOjERXSLNInItirMGfZRxDPyIo28688930 = -779155509;    double ObrklOjERXSLNInItirMGfZRxDPyIo27805612 = -323498414;    double ObrklOjERXSLNInItirMGfZRxDPyIo50132708 = -25664321;    double ObrklOjERXSLNInItirMGfZRxDPyIo79205274 = -623622682;    double ObrklOjERXSLNInItirMGfZRxDPyIo55750353 = -896878823;    double ObrklOjERXSLNInItirMGfZRxDPyIo91925941 = -715652584;    double ObrklOjERXSLNInItirMGfZRxDPyIo76617910 = -31261723;    double ObrklOjERXSLNInItirMGfZRxDPyIo76265500 = -266357645;    double ObrklOjERXSLNInItirMGfZRxDPyIo48004547 = -855519162;    double ObrklOjERXSLNInItirMGfZRxDPyIo10603773 = -891089050;    double ObrklOjERXSLNInItirMGfZRxDPyIo73557743 = -724049744;    double ObrklOjERXSLNInItirMGfZRxDPyIo27954625 = -554924571;    double ObrklOjERXSLNInItirMGfZRxDPyIo98904418 = -124290668;    double ObrklOjERXSLNInItirMGfZRxDPyIo42909729 = -717046386;    double ObrklOjERXSLNInItirMGfZRxDPyIo89592568 = 70523723;    double ObrklOjERXSLNInItirMGfZRxDPyIo28409522 = -861521848;    double ObrklOjERXSLNInItirMGfZRxDPyIo45632039 = -748555856;    double ObrklOjERXSLNInItirMGfZRxDPyIo81134624 = -966979236;    double ObrklOjERXSLNInItirMGfZRxDPyIo22099658 = -600945805;    double ObrklOjERXSLNInItirMGfZRxDPyIo87326703 = -738790292;    double ObrklOjERXSLNInItirMGfZRxDPyIo68477439 = -912459635;    double ObrklOjERXSLNInItirMGfZRxDPyIo70992788 = -611705266;    double ObrklOjERXSLNInItirMGfZRxDPyIo36078851 = -90798330;    double ObrklOjERXSLNInItirMGfZRxDPyIo49922517 = -890440586;    double ObrklOjERXSLNInItirMGfZRxDPyIo58237643 = -265862623;    double ObrklOjERXSLNInItirMGfZRxDPyIo33157405 = -412469894;    double ObrklOjERXSLNInItirMGfZRxDPyIo57749878 = -42329979;    double ObrklOjERXSLNInItirMGfZRxDPyIo85139127 = -222664160;    double ObrklOjERXSLNInItirMGfZRxDPyIo11721923 = 70750353;    double ObrklOjERXSLNInItirMGfZRxDPyIo96719658 = -640014633;    double ObrklOjERXSLNInItirMGfZRxDPyIo94764418 = -407718419;    double ObrklOjERXSLNInItirMGfZRxDPyIo12463278 = -499372289;    double ObrklOjERXSLNInItirMGfZRxDPyIo85038328 = -94796574;    double ObrklOjERXSLNInItirMGfZRxDPyIo52519769 = -423903039;    double ObrklOjERXSLNInItirMGfZRxDPyIo95322962 = -173154162;    double ObrklOjERXSLNInItirMGfZRxDPyIo7289784 = -298502875;    double ObrklOjERXSLNInItirMGfZRxDPyIo87603942 = -636877132;    double ObrklOjERXSLNInItirMGfZRxDPyIo89769379 = -621554859;    double ObrklOjERXSLNInItirMGfZRxDPyIo66530339 = -426162582;    double ObrklOjERXSLNInItirMGfZRxDPyIo29467390 = -19267845;    double ObrklOjERXSLNInItirMGfZRxDPyIo23039772 = -955715091;    double ObrklOjERXSLNInItirMGfZRxDPyIo89588618 = -49143599;    double ObrklOjERXSLNInItirMGfZRxDPyIo38383033 = 39303684;    double ObrklOjERXSLNInItirMGfZRxDPyIo84813492 = -407881473;    double ObrklOjERXSLNInItirMGfZRxDPyIo29322266 = -862055238;    double ObrklOjERXSLNInItirMGfZRxDPyIo62993068 = -173882180;    double ObrklOjERXSLNInItirMGfZRxDPyIo7884795 = -914378067;    double ObrklOjERXSLNInItirMGfZRxDPyIo36162738 = -526134382;    double ObrklOjERXSLNInItirMGfZRxDPyIo16518905 = -487212429;    double ObrklOjERXSLNInItirMGfZRxDPyIo50180232 = -90273562;    double ObrklOjERXSLNInItirMGfZRxDPyIo81712424 = -904273262;    double ObrklOjERXSLNInItirMGfZRxDPyIo2671402 = -757525320;    double ObrklOjERXSLNInItirMGfZRxDPyIo59327027 = -440974602;    double ObrklOjERXSLNInItirMGfZRxDPyIo77421553 = -502494190;    double ObrklOjERXSLNInItirMGfZRxDPyIo88789816 = -337034563;    double ObrklOjERXSLNInItirMGfZRxDPyIo57696142 = -67450244;    double ObrklOjERXSLNInItirMGfZRxDPyIo91726761 = -132700085;    double ObrklOjERXSLNInItirMGfZRxDPyIo210191 = -135223736;    double ObrklOjERXSLNInItirMGfZRxDPyIo20967632 = -257760060;    double ObrklOjERXSLNInItirMGfZRxDPyIo22592949 = -384408929;    double ObrklOjERXSLNInItirMGfZRxDPyIo34176064 = -573322605;    double ObrklOjERXSLNInItirMGfZRxDPyIo91478782 = -808597564;    double ObrklOjERXSLNInItirMGfZRxDPyIo64543578 = -237107998;    double ObrklOjERXSLNInItirMGfZRxDPyIo51284888 = -115504529;    double ObrklOjERXSLNInItirMGfZRxDPyIo15839354 = -383370631;    double ObrklOjERXSLNInItirMGfZRxDPyIo61094466 = -124677456;    double ObrklOjERXSLNInItirMGfZRxDPyIo42916296 = -360127998;    double ObrklOjERXSLNInItirMGfZRxDPyIo46384650 = -700387629;    double ObrklOjERXSLNInItirMGfZRxDPyIo47586767 = -443892224;    double ObrklOjERXSLNInItirMGfZRxDPyIo82302784 = -630973403;    double ObrklOjERXSLNInItirMGfZRxDPyIo40805579 = -124644716;    double ObrklOjERXSLNInItirMGfZRxDPyIo55862660 = -839352865;     ObrklOjERXSLNInItirMGfZRxDPyIo91250600 = ObrklOjERXSLNInItirMGfZRxDPyIo90311675;     ObrklOjERXSLNInItirMGfZRxDPyIo90311675 = ObrklOjERXSLNInItirMGfZRxDPyIo24064123;     ObrklOjERXSLNInItirMGfZRxDPyIo24064123 = ObrklOjERXSLNInItirMGfZRxDPyIo78570443;     ObrklOjERXSLNInItirMGfZRxDPyIo78570443 = ObrklOjERXSLNInItirMGfZRxDPyIo93889962;     ObrklOjERXSLNInItirMGfZRxDPyIo93889962 = ObrklOjERXSLNInItirMGfZRxDPyIo49786585;     ObrklOjERXSLNInItirMGfZRxDPyIo49786585 = ObrklOjERXSLNInItirMGfZRxDPyIo9787025;     ObrklOjERXSLNInItirMGfZRxDPyIo9787025 = ObrklOjERXSLNInItirMGfZRxDPyIo24011893;     ObrklOjERXSLNInItirMGfZRxDPyIo24011893 = ObrklOjERXSLNInItirMGfZRxDPyIo35095396;     ObrklOjERXSLNInItirMGfZRxDPyIo35095396 = ObrklOjERXSLNInItirMGfZRxDPyIo37736650;     ObrklOjERXSLNInItirMGfZRxDPyIo37736650 = ObrklOjERXSLNInItirMGfZRxDPyIo68974654;     ObrklOjERXSLNInItirMGfZRxDPyIo68974654 = ObrklOjERXSLNInItirMGfZRxDPyIo22280692;     ObrklOjERXSLNInItirMGfZRxDPyIo22280692 = ObrklOjERXSLNInItirMGfZRxDPyIo21393332;     ObrklOjERXSLNInItirMGfZRxDPyIo21393332 = ObrklOjERXSLNInItirMGfZRxDPyIo99657681;     ObrklOjERXSLNInItirMGfZRxDPyIo99657681 = ObrklOjERXSLNInItirMGfZRxDPyIo65854119;     ObrklOjERXSLNInItirMGfZRxDPyIo65854119 = ObrklOjERXSLNInItirMGfZRxDPyIo86387579;     ObrklOjERXSLNInItirMGfZRxDPyIo86387579 = ObrklOjERXSLNInItirMGfZRxDPyIo95417264;     ObrklOjERXSLNInItirMGfZRxDPyIo95417264 = ObrklOjERXSLNInItirMGfZRxDPyIo2880010;     ObrklOjERXSLNInItirMGfZRxDPyIo2880010 = ObrklOjERXSLNInItirMGfZRxDPyIo90947692;     ObrklOjERXSLNInItirMGfZRxDPyIo90947692 = ObrklOjERXSLNInItirMGfZRxDPyIo6789213;     ObrklOjERXSLNInItirMGfZRxDPyIo6789213 = ObrklOjERXSLNInItirMGfZRxDPyIo79072466;     ObrklOjERXSLNInItirMGfZRxDPyIo79072466 = ObrklOjERXSLNInItirMGfZRxDPyIo6111473;     ObrklOjERXSLNInItirMGfZRxDPyIo6111473 = ObrklOjERXSLNInItirMGfZRxDPyIo78589753;     ObrklOjERXSLNInItirMGfZRxDPyIo78589753 = ObrklOjERXSLNInItirMGfZRxDPyIo27344464;     ObrklOjERXSLNInItirMGfZRxDPyIo27344464 = ObrklOjERXSLNInItirMGfZRxDPyIo83806025;     ObrklOjERXSLNInItirMGfZRxDPyIo83806025 = ObrklOjERXSLNInItirMGfZRxDPyIo81426685;     ObrklOjERXSLNInItirMGfZRxDPyIo81426685 = ObrklOjERXSLNInItirMGfZRxDPyIo64748257;     ObrklOjERXSLNInItirMGfZRxDPyIo64748257 = ObrklOjERXSLNInItirMGfZRxDPyIo57267256;     ObrklOjERXSLNInItirMGfZRxDPyIo57267256 = ObrklOjERXSLNInItirMGfZRxDPyIo28688930;     ObrklOjERXSLNInItirMGfZRxDPyIo28688930 = ObrklOjERXSLNInItirMGfZRxDPyIo27805612;     ObrklOjERXSLNInItirMGfZRxDPyIo27805612 = ObrklOjERXSLNInItirMGfZRxDPyIo50132708;     ObrklOjERXSLNInItirMGfZRxDPyIo50132708 = ObrklOjERXSLNInItirMGfZRxDPyIo79205274;     ObrklOjERXSLNInItirMGfZRxDPyIo79205274 = ObrklOjERXSLNInItirMGfZRxDPyIo55750353;     ObrklOjERXSLNInItirMGfZRxDPyIo55750353 = ObrklOjERXSLNInItirMGfZRxDPyIo91925941;     ObrklOjERXSLNInItirMGfZRxDPyIo91925941 = ObrklOjERXSLNInItirMGfZRxDPyIo76617910;     ObrklOjERXSLNInItirMGfZRxDPyIo76617910 = ObrklOjERXSLNInItirMGfZRxDPyIo76265500;     ObrklOjERXSLNInItirMGfZRxDPyIo76265500 = ObrklOjERXSLNInItirMGfZRxDPyIo48004547;     ObrklOjERXSLNInItirMGfZRxDPyIo48004547 = ObrklOjERXSLNInItirMGfZRxDPyIo10603773;     ObrklOjERXSLNInItirMGfZRxDPyIo10603773 = ObrklOjERXSLNInItirMGfZRxDPyIo73557743;     ObrklOjERXSLNInItirMGfZRxDPyIo73557743 = ObrklOjERXSLNInItirMGfZRxDPyIo27954625;     ObrklOjERXSLNInItirMGfZRxDPyIo27954625 = ObrklOjERXSLNInItirMGfZRxDPyIo98904418;     ObrklOjERXSLNInItirMGfZRxDPyIo98904418 = ObrklOjERXSLNInItirMGfZRxDPyIo42909729;     ObrklOjERXSLNInItirMGfZRxDPyIo42909729 = ObrklOjERXSLNInItirMGfZRxDPyIo89592568;     ObrklOjERXSLNInItirMGfZRxDPyIo89592568 = ObrklOjERXSLNInItirMGfZRxDPyIo28409522;     ObrklOjERXSLNInItirMGfZRxDPyIo28409522 = ObrklOjERXSLNInItirMGfZRxDPyIo45632039;     ObrklOjERXSLNInItirMGfZRxDPyIo45632039 = ObrklOjERXSLNInItirMGfZRxDPyIo81134624;     ObrklOjERXSLNInItirMGfZRxDPyIo81134624 = ObrklOjERXSLNInItirMGfZRxDPyIo22099658;     ObrklOjERXSLNInItirMGfZRxDPyIo22099658 = ObrklOjERXSLNInItirMGfZRxDPyIo87326703;     ObrklOjERXSLNInItirMGfZRxDPyIo87326703 = ObrklOjERXSLNInItirMGfZRxDPyIo68477439;     ObrklOjERXSLNInItirMGfZRxDPyIo68477439 = ObrklOjERXSLNInItirMGfZRxDPyIo70992788;     ObrklOjERXSLNInItirMGfZRxDPyIo70992788 = ObrklOjERXSLNInItirMGfZRxDPyIo36078851;     ObrklOjERXSLNInItirMGfZRxDPyIo36078851 = ObrklOjERXSLNInItirMGfZRxDPyIo49922517;     ObrklOjERXSLNInItirMGfZRxDPyIo49922517 = ObrklOjERXSLNInItirMGfZRxDPyIo58237643;     ObrklOjERXSLNInItirMGfZRxDPyIo58237643 = ObrklOjERXSLNInItirMGfZRxDPyIo33157405;     ObrklOjERXSLNInItirMGfZRxDPyIo33157405 = ObrklOjERXSLNInItirMGfZRxDPyIo57749878;     ObrklOjERXSLNInItirMGfZRxDPyIo57749878 = ObrklOjERXSLNInItirMGfZRxDPyIo85139127;     ObrklOjERXSLNInItirMGfZRxDPyIo85139127 = ObrklOjERXSLNInItirMGfZRxDPyIo11721923;     ObrklOjERXSLNInItirMGfZRxDPyIo11721923 = ObrklOjERXSLNInItirMGfZRxDPyIo96719658;     ObrklOjERXSLNInItirMGfZRxDPyIo96719658 = ObrklOjERXSLNInItirMGfZRxDPyIo94764418;     ObrklOjERXSLNInItirMGfZRxDPyIo94764418 = ObrklOjERXSLNInItirMGfZRxDPyIo12463278;     ObrklOjERXSLNInItirMGfZRxDPyIo12463278 = ObrklOjERXSLNInItirMGfZRxDPyIo85038328;     ObrklOjERXSLNInItirMGfZRxDPyIo85038328 = ObrklOjERXSLNInItirMGfZRxDPyIo52519769;     ObrklOjERXSLNInItirMGfZRxDPyIo52519769 = ObrklOjERXSLNInItirMGfZRxDPyIo95322962;     ObrklOjERXSLNInItirMGfZRxDPyIo95322962 = ObrklOjERXSLNInItirMGfZRxDPyIo7289784;     ObrklOjERXSLNInItirMGfZRxDPyIo7289784 = ObrklOjERXSLNInItirMGfZRxDPyIo87603942;     ObrklOjERXSLNInItirMGfZRxDPyIo87603942 = ObrklOjERXSLNInItirMGfZRxDPyIo89769379;     ObrklOjERXSLNInItirMGfZRxDPyIo89769379 = ObrklOjERXSLNInItirMGfZRxDPyIo66530339;     ObrklOjERXSLNInItirMGfZRxDPyIo66530339 = ObrklOjERXSLNInItirMGfZRxDPyIo29467390;     ObrklOjERXSLNInItirMGfZRxDPyIo29467390 = ObrklOjERXSLNInItirMGfZRxDPyIo23039772;     ObrklOjERXSLNInItirMGfZRxDPyIo23039772 = ObrklOjERXSLNInItirMGfZRxDPyIo89588618;     ObrklOjERXSLNInItirMGfZRxDPyIo89588618 = ObrklOjERXSLNInItirMGfZRxDPyIo38383033;     ObrklOjERXSLNInItirMGfZRxDPyIo38383033 = ObrklOjERXSLNInItirMGfZRxDPyIo84813492;     ObrklOjERXSLNInItirMGfZRxDPyIo84813492 = ObrklOjERXSLNInItirMGfZRxDPyIo29322266;     ObrklOjERXSLNInItirMGfZRxDPyIo29322266 = ObrklOjERXSLNInItirMGfZRxDPyIo62993068;     ObrklOjERXSLNInItirMGfZRxDPyIo62993068 = ObrklOjERXSLNInItirMGfZRxDPyIo7884795;     ObrklOjERXSLNInItirMGfZRxDPyIo7884795 = ObrklOjERXSLNInItirMGfZRxDPyIo36162738;     ObrklOjERXSLNInItirMGfZRxDPyIo36162738 = ObrklOjERXSLNInItirMGfZRxDPyIo16518905;     ObrklOjERXSLNInItirMGfZRxDPyIo16518905 = ObrklOjERXSLNInItirMGfZRxDPyIo50180232;     ObrklOjERXSLNInItirMGfZRxDPyIo50180232 = ObrklOjERXSLNInItirMGfZRxDPyIo81712424;     ObrklOjERXSLNInItirMGfZRxDPyIo81712424 = ObrklOjERXSLNInItirMGfZRxDPyIo2671402;     ObrklOjERXSLNInItirMGfZRxDPyIo2671402 = ObrklOjERXSLNInItirMGfZRxDPyIo59327027;     ObrklOjERXSLNInItirMGfZRxDPyIo59327027 = ObrklOjERXSLNInItirMGfZRxDPyIo77421553;     ObrklOjERXSLNInItirMGfZRxDPyIo77421553 = ObrklOjERXSLNInItirMGfZRxDPyIo88789816;     ObrklOjERXSLNInItirMGfZRxDPyIo88789816 = ObrklOjERXSLNInItirMGfZRxDPyIo57696142;     ObrklOjERXSLNInItirMGfZRxDPyIo57696142 = ObrklOjERXSLNInItirMGfZRxDPyIo91726761;     ObrklOjERXSLNInItirMGfZRxDPyIo91726761 = ObrklOjERXSLNInItirMGfZRxDPyIo210191;     ObrklOjERXSLNInItirMGfZRxDPyIo210191 = ObrklOjERXSLNInItirMGfZRxDPyIo20967632;     ObrklOjERXSLNInItirMGfZRxDPyIo20967632 = ObrklOjERXSLNInItirMGfZRxDPyIo22592949;     ObrklOjERXSLNInItirMGfZRxDPyIo22592949 = ObrklOjERXSLNInItirMGfZRxDPyIo34176064;     ObrklOjERXSLNInItirMGfZRxDPyIo34176064 = ObrklOjERXSLNInItirMGfZRxDPyIo91478782;     ObrklOjERXSLNInItirMGfZRxDPyIo91478782 = ObrklOjERXSLNInItirMGfZRxDPyIo64543578;     ObrklOjERXSLNInItirMGfZRxDPyIo64543578 = ObrklOjERXSLNInItirMGfZRxDPyIo51284888;     ObrklOjERXSLNInItirMGfZRxDPyIo51284888 = ObrklOjERXSLNInItirMGfZRxDPyIo15839354;     ObrklOjERXSLNInItirMGfZRxDPyIo15839354 = ObrklOjERXSLNInItirMGfZRxDPyIo61094466;     ObrklOjERXSLNInItirMGfZRxDPyIo61094466 = ObrklOjERXSLNInItirMGfZRxDPyIo42916296;     ObrklOjERXSLNInItirMGfZRxDPyIo42916296 = ObrklOjERXSLNInItirMGfZRxDPyIo46384650;     ObrklOjERXSLNInItirMGfZRxDPyIo46384650 = ObrklOjERXSLNInItirMGfZRxDPyIo47586767;     ObrklOjERXSLNInItirMGfZRxDPyIo47586767 = ObrklOjERXSLNInItirMGfZRxDPyIo82302784;     ObrklOjERXSLNInItirMGfZRxDPyIo82302784 = ObrklOjERXSLNInItirMGfZRxDPyIo40805579;     ObrklOjERXSLNInItirMGfZRxDPyIo40805579 = ObrklOjERXSLNInItirMGfZRxDPyIo55862660;     ObrklOjERXSLNInItirMGfZRxDPyIo55862660 = ObrklOjERXSLNInItirMGfZRxDPyIo91250600;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void MRRYVceqoaIxnROPTsqQUrrgr98669602() {     double wlbFvxGMicFsVbsFZfrHtigTNivTQX42414683 = -661943208;    double wlbFvxGMicFsVbsFZfrHtigTNivTQX21678279 = -534595735;    double wlbFvxGMicFsVbsFZfrHtigTNivTQX91135686 = -954895436;    double wlbFvxGMicFsVbsFZfrHtigTNivTQX55094163 = 32590411;    double wlbFvxGMicFsVbsFZfrHtigTNivTQX41414074 = -103492590;    double wlbFvxGMicFsVbsFZfrHtigTNivTQX18610571 = -445475873;    double wlbFvxGMicFsVbsFZfrHtigTNivTQX88976049 = -542476118;    double wlbFvxGMicFsVbsFZfrHtigTNivTQX23246192 = -417850747;    double wlbFvxGMicFsVbsFZfrHtigTNivTQX68494145 = -328095448;    double wlbFvxGMicFsVbsFZfrHtigTNivTQX72692928 = 31528629;    double wlbFvxGMicFsVbsFZfrHtigTNivTQX17962368 = -825505386;    double wlbFvxGMicFsVbsFZfrHtigTNivTQX7207682 = -945937580;    double wlbFvxGMicFsVbsFZfrHtigTNivTQX6407802 = -385075633;    double wlbFvxGMicFsVbsFZfrHtigTNivTQX36621336 = -281178452;    double wlbFvxGMicFsVbsFZfrHtigTNivTQX23564005 = -155306011;    double wlbFvxGMicFsVbsFZfrHtigTNivTQX76394212 = 78605918;    double wlbFvxGMicFsVbsFZfrHtigTNivTQX50866256 = -595224680;    double wlbFvxGMicFsVbsFZfrHtigTNivTQX68112351 = -915731325;    double wlbFvxGMicFsVbsFZfrHtigTNivTQX34305405 = -812736733;    double wlbFvxGMicFsVbsFZfrHtigTNivTQX1185910 = -599571936;    double wlbFvxGMicFsVbsFZfrHtigTNivTQX60760421 = -877046703;    double wlbFvxGMicFsVbsFZfrHtigTNivTQX87413951 = -766146448;    double wlbFvxGMicFsVbsFZfrHtigTNivTQX22995746 = -498937462;    double wlbFvxGMicFsVbsFZfrHtigTNivTQX74422657 = -251447600;    double wlbFvxGMicFsVbsFZfrHtigTNivTQX22054994 = -286190692;    double wlbFvxGMicFsVbsFZfrHtigTNivTQX56979035 = -179027417;    double wlbFvxGMicFsVbsFZfrHtigTNivTQX99745656 = -773710464;    double wlbFvxGMicFsVbsFZfrHtigTNivTQX20468381 = -217785652;    double wlbFvxGMicFsVbsFZfrHtigTNivTQX57121802 = -797813525;    double wlbFvxGMicFsVbsFZfrHtigTNivTQX10540464 = -916748911;    double wlbFvxGMicFsVbsFZfrHtigTNivTQX27638656 = 29948382;    double wlbFvxGMicFsVbsFZfrHtigTNivTQX38308997 = -463036111;    double wlbFvxGMicFsVbsFZfrHtigTNivTQX83576880 = -894465313;    double wlbFvxGMicFsVbsFZfrHtigTNivTQX99382921 = -704624259;    double wlbFvxGMicFsVbsFZfrHtigTNivTQX61785924 = -593447471;    double wlbFvxGMicFsVbsFZfrHtigTNivTQX28677391 = -281312823;    double wlbFvxGMicFsVbsFZfrHtigTNivTQX59236685 = -816196429;    double wlbFvxGMicFsVbsFZfrHtigTNivTQX31666825 = -583781379;    double wlbFvxGMicFsVbsFZfrHtigTNivTQX90718497 = -153407804;    double wlbFvxGMicFsVbsFZfrHtigTNivTQX17394865 = -4296896;    double wlbFvxGMicFsVbsFZfrHtigTNivTQX81062648 = -262354946;    double wlbFvxGMicFsVbsFZfrHtigTNivTQX16626570 = -828915476;    double wlbFvxGMicFsVbsFZfrHtigTNivTQX48276367 = -545819294;    double wlbFvxGMicFsVbsFZfrHtigTNivTQX29227978 = -255317489;    double wlbFvxGMicFsVbsFZfrHtigTNivTQX13611844 = 142508;    double wlbFvxGMicFsVbsFZfrHtigTNivTQX54363237 = -724118982;    double wlbFvxGMicFsVbsFZfrHtigTNivTQX49334359 = -47164148;    double wlbFvxGMicFsVbsFZfrHtigTNivTQX78935826 = -633917342;    double wlbFvxGMicFsVbsFZfrHtigTNivTQX88758469 = -675575950;    double wlbFvxGMicFsVbsFZfrHtigTNivTQX98658201 = -994776458;    double wlbFvxGMicFsVbsFZfrHtigTNivTQX69610715 = -166670542;    double wlbFvxGMicFsVbsFZfrHtigTNivTQX18986934 = -528744693;    double wlbFvxGMicFsVbsFZfrHtigTNivTQX69833199 = -193713728;    double wlbFvxGMicFsVbsFZfrHtigTNivTQX81205493 = -474517308;    double wlbFvxGMicFsVbsFZfrHtigTNivTQX37909182 = -749410091;    double wlbFvxGMicFsVbsFZfrHtigTNivTQX55000731 = -895796761;    double wlbFvxGMicFsVbsFZfrHtigTNivTQX98682533 = 64341726;    double wlbFvxGMicFsVbsFZfrHtigTNivTQX16713029 = -603447837;    double wlbFvxGMicFsVbsFZfrHtigTNivTQX33039170 = -681218898;    double wlbFvxGMicFsVbsFZfrHtigTNivTQX84435039 = -924465173;    double wlbFvxGMicFsVbsFZfrHtigTNivTQX18864914 = -671765410;    double wlbFvxGMicFsVbsFZfrHtigTNivTQX68507668 = -224690467;    double wlbFvxGMicFsVbsFZfrHtigTNivTQX66124389 = -620037222;    double wlbFvxGMicFsVbsFZfrHtigTNivTQX57953682 = -411346537;    double wlbFvxGMicFsVbsFZfrHtigTNivTQX45054273 = -998419754;    double wlbFvxGMicFsVbsFZfrHtigTNivTQX79653370 = -262469275;    double wlbFvxGMicFsVbsFZfrHtigTNivTQX23630801 = 48527732;    double wlbFvxGMicFsVbsFZfrHtigTNivTQX7024880 = -680451375;    double wlbFvxGMicFsVbsFZfrHtigTNivTQX74835411 = -687730982;    double wlbFvxGMicFsVbsFZfrHtigTNivTQX94886613 = -873993188;    double wlbFvxGMicFsVbsFZfrHtigTNivTQX17157528 = -105197653;    double wlbFvxGMicFsVbsFZfrHtigTNivTQX19199431 = 88556698;    double wlbFvxGMicFsVbsFZfrHtigTNivTQX77393853 = -662323522;    double wlbFvxGMicFsVbsFZfrHtigTNivTQX16910540 = -708439837;    double wlbFvxGMicFsVbsFZfrHtigTNivTQX20123261 = -237216991;    double wlbFvxGMicFsVbsFZfrHtigTNivTQX44133851 = 51868773;    double wlbFvxGMicFsVbsFZfrHtigTNivTQX39137585 = -120327154;    double wlbFvxGMicFsVbsFZfrHtigTNivTQX93767767 = -143619974;    double wlbFvxGMicFsVbsFZfrHtigTNivTQX60810813 = -151590108;    double wlbFvxGMicFsVbsFZfrHtigTNivTQX67691756 = -562071711;    double wlbFvxGMicFsVbsFZfrHtigTNivTQX7644677 = -31863270;    double wlbFvxGMicFsVbsFZfrHtigTNivTQX20809831 = -39793123;    double wlbFvxGMicFsVbsFZfrHtigTNivTQX31709912 = -542209702;    double wlbFvxGMicFsVbsFZfrHtigTNivTQX58463601 = -803037067;    double wlbFvxGMicFsVbsFZfrHtigTNivTQX40929748 = -650078370;    double wlbFvxGMicFsVbsFZfrHtigTNivTQX8651722 = -441306925;    double wlbFvxGMicFsVbsFZfrHtigTNivTQX68475798 = -169322383;    double wlbFvxGMicFsVbsFZfrHtigTNivTQX2371388 = -319948005;    double wlbFvxGMicFsVbsFZfrHtigTNivTQX61473740 = -955214168;    double wlbFvxGMicFsVbsFZfrHtigTNivTQX6785193 = -697650711;    double wlbFvxGMicFsVbsFZfrHtigTNivTQX29994858 = -245654550;    double wlbFvxGMicFsVbsFZfrHtigTNivTQX42523656 = -112748592;    double wlbFvxGMicFsVbsFZfrHtigTNivTQX98627655 = -902562482;    double wlbFvxGMicFsVbsFZfrHtigTNivTQX6283459 = -228942631;    double wlbFvxGMicFsVbsFZfrHtigTNivTQX98529950 = -332531487;    double wlbFvxGMicFsVbsFZfrHtigTNivTQX12554980 = 62335521;    double wlbFvxGMicFsVbsFZfrHtigTNivTQX50502180 = -108878254;    double wlbFvxGMicFsVbsFZfrHtigTNivTQX90322685 = -34472758;    double wlbFvxGMicFsVbsFZfrHtigTNivTQX84173705 = -256897736;    double wlbFvxGMicFsVbsFZfrHtigTNivTQX33958474 = -661943208;     wlbFvxGMicFsVbsFZfrHtigTNivTQX42414683 = wlbFvxGMicFsVbsFZfrHtigTNivTQX21678279;     wlbFvxGMicFsVbsFZfrHtigTNivTQX21678279 = wlbFvxGMicFsVbsFZfrHtigTNivTQX91135686;     wlbFvxGMicFsVbsFZfrHtigTNivTQX91135686 = wlbFvxGMicFsVbsFZfrHtigTNivTQX55094163;     wlbFvxGMicFsVbsFZfrHtigTNivTQX55094163 = wlbFvxGMicFsVbsFZfrHtigTNivTQX41414074;     wlbFvxGMicFsVbsFZfrHtigTNivTQX41414074 = wlbFvxGMicFsVbsFZfrHtigTNivTQX18610571;     wlbFvxGMicFsVbsFZfrHtigTNivTQX18610571 = wlbFvxGMicFsVbsFZfrHtigTNivTQX88976049;     wlbFvxGMicFsVbsFZfrHtigTNivTQX88976049 = wlbFvxGMicFsVbsFZfrHtigTNivTQX23246192;     wlbFvxGMicFsVbsFZfrHtigTNivTQX23246192 = wlbFvxGMicFsVbsFZfrHtigTNivTQX68494145;     wlbFvxGMicFsVbsFZfrHtigTNivTQX68494145 = wlbFvxGMicFsVbsFZfrHtigTNivTQX72692928;     wlbFvxGMicFsVbsFZfrHtigTNivTQX72692928 = wlbFvxGMicFsVbsFZfrHtigTNivTQX17962368;     wlbFvxGMicFsVbsFZfrHtigTNivTQX17962368 = wlbFvxGMicFsVbsFZfrHtigTNivTQX7207682;     wlbFvxGMicFsVbsFZfrHtigTNivTQX7207682 = wlbFvxGMicFsVbsFZfrHtigTNivTQX6407802;     wlbFvxGMicFsVbsFZfrHtigTNivTQX6407802 = wlbFvxGMicFsVbsFZfrHtigTNivTQX36621336;     wlbFvxGMicFsVbsFZfrHtigTNivTQX36621336 = wlbFvxGMicFsVbsFZfrHtigTNivTQX23564005;     wlbFvxGMicFsVbsFZfrHtigTNivTQX23564005 = wlbFvxGMicFsVbsFZfrHtigTNivTQX76394212;     wlbFvxGMicFsVbsFZfrHtigTNivTQX76394212 = wlbFvxGMicFsVbsFZfrHtigTNivTQX50866256;     wlbFvxGMicFsVbsFZfrHtigTNivTQX50866256 = wlbFvxGMicFsVbsFZfrHtigTNivTQX68112351;     wlbFvxGMicFsVbsFZfrHtigTNivTQX68112351 = wlbFvxGMicFsVbsFZfrHtigTNivTQX34305405;     wlbFvxGMicFsVbsFZfrHtigTNivTQX34305405 = wlbFvxGMicFsVbsFZfrHtigTNivTQX1185910;     wlbFvxGMicFsVbsFZfrHtigTNivTQX1185910 = wlbFvxGMicFsVbsFZfrHtigTNivTQX60760421;     wlbFvxGMicFsVbsFZfrHtigTNivTQX60760421 = wlbFvxGMicFsVbsFZfrHtigTNivTQX87413951;     wlbFvxGMicFsVbsFZfrHtigTNivTQX87413951 = wlbFvxGMicFsVbsFZfrHtigTNivTQX22995746;     wlbFvxGMicFsVbsFZfrHtigTNivTQX22995746 = wlbFvxGMicFsVbsFZfrHtigTNivTQX74422657;     wlbFvxGMicFsVbsFZfrHtigTNivTQX74422657 = wlbFvxGMicFsVbsFZfrHtigTNivTQX22054994;     wlbFvxGMicFsVbsFZfrHtigTNivTQX22054994 = wlbFvxGMicFsVbsFZfrHtigTNivTQX56979035;     wlbFvxGMicFsVbsFZfrHtigTNivTQX56979035 = wlbFvxGMicFsVbsFZfrHtigTNivTQX99745656;     wlbFvxGMicFsVbsFZfrHtigTNivTQX99745656 = wlbFvxGMicFsVbsFZfrHtigTNivTQX20468381;     wlbFvxGMicFsVbsFZfrHtigTNivTQX20468381 = wlbFvxGMicFsVbsFZfrHtigTNivTQX57121802;     wlbFvxGMicFsVbsFZfrHtigTNivTQX57121802 = wlbFvxGMicFsVbsFZfrHtigTNivTQX10540464;     wlbFvxGMicFsVbsFZfrHtigTNivTQX10540464 = wlbFvxGMicFsVbsFZfrHtigTNivTQX27638656;     wlbFvxGMicFsVbsFZfrHtigTNivTQX27638656 = wlbFvxGMicFsVbsFZfrHtigTNivTQX38308997;     wlbFvxGMicFsVbsFZfrHtigTNivTQX38308997 = wlbFvxGMicFsVbsFZfrHtigTNivTQX83576880;     wlbFvxGMicFsVbsFZfrHtigTNivTQX83576880 = wlbFvxGMicFsVbsFZfrHtigTNivTQX99382921;     wlbFvxGMicFsVbsFZfrHtigTNivTQX99382921 = wlbFvxGMicFsVbsFZfrHtigTNivTQX61785924;     wlbFvxGMicFsVbsFZfrHtigTNivTQX61785924 = wlbFvxGMicFsVbsFZfrHtigTNivTQX28677391;     wlbFvxGMicFsVbsFZfrHtigTNivTQX28677391 = wlbFvxGMicFsVbsFZfrHtigTNivTQX59236685;     wlbFvxGMicFsVbsFZfrHtigTNivTQX59236685 = wlbFvxGMicFsVbsFZfrHtigTNivTQX31666825;     wlbFvxGMicFsVbsFZfrHtigTNivTQX31666825 = wlbFvxGMicFsVbsFZfrHtigTNivTQX90718497;     wlbFvxGMicFsVbsFZfrHtigTNivTQX90718497 = wlbFvxGMicFsVbsFZfrHtigTNivTQX17394865;     wlbFvxGMicFsVbsFZfrHtigTNivTQX17394865 = wlbFvxGMicFsVbsFZfrHtigTNivTQX81062648;     wlbFvxGMicFsVbsFZfrHtigTNivTQX81062648 = wlbFvxGMicFsVbsFZfrHtigTNivTQX16626570;     wlbFvxGMicFsVbsFZfrHtigTNivTQX16626570 = wlbFvxGMicFsVbsFZfrHtigTNivTQX48276367;     wlbFvxGMicFsVbsFZfrHtigTNivTQX48276367 = wlbFvxGMicFsVbsFZfrHtigTNivTQX29227978;     wlbFvxGMicFsVbsFZfrHtigTNivTQX29227978 = wlbFvxGMicFsVbsFZfrHtigTNivTQX13611844;     wlbFvxGMicFsVbsFZfrHtigTNivTQX13611844 = wlbFvxGMicFsVbsFZfrHtigTNivTQX54363237;     wlbFvxGMicFsVbsFZfrHtigTNivTQX54363237 = wlbFvxGMicFsVbsFZfrHtigTNivTQX49334359;     wlbFvxGMicFsVbsFZfrHtigTNivTQX49334359 = wlbFvxGMicFsVbsFZfrHtigTNivTQX78935826;     wlbFvxGMicFsVbsFZfrHtigTNivTQX78935826 = wlbFvxGMicFsVbsFZfrHtigTNivTQX88758469;     wlbFvxGMicFsVbsFZfrHtigTNivTQX88758469 = wlbFvxGMicFsVbsFZfrHtigTNivTQX98658201;     wlbFvxGMicFsVbsFZfrHtigTNivTQX98658201 = wlbFvxGMicFsVbsFZfrHtigTNivTQX69610715;     wlbFvxGMicFsVbsFZfrHtigTNivTQX69610715 = wlbFvxGMicFsVbsFZfrHtigTNivTQX18986934;     wlbFvxGMicFsVbsFZfrHtigTNivTQX18986934 = wlbFvxGMicFsVbsFZfrHtigTNivTQX69833199;     wlbFvxGMicFsVbsFZfrHtigTNivTQX69833199 = wlbFvxGMicFsVbsFZfrHtigTNivTQX81205493;     wlbFvxGMicFsVbsFZfrHtigTNivTQX81205493 = wlbFvxGMicFsVbsFZfrHtigTNivTQX37909182;     wlbFvxGMicFsVbsFZfrHtigTNivTQX37909182 = wlbFvxGMicFsVbsFZfrHtigTNivTQX55000731;     wlbFvxGMicFsVbsFZfrHtigTNivTQX55000731 = wlbFvxGMicFsVbsFZfrHtigTNivTQX98682533;     wlbFvxGMicFsVbsFZfrHtigTNivTQX98682533 = wlbFvxGMicFsVbsFZfrHtigTNivTQX16713029;     wlbFvxGMicFsVbsFZfrHtigTNivTQX16713029 = wlbFvxGMicFsVbsFZfrHtigTNivTQX33039170;     wlbFvxGMicFsVbsFZfrHtigTNivTQX33039170 = wlbFvxGMicFsVbsFZfrHtigTNivTQX84435039;     wlbFvxGMicFsVbsFZfrHtigTNivTQX84435039 = wlbFvxGMicFsVbsFZfrHtigTNivTQX18864914;     wlbFvxGMicFsVbsFZfrHtigTNivTQX18864914 = wlbFvxGMicFsVbsFZfrHtigTNivTQX68507668;     wlbFvxGMicFsVbsFZfrHtigTNivTQX68507668 = wlbFvxGMicFsVbsFZfrHtigTNivTQX66124389;     wlbFvxGMicFsVbsFZfrHtigTNivTQX66124389 = wlbFvxGMicFsVbsFZfrHtigTNivTQX57953682;     wlbFvxGMicFsVbsFZfrHtigTNivTQX57953682 = wlbFvxGMicFsVbsFZfrHtigTNivTQX45054273;     wlbFvxGMicFsVbsFZfrHtigTNivTQX45054273 = wlbFvxGMicFsVbsFZfrHtigTNivTQX79653370;     wlbFvxGMicFsVbsFZfrHtigTNivTQX79653370 = wlbFvxGMicFsVbsFZfrHtigTNivTQX23630801;     wlbFvxGMicFsVbsFZfrHtigTNivTQX23630801 = wlbFvxGMicFsVbsFZfrHtigTNivTQX7024880;     wlbFvxGMicFsVbsFZfrHtigTNivTQX7024880 = wlbFvxGMicFsVbsFZfrHtigTNivTQX74835411;     wlbFvxGMicFsVbsFZfrHtigTNivTQX74835411 = wlbFvxGMicFsVbsFZfrHtigTNivTQX94886613;     wlbFvxGMicFsVbsFZfrHtigTNivTQX94886613 = wlbFvxGMicFsVbsFZfrHtigTNivTQX17157528;     wlbFvxGMicFsVbsFZfrHtigTNivTQX17157528 = wlbFvxGMicFsVbsFZfrHtigTNivTQX19199431;     wlbFvxGMicFsVbsFZfrHtigTNivTQX19199431 = wlbFvxGMicFsVbsFZfrHtigTNivTQX77393853;     wlbFvxGMicFsVbsFZfrHtigTNivTQX77393853 = wlbFvxGMicFsVbsFZfrHtigTNivTQX16910540;     wlbFvxGMicFsVbsFZfrHtigTNivTQX16910540 = wlbFvxGMicFsVbsFZfrHtigTNivTQX20123261;     wlbFvxGMicFsVbsFZfrHtigTNivTQX20123261 = wlbFvxGMicFsVbsFZfrHtigTNivTQX44133851;     wlbFvxGMicFsVbsFZfrHtigTNivTQX44133851 = wlbFvxGMicFsVbsFZfrHtigTNivTQX39137585;     wlbFvxGMicFsVbsFZfrHtigTNivTQX39137585 = wlbFvxGMicFsVbsFZfrHtigTNivTQX93767767;     wlbFvxGMicFsVbsFZfrHtigTNivTQX93767767 = wlbFvxGMicFsVbsFZfrHtigTNivTQX60810813;     wlbFvxGMicFsVbsFZfrHtigTNivTQX60810813 = wlbFvxGMicFsVbsFZfrHtigTNivTQX67691756;     wlbFvxGMicFsVbsFZfrHtigTNivTQX67691756 = wlbFvxGMicFsVbsFZfrHtigTNivTQX7644677;     wlbFvxGMicFsVbsFZfrHtigTNivTQX7644677 = wlbFvxGMicFsVbsFZfrHtigTNivTQX20809831;     wlbFvxGMicFsVbsFZfrHtigTNivTQX20809831 = wlbFvxGMicFsVbsFZfrHtigTNivTQX31709912;     wlbFvxGMicFsVbsFZfrHtigTNivTQX31709912 = wlbFvxGMicFsVbsFZfrHtigTNivTQX58463601;     wlbFvxGMicFsVbsFZfrHtigTNivTQX58463601 = wlbFvxGMicFsVbsFZfrHtigTNivTQX40929748;     wlbFvxGMicFsVbsFZfrHtigTNivTQX40929748 = wlbFvxGMicFsVbsFZfrHtigTNivTQX8651722;     wlbFvxGMicFsVbsFZfrHtigTNivTQX8651722 = wlbFvxGMicFsVbsFZfrHtigTNivTQX68475798;     wlbFvxGMicFsVbsFZfrHtigTNivTQX68475798 = wlbFvxGMicFsVbsFZfrHtigTNivTQX2371388;     wlbFvxGMicFsVbsFZfrHtigTNivTQX2371388 = wlbFvxGMicFsVbsFZfrHtigTNivTQX61473740;     wlbFvxGMicFsVbsFZfrHtigTNivTQX61473740 = wlbFvxGMicFsVbsFZfrHtigTNivTQX6785193;     wlbFvxGMicFsVbsFZfrHtigTNivTQX6785193 = wlbFvxGMicFsVbsFZfrHtigTNivTQX29994858;     wlbFvxGMicFsVbsFZfrHtigTNivTQX29994858 = wlbFvxGMicFsVbsFZfrHtigTNivTQX42523656;     wlbFvxGMicFsVbsFZfrHtigTNivTQX42523656 = wlbFvxGMicFsVbsFZfrHtigTNivTQX98627655;     wlbFvxGMicFsVbsFZfrHtigTNivTQX98627655 = wlbFvxGMicFsVbsFZfrHtigTNivTQX6283459;     wlbFvxGMicFsVbsFZfrHtigTNivTQX6283459 = wlbFvxGMicFsVbsFZfrHtigTNivTQX98529950;     wlbFvxGMicFsVbsFZfrHtigTNivTQX98529950 = wlbFvxGMicFsVbsFZfrHtigTNivTQX12554980;     wlbFvxGMicFsVbsFZfrHtigTNivTQX12554980 = wlbFvxGMicFsVbsFZfrHtigTNivTQX50502180;     wlbFvxGMicFsVbsFZfrHtigTNivTQX50502180 = wlbFvxGMicFsVbsFZfrHtigTNivTQX90322685;     wlbFvxGMicFsVbsFZfrHtigTNivTQX90322685 = wlbFvxGMicFsVbsFZfrHtigTNivTQX84173705;     wlbFvxGMicFsVbsFZfrHtigTNivTQX84173705 = wlbFvxGMicFsVbsFZfrHtigTNivTQX33958474;     wlbFvxGMicFsVbsFZfrHtigTNivTQX33958474 = wlbFvxGMicFsVbsFZfrHtigTNivTQX42414683;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void INnUHgFSmaLqKWQSkFUELgkyc8274329() {     double SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv64236904 = -130158539;    double SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv83146083 = -917194588;    double SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv36862957 = 97887032;    double SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv86469309 = -172193765;    double SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv1548406 = 19256489;    double SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv42628886 = -457019032;    double SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv17996634 = -605794242;    double SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv10108821 = -426031595;    double SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv65017785 = -313890866;    double SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv33976154 = -938689768;    double SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv88878636 = -381263089;    double SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv23389564 = 50880813;    double SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv39396744 = -923109422;    double SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv3587803 = -31255250;    double SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv18821800 = -82147930;    double SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv24364939 = -363760623;    double SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv44315316 = -981049398;    double SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv30637654 = -837452243;    double SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv38942628 = -885872389;    double SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv82295551 = 9183008;    double SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv17914706 = -609125405;    double SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv51815930 = -836897612;    double SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv32467150 = -54964817;    double SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv11700280 = -661546465;    double SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv95985660 = -197087665;    double SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv46554889 = -506212945;    double SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv72782260 = -300514509;    double SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv56048207 = -82233885;    double SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv5018715 = -464759443;    double SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv56357541 = -192963106;    double SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv78803920 = -375779365;    double SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv57200323 = -238924942;    double SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv8896345 = -637069196;    double SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv71922039 = -380443886;    double SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv42620137 = -743266073;    double SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv98254351 = -295728803;    double SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv2318942 = -865813526;    double SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv35604687 = -65324136;    double SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv51098944 = 74186916;    double SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv30065511 = -461845897;    double SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv35438494 = -696494204;    double SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv33128741 = -516381553;    double SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv95643766 = -589786109;    double SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv77322837 = -164123658;    double SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv93527654 = -186546121;    double SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv93569716 = -427551212;    double SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv75002470 = -228171668;    double SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv60775578 = -372413330;    double SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv95822561 = -860692372;    double SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv14705678 = -973831643;    double SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv58072535 = -210559867;    double SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv15375598 = -854122774;    double SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv61056063 = -157308868;    double SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv9230615 = -665526368;    double SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv90359623 = -710531840;    double SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv12420974 = -293260928;    double SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv50678933 = -762229771;    double SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv25162677 = -240566504;    double SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv90483649 = -975106101;    double SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv54993516 = -474530567;    double SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv69846626 = -56504523;    double SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv61948427 = -423560358;    double SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv5090106 = -961272152;    double SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv8660244 = -20927760;    double SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv55172233 = -462910404;    double SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv31678314 = -42338147;    double SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv14493220 = -312049991;    double SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv67474705 = -442665536;    double SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv60967666 = -287989177;    double SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv20567449 = -786419127;    double SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv22045997 = -497947098;    double SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv8710629 = -815725262;    double SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv79538710 = -811639159;    double SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv8877118 = -324026493;    double SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv46857057 = -294322789;    double SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv84785965 = 7256148;    double SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv56172164 = -147111503;    double SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv55144313 = -890841160;    double SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv18172625 = -375000344;    double SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv2415945 = -769536454;    double SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv71552419 = -178041278;    double SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv12006683 = -928101179;    double SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv60225645 = -221541513;    double SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv90313036 = -490927800;    double SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv98285006 = -982403239;    double SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv63428323 = -521656591;    double SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv96144259 = 18383926;    double SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv99665729 = -971542828;    double SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv81562416 = -669912046;    double SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv30199163 = -350005146;    double SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv47575418 = -533499032;    double SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv77156264 = -525247023;    double SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv45121038 = -90218036;    double SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv96105427 = -451282518;    double SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv60218885 = -305341374;    double SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv73490067 = -172933846;    double SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv28038635 = -555109402;    double SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv86983522 = -468858349;    double SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv22150604 = -701213255;    double SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv61849341 = -130158539;     SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv64236904 = SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv83146083;     SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv83146083 = SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv36862957;     SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv36862957 = SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv86469309;     SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv86469309 = SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv1548406;     SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv1548406 = SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv42628886;     SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv42628886 = SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv17996634;     SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv17996634 = SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv10108821;     SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv10108821 = SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv65017785;     SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv65017785 = SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv33976154;     SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv33976154 = SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv88878636;     SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv88878636 = SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv23389564;     SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv23389564 = SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv39396744;     SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv39396744 = SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv3587803;     SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv3587803 = SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv18821800;     SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv18821800 = SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv24364939;     SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv24364939 = SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv44315316;     SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv44315316 = SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv30637654;     SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv30637654 = SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv38942628;     SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv38942628 = SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv82295551;     SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv82295551 = SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv17914706;     SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv17914706 = SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv51815930;     SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv51815930 = SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv32467150;     SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv32467150 = SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv11700280;     SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv11700280 = SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv95985660;     SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv95985660 = SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv46554889;     SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv46554889 = SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv72782260;     SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv72782260 = SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv56048207;     SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv56048207 = SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv5018715;     SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv5018715 = SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv56357541;     SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv56357541 = SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv78803920;     SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv78803920 = SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv57200323;     SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv57200323 = SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv8896345;     SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv8896345 = SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv71922039;     SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv71922039 = SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv42620137;     SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv42620137 = SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv98254351;     SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv98254351 = SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv2318942;     SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv2318942 = SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv35604687;     SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv35604687 = SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv51098944;     SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv51098944 = SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv30065511;     SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv30065511 = SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv35438494;     SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv35438494 = SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv33128741;     SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv33128741 = SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv95643766;     SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv95643766 = SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv77322837;     SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv77322837 = SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv93527654;     SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv93527654 = SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv93569716;     SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv93569716 = SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv75002470;     SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv75002470 = SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv60775578;     SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv60775578 = SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv95822561;     SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv95822561 = SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv14705678;     SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv14705678 = SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv58072535;     SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv58072535 = SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv15375598;     SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv15375598 = SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv61056063;     SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv61056063 = SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv9230615;     SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv9230615 = SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv90359623;     SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv90359623 = SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv12420974;     SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv12420974 = SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv50678933;     SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv50678933 = SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv25162677;     SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv25162677 = SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv90483649;     SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv90483649 = SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv54993516;     SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv54993516 = SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv69846626;     SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv69846626 = SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv61948427;     SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv61948427 = SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv5090106;     SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv5090106 = SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv8660244;     SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv8660244 = SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv55172233;     SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv55172233 = SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv31678314;     SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv31678314 = SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv14493220;     SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv14493220 = SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv67474705;     SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv67474705 = SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv60967666;     SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv60967666 = SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv20567449;     SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv20567449 = SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv22045997;     SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv22045997 = SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv8710629;     SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv8710629 = SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv79538710;     SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv79538710 = SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv8877118;     SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv8877118 = SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv46857057;     SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv46857057 = SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv84785965;     SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv84785965 = SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv56172164;     SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv56172164 = SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv55144313;     SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv55144313 = SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv18172625;     SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv18172625 = SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv2415945;     SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv2415945 = SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv71552419;     SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv71552419 = SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv12006683;     SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv12006683 = SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv60225645;     SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv60225645 = SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv90313036;     SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv90313036 = SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv98285006;     SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv98285006 = SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv63428323;     SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv63428323 = SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv96144259;     SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv96144259 = SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv99665729;     SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv99665729 = SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv81562416;     SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv81562416 = SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv30199163;     SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv30199163 = SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv47575418;     SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv47575418 = SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv77156264;     SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv77156264 = SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv45121038;     SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv45121038 = SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv96105427;     SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv96105427 = SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv60218885;     SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv60218885 = SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv73490067;     SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv73490067 = SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv28038635;     SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv28038635 = SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv86983522;     SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv86983522 = SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv22150604;     SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv22150604 = SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv61849341;     SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv61849341 = SYTuNlmgCNqDiKSrvRvJdAvGLlZEMv64236904;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void xddbkGcAYJKDBWbQxcpgQAowF70121587() {     double qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ15400987 = 47251118;    double qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ14512686 = -370745267;    double qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ3934520 = -564164654;    double qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ62993029 = -7380382;    double qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ49072517 = -542943407;    double qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ11452872 = -466413850;    double qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ97185658 = -374873123;    double qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ9343120 = -891572670;    double qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ98416534 = 80014975;    double qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ68932432 = -144619686;    double qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ37866349 = -961590934;    double qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ8316554 = -572015362;    double qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ24411214 = -473264627;    double qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ40551457 = -325456888;    double qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ76531685 = -921952697;    double qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ14371572 = -468939228;    double qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ99764307 = -177303556;    double qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ95869995 = -67078586;    double qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ82300340 = -869802371;    double qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ76692248 = -551720195;    double qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ99602660 = -142991341;    double qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ33118409 = 13644646;    double qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ76873142 = -602106870;    double qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ58778473 = -260164947;    double qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ34234629 = -858773803;    double qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ22107240 = -643319957;    double qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ7779661 = -832940491;    double qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ19249332 = -50525338;    double qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ33451586 = -483417459;    double qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ39092393 = -786213603;    double qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ56309868 = -320166661;    double qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ16304045 = -78338371;    double qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ36722872 = -634655685;    double qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ79379018 = -369415562;    double qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ27788151 = -205451821;    double qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ50666242 = -310683981;    double qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ13551081 = -826490793;    double qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ56667740 = -858016466;    double qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ68259697 = -455171144;    double qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ19505752 = 88781779;    double qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ17596724 = -834558481;    double qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ6845582 = -628250644;    double qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ54327565 = -106129126;    double qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ78141293 = -657919299;    double qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ61507459 = -537847758;    double qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ66798328 = -184690958;    double qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ2237171 = -774390011;    double qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ52384701 = -267540380;    double qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ16103591 = -623808687;    double qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ42371091 = -256902836;    double qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ91604399 = -286432079;    double qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ84440014 = -492426881;    double qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ72651619 = -85159974;    double qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ57278703 = -727573782;    double qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ70518926 = -317611953;    double qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ82282577 = -966393529;    double qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ37639544 = -768638398;    double qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ45156047 = -203999708;    double qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ28758401 = -148606580;    double qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ26965278 = -899623451;    double qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ3673212 = -633473360;    double qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ77936327 = -224347785;    double qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ75891533 = -308155212;    double qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ59324142 = -133771422;    double qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ12622564 = -824453025;    double qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ21562305 = -783252563;    double qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ71593681 = -937359677;    double qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ45032195 = -3849066;    double qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ12763306 = -20005068;    double qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ25865444 = -511268717;    double qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ820492 = -642448435;    double qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ43096568 = -319287091;    double qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ27610298 = -611907442;    double qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ62794589 = -858584150;    double qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ59095524 = -717161714;    double qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ92757079 = -514740698;    double qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ78790844 = -880226228;    double qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ98731849 = -944187571;    double qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ97271013 = -722317190;    double qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ67436300 = -574082845;    double qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ19870069 = -868929947;    double qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ55394959 = -465400111;    double qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ3145742 = -426716652;    double qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ91080495 = -126514623;    double qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ47487994 = -399781525;    double qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ71869854 = -827739780;    double qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ43652426 = -993178398;    double qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ79444168 = -907081904;    double qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ8860093 = 48196390;    double qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ45505574 = -239058293;    double qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ13026699 = -542045584;    double qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ68395033 = -522491086;    double qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ27909340 = -609409886;    double qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ41294420 = -555547694;    double qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ15832540 = -277744862;    double qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ39660397 = -510210697;    double qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ30954049 = -220095432;    double qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ95003423 = -972357704;    double qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ65518729 = -833466274;    double qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ39945155 = 47251118;     qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ15400987 = qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ14512686;     qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ14512686 = qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ3934520;     qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ3934520 = qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ62993029;     qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ62993029 = qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ49072517;     qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ49072517 = qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ11452872;     qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ11452872 = qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ97185658;     qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ97185658 = qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ9343120;     qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ9343120 = qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ98416534;     qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ98416534 = qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ68932432;     qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ68932432 = qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ37866349;     qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ37866349 = qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ8316554;     qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ8316554 = qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ24411214;     qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ24411214 = qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ40551457;     qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ40551457 = qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ76531685;     qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ76531685 = qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ14371572;     qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ14371572 = qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ99764307;     qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ99764307 = qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ95869995;     qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ95869995 = qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ82300340;     qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ82300340 = qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ76692248;     qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ76692248 = qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ99602660;     qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ99602660 = qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ33118409;     qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ33118409 = qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ76873142;     qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ76873142 = qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ58778473;     qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ58778473 = qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ34234629;     qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ34234629 = qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ22107240;     qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ22107240 = qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ7779661;     qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ7779661 = qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ19249332;     qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ19249332 = qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ33451586;     qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ33451586 = qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ39092393;     qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ39092393 = qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ56309868;     qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ56309868 = qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ16304045;     qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ16304045 = qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ36722872;     qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ36722872 = qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ79379018;     qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ79379018 = qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ27788151;     qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ27788151 = qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ50666242;     qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ50666242 = qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ13551081;     qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ13551081 = qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ56667740;     qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ56667740 = qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ68259697;     qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ68259697 = qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ19505752;     qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ19505752 = qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ17596724;     qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ17596724 = qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ6845582;     qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ6845582 = qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ54327565;     qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ54327565 = qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ78141293;     qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ78141293 = qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ61507459;     qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ61507459 = qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ66798328;     qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ66798328 = qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ2237171;     qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ2237171 = qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ52384701;     qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ52384701 = qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ16103591;     qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ16103591 = qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ42371091;     qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ42371091 = qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ91604399;     qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ91604399 = qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ84440014;     qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ84440014 = qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ72651619;     qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ72651619 = qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ57278703;     qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ57278703 = qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ70518926;     qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ70518926 = qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ82282577;     qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ82282577 = qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ37639544;     qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ37639544 = qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ45156047;     qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ45156047 = qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ28758401;     qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ28758401 = qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ26965278;     qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ26965278 = qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ3673212;     qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ3673212 = qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ77936327;     qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ77936327 = qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ75891533;     qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ75891533 = qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ59324142;     qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ59324142 = qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ12622564;     qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ12622564 = qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ21562305;     qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ21562305 = qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ71593681;     qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ71593681 = qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ45032195;     qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ45032195 = qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ12763306;     qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ12763306 = qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ25865444;     qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ25865444 = qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ820492;     qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ820492 = qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ43096568;     qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ43096568 = qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ27610298;     qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ27610298 = qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ62794589;     qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ62794589 = qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ59095524;     qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ59095524 = qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ92757079;     qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ92757079 = qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ78790844;     qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ78790844 = qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ98731849;     qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ98731849 = qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ97271013;     qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ97271013 = qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ67436300;     qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ67436300 = qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ19870069;     qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ19870069 = qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ55394959;     qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ55394959 = qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ3145742;     qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ3145742 = qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ91080495;     qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ91080495 = qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ47487994;     qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ47487994 = qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ71869854;     qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ71869854 = qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ43652426;     qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ43652426 = qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ79444168;     qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ79444168 = qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ8860093;     qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ8860093 = qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ45505574;     qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ45505574 = qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ13026699;     qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ13026699 = qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ68395033;     qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ68395033 = qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ27909340;     qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ27909340 = qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ41294420;     qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ41294420 = qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ15832540;     qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ15832540 = qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ39660397;     qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ39660397 = qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ30954049;     qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ30954049 = qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ95003423;     qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ95003423 = qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ65518729;     qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ65518729 = qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ39945155;     qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ39945155 = qtnVVWHaErnHiPMFgxGbuGjWsEOKeZ15400987;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void ilSLlmfwJyuDbuqwMovmJulmH79726313() {     double XKTmMnkUkBBHKsoXvuXIZeKouXnIoh37223208 = -520964214;    double XKTmMnkUkBBHKsoXvuXIZeKouXnIoh75980490 = -753344120;    double XKTmMnkUkBBHKsoXvuXIZeKouXnIoh49661790 = -611382186;    double XKTmMnkUkBBHKsoXvuXIZeKouXnIoh94368175 = -212164558;    double XKTmMnkUkBBHKsoXvuXIZeKouXnIoh9206849 = -420194329;    double XKTmMnkUkBBHKsoXvuXIZeKouXnIoh35471188 = -477957008;    double XKTmMnkUkBBHKsoXvuXIZeKouXnIoh26206244 = -438191247;    double XKTmMnkUkBBHKsoXvuXIZeKouXnIoh96205748 = -899753518;    double XKTmMnkUkBBHKsoXvuXIZeKouXnIoh94940174 = 94219557;    double XKTmMnkUkBBHKsoXvuXIZeKouXnIoh30215658 = -14838083;    double XKTmMnkUkBBHKsoXvuXIZeKouXnIoh8782618 = -517348637;    double XKTmMnkUkBBHKsoXvuXIZeKouXnIoh24498436 = -675196969;    double XKTmMnkUkBBHKsoXvuXIZeKouXnIoh57400156 = 88701584;    double XKTmMnkUkBBHKsoXvuXIZeKouXnIoh7517925 = -75533686;    double XKTmMnkUkBBHKsoXvuXIZeKouXnIoh71789480 = -848794616;    double XKTmMnkUkBBHKsoXvuXIZeKouXnIoh62342298 = -911305769;    double XKTmMnkUkBBHKsoXvuXIZeKouXnIoh93213367 = -563128275;    double XKTmMnkUkBBHKsoXvuXIZeKouXnIoh58395298 = 11200496;    double XKTmMnkUkBBHKsoXvuXIZeKouXnIoh86937564 = -942938028;    double XKTmMnkUkBBHKsoXvuXIZeKouXnIoh57801890 = 57034750;    double XKTmMnkUkBBHKsoXvuXIZeKouXnIoh56756946 = -975070044;    double XKTmMnkUkBBHKsoXvuXIZeKouXnIoh97520387 = -57106519;    double XKTmMnkUkBBHKsoXvuXIZeKouXnIoh86344547 = -158134225;    double XKTmMnkUkBBHKsoXvuXIZeKouXnIoh96056094 = -670263813;    double XKTmMnkUkBBHKsoXvuXIZeKouXnIoh8165296 = -769670775;    double XKTmMnkUkBBHKsoXvuXIZeKouXnIoh11683094 = -970505485;    double XKTmMnkUkBBHKsoXvuXIZeKouXnIoh80816264 = -359744535;    double XKTmMnkUkBBHKsoXvuXIZeKouXnIoh54829157 = 85026429;    double XKTmMnkUkBBHKsoXvuXIZeKouXnIoh81348499 = -150363377;    double XKTmMnkUkBBHKsoXvuXIZeKouXnIoh84909470 = -62427797;    double XKTmMnkUkBBHKsoXvuXIZeKouXnIoh7475134 = -725894408;    double XKTmMnkUkBBHKsoXvuXIZeKouXnIoh35195371 = -954227202;    double XKTmMnkUkBBHKsoXvuXIZeKouXnIoh62042336 = -377259568;    double XKTmMnkUkBBHKsoXvuXIZeKouXnIoh51918136 = -45235189;    double XKTmMnkUkBBHKsoXvuXIZeKouXnIoh8622364 = -355270423;    double XKTmMnkUkBBHKsoXvuXIZeKouXnIoh20243202 = -325099961;    double XKTmMnkUkBBHKsoXvuXIZeKouXnIoh56633337 = -876107890;    double XKTmMnkUkBBHKsoXvuXIZeKouXnIoh60605602 = -339559223;    double XKTmMnkUkBBHKsoXvuXIZeKouXnIoh28640144 = -227576425;    double XKTmMnkUkBBHKsoXvuXIZeKouXnIoh32176397 = -368767222;    double XKTmMnkUkBBHKsoXvuXIZeKouXnIoh71972570 = -168697739;    double XKTmMnkUkBBHKsoXvuXIZeKouXnIoh23347753 = -315716721;    double XKTmMnkUkBBHKsoXvuXIZeKouXnIoh1694964 = -150095941;    double XKTmMnkUkBBHKsoXvuXIZeKouXnIoh26236152 = -566725469;    double XKTmMnkUkBBHKsoXvuXIZeKouXnIoh41423270 = -724536387;    double XKTmMnkUkBBHKsoXvuXIZeKouXnIoh6004808 = -988123188;    double XKTmMnkUkBBHKsoXvuXIZeKouXnIoh27905283 = -955397531;    double XKTmMnkUkBBHKsoXvuXIZeKouXnIoh34224453 = -6036369;    double XKTmMnkUkBBHKsoXvuXIZeKouXnIoh23167683 = -808925109;    double XKTmMnkUkBBHKsoXvuXIZeKouXnIoh58418567 = -235958021;    double XKTmMnkUkBBHKsoXvuXIZeKouXnIoh80066218 = -330321405;    double XKTmMnkUkBBHKsoXvuXIZeKouXnIoh80828678 = -817804962;    double XKTmMnkUkBBHKsoXvuXIZeKouXnIoh63874483 = -48755113;    double XKTmMnkUkBBHKsoXvuXIZeKouXnIoh85303825 = -918582841;    double XKTmMnkUkBBHKsoXvuXIZeKouXnIoh22969368 = -278733702;    double XKTmMnkUkBBHKsoXvuXIZeKouXnIoh39702820 = -363857696;    double XKTmMnkUkBBHKsoXvuXIZeKouXnIoh89635943 = -495209895;    double XKTmMnkUkBBHKsoXvuXIZeKouXnIoh53605695 = -941118374;    double XKTmMnkUkBBHKsoXvuXIZeKouXnIoh86202880 = -442493783;    double XKTmMnkUkBBHKsoXvuXIZeKouXnIoh97523754 = -449688845;    double XKTmMnkUkBBHKsoXvuXIZeKouXnIoh54654923 = -18212473;    double XKTmMnkUkBBHKsoXvuXIZeKouXnIoh71377086 = -423217676;    double XKTmMnkUkBBHKsoXvuXIZeKouXnIoh14857250 = -649390142;    double XKTmMnkUkBBHKsoXvuXIZeKouXnIoh10030704 = -843352646;    double XKTmMnkUkBBHKsoXvuXIZeKouXnIoh22740524 = -288943676;    double XKTmMnkUkBBHKsoXvuXIZeKouXnIoh73587247 = -563121435;    double XKTmMnkUkBBHKsoXvuXIZeKouXnIoh62456100 = -197937401;    double XKTmMnkUkBBHKsoXvuXIZeKouXnIoh5482021 = -866063227;    double XKTmMnkUkBBHKsoXvuXIZeKouXnIoh98895560 = -720263263;    double XKTmMnkUkBBHKsoXvuXIZeKouXnIoh51546279 = -423694656;    double XKTmMnkUkBBHKsoXvuXIZeKouXnIoh5708961 = 64802120;    double XKTmMnkUkBBHKsoXvuXIZeKouXnIoh32607765 = -123569052;    double XKTmMnkUkBBHKsoXvuXIZeKouXnIoh29755155 = -761223079;    double XKTmMnkUkBBHKsoXvuXIZeKouXnIoh54761167 = -474170806;    double XKTmMnkUkBBHKsoXvuXIZeKouXnIoh85829320 = -774267512;    double XKTmMnkUkBBHKsoXvuXIZeKouXnIoh33409194 = -559353323;    double XKTmMnkUkBBHKsoXvuXIZeKouXnIoh95825423 = -907010578;    double XKTmMnkUkBBHKsoXvuXIZeKouXnIoh60108395 = -591408757;    double XKTmMnkUkBBHKsoXvuXIZeKouXnIoh54632824 = -945727426;    double XKTmMnkUkBBHKsoXvuXIZeKouXnIoh2160488 = -781547588;    double XKTmMnkUkBBHKsoXvuXIZeKouXnIoh83777811 = 84892045;    double XKTmMnkUkBBHKsoXvuXIZeKouXnIoh46591811 = -253708167;    double XKTmMnkUkBBHKsoXvuXIZeKouXnIoh31661475 = -106048462;    double XKTmMnkUkBBHKsoXvuXIZeKouXnIoh22929932 = -914405356;    double XKTmMnkUkBBHKsoXvuXIZeKouXnIoh4843252 = -732106393;    double XKTmMnkUkBBHKsoXvuXIZeKouXnIoh26646456 = -908089447;    double XKTmMnkUkBBHKsoXvuXIZeKouXnIoh71320887 = -805472089;    double XKTmMnkUkBBHKsoXvuXIZeKouXnIoh76738510 = -458676728;    double XKTmMnkUkBBHKsoXvuXIZeKouXnIoh28948768 = -766501488;    double XKTmMnkUkBBHKsoXvuXIZeKouXnIoh68919543 = -991412728;    double XKTmMnkUkBBHKsoXvuXIZeKouXnIoh30607259 = -829890066;    double XKTmMnkUkBBHKsoXvuXIZeKouXnIoh3027642 = -934989516;    double XKTmMnkUkBBHKsoXvuXIZeKouXnIoh74402722 = -897065440;    double XKTmMnkUkBBHKsoXvuXIZeKouXnIoh31116389 = -777887581;    double XKTmMnkUkBBHKsoXvuXIZeKouXnIoh77521473 = -250554750;    double XKTmMnkUkBBHKsoXvuXIZeKouXnIoh595484 = -745480064;    double XKTmMnkUkBBHKsoXvuXIZeKouXnIoh8490504 = -666326580;    double XKTmMnkUkBBHKsoXvuXIZeKouXnIoh91664260 = -306743295;    double XKTmMnkUkBBHKsoXvuXIZeKouXnIoh3495629 = -177781793;    double XKTmMnkUkBBHKsoXvuXIZeKouXnIoh67836023 = -520964214;     XKTmMnkUkBBHKsoXvuXIZeKouXnIoh37223208 = XKTmMnkUkBBHKsoXvuXIZeKouXnIoh75980490;     XKTmMnkUkBBHKsoXvuXIZeKouXnIoh75980490 = XKTmMnkUkBBHKsoXvuXIZeKouXnIoh49661790;     XKTmMnkUkBBHKsoXvuXIZeKouXnIoh49661790 = XKTmMnkUkBBHKsoXvuXIZeKouXnIoh94368175;     XKTmMnkUkBBHKsoXvuXIZeKouXnIoh94368175 = XKTmMnkUkBBHKsoXvuXIZeKouXnIoh9206849;     XKTmMnkUkBBHKsoXvuXIZeKouXnIoh9206849 = XKTmMnkUkBBHKsoXvuXIZeKouXnIoh35471188;     XKTmMnkUkBBHKsoXvuXIZeKouXnIoh35471188 = XKTmMnkUkBBHKsoXvuXIZeKouXnIoh26206244;     XKTmMnkUkBBHKsoXvuXIZeKouXnIoh26206244 = XKTmMnkUkBBHKsoXvuXIZeKouXnIoh96205748;     XKTmMnkUkBBHKsoXvuXIZeKouXnIoh96205748 = XKTmMnkUkBBHKsoXvuXIZeKouXnIoh94940174;     XKTmMnkUkBBHKsoXvuXIZeKouXnIoh94940174 = XKTmMnkUkBBHKsoXvuXIZeKouXnIoh30215658;     XKTmMnkUkBBHKsoXvuXIZeKouXnIoh30215658 = XKTmMnkUkBBHKsoXvuXIZeKouXnIoh8782618;     XKTmMnkUkBBHKsoXvuXIZeKouXnIoh8782618 = XKTmMnkUkBBHKsoXvuXIZeKouXnIoh24498436;     XKTmMnkUkBBHKsoXvuXIZeKouXnIoh24498436 = XKTmMnkUkBBHKsoXvuXIZeKouXnIoh57400156;     XKTmMnkUkBBHKsoXvuXIZeKouXnIoh57400156 = XKTmMnkUkBBHKsoXvuXIZeKouXnIoh7517925;     XKTmMnkUkBBHKsoXvuXIZeKouXnIoh7517925 = XKTmMnkUkBBHKsoXvuXIZeKouXnIoh71789480;     XKTmMnkUkBBHKsoXvuXIZeKouXnIoh71789480 = XKTmMnkUkBBHKsoXvuXIZeKouXnIoh62342298;     XKTmMnkUkBBHKsoXvuXIZeKouXnIoh62342298 = XKTmMnkUkBBHKsoXvuXIZeKouXnIoh93213367;     XKTmMnkUkBBHKsoXvuXIZeKouXnIoh93213367 = XKTmMnkUkBBHKsoXvuXIZeKouXnIoh58395298;     XKTmMnkUkBBHKsoXvuXIZeKouXnIoh58395298 = XKTmMnkUkBBHKsoXvuXIZeKouXnIoh86937564;     XKTmMnkUkBBHKsoXvuXIZeKouXnIoh86937564 = XKTmMnkUkBBHKsoXvuXIZeKouXnIoh57801890;     XKTmMnkUkBBHKsoXvuXIZeKouXnIoh57801890 = XKTmMnkUkBBHKsoXvuXIZeKouXnIoh56756946;     XKTmMnkUkBBHKsoXvuXIZeKouXnIoh56756946 = XKTmMnkUkBBHKsoXvuXIZeKouXnIoh97520387;     XKTmMnkUkBBHKsoXvuXIZeKouXnIoh97520387 = XKTmMnkUkBBHKsoXvuXIZeKouXnIoh86344547;     XKTmMnkUkBBHKsoXvuXIZeKouXnIoh86344547 = XKTmMnkUkBBHKsoXvuXIZeKouXnIoh96056094;     XKTmMnkUkBBHKsoXvuXIZeKouXnIoh96056094 = XKTmMnkUkBBHKsoXvuXIZeKouXnIoh8165296;     XKTmMnkUkBBHKsoXvuXIZeKouXnIoh8165296 = XKTmMnkUkBBHKsoXvuXIZeKouXnIoh11683094;     XKTmMnkUkBBHKsoXvuXIZeKouXnIoh11683094 = XKTmMnkUkBBHKsoXvuXIZeKouXnIoh80816264;     XKTmMnkUkBBHKsoXvuXIZeKouXnIoh80816264 = XKTmMnkUkBBHKsoXvuXIZeKouXnIoh54829157;     XKTmMnkUkBBHKsoXvuXIZeKouXnIoh54829157 = XKTmMnkUkBBHKsoXvuXIZeKouXnIoh81348499;     XKTmMnkUkBBHKsoXvuXIZeKouXnIoh81348499 = XKTmMnkUkBBHKsoXvuXIZeKouXnIoh84909470;     XKTmMnkUkBBHKsoXvuXIZeKouXnIoh84909470 = XKTmMnkUkBBHKsoXvuXIZeKouXnIoh7475134;     XKTmMnkUkBBHKsoXvuXIZeKouXnIoh7475134 = XKTmMnkUkBBHKsoXvuXIZeKouXnIoh35195371;     XKTmMnkUkBBHKsoXvuXIZeKouXnIoh35195371 = XKTmMnkUkBBHKsoXvuXIZeKouXnIoh62042336;     XKTmMnkUkBBHKsoXvuXIZeKouXnIoh62042336 = XKTmMnkUkBBHKsoXvuXIZeKouXnIoh51918136;     XKTmMnkUkBBHKsoXvuXIZeKouXnIoh51918136 = XKTmMnkUkBBHKsoXvuXIZeKouXnIoh8622364;     XKTmMnkUkBBHKsoXvuXIZeKouXnIoh8622364 = XKTmMnkUkBBHKsoXvuXIZeKouXnIoh20243202;     XKTmMnkUkBBHKsoXvuXIZeKouXnIoh20243202 = XKTmMnkUkBBHKsoXvuXIZeKouXnIoh56633337;     XKTmMnkUkBBHKsoXvuXIZeKouXnIoh56633337 = XKTmMnkUkBBHKsoXvuXIZeKouXnIoh60605602;     XKTmMnkUkBBHKsoXvuXIZeKouXnIoh60605602 = XKTmMnkUkBBHKsoXvuXIZeKouXnIoh28640144;     XKTmMnkUkBBHKsoXvuXIZeKouXnIoh28640144 = XKTmMnkUkBBHKsoXvuXIZeKouXnIoh32176397;     XKTmMnkUkBBHKsoXvuXIZeKouXnIoh32176397 = XKTmMnkUkBBHKsoXvuXIZeKouXnIoh71972570;     XKTmMnkUkBBHKsoXvuXIZeKouXnIoh71972570 = XKTmMnkUkBBHKsoXvuXIZeKouXnIoh23347753;     XKTmMnkUkBBHKsoXvuXIZeKouXnIoh23347753 = XKTmMnkUkBBHKsoXvuXIZeKouXnIoh1694964;     XKTmMnkUkBBHKsoXvuXIZeKouXnIoh1694964 = XKTmMnkUkBBHKsoXvuXIZeKouXnIoh26236152;     XKTmMnkUkBBHKsoXvuXIZeKouXnIoh26236152 = XKTmMnkUkBBHKsoXvuXIZeKouXnIoh41423270;     XKTmMnkUkBBHKsoXvuXIZeKouXnIoh41423270 = XKTmMnkUkBBHKsoXvuXIZeKouXnIoh6004808;     XKTmMnkUkBBHKsoXvuXIZeKouXnIoh6004808 = XKTmMnkUkBBHKsoXvuXIZeKouXnIoh27905283;     XKTmMnkUkBBHKsoXvuXIZeKouXnIoh27905283 = XKTmMnkUkBBHKsoXvuXIZeKouXnIoh34224453;     XKTmMnkUkBBHKsoXvuXIZeKouXnIoh34224453 = XKTmMnkUkBBHKsoXvuXIZeKouXnIoh23167683;     XKTmMnkUkBBHKsoXvuXIZeKouXnIoh23167683 = XKTmMnkUkBBHKsoXvuXIZeKouXnIoh58418567;     XKTmMnkUkBBHKsoXvuXIZeKouXnIoh58418567 = XKTmMnkUkBBHKsoXvuXIZeKouXnIoh80066218;     XKTmMnkUkBBHKsoXvuXIZeKouXnIoh80066218 = XKTmMnkUkBBHKsoXvuXIZeKouXnIoh80828678;     XKTmMnkUkBBHKsoXvuXIZeKouXnIoh80828678 = XKTmMnkUkBBHKsoXvuXIZeKouXnIoh63874483;     XKTmMnkUkBBHKsoXvuXIZeKouXnIoh63874483 = XKTmMnkUkBBHKsoXvuXIZeKouXnIoh85303825;     XKTmMnkUkBBHKsoXvuXIZeKouXnIoh85303825 = XKTmMnkUkBBHKsoXvuXIZeKouXnIoh22969368;     XKTmMnkUkBBHKsoXvuXIZeKouXnIoh22969368 = XKTmMnkUkBBHKsoXvuXIZeKouXnIoh39702820;     XKTmMnkUkBBHKsoXvuXIZeKouXnIoh39702820 = XKTmMnkUkBBHKsoXvuXIZeKouXnIoh89635943;     XKTmMnkUkBBHKsoXvuXIZeKouXnIoh89635943 = XKTmMnkUkBBHKsoXvuXIZeKouXnIoh53605695;     XKTmMnkUkBBHKsoXvuXIZeKouXnIoh53605695 = XKTmMnkUkBBHKsoXvuXIZeKouXnIoh86202880;     XKTmMnkUkBBHKsoXvuXIZeKouXnIoh86202880 = XKTmMnkUkBBHKsoXvuXIZeKouXnIoh97523754;     XKTmMnkUkBBHKsoXvuXIZeKouXnIoh97523754 = XKTmMnkUkBBHKsoXvuXIZeKouXnIoh54654923;     XKTmMnkUkBBHKsoXvuXIZeKouXnIoh54654923 = XKTmMnkUkBBHKsoXvuXIZeKouXnIoh71377086;     XKTmMnkUkBBHKsoXvuXIZeKouXnIoh71377086 = XKTmMnkUkBBHKsoXvuXIZeKouXnIoh14857250;     XKTmMnkUkBBHKsoXvuXIZeKouXnIoh14857250 = XKTmMnkUkBBHKsoXvuXIZeKouXnIoh10030704;     XKTmMnkUkBBHKsoXvuXIZeKouXnIoh10030704 = XKTmMnkUkBBHKsoXvuXIZeKouXnIoh22740524;     XKTmMnkUkBBHKsoXvuXIZeKouXnIoh22740524 = XKTmMnkUkBBHKsoXvuXIZeKouXnIoh73587247;     XKTmMnkUkBBHKsoXvuXIZeKouXnIoh73587247 = XKTmMnkUkBBHKsoXvuXIZeKouXnIoh62456100;     XKTmMnkUkBBHKsoXvuXIZeKouXnIoh62456100 = XKTmMnkUkBBHKsoXvuXIZeKouXnIoh5482021;     XKTmMnkUkBBHKsoXvuXIZeKouXnIoh5482021 = XKTmMnkUkBBHKsoXvuXIZeKouXnIoh98895560;     XKTmMnkUkBBHKsoXvuXIZeKouXnIoh98895560 = XKTmMnkUkBBHKsoXvuXIZeKouXnIoh51546279;     XKTmMnkUkBBHKsoXvuXIZeKouXnIoh51546279 = XKTmMnkUkBBHKsoXvuXIZeKouXnIoh5708961;     XKTmMnkUkBBHKsoXvuXIZeKouXnIoh5708961 = XKTmMnkUkBBHKsoXvuXIZeKouXnIoh32607765;     XKTmMnkUkBBHKsoXvuXIZeKouXnIoh32607765 = XKTmMnkUkBBHKsoXvuXIZeKouXnIoh29755155;     XKTmMnkUkBBHKsoXvuXIZeKouXnIoh29755155 = XKTmMnkUkBBHKsoXvuXIZeKouXnIoh54761167;     XKTmMnkUkBBHKsoXvuXIZeKouXnIoh54761167 = XKTmMnkUkBBHKsoXvuXIZeKouXnIoh85829320;     XKTmMnkUkBBHKsoXvuXIZeKouXnIoh85829320 = XKTmMnkUkBBHKsoXvuXIZeKouXnIoh33409194;     XKTmMnkUkBBHKsoXvuXIZeKouXnIoh33409194 = XKTmMnkUkBBHKsoXvuXIZeKouXnIoh95825423;     XKTmMnkUkBBHKsoXvuXIZeKouXnIoh95825423 = XKTmMnkUkBBHKsoXvuXIZeKouXnIoh60108395;     XKTmMnkUkBBHKsoXvuXIZeKouXnIoh60108395 = XKTmMnkUkBBHKsoXvuXIZeKouXnIoh54632824;     XKTmMnkUkBBHKsoXvuXIZeKouXnIoh54632824 = XKTmMnkUkBBHKsoXvuXIZeKouXnIoh2160488;     XKTmMnkUkBBHKsoXvuXIZeKouXnIoh2160488 = XKTmMnkUkBBHKsoXvuXIZeKouXnIoh83777811;     XKTmMnkUkBBHKsoXvuXIZeKouXnIoh83777811 = XKTmMnkUkBBHKsoXvuXIZeKouXnIoh46591811;     XKTmMnkUkBBHKsoXvuXIZeKouXnIoh46591811 = XKTmMnkUkBBHKsoXvuXIZeKouXnIoh31661475;     XKTmMnkUkBBHKsoXvuXIZeKouXnIoh31661475 = XKTmMnkUkBBHKsoXvuXIZeKouXnIoh22929932;     XKTmMnkUkBBHKsoXvuXIZeKouXnIoh22929932 = XKTmMnkUkBBHKsoXvuXIZeKouXnIoh4843252;     XKTmMnkUkBBHKsoXvuXIZeKouXnIoh4843252 = XKTmMnkUkBBHKsoXvuXIZeKouXnIoh26646456;     XKTmMnkUkBBHKsoXvuXIZeKouXnIoh26646456 = XKTmMnkUkBBHKsoXvuXIZeKouXnIoh71320887;     XKTmMnkUkBBHKsoXvuXIZeKouXnIoh71320887 = XKTmMnkUkBBHKsoXvuXIZeKouXnIoh76738510;     XKTmMnkUkBBHKsoXvuXIZeKouXnIoh76738510 = XKTmMnkUkBBHKsoXvuXIZeKouXnIoh28948768;     XKTmMnkUkBBHKsoXvuXIZeKouXnIoh28948768 = XKTmMnkUkBBHKsoXvuXIZeKouXnIoh68919543;     XKTmMnkUkBBHKsoXvuXIZeKouXnIoh68919543 = XKTmMnkUkBBHKsoXvuXIZeKouXnIoh30607259;     XKTmMnkUkBBHKsoXvuXIZeKouXnIoh30607259 = XKTmMnkUkBBHKsoXvuXIZeKouXnIoh3027642;     XKTmMnkUkBBHKsoXvuXIZeKouXnIoh3027642 = XKTmMnkUkBBHKsoXvuXIZeKouXnIoh74402722;     XKTmMnkUkBBHKsoXvuXIZeKouXnIoh74402722 = XKTmMnkUkBBHKsoXvuXIZeKouXnIoh31116389;     XKTmMnkUkBBHKsoXvuXIZeKouXnIoh31116389 = XKTmMnkUkBBHKsoXvuXIZeKouXnIoh77521473;     XKTmMnkUkBBHKsoXvuXIZeKouXnIoh77521473 = XKTmMnkUkBBHKsoXvuXIZeKouXnIoh595484;     XKTmMnkUkBBHKsoXvuXIZeKouXnIoh595484 = XKTmMnkUkBBHKsoXvuXIZeKouXnIoh8490504;     XKTmMnkUkBBHKsoXvuXIZeKouXnIoh8490504 = XKTmMnkUkBBHKsoXvuXIZeKouXnIoh91664260;     XKTmMnkUkBBHKsoXvuXIZeKouXnIoh91664260 = XKTmMnkUkBBHKsoXvuXIZeKouXnIoh3495629;     XKTmMnkUkBBHKsoXvuXIZeKouXnIoh3495629 = XKTmMnkUkBBHKsoXvuXIZeKouXnIoh67836023;     XKTmMnkUkBBHKsoXvuXIZeKouXnIoh67836023 = XKTmMnkUkBBHKsoXvuXIZeKouXnIoh37223208;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void jAEfUpfJAGexmXuUAcfIgPHRY41573572() {     double yDdalSVctDRgOlJtevvrTgdQlEGhyh88387290 = -343554557;    double yDdalSVctDRgOlJtevvrTgdQlEGhyh7347093 = -206894799;    double yDdalSVctDRgOlJtevvrTgdQlEGhyh16733354 = -173433872;    double yDdalSVctDRgOlJtevvrTgdQlEGhyh70891895 = -47351175;    double yDdalSVctDRgOlJtevvrTgdQlEGhyh56730960 = -982394225;    double yDdalSVctDRgOlJtevvrTgdQlEGhyh4295173 = -487351826;    double yDdalSVctDRgOlJtevvrTgdQlEGhyh5395269 = -207270128;    double yDdalSVctDRgOlJtevvrTgdQlEGhyh95440047 = -265294594;    double yDdalSVctDRgOlJtevvrTgdQlEGhyh28338924 = -611874602;    double yDdalSVctDRgOlJtevvrTgdQlEGhyh65171936 = -320768001;    double yDdalSVctDRgOlJtevvrTgdQlEGhyh57770331 = 2323518;    double yDdalSVctDRgOlJtevvrTgdQlEGhyh9425426 = -198093145;    double yDdalSVctDRgOlJtevvrTgdQlEGhyh42414626 = -561453621;    double yDdalSVctDRgOlJtevvrTgdQlEGhyh44481578 = -369735325;    double yDdalSVctDRgOlJtevvrTgdQlEGhyh29499366 = -588599384;    double yDdalSVctDRgOlJtevvrTgdQlEGhyh52348931 = 83515626;    double yDdalSVctDRgOlJtevvrTgdQlEGhyh48662359 = -859382433;    double yDdalSVctDRgOlJtevvrTgdQlEGhyh23627640 = -318425847;    double yDdalSVctDRgOlJtevvrTgdQlEGhyh30295276 = -926868009;    double yDdalSVctDRgOlJtevvrTgdQlEGhyh52198586 = -503868453;    double yDdalSVctDRgOlJtevvrTgdQlEGhyh38444901 = -508935980;    double yDdalSVctDRgOlJtevvrTgdQlEGhyh78822866 = -306564261;    double yDdalSVctDRgOlJtevvrTgdQlEGhyh30750539 = -705276278;    double yDdalSVctDRgOlJtevvrTgdQlEGhyh43134288 = -268882294;    double yDdalSVctDRgOlJtevvrTgdQlEGhyh46414264 = -331356913;    double yDdalSVctDRgOlJtevvrTgdQlEGhyh87235443 = -7612496;    double yDdalSVctDRgOlJtevvrTgdQlEGhyh15813664 = -892170517;    double yDdalSVctDRgOlJtevvrTgdQlEGhyh18030283 = -983265025;    double yDdalSVctDRgOlJtevvrTgdQlEGhyh9781371 = -169021392;    double yDdalSVctDRgOlJtevvrTgdQlEGhyh67644322 = -655678295;    double yDdalSVctDRgOlJtevvrTgdQlEGhyh84981081 = -670281705;    double yDdalSVctDRgOlJtevvrTgdQlEGhyh94299093 = -793640631;    double yDdalSVctDRgOlJtevvrTgdQlEGhyh89868863 = -374846058;    double yDdalSVctDRgOlJtevvrTgdQlEGhyh59375115 = -34206865;    double yDdalSVctDRgOlJtevvrTgdQlEGhyh93790377 = -917456170;    double yDdalSVctDRgOlJtevvrTgdQlEGhyh72655092 = -340055139;    double yDdalSVctDRgOlJtevvrTgdQlEGhyh67865475 = -836785157;    double yDdalSVctDRgOlJtevvrTgdQlEGhyh81668655 = -32251552;    double yDdalSVctDRgOlJtevvrTgdQlEGhyh45800898 = -756934485;    double yDdalSVctDRgOlJtevvrTgdQlEGhyh21616638 = -918139547;    double yDdalSVctDRgOlJtevvrTgdQlEGhyh54130799 = -306762017;    double yDdalSVctDRgOlJtevvrTgdQlEGhyh97064593 = -427585812;    double yDdalSVctDRgOlJtevvrTgdQlEGhyh60378763 = -766438958;    double yDdalSVctDRgOlJtevvrTgdQlEGhyh27054609 = 39478890;    double yDdalSVctDRgOlJtevvrTgdQlEGhyh9403075 = 24161977;    double yDdalSVctDRgOlJtevvrTgdQlEGhyh79233420 = -745262934;    double yDdalSVctDRgOlJtevvrTgdQlEGhyh55139983 = -401615874;    double yDdalSVctDRgOlJtevvrTgdQlEGhyh25833576 = 98836582;    double yDdalSVctDRgOlJtevvrTgdQlEGhyh43448712 = -572041424;    double yDdalSVctDRgOlJtevvrTgdQlEGhyh86083980 = -619029213;    double yDdalSVctDRgOlJtevvrTgdQlEGhyh13598084 = -406193617;    double yDdalSVctDRgOlJtevvrTgdQlEGhyh49893095 = -456109069;    double yDdalSVctDRgOlJtevvrTgdQlEGhyh75470039 = 23393781;    double yDdalSVctDRgOlJtevvrTgdQlEGhyh33351914 = -980630255;    double yDdalSVctDRgOlJtevvrTgdQlEGhyh3128671 = -985813815;    double yDdalSVctDRgOlJtevvrTgdQlEGhyh9564424 = 63009704;    double yDdalSVctDRgOlJtevvrTgdQlEGhyh76596553 = -501618522;    double yDdalSVctDRgOlJtevvrTgdQlEGhyh73599065 = -904551578;    double yDdalSVctDRgOlJtevvrTgdQlEGhyh24477632 = -715994262;    double yDdalSVctDRgOlJtevvrTgdQlEGhyh69495516 = -874781729;    double yDdalSVctDRgOlJtevvrTgdQlEGhyh88481509 = -595181309;    double yDdalSVctDRgOlJtevvrTgdQlEGhyh87364985 = -224005103;    double yDdalSVctDRgOlJtevvrTgdQlEGhyh85658676 = 3726798;    double yDdalSVctDRgOlJtevvrTgdQlEGhyh60694602 = -956196308;    double yDdalSVctDRgOlJtevvrTgdQlEGhyh80190855 = -650486297;    double yDdalSVctDRgOlJtevvrTgdQlEGhyh63471238 = -204035851;    double yDdalSVctDRgOlJtevvrTgdQlEGhyh19556562 = -823247087;    double yDdalSVctDRgOlJtevvrTgdQlEGhyh83039510 = -427246757;    double yDdalSVctDRgOlJtevvrTgdQlEGhyh50691200 = -452279155;    double yDdalSVctDRgOlJtevvrTgdQlEGhyh56844274 = -148544245;    double yDdalSVctDRgOlJtevvrTgdQlEGhyh84483455 = -79699217;    double yDdalSVctDRgOlJtevvrTgdQlEGhyh66993704 = -727130881;    double yDdalSVctDRgOlJtevvrTgdQlEGhyh77826742 = -561491362;    double yDdalSVctDRgOlJtevvrTgdQlEGhyh8678639 = 91271537;    double yDdalSVctDRgOlJtevvrTgdQlEGhyh98067787 = -97106436;    double yDdalSVctDRgOlJtevvrTgdQlEGhyh41380307 = 18649831;    double yDdalSVctDRgOlJtevvrTgdQlEGhyh18444104 = -540125303;    double yDdalSVctDRgOlJtevvrTgdQlEGhyh3695931 = -644755168;    double yDdalSVctDRgOlJtevvrTgdQlEGhyh33731213 = -193044272;    double yDdalSVctDRgOlJtevvrTgdQlEGhyh67180843 = -586093980;    double yDdalSVctDRgOlJtevvrTgdQlEGhyh32095460 = -605996623;    double yDdalSVctDRgOlJtevvrTgdQlEGhyh89980088 = -891007100;    double yDdalSVctDRgOlJtevvrTgdQlEGhyh74581570 = -311223601;    double yDdalSVctDRgOlJtevvrTgdQlEGhyh23697390 = -549992180;    double yDdalSVctDRgOlJtevvrTgdQlEGhyh54046239 = -149484679;    double yDdalSVctDRgOlJtevvrTgdQlEGhyh35087987 = -114172636;    double yDdalSVctDRgOlJtevvrTgdQlEGhyh18829054 = -717034413;    double yDdalSVctDRgOlJtevvrTgdQlEGhyh56516949 = -394215803;    double yDdalSVctDRgOlJtevvrTgdQlEGhyh56246445 = -48393051;    double yDdalSVctDRgOlJtevvrTgdQlEGhyh84225954 = -880465875;    double yDdalSVctDRgOlJtevvrTgdQlEGhyh96058538 = -838436618;    double yDdalSVctDRgOlJtevvrTgdQlEGhyh94266409 = -932233580;    double yDdalSVctDRgOlJtevvrTgdQlEGhyh57191023 = -316257291;    double yDdalSVctDRgOlJtevvrTgdQlEGhyh76305381 = -882152757;    double yDdalSVctDRgOlJtevvrTgdQlEGhyh33135129 = -222958238;    double yDdalSVctDRgOlJtevvrTgdQlEGhyh66765814 = 17243085;    double yDdalSVctDRgOlJtevvrTgdQlEGhyh11405917 = -331312610;    double yDdalSVctDRgOlJtevvrTgdQlEGhyh99684161 = -810242651;    double yDdalSVctDRgOlJtevvrTgdQlEGhyh46863754 = -310034813;    double yDdalSVctDRgOlJtevvrTgdQlEGhyh45931837 = -343554557;     yDdalSVctDRgOlJtevvrTgdQlEGhyh88387290 = yDdalSVctDRgOlJtevvrTgdQlEGhyh7347093;     yDdalSVctDRgOlJtevvrTgdQlEGhyh7347093 = yDdalSVctDRgOlJtevvrTgdQlEGhyh16733354;     yDdalSVctDRgOlJtevvrTgdQlEGhyh16733354 = yDdalSVctDRgOlJtevvrTgdQlEGhyh70891895;     yDdalSVctDRgOlJtevvrTgdQlEGhyh70891895 = yDdalSVctDRgOlJtevvrTgdQlEGhyh56730960;     yDdalSVctDRgOlJtevvrTgdQlEGhyh56730960 = yDdalSVctDRgOlJtevvrTgdQlEGhyh4295173;     yDdalSVctDRgOlJtevvrTgdQlEGhyh4295173 = yDdalSVctDRgOlJtevvrTgdQlEGhyh5395269;     yDdalSVctDRgOlJtevvrTgdQlEGhyh5395269 = yDdalSVctDRgOlJtevvrTgdQlEGhyh95440047;     yDdalSVctDRgOlJtevvrTgdQlEGhyh95440047 = yDdalSVctDRgOlJtevvrTgdQlEGhyh28338924;     yDdalSVctDRgOlJtevvrTgdQlEGhyh28338924 = yDdalSVctDRgOlJtevvrTgdQlEGhyh65171936;     yDdalSVctDRgOlJtevvrTgdQlEGhyh65171936 = yDdalSVctDRgOlJtevvrTgdQlEGhyh57770331;     yDdalSVctDRgOlJtevvrTgdQlEGhyh57770331 = yDdalSVctDRgOlJtevvrTgdQlEGhyh9425426;     yDdalSVctDRgOlJtevvrTgdQlEGhyh9425426 = yDdalSVctDRgOlJtevvrTgdQlEGhyh42414626;     yDdalSVctDRgOlJtevvrTgdQlEGhyh42414626 = yDdalSVctDRgOlJtevvrTgdQlEGhyh44481578;     yDdalSVctDRgOlJtevvrTgdQlEGhyh44481578 = yDdalSVctDRgOlJtevvrTgdQlEGhyh29499366;     yDdalSVctDRgOlJtevvrTgdQlEGhyh29499366 = yDdalSVctDRgOlJtevvrTgdQlEGhyh52348931;     yDdalSVctDRgOlJtevvrTgdQlEGhyh52348931 = yDdalSVctDRgOlJtevvrTgdQlEGhyh48662359;     yDdalSVctDRgOlJtevvrTgdQlEGhyh48662359 = yDdalSVctDRgOlJtevvrTgdQlEGhyh23627640;     yDdalSVctDRgOlJtevvrTgdQlEGhyh23627640 = yDdalSVctDRgOlJtevvrTgdQlEGhyh30295276;     yDdalSVctDRgOlJtevvrTgdQlEGhyh30295276 = yDdalSVctDRgOlJtevvrTgdQlEGhyh52198586;     yDdalSVctDRgOlJtevvrTgdQlEGhyh52198586 = yDdalSVctDRgOlJtevvrTgdQlEGhyh38444901;     yDdalSVctDRgOlJtevvrTgdQlEGhyh38444901 = yDdalSVctDRgOlJtevvrTgdQlEGhyh78822866;     yDdalSVctDRgOlJtevvrTgdQlEGhyh78822866 = yDdalSVctDRgOlJtevvrTgdQlEGhyh30750539;     yDdalSVctDRgOlJtevvrTgdQlEGhyh30750539 = yDdalSVctDRgOlJtevvrTgdQlEGhyh43134288;     yDdalSVctDRgOlJtevvrTgdQlEGhyh43134288 = yDdalSVctDRgOlJtevvrTgdQlEGhyh46414264;     yDdalSVctDRgOlJtevvrTgdQlEGhyh46414264 = yDdalSVctDRgOlJtevvrTgdQlEGhyh87235443;     yDdalSVctDRgOlJtevvrTgdQlEGhyh87235443 = yDdalSVctDRgOlJtevvrTgdQlEGhyh15813664;     yDdalSVctDRgOlJtevvrTgdQlEGhyh15813664 = yDdalSVctDRgOlJtevvrTgdQlEGhyh18030283;     yDdalSVctDRgOlJtevvrTgdQlEGhyh18030283 = yDdalSVctDRgOlJtevvrTgdQlEGhyh9781371;     yDdalSVctDRgOlJtevvrTgdQlEGhyh9781371 = yDdalSVctDRgOlJtevvrTgdQlEGhyh67644322;     yDdalSVctDRgOlJtevvrTgdQlEGhyh67644322 = yDdalSVctDRgOlJtevvrTgdQlEGhyh84981081;     yDdalSVctDRgOlJtevvrTgdQlEGhyh84981081 = yDdalSVctDRgOlJtevvrTgdQlEGhyh94299093;     yDdalSVctDRgOlJtevvrTgdQlEGhyh94299093 = yDdalSVctDRgOlJtevvrTgdQlEGhyh89868863;     yDdalSVctDRgOlJtevvrTgdQlEGhyh89868863 = yDdalSVctDRgOlJtevvrTgdQlEGhyh59375115;     yDdalSVctDRgOlJtevvrTgdQlEGhyh59375115 = yDdalSVctDRgOlJtevvrTgdQlEGhyh93790377;     yDdalSVctDRgOlJtevvrTgdQlEGhyh93790377 = yDdalSVctDRgOlJtevvrTgdQlEGhyh72655092;     yDdalSVctDRgOlJtevvrTgdQlEGhyh72655092 = yDdalSVctDRgOlJtevvrTgdQlEGhyh67865475;     yDdalSVctDRgOlJtevvrTgdQlEGhyh67865475 = yDdalSVctDRgOlJtevvrTgdQlEGhyh81668655;     yDdalSVctDRgOlJtevvrTgdQlEGhyh81668655 = yDdalSVctDRgOlJtevvrTgdQlEGhyh45800898;     yDdalSVctDRgOlJtevvrTgdQlEGhyh45800898 = yDdalSVctDRgOlJtevvrTgdQlEGhyh21616638;     yDdalSVctDRgOlJtevvrTgdQlEGhyh21616638 = yDdalSVctDRgOlJtevvrTgdQlEGhyh54130799;     yDdalSVctDRgOlJtevvrTgdQlEGhyh54130799 = yDdalSVctDRgOlJtevvrTgdQlEGhyh97064593;     yDdalSVctDRgOlJtevvrTgdQlEGhyh97064593 = yDdalSVctDRgOlJtevvrTgdQlEGhyh60378763;     yDdalSVctDRgOlJtevvrTgdQlEGhyh60378763 = yDdalSVctDRgOlJtevvrTgdQlEGhyh27054609;     yDdalSVctDRgOlJtevvrTgdQlEGhyh27054609 = yDdalSVctDRgOlJtevvrTgdQlEGhyh9403075;     yDdalSVctDRgOlJtevvrTgdQlEGhyh9403075 = yDdalSVctDRgOlJtevvrTgdQlEGhyh79233420;     yDdalSVctDRgOlJtevvrTgdQlEGhyh79233420 = yDdalSVctDRgOlJtevvrTgdQlEGhyh55139983;     yDdalSVctDRgOlJtevvrTgdQlEGhyh55139983 = yDdalSVctDRgOlJtevvrTgdQlEGhyh25833576;     yDdalSVctDRgOlJtevvrTgdQlEGhyh25833576 = yDdalSVctDRgOlJtevvrTgdQlEGhyh43448712;     yDdalSVctDRgOlJtevvrTgdQlEGhyh43448712 = yDdalSVctDRgOlJtevvrTgdQlEGhyh86083980;     yDdalSVctDRgOlJtevvrTgdQlEGhyh86083980 = yDdalSVctDRgOlJtevvrTgdQlEGhyh13598084;     yDdalSVctDRgOlJtevvrTgdQlEGhyh13598084 = yDdalSVctDRgOlJtevvrTgdQlEGhyh49893095;     yDdalSVctDRgOlJtevvrTgdQlEGhyh49893095 = yDdalSVctDRgOlJtevvrTgdQlEGhyh75470039;     yDdalSVctDRgOlJtevvrTgdQlEGhyh75470039 = yDdalSVctDRgOlJtevvrTgdQlEGhyh33351914;     yDdalSVctDRgOlJtevvrTgdQlEGhyh33351914 = yDdalSVctDRgOlJtevvrTgdQlEGhyh3128671;     yDdalSVctDRgOlJtevvrTgdQlEGhyh3128671 = yDdalSVctDRgOlJtevvrTgdQlEGhyh9564424;     yDdalSVctDRgOlJtevvrTgdQlEGhyh9564424 = yDdalSVctDRgOlJtevvrTgdQlEGhyh76596553;     yDdalSVctDRgOlJtevvrTgdQlEGhyh76596553 = yDdalSVctDRgOlJtevvrTgdQlEGhyh73599065;     yDdalSVctDRgOlJtevvrTgdQlEGhyh73599065 = yDdalSVctDRgOlJtevvrTgdQlEGhyh24477632;     yDdalSVctDRgOlJtevvrTgdQlEGhyh24477632 = yDdalSVctDRgOlJtevvrTgdQlEGhyh69495516;     yDdalSVctDRgOlJtevvrTgdQlEGhyh69495516 = yDdalSVctDRgOlJtevvrTgdQlEGhyh88481509;     yDdalSVctDRgOlJtevvrTgdQlEGhyh88481509 = yDdalSVctDRgOlJtevvrTgdQlEGhyh87364985;     yDdalSVctDRgOlJtevvrTgdQlEGhyh87364985 = yDdalSVctDRgOlJtevvrTgdQlEGhyh85658676;     yDdalSVctDRgOlJtevvrTgdQlEGhyh85658676 = yDdalSVctDRgOlJtevvrTgdQlEGhyh60694602;     yDdalSVctDRgOlJtevvrTgdQlEGhyh60694602 = yDdalSVctDRgOlJtevvrTgdQlEGhyh80190855;     yDdalSVctDRgOlJtevvrTgdQlEGhyh80190855 = yDdalSVctDRgOlJtevvrTgdQlEGhyh63471238;     yDdalSVctDRgOlJtevvrTgdQlEGhyh63471238 = yDdalSVctDRgOlJtevvrTgdQlEGhyh19556562;     yDdalSVctDRgOlJtevvrTgdQlEGhyh19556562 = yDdalSVctDRgOlJtevvrTgdQlEGhyh83039510;     yDdalSVctDRgOlJtevvrTgdQlEGhyh83039510 = yDdalSVctDRgOlJtevvrTgdQlEGhyh50691200;     yDdalSVctDRgOlJtevvrTgdQlEGhyh50691200 = yDdalSVctDRgOlJtevvrTgdQlEGhyh56844274;     yDdalSVctDRgOlJtevvrTgdQlEGhyh56844274 = yDdalSVctDRgOlJtevvrTgdQlEGhyh84483455;     yDdalSVctDRgOlJtevvrTgdQlEGhyh84483455 = yDdalSVctDRgOlJtevvrTgdQlEGhyh66993704;     yDdalSVctDRgOlJtevvrTgdQlEGhyh66993704 = yDdalSVctDRgOlJtevvrTgdQlEGhyh77826742;     yDdalSVctDRgOlJtevvrTgdQlEGhyh77826742 = yDdalSVctDRgOlJtevvrTgdQlEGhyh8678639;     yDdalSVctDRgOlJtevvrTgdQlEGhyh8678639 = yDdalSVctDRgOlJtevvrTgdQlEGhyh98067787;     yDdalSVctDRgOlJtevvrTgdQlEGhyh98067787 = yDdalSVctDRgOlJtevvrTgdQlEGhyh41380307;     yDdalSVctDRgOlJtevvrTgdQlEGhyh41380307 = yDdalSVctDRgOlJtevvrTgdQlEGhyh18444104;     yDdalSVctDRgOlJtevvrTgdQlEGhyh18444104 = yDdalSVctDRgOlJtevvrTgdQlEGhyh3695931;     yDdalSVctDRgOlJtevvrTgdQlEGhyh3695931 = yDdalSVctDRgOlJtevvrTgdQlEGhyh33731213;     yDdalSVctDRgOlJtevvrTgdQlEGhyh33731213 = yDdalSVctDRgOlJtevvrTgdQlEGhyh67180843;     yDdalSVctDRgOlJtevvrTgdQlEGhyh67180843 = yDdalSVctDRgOlJtevvrTgdQlEGhyh32095460;     yDdalSVctDRgOlJtevvrTgdQlEGhyh32095460 = yDdalSVctDRgOlJtevvrTgdQlEGhyh89980088;     yDdalSVctDRgOlJtevvrTgdQlEGhyh89980088 = yDdalSVctDRgOlJtevvrTgdQlEGhyh74581570;     yDdalSVctDRgOlJtevvrTgdQlEGhyh74581570 = yDdalSVctDRgOlJtevvrTgdQlEGhyh23697390;     yDdalSVctDRgOlJtevvrTgdQlEGhyh23697390 = yDdalSVctDRgOlJtevvrTgdQlEGhyh54046239;     yDdalSVctDRgOlJtevvrTgdQlEGhyh54046239 = yDdalSVctDRgOlJtevvrTgdQlEGhyh35087987;     yDdalSVctDRgOlJtevvrTgdQlEGhyh35087987 = yDdalSVctDRgOlJtevvrTgdQlEGhyh18829054;     yDdalSVctDRgOlJtevvrTgdQlEGhyh18829054 = yDdalSVctDRgOlJtevvrTgdQlEGhyh56516949;     yDdalSVctDRgOlJtevvrTgdQlEGhyh56516949 = yDdalSVctDRgOlJtevvrTgdQlEGhyh56246445;     yDdalSVctDRgOlJtevvrTgdQlEGhyh56246445 = yDdalSVctDRgOlJtevvrTgdQlEGhyh84225954;     yDdalSVctDRgOlJtevvrTgdQlEGhyh84225954 = yDdalSVctDRgOlJtevvrTgdQlEGhyh96058538;     yDdalSVctDRgOlJtevvrTgdQlEGhyh96058538 = yDdalSVctDRgOlJtevvrTgdQlEGhyh94266409;     yDdalSVctDRgOlJtevvrTgdQlEGhyh94266409 = yDdalSVctDRgOlJtevvrTgdQlEGhyh57191023;     yDdalSVctDRgOlJtevvrTgdQlEGhyh57191023 = yDdalSVctDRgOlJtevvrTgdQlEGhyh76305381;     yDdalSVctDRgOlJtevvrTgdQlEGhyh76305381 = yDdalSVctDRgOlJtevvrTgdQlEGhyh33135129;     yDdalSVctDRgOlJtevvrTgdQlEGhyh33135129 = yDdalSVctDRgOlJtevvrTgdQlEGhyh66765814;     yDdalSVctDRgOlJtevvrTgdQlEGhyh66765814 = yDdalSVctDRgOlJtevvrTgdQlEGhyh11405917;     yDdalSVctDRgOlJtevvrTgdQlEGhyh11405917 = yDdalSVctDRgOlJtevvrTgdQlEGhyh99684161;     yDdalSVctDRgOlJtevvrTgdQlEGhyh99684161 = yDdalSVctDRgOlJtevvrTgdQlEGhyh46863754;     yDdalSVctDRgOlJtevvrTgdQlEGhyh46863754 = yDdalSVctDRgOlJtevvrTgdQlEGhyh45931837;     yDdalSVctDRgOlJtevvrTgdQlEGhyh45931837 = yDdalSVctDRgOlJtevvrTgdQlEGhyh88387290;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void NoImeetIxDpCzpOBVlDlTyADI51178298() {     double rEWGTivxmpxdotsnmiOqnPReLHtnyo10209512 = -911769888;    double rEWGTivxmpxdotsnmiOqnPReLHtnyo68814897 = -589493651;    double rEWGTivxmpxdotsnmiOqnPReLHtnyo62460624 = -220651404;    double rEWGTivxmpxdotsnmiOqnPReLHtnyo2267042 = -252135350;    double rEWGTivxmpxdotsnmiOqnPReLHtnyo16865291 = -859645147;    double rEWGTivxmpxdotsnmiOqnPReLHtnyo28313489 = -498894984;    double rEWGTivxmpxdotsnmiOqnPReLHtnyo34415853 = -270588251;    double rEWGTivxmpxdotsnmiOqnPReLHtnyo82302676 = -273475442;    double rEWGTivxmpxdotsnmiOqnPReLHtnyo24862564 = -597670020;    double rEWGTivxmpxdotsnmiOqnPReLHtnyo26455162 = -190986399;    double rEWGTivxmpxdotsnmiOqnPReLHtnyo28686600 = -653434185;    double rEWGTivxmpxdotsnmiOqnPReLHtnyo25607309 = -301274751;    double rEWGTivxmpxdotsnmiOqnPReLHtnyo75403568 = 512590;    double rEWGTivxmpxdotsnmiOqnPReLHtnyo11448046 = -119812122;    double rEWGTivxmpxdotsnmiOqnPReLHtnyo24757161 = -515441303;    double rEWGTivxmpxdotsnmiOqnPReLHtnyo319657 = -358850915;    double rEWGTivxmpxdotsnmiOqnPReLHtnyo42111418 = -145207151;    double rEWGTivxmpxdotsnmiOqnPReLHtnyo86152943 = -240146765;    double rEWGTivxmpxdotsnmiOqnPReLHtnyo34932500 = 99996334;    double rEWGTivxmpxdotsnmiOqnPReLHtnyo33308229 = -995113509;    double rEWGTivxmpxdotsnmiOqnPReLHtnyo95599186 = -241014682;    double rEWGTivxmpxdotsnmiOqnPReLHtnyo43224845 = -377315425;    double rEWGTivxmpxdotsnmiOqnPReLHtnyo40221944 = -261303633;    double rEWGTivxmpxdotsnmiOqnPReLHtnyo80411909 = -678981160;    double rEWGTivxmpxdotsnmiOqnPReLHtnyo20344931 = -242253885;    double rEWGTivxmpxdotsnmiOqnPReLHtnyo76811297 = -334798024;    double rEWGTivxmpxdotsnmiOqnPReLHtnyo88850267 = -418974562;    double rEWGTivxmpxdotsnmiOqnPReLHtnyo53610108 = -847713258;    double rEWGTivxmpxdotsnmiOqnPReLHtnyo57678283 = -935967310;    double rEWGTivxmpxdotsnmiOqnPReLHtnyo13461400 = 68107511;    double rEWGTivxmpxdotsnmiOqnPReLHtnyo36146347 = 23990548;    double rEWGTivxmpxdotsnmiOqnPReLHtnyo13190419 = -569529462;    double rEWGTivxmpxdotsnmiOqnPReLHtnyo15188328 = -117449941;    double rEWGTivxmpxdotsnmiOqnPReLHtnyo31914233 = -810026492;    double rEWGTivxmpxdotsnmiOqnPReLHtnyo74624590 = 32725227;    double rEWGTivxmpxdotsnmiOqnPReLHtnyo42232052 = -354471119;    double rEWGTivxmpxdotsnmiOqnPReLHtnyo10947732 = -886402254;    double rEWGTivxmpxdotsnmiOqnPReLHtnyo85606517 = -613794310;    double rEWGTivxmpxdotsnmiOqnPReLHtnyo6181344 = -529339766;    double rEWGTivxmpxdotsnmiOqnPReLHtnyo34287284 = -275688548;    double rEWGTivxmpxdotsnmiOqnPReLHtnyo8506646 = -740901275;    double rEWGTivxmpxdotsnmiOqnPReLHtnyo13566765 = -115051889;    double rEWGTivxmpxdotsnmiOqnPReLHtnyo7746162 = -810405773;    double rEWGTivxmpxdotsnmiOqnPReLHtnyo75149467 = -969327279;    double rEWGTivxmpxdotsnmiOqnPReLHtnyo89318885 = -162526652;    double rEWGTivxmpxdotsnmiOqnPReLHtnyo18439900 = -448695164;    double rEWGTivxmpxdotsnmiOqnPReLHtnyo80808094 = -582623394;    double rEWGTivxmpxdotsnmiOqnPReLHtnyo7673328 = -739659407;    double rEWGTivxmpxdotsnmiOqnPReLHtnyo50512805 = -757157847;    double rEWGTivxmpxdotsnmiOqnPReLHtnyo2131457 = -598084398;    double rEWGTivxmpxdotsnmiOqnPReLHtnyo2059903 = -450082942;    double rEWGTivxmpxdotsnmiOqnPReLHtnyo46281759 = -781487150;    double rEWGTivxmpxdotsnmiOqnPReLHtnyo66692903 = 59798642;    double rEWGTivxmpxdotsnmiOqnPReLHtnyo61377036 = -71639315;    double rEWGTivxmpxdotsnmiOqnPReLHtnyo55579112 = -946935564;    double rEWGTivxmpxdotsnmiOqnPReLHtnyo66984666 = -434454464;    double rEWGTivxmpxdotsnmiOqnPReLHtnyo28592953 = -228190019;    double rEWGTivxmpxdotsnmiOqnPReLHtnyo82048714 = -541670245;    double rEWGTivxmpxdotsnmiOqnPReLHtnyo81922110 = 90118534;    double rEWGTivxmpxdotsnmiOqnPReLHtnyo40053994 = -424847123;    double rEWGTivxmpxdotsnmiOqnPReLHtnyo39463221 = 20079577;    double rEWGTivxmpxdotsnmiOqnPReLHtnyo80805744 = -422874994;    double rEWGTivxmpxdotsnmiOqnPReLHtnyo24624393 = -337508132;    double rEWGTivxmpxdotsnmiOqnPReLHtnyo11401164 = -565777532;    double rEWGTivxmpxdotsnmiOqnPReLHtnyo90308815 = -114976947;    double rEWGTivxmpxdotsnmiOqnPReLHtnyo15496181 = 16095277;    double rEWGTivxmpxdotsnmiOqnPReLHtnyo10418981 = -83824810;    double rEWGTivxmpxdotsnmiOqnPReLHtnyo43489336 = -189460919;    double rEWGTivxmpxdotsnmiOqnPReLHtnyo36823455 = -52537350;    double rEWGTivxmpxdotsnmiOqnPReLHtnyo82525109 = -60970184;    double rEWGTivxmpxdotsnmiOqnPReLHtnyo89371924 = -472448661;    double rEWGTivxmpxdotsnmiOqnPReLHtnyo56504901 = -531412841;    double rEWGTivxmpxdotsnmiOqnPReLHtnyo79971599 = -710806999;    double rEWGTivxmpxdotsnmiOqnPReLHtnyo645217 = -624315119;    double rEWGTivxmpxdotsnmiOqnPReLHtnyo24801584 = -154212234;    double rEWGTivxmpxdotsnmiOqnPReLHtnyo82032421 = -25962794;    double rEWGTivxmpxdotsnmiOqnPReLHtnyo35478683 = -566909653;    double rEWGTivxmpxdotsnmiOqnPReLHtnyo65072476 = -291976354;    double rEWGTivxmpxdotsnmiOqnPReLHtnyo91093024 = -416454508;    double rEWGTivxmpxdotsnmiOqnPReLHtnyo1905031 = -793558722;    double rEWGTivxmpxdotsnmiOqnPReLHtnyo96003202 = -752174631;    double rEWGTivxmpxdotsnmiOqnPReLHtnyo81176940 = -679315156;    double rEWGTivxmpxdotsnmiOqnPReLHtnyo3097304 = 9444588;    double rEWGTivxmpxdotsnmiOqnPReLHtnyo55546826 = -237882912;    double rEWGTivxmpxdotsnmiOqnPReLHtnyo11401498 = -481809547;    double rEWGTivxmpxdotsnmiOqnPReLHtnyo89864588 = -194522302;    double rEWGTivxmpxdotsnmiOqnPReLHtnyo46497516 = -529328104;    double rEWGTivxmpxdotsnmiOqnPReLHtnyo53811292 = 54189373;    double rEWGTivxmpxdotsnmiOqnPReLHtnyo76335120 = -863090929;    double rEWGTivxmpxdotsnmiOqnPReLHtnyo7639924 = -532820310;    double rEWGTivxmpxdotsnmiOqnPReLHtnyo13639099 = -26281100;    double rEWGTivxmpxdotsnmiOqnPReLHtnyo28899018 = -244732010;    double rEWGTivxmpxdotsnmiOqnPReLHtnyo3684407 = -603912845;    double rEWGTivxmpxdotsnmiOqnPReLHtnyo66127350 = -4492644;    double rEWGTivxmpxdotsnmiOqnPReLHtnyo94824062 = -195768125;    double rEWGTivxmpxdotsnmiOqnPReLHtnyo27700901 = -218026281;    double rEWGTivxmpxdotsnmiOqnPReLHtnyo88942371 = -777543758;    double rEWGTivxmpxdotsnmiOqnPReLHtnyo96344997 = -144628242;    double rEWGTivxmpxdotsnmiOqnPReLHtnyo84840652 = -754350332;    double rEWGTivxmpxdotsnmiOqnPReLHtnyo73822705 = -911769888;     rEWGTivxmpxdotsnmiOqnPReLHtnyo10209512 = rEWGTivxmpxdotsnmiOqnPReLHtnyo68814897;     rEWGTivxmpxdotsnmiOqnPReLHtnyo68814897 = rEWGTivxmpxdotsnmiOqnPReLHtnyo62460624;     rEWGTivxmpxdotsnmiOqnPReLHtnyo62460624 = rEWGTivxmpxdotsnmiOqnPReLHtnyo2267042;     rEWGTivxmpxdotsnmiOqnPReLHtnyo2267042 = rEWGTivxmpxdotsnmiOqnPReLHtnyo16865291;     rEWGTivxmpxdotsnmiOqnPReLHtnyo16865291 = rEWGTivxmpxdotsnmiOqnPReLHtnyo28313489;     rEWGTivxmpxdotsnmiOqnPReLHtnyo28313489 = rEWGTivxmpxdotsnmiOqnPReLHtnyo34415853;     rEWGTivxmpxdotsnmiOqnPReLHtnyo34415853 = rEWGTivxmpxdotsnmiOqnPReLHtnyo82302676;     rEWGTivxmpxdotsnmiOqnPReLHtnyo82302676 = rEWGTivxmpxdotsnmiOqnPReLHtnyo24862564;     rEWGTivxmpxdotsnmiOqnPReLHtnyo24862564 = rEWGTivxmpxdotsnmiOqnPReLHtnyo26455162;     rEWGTivxmpxdotsnmiOqnPReLHtnyo26455162 = rEWGTivxmpxdotsnmiOqnPReLHtnyo28686600;     rEWGTivxmpxdotsnmiOqnPReLHtnyo28686600 = rEWGTivxmpxdotsnmiOqnPReLHtnyo25607309;     rEWGTivxmpxdotsnmiOqnPReLHtnyo25607309 = rEWGTivxmpxdotsnmiOqnPReLHtnyo75403568;     rEWGTivxmpxdotsnmiOqnPReLHtnyo75403568 = rEWGTivxmpxdotsnmiOqnPReLHtnyo11448046;     rEWGTivxmpxdotsnmiOqnPReLHtnyo11448046 = rEWGTivxmpxdotsnmiOqnPReLHtnyo24757161;     rEWGTivxmpxdotsnmiOqnPReLHtnyo24757161 = rEWGTivxmpxdotsnmiOqnPReLHtnyo319657;     rEWGTivxmpxdotsnmiOqnPReLHtnyo319657 = rEWGTivxmpxdotsnmiOqnPReLHtnyo42111418;     rEWGTivxmpxdotsnmiOqnPReLHtnyo42111418 = rEWGTivxmpxdotsnmiOqnPReLHtnyo86152943;     rEWGTivxmpxdotsnmiOqnPReLHtnyo86152943 = rEWGTivxmpxdotsnmiOqnPReLHtnyo34932500;     rEWGTivxmpxdotsnmiOqnPReLHtnyo34932500 = rEWGTivxmpxdotsnmiOqnPReLHtnyo33308229;     rEWGTivxmpxdotsnmiOqnPReLHtnyo33308229 = rEWGTivxmpxdotsnmiOqnPReLHtnyo95599186;     rEWGTivxmpxdotsnmiOqnPReLHtnyo95599186 = rEWGTivxmpxdotsnmiOqnPReLHtnyo43224845;     rEWGTivxmpxdotsnmiOqnPReLHtnyo43224845 = rEWGTivxmpxdotsnmiOqnPReLHtnyo40221944;     rEWGTivxmpxdotsnmiOqnPReLHtnyo40221944 = rEWGTivxmpxdotsnmiOqnPReLHtnyo80411909;     rEWGTivxmpxdotsnmiOqnPReLHtnyo80411909 = rEWGTivxmpxdotsnmiOqnPReLHtnyo20344931;     rEWGTivxmpxdotsnmiOqnPReLHtnyo20344931 = rEWGTivxmpxdotsnmiOqnPReLHtnyo76811297;     rEWGTivxmpxdotsnmiOqnPReLHtnyo76811297 = rEWGTivxmpxdotsnmiOqnPReLHtnyo88850267;     rEWGTivxmpxdotsnmiOqnPReLHtnyo88850267 = rEWGTivxmpxdotsnmiOqnPReLHtnyo53610108;     rEWGTivxmpxdotsnmiOqnPReLHtnyo53610108 = rEWGTivxmpxdotsnmiOqnPReLHtnyo57678283;     rEWGTivxmpxdotsnmiOqnPReLHtnyo57678283 = rEWGTivxmpxdotsnmiOqnPReLHtnyo13461400;     rEWGTivxmpxdotsnmiOqnPReLHtnyo13461400 = rEWGTivxmpxdotsnmiOqnPReLHtnyo36146347;     rEWGTivxmpxdotsnmiOqnPReLHtnyo36146347 = rEWGTivxmpxdotsnmiOqnPReLHtnyo13190419;     rEWGTivxmpxdotsnmiOqnPReLHtnyo13190419 = rEWGTivxmpxdotsnmiOqnPReLHtnyo15188328;     rEWGTivxmpxdotsnmiOqnPReLHtnyo15188328 = rEWGTivxmpxdotsnmiOqnPReLHtnyo31914233;     rEWGTivxmpxdotsnmiOqnPReLHtnyo31914233 = rEWGTivxmpxdotsnmiOqnPReLHtnyo74624590;     rEWGTivxmpxdotsnmiOqnPReLHtnyo74624590 = rEWGTivxmpxdotsnmiOqnPReLHtnyo42232052;     rEWGTivxmpxdotsnmiOqnPReLHtnyo42232052 = rEWGTivxmpxdotsnmiOqnPReLHtnyo10947732;     rEWGTivxmpxdotsnmiOqnPReLHtnyo10947732 = rEWGTivxmpxdotsnmiOqnPReLHtnyo85606517;     rEWGTivxmpxdotsnmiOqnPReLHtnyo85606517 = rEWGTivxmpxdotsnmiOqnPReLHtnyo6181344;     rEWGTivxmpxdotsnmiOqnPReLHtnyo6181344 = rEWGTivxmpxdotsnmiOqnPReLHtnyo34287284;     rEWGTivxmpxdotsnmiOqnPReLHtnyo34287284 = rEWGTivxmpxdotsnmiOqnPReLHtnyo8506646;     rEWGTivxmpxdotsnmiOqnPReLHtnyo8506646 = rEWGTivxmpxdotsnmiOqnPReLHtnyo13566765;     rEWGTivxmpxdotsnmiOqnPReLHtnyo13566765 = rEWGTivxmpxdotsnmiOqnPReLHtnyo7746162;     rEWGTivxmpxdotsnmiOqnPReLHtnyo7746162 = rEWGTivxmpxdotsnmiOqnPReLHtnyo75149467;     rEWGTivxmpxdotsnmiOqnPReLHtnyo75149467 = rEWGTivxmpxdotsnmiOqnPReLHtnyo89318885;     rEWGTivxmpxdotsnmiOqnPReLHtnyo89318885 = rEWGTivxmpxdotsnmiOqnPReLHtnyo18439900;     rEWGTivxmpxdotsnmiOqnPReLHtnyo18439900 = rEWGTivxmpxdotsnmiOqnPReLHtnyo80808094;     rEWGTivxmpxdotsnmiOqnPReLHtnyo80808094 = rEWGTivxmpxdotsnmiOqnPReLHtnyo7673328;     rEWGTivxmpxdotsnmiOqnPReLHtnyo7673328 = rEWGTivxmpxdotsnmiOqnPReLHtnyo50512805;     rEWGTivxmpxdotsnmiOqnPReLHtnyo50512805 = rEWGTivxmpxdotsnmiOqnPReLHtnyo2131457;     rEWGTivxmpxdotsnmiOqnPReLHtnyo2131457 = rEWGTivxmpxdotsnmiOqnPReLHtnyo2059903;     rEWGTivxmpxdotsnmiOqnPReLHtnyo2059903 = rEWGTivxmpxdotsnmiOqnPReLHtnyo46281759;     rEWGTivxmpxdotsnmiOqnPReLHtnyo46281759 = rEWGTivxmpxdotsnmiOqnPReLHtnyo66692903;     rEWGTivxmpxdotsnmiOqnPReLHtnyo66692903 = rEWGTivxmpxdotsnmiOqnPReLHtnyo61377036;     rEWGTivxmpxdotsnmiOqnPReLHtnyo61377036 = rEWGTivxmpxdotsnmiOqnPReLHtnyo55579112;     rEWGTivxmpxdotsnmiOqnPReLHtnyo55579112 = rEWGTivxmpxdotsnmiOqnPReLHtnyo66984666;     rEWGTivxmpxdotsnmiOqnPReLHtnyo66984666 = rEWGTivxmpxdotsnmiOqnPReLHtnyo28592953;     rEWGTivxmpxdotsnmiOqnPReLHtnyo28592953 = rEWGTivxmpxdotsnmiOqnPReLHtnyo82048714;     rEWGTivxmpxdotsnmiOqnPReLHtnyo82048714 = rEWGTivxmpxdotsnmiOqnPReLHtnyo81922110;     rEWGTivxmpxdotsnmiOqnPReLHtnyo81922110 = rEWGTivxmpxdotsnmiOqnPReLHtnyo40053994;     rEWGTivxmpxdotsnmiOqnPReLHtnyo40053994 = rEWGTivxmpxdotsnmiOqnPReLHtnyo39463221;     rEWGTivxmpxdotsnmiOqnPReLHtnyo39463221 = rEWGTivxmpxdotsnmiOqnPReLHtnyo80805744;     rEWGTivxmpxdotsnmiOqnPReLHtnyo80805744 = rEWGTivxmpxdotsnmiOqnPReLHtnyo24624393;     rEWGTivxmpxdotsnmiOqnPReLHtnyo24624393 = rEWGTivxmpxdotsnmiOqnPReLHtnyo11401164;     rEWGTivxmpxdotsnmiOqnPReLHtnyo11401164 = rEWGTivxmpxdotsnmiOqnPReLHtnyo90308815;     rEWGTivxmpxdotsnmiOqnPReLHtnyo90308815 = rEWGTivxmpxdotsnmiOqnPReLHtnyo15496181;     rEWGTivxmpxdotsnmiOqnPReLHtnyo15496181 = rEWGTivxmpxdotsnmiOqnPReLHtnyo10418981;     rEWGTivxmpxdotsnmiOqnPReLHtnyo10418981 = rEWGTivxmpxdotsnmiOqnPReLHtnyo43489336;     rEWGTivxmpxdotsnmiOqnPReLHtnyo43489336 = rEWGTivxmpxdotsnmiOqnPReLHtnyo36823455;     rEWGTivxmpxdotsnmiOqnPReLHtnyo36823455 = rEWGTivxmpxdotsnmiOqnPReLHtnyo82525109;     rEWGTivxmpxdotsnmiOqnPReLHtnyo82525109 = rEWGTivxmpxdotsnmiOqnPReLHtnyo89371924;     rEWGTivxmpxdotsnmiOqnPReLHtnyo89371924 = rEWGTivxmpxdotsnmiOqnPReLHtnyo56504901;     rEWGTivxmpxdotsnmiOqnPReLHtnyo56504901 = rEWGTivxmpxdotsnmiOqnPReLHtnyo79971599;     rEWGTivxmpxdotsnmiOqnPReLHtnyo79971599 = rEWGTivxmpxdotsnmiOqnPReLHtnyo645217;     rEWGTivxmpxdotsnmiOqnPReLHtnyo645217 = rEWGTivxmpxdotsnmiOqnPReLHtnyo24801584;     rEWGTivxmpxdotsnmiOqnPReLHtnyo24801584 = rEWGTivxmpxdotsnmiOqnPReLHtnyo82032421;     rEWGTivxmpxdotsnmiOqnPReLHtnyo82032421 = rEWGTivxmpxdotsnmiOqnPReLHtnyo35478683;     rEWGTivxmpxdotsnmiOqnPReLHtnyo35478683 = rEWGTivxmpxdotsnmiOqnPReLHtnyo65072476;     rEWGTivxmpxdotsnmiOqnPReLHtnyo65072476 = rEWGTivxmpxdotsnmiOqnPReLHtnyo91093024;     rEWGTivxmpxdotsnmiOqnPReLHtnyo91093024 = rEWGTivxmpxdotsnmiOqnPReLHtnyo1905031;     rEWGTivxmpxdotsnmiOqnPReLHtnyo1905031 = rEWGTivxmpxdotsnmiOqnPReLHtnyo96003202;     rEWGTivxmpxdotsnmiOqnPReLHtnyo96003202 = rEWGTivxmpxdotsnmiOqnPReLHtnyo81176940;     rEWGTivxmpxdotsnmiOqnPReLHtnyo81176940 = rEWGTivxmpxdotsnmiOqnPReLHtnyo3097304;     rEWGTivxmpxdotsnmiOqnPReLHtnyo3097304 = rEWGTivxmpxdotsnmiOqnPReLHtnyo55546826;     rEWGTivxmpxdotsnmiOqnPReLHtnyo55546826 = rEWGTivxmpxdotsnmiOqnPReLHtnyo11401498;     rEWGTivxmpxdotsnmiOqnPReLHtnyo11401498 = rEWGTivxmpxdotsnmiOqnPReLHtnyo89864588;     rEWGTivxmpxdotsnmiOqnPReLHtnyo89864588 = rEWGTivxmpxdotsnmiOqnPReLHtnyo46497516;     rEWGTivxmpxdotsnmiOqnPReLHtnyo46497516 = rEWGTivxmpxdotsnmiOqnPReLHtnyo53811292;     rEWGTivxmpxdotsnmiOqnPReLHtnyo53811292 = rEWGTivxmpxdotsnmiOqnPReLHtnyo76335120;     rEWGTivxmpxdotsnmiOqnPReLHtnyo76335120 = rEWGTivxmpxdotsnmiOqnPReLHtnyo7639924;     rEWGTivxmpxdotsnmiOqnPReLHtnyo7639924 = rEWGTivxmpxdotsnmiOqnPReLHtnyo13639099;     rEWGTivxmpxdotsnmiOqnPReLHtnyo13639099 = rEWGTivxmpxdotsnmiOqnPReLHtnyo28899018;     rEWGTivxmpxdotsnmiOqnPReLHtnyo28899018 = rEWGTivxmpxdotsnmiOqnPReLHtnyo3684407;     rEWGTivxmpxdotsnmiOqnPReLHtnyo3684407 = rEWGTivxmpxdotsnmiOqnPReLHtnyo66127350;     rEWGTivxmpxdotsnmiOqnPReLHtnyo66127350 = rEWGTivxmpxdotsnmiOqnPReLHtnyo94824062;     rEWGTivxmpxdotsnmiOqnPReLHtnyo94824062 = rEWGTivxmpxdotsnmiOqnPReLHtnyo27700901;     rEWGTivxmpxdotsnmiOqnPReLHtnyo27700901 = rEWGTivxmpxdotsnmiOqnPReLHtnyo88942371;     rEWGTivxmpxdotsnmiOqnPReLHtnyo88942371 = rEWGTivxmpxdotsnmiOqnPReLHtnyo96344997;     rEWGTivxmpxdotsnmiOqnPReLHtnyo96344997 = rEWGTivxmpxdotsnmiOqnPReLHtnyo84840652;     rEWGTivxmpxdotsnmiOqnPReLHtnyo84840652 = rEWGTivxmpxdotsnmiOqnPReLHtnyo73822705;     rEWGTivxmpxdotsnmiOqnPReLHtnyo73822705 = rEWGTivxmpxdotsnmiOqnPReLHtnyo10209512;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void PxHACDXsSInstfgadTWFZzFWA13025557() {     double xULqjtveNHvRQEOrbVNBRiNgLzcdee61373594 = -734360231;    double xULqjtveNHvRQEOrbVNBRiNgLzcdee181500 = -43044330;    double xULqjtveNHvRQEOrbVNBRiNgLzcdee29532187 = -882703090;    double xULqjtveNHvRQEOrbVNBRiNgLzcdee78790761 = -87321967;    double xULqjtveNHvRQEOrbVNBRiNgLzcdee64389402 = -321845042;    double xULqjtveNHvRQEOrbVNBRiNgLzcdee97137473 = -508289803;    double xULqjtveNHvRQEOrbVNBRiNgLzcdee13604878 = -39667132;    double xULqjtveNHvRQEOrbVNBRiNgLzcdee81536975 = -739016517;    double xULqjtveNHvRQEOrbVNBRiNgLzcdee58261313 = -203764179;    double xULqjtveNHvRQEOrbVNBRiNgLzcdee61411441 = -496916316;    double xULqjtveNHvRQEOrbVNBRiNgLzcdee77674312 = -133762030;    double xULqjtveNHvRQEOrbVNBRiNgLzcdee10534298 = -924170927;    double xULqjtveNHvRQEOrbVNBRiNgLzcdee60418038 = -649642615;    double xULqjtveNHvRQEOrbVNBRiNgLzcdee48411699 = -414013761;    double xULqjtveNHvRQEOrbVNBRiNgLzcdee82467046 = -255246070;    double xULqjtveNHvRQEOrbVNBRiNgLzcdee90326289 = -464029519;    double xULqjtveNHvRQEOrbVNBRiNgLzcdee97560410 = -441461309;    double xULqjtveNHvRQEOrbVNBRiNgLzcdee51385285 = -569773108;    double xULqjtveNHvRQEOrbVNBRiNgLzcdee78290211 = -983933647;    double xULqjtveNHvRQEOrbVNBRiNgLzcdee27704925 = -456016711;    double xULqjtveNHvRQEOrbVNBRiNgLzcdee77287141 = -874880618;    double xULqjtveNHvRQEOrbVNBRiNgLzcdee24527325 = -626773167;    double xULqjtveNHvRQEOrbVNBRiNgLzcdee84627936 = -808445685;    double xULqjtveNHvRQEOrbVNBRiNgLzcdee27490103 = -277599642;    double xULqjtveNHvRQEOrbVNBRiNgLzcdee58593898 = -903940023;    double xULqjtveNHvRQEOrbVNBRiNgLzcdee52363648 = -471905036;    double xULqjtveNHvRQEOrbVNBRiNgLzcdee23847668 = -951400544;    double xULqjtveNHvRQEOrbVNBRiNgLzcdee16811234 = -816004711;    double xULqjtveNHvRQEOrbVNBRiNgLzcdee86111155 = -954625326;    double xULqjtveNHvRQEOrbVNBRiNgLzcdee96196251 = -525142986;    double xULqjtveNHvRQEOrbVNBRiNgLzcdee13652295 = 79603252;    double xULqjtveNHvRQEOrbVNBRiNgLzcdee72294141 = -408942891;    double xULqjtveNHvRQEOrbVNBRiNgLzcdee43014855 = -115036431;    double xULqjtveNHvRQEOrbVNBRiNgLzcdee39371213 = -798998168;    double xULqjtveNHvRQEOrbVNBRiNgLzcdee59792605 = -529460520;    double xULqjtveNHvRQEOrbVNBRiNgLzcdee94643942 = -369426297;    double xULqjtveNHvRQEOrbVNBRiNgLzcdee22179871 = -847079521;    double xULqjtveNHvRQEOrbVNBRiNgLzcdee6669571 = -306486639;    double xULqjtveNHvRQEOrbVNBRiNgLzcdee23342098 = 41302174;    double xULqjtveNHvRQEOrbVNBRiNgLzcdee23727524 = -825060872;    double xULqjtveNHvRQEOrbVNBRiNgLzcdee90664874 = -878965553;    double xULqjtveNHvRQEOrbVNBRiNgLzcdee87283605 = -226920979;    double xULqjtveNHvRQEOrbVNBRiNgLzcdee66429961 = -326748790;    double xULqjtveNHvRQEOrbVNBRiNgLzcdee75967924 = -363122920;    double xULqjtveNHvRQEOrbVNBRiNgLzcdee57298690 = -513828289;    double xULqjtveNHvRQEOrbVNBRiNgLzcdee91668512 = -205834910;    double xULqjtveNHvRQEOrbVNBRiNgLzcdee8042796 = -28841737;    double xULqjtveNHvRQEOrbVNBRiNgLzcdee99282450 = -634786456;    double xULqjtveNHvRQEOrbVNBRiNgLzcdee70793834 = -520274161;    double xULqjtveNHvRQEOrbVNBRiNgLzcdee29796870 = -981155591;    double xULqjtveNHvRQEOrbVNBRiNgLzcdee35591767 = -525955154;    double xULqjtveNHvRQEOrbVNBRiNgLzcdee15346176 = -419791257;    double xULqjtveNHvRQEOrbVNBRiNgLzcdee78288459 = -968052464;    double xULqjtveNHvRQEOrbVNBRiNgLzcdee9425125 = -133686729;    double xULqjtveNHvRQEOrbVNBRiNgLzcdee35738416 = -554015676;    double xULqjtveNHvRQEOrbVNBRiNgLzcdee36846270 = -7587064;    double xULqjtveNHvRQEOrbVNBRiNgLzcdee15553564 = -234598646;    double xULqjtveNHvRQEOrbVNBRiNgLzcdee2042085 = -505103448;    double xULqjtveNHvRQEOrbVNBRiNgLzcdee20196863 = -183381945;    double xULqjtveNHvRQEOrbVNBRiNgLzcdee12025755 = -849940007;    double xULqjtveNHvRQEOrbVNBRiNgLzcdee73289806 = -556889259;    double xULqjtveNHvRQEOrbVNBRiNgLzcdee96793644 = -223662422;    double xULqjtveNHvRQEOrbVNBRiNgLzcdee95425820 = -784391192;    double xULqjtveNHvRQEOrbVNBRiNgLzcdee62065062 = -678621194;    double xULqjtveNHvRQEOrbVNBRiNgLzcdee47759146 = -476519569;    double xULqjtveNHvRQEOrbVNBRiNgLzcdee5380172 = -724819140;    double xULqjtveNHvRQEOrbVNBRiNgLzcdee67519442 = -709134496;    double xULqjtveNHvRQEOrbVNBRiNgLzcdee21046826 = -850644448;    double xULqjtveNHvRQEOrbVNBRiNgLzcdee88619094 = -884553241;    double xULqjtveNHvRQEOrbVNBRiNgLzcdee87823103 = -885819773;    double xULqjtveNHvRQEOrbVNBRiNgLzcdee68146419 = -616949999;    double xULqjtveNHvRQEOrbVNBRiNgLzcdee90890840 = -34974670;    double xULqjtveNHvRQEOrbVNBRiNgLzcdee28043187 = -511075283;    double xULqjtveNHvRQEOrbVNBRiNgLzcdee54562688 = -58872776;    double xULqjtveNHvRQEOrbVNBRiNgLzcdee37040050 = -577051158;    double xULqjtveNHvRQEOrbVNBRiNgLzcdee90003535 = -547959639;    double xULqjtveNHvRQEOrbVNBRiNgLzcdee58097363 = -200024378;    double xULqjtveNHvRQEOrbVNBRiNgLzcdee8660012 = -345322766;    double xULqjtveNHvRQEOrbVNBRiNgLzcdee70191412 = -763771354;    double xULqjtveNHvRQEOrbVNBRiNgLzcdee66925386 = -598105114;    double xULqjtveNHvRQEOrbVNBRiNgLzcdee44320852 = -343063299;    double xULqjtveNHvRQEOrbVNBRiNgLzcdee24565218 = -216614088;    double xULqjtveNHvRQEOrbVNBRiNgLzcdee46017400 = -195730551;    double xULqjtveNHvRQEOrbVNBRiNgLzcdee56314285 = -973469736;    double xULqjtveNHvRQEOrbVNBRiNgLzcdee60604484 = -999187833;    double xULqjtveNHvRQEOrbVNBRiNgLzcdee98306119 = -500605491;    double xULqjtveNHvRQEOrbVNBRiNgLzcdee94005682 = -440890427;    double xULqjtveNHvRQEOrbVNBRiNgLzcdee33589730 = -981349702;    double xULqjtveNHvRQEOrbVNBRiNgLzcdee3632797 = -144982492;    double xULqjtveNHvRQEOrbVNBRiNgLzcdee22946335 = -421873457;    double xULqjtveNHvRQEOrbVNBRiNgLzcdee79090378 = -34827652;    double xULqjtveNHvRQEOrbVNBRiNgLzcdee20137787 = -241976073;    double xULqjtveNHvRQEOrbVNBRiNgLzcdee86472707 = -23104695;    double xULqjtveNHvRQEOrbVNBRiNgLzcdee11316343 = -108757819;    double xULqjtveNHvRQEOrbVNBRiNgLzcdee50437717 = -168171614;    double xULqjtveNHvRQEOrbVNBRiNgLzcdee93871230 = -555303132;    double xULqjtveNHvRQEOrbVNBRiNgLzcdee91857785 = -442529788;    double xULqjtveNHvRQEOrbVNBRiNgLzcdee4364899 = -648127597;    double xULqjtveNHvRQEOrbVNBRiNgLzcdee28208778 = -886603352;    double xULqjtveNHvRQEOrbVNBRiNgLzcdee51918519 = -734360231;     xULqjtveNHvRQEOrbVNBRiNgLzcdee61373594 = xULqjtveNHvRQEOrbVNBRiNgLzcdee181500;     xULqjtveNHvRQEOrbVNBRiNgLzcdee181500 = xULqjtveNHvRQEOrbVNBRiNgLzcdee29532187;     xULqjtveNHvRQEOrbVNBRiNgLzcdee29532187 = xULqjtveNHvRQEOrbVNBRiNgLzcdee78790761;     xULqjtveNHvRQEOrbVNBRiNgLzcdee78790761 = xULqjtveNHvRQEOrbVNBRiNgLzcdee64389402;     xULqjtveNHvRQEOrbVNBRiNgLzcdee64389402 = xULqjtveNHvRQEOrbVNBRiNgLzcdee97137473;     xULqjtveNHvRQEOrbVNBRiNgLzcdee97137473 = xULqjtveNHvRQEOrbVNBRiNgLzcdee13604878;     xULqjtveNHvRQEOrbVNBRiNgLzcdee13604878 = xULqjtveNHvRQEOrbVNBRiNgLzcdee81536975;     xULqjtveNHvRQEOrbVNBRiNgLzcdee81536975 = xULqjtveNHvRQEOrbVNBRiNgLzcdee58261313;     xULqjtveNHvRQEOrbVNBRiNgLzcdee58261313 = xULqjtveNHvRQEOrbVNBRiNgLzcdee61411441;     xULqjtveNHvRQEOrbVNBRiNgLzcdee61411441 = xULqjtveNHvRQEOrbVNBRiNgLzcdee77674312;     xULqjtveNHvRQEOrbVNBRiNgLzcdee77674312 = xULqjtveNHvRQEOrbVNBRiNgLzcdee10534298;     xULqjtveNHvRQEOrbVNBRiNgLzcdee10534298 = xULqjtveNHvRQEOrbVNBRiNgLzcdee60418038;     xULqjtveNHvRQEOrbVNBRiNgLzcdee60418038 = xULqjtveNHvRQEOrbVNBRiNgLzcdee48411699;     xULqjtveNHvRQEOrbVNBRiNgLzcdee48411699 = xULqjtveNHvRQEOrbVNBRiNgLzcdee82467046;     xULqjtveNHvRQEOrbVNBRiNgLzcdee82467046 = xULqjtveNHvRQEOrbVNBRiNgLzcdee90326289;     xULqjtveNHvRQEOrbVNBRiNgLzcdee90326289 = xULqjtveNHvRQEOrbVNBRiNgLzcdee97560410;     xULqjtveNHvRQEOrbVNBRiNgLzcdee97560410 = xULqjtveNHvRQEOrbVNBRiNgLzcdee51385285;     xULqjtveNHvRQEOrbVNBRiNgLzcdee51385285 = xULqjtveNHvRQEOrbVNBRiNgLzcdee78290211;     xULqjtveNHvRQEOrbVNBRiNgLzcdee78290211 = xULqjtveNHvRQEOrbVNBRiNgLzcdee27704925;     xULqjtveNHvRQEOrbVNBRiNgLzcdee27704925 = xULqjtveNHvRQEOrbVNBRiNgLzcdee77287141;     xULqjtveNHvRQEOrbVNBRiNgLzcdee77287141 = xULqjtveNHvRQEOrbVNBRiNgLzcdee24527325;     xULqjtveNHvRQEOrbVNBRiNgLzcdee24527325 = xULqjtveNHvRQEOrbVNBRiNgLzcdee84627936;     xULqjtveNHvRQEOrbVNBRiNgLzcdee84627936 = xULqjtveNHvRQEOrbVNBRiNgLzcdee27490103;     xULqjtveNHvRQEOrbVNBRiNgLzcdee27490103 = xULqjtveNHvRQEOrbVNBRiNgLzcdee58593898;     xULqjtveNHvRQEOrbVNBRiNgLzcdee58593898 = xULqjtveNHvRQEOrbVNBRiNgLzcdee52363648;     xULqjtveNHvRQEOrbVNBRiNgLzcdee52363648 = xULqjtveNHvRQEOrbVNBRiNgLzcdee23847668;     xULqjtveNHvRQEOrbVNBRiNgLzcdee23847668 = xULqjtveNHvRQEOrbVNBRiNgLzcdee16811234;     xULqjtveNHvRQEOrbVNBRiNgLzcdee16811234 = xULqjtveNHvRQEOrbVNBRiNgLzcdee86111155;     xULqjtveNHvRQEOrbVNBRiNgLzcdee86111155 = xULqjtveNHvRQEOrbVNBRiNgLzcdee96196251;     xULqjtveNHvRQEOrbVNBRiNgLzcdee96196251 = xULqjtveNHvRQEOrbVNBRiNgLzcdee13652295;     xULqjtveNHvRQEOrbVNBRiNgLzcdee13652295 = xULqjtveNHvRQEOrbVNBRiNgLzcdee72294141;     xULqjtveNHvRQEOrbVNBRiNgLzcdee72294141 = xULqjtveNHvRQEOrbVNBRiNgLzcdee43014855;     xULqjtveNHvRQEOrbVNBRiNgLzcdee43014855 = xULqjtveNHvRQEOrbVNBRiNgLzcdee39371213;     xULqjtveNHvRQEOrbVNBRiNgLzcdee39371213 = xULqjtveNHvRQEOrbVNBRiNgLzcdee59792605;     xULqjtveNHvRQEOrbVNBRiNgLzcdee59792605 = xULqjtveNHvRQEOrbVNBRiNgLzcdee94643942;     xULqjtveNHvRQEOrbVNBRiNgLzcdee94643942 = xULqjtveNHvRQEOrbVNBRiNgLzcdee22179871;     xULqjtveNHvRQEOrbVNBRiNgLzcdee22179871 = xULqjtveNHvRQEOrbVNBRiNgLzcdee6669571;     xULqjtveNHvRQEOrbVNBRiNgLzcdee6669571 = xULqjtveNHvRQEOrbVNBRiNgLzcdee23342098;     xULqjtveNHvRQEOrbVNBRiNgLzcdee23342098 = xULqjtveNHvRQEOrbVNBRiNgLzcdee23727524;     xULqjtveNHvRQEOrbVNBRiNgLzcdee23727524 = xULqjtveNHvRQEOrbVNBRiNgLzcdee90664874;     xULqjtveNHvRQEOrbVNBRiNgLzcdee90664874 = xULqjtveNHvRQEOrbVNBRiNgLzcdee87283605;     xULqjtveNHvRQEOrbVNBRiNgLzcdee87283605 = xULqjtveNHvRQEOrbVNBRiNgLzcdee66429961;     xULqjtveNHvRQEOrbVNBRiNgLzcdee66429961 = xULqjtveNHvRQEOrbVNBRiNgLzcdee75967924;     xULqjtveNHvRQEOrbVNBRiNgLzcdee75967924 = xULqjtveNHvRQEOrbVNBRiNgLzcdee57298690;     xULqjtveNHvRQEOrbVNBRiNgLzcdee57298690 = xULqjtveNHvRQEOrbVNBRiNgLzcdee91668512;     xULqjtveNHvRQEOrbVNBRiNgLzcdee91668512 = xULqjtveNHvRQEOrbVNBRiNgLzcdee8042796;     xULqjtveNHvRQEOrbVNBRiNgLzcdee8042796 = xULqjtveNHvRQEOrbVNBRiNgLzcdee99282450;     xULqjtveNHvRQEOrbVNBRiNgLzcdee99282450 = xULqjtveNHvRQEOrbVNBRiNgLzcdee70793834;     xULqjtveNHvRQEOrbVNBRiNgLzcdee70793834 = xULqjtveNHvRQEOrbVNBRiNgLzcdee29796870;     xULqjtveNHvRQEOrbVNBRiNgLzcdee29796870 = xULqjtveNHvRQEOrbVNBRiNgLzcdee35591767;     xULqjtveNHvRQEOrbVNBRiNgLzcdee35591767 = xULqjtveNHvRQEOrbVNBRiNgLzcdee15346176;     xULqjtveNHvRQEOrbVNBRiNgLzcdee15346176 = xULqjtveNHvRQEOrbVNBRiNgLzcdee78288459;     xULqjtveNHvRQEOrbVNBRiNgLzcdee78288459 = xULqjtveNHvRQEOrbVNBRiNgLzcdee9425125;     xULqjtveNHvRQEOrbVNBRiNgLzcdee9425125 = xULqjtveNHvRQEOrbVNBRiNgLzcdee35738416;     xULqjtveNHvRQEOrbVNBRiNgLzcdee35738416 = xULqjtveNHvRQEOrbVNBRiNgLzcdee36846270;     xULqjtveNHvRQEOrbVNBRiNgLzcdee36846270 = xULqjtveNHvRQEOrbVNBRiNgLzcdee15553564;     xULqjtveNHvRQEOrbVNBRiNgLzcdee15553564 = xULqjtveNHvRQEOrbVNBRiNgLzcdee2042085;     xULqjtveNHvRQEOrbVNBRiNgLzcdee2042085 = xULqjtveNHvRQEOrbVNBRiNgLzcdee20196863;     xULqjtveNHvRQEOrbVNBRiNgLzcdee20196863 = xULqjtveNHvRQEOrbVNBRiNgLzcdee12025755;     xULqjtveNHvRQEOrbVNBRiNgLzcdee12025755 = xULqjtveNHvRQEOrbVNBRiNgLzcdee73289806;     xULqjtveNHvRQEOrbVNBRiNgLzcdee73289806 = xULqjtveNHvRQEOrbVNBRiNgLzcdee96793644;     xULqjtveNHvRQEOrbVNBRiNgLzcdee96793644 = xULqjtveNHvRQEOrbVNBRiNgLzcdee95425820;     xULqjtveNHvRQEOrbVNBRiNgLzcdee95425820 = xULqjtveNHvRQEOrbVNBRiNgLzcdee62065062;     xULqjtveNHvRQEOrbVNBRiNgLzcdee62065062 = xULqjtveNHvRQEOrbVNBRiNgLzcdee47759146;     xULqjtveNHvRQEOrbVNBRiNgLzcdee47759146 = xULqjtveNHvRQEOrbVNBRiNgLzcdee5380172;     xULqjtveNHvRQEOrbVNBRiNgLzcdee5380172 = xULqjtveNHvRQEOrbVNBRiNgLzcdee67519442;     xULqjtveNHvRQEOrbVNBRiNgLzcdee67519442 = xULqjtveNHvRQEOrbVNBRiNgLzcdee21046826;     xULqjtveNHvRQEOrbVNBRiNgLzcdee21046826 = xULqjtveNHvRQEOrbVNBRiNgLzcdee88619094;     xULqjtveNHvRQEOrbVNBRiNgLzcdee88619094 = xULqjtveNHvRQEOrbVNBRiNgLzcdee87823103;     xULqjtveNHvRQEOrbVNBRiNgLzcdee87823103 = xULqjtveNHvRQEOrbVNBRiNgLzcdee68146419;     xULqjtveNHvRQEOrbVNBRiNgLzcdee68146419 = xULqjtveNHvRQEOrbVNBRiNgLzcdee90890840;     xULqjtveNHvRQEOrbVNBRiNgLzcdee90890840 = xULqjtveNHvRQEOrbVNBRiNgLzcdee28043187;     xULqjtveNHvRQEOrbVNBRiNgLzcdee28043187 = xULqjtveNHvRQEOrbVNBRiNgLzcdee54562688;     xULqjtveNHvRQEOrbVNBRiNgLzcdee54562688 = xULqjtveNHvRQEOrbVNBRiNgLzcdee37040050;     xULqjtveNHvRQEOrbVNBRiNgLzcdee37040050 = xULqjtveNHvRQEOrbVNBRiNgLzcdee90003535;     xULqjtveNHvRQEOrbVNBRiNgLzcdee90003535 = xULqjtveNHvRQEOrbVNBRiNgLzcdee58097363;     xULqjtveNHvRQEOrbVNBRiNgLzcdee58097363 = xULqjtveNHvRQEOrbVNBRiNgLzcdee8660012;     xULqjtveNHvRQEOrbVNBRiNgLzcdee8660012 = xULqjtveNHvRQEOrbVNBRiNgLzcdee70191412;     xULqjtveNHvRQEOrbVNBRiNgLzcdee70191412 = xULqjtveNHvRQEOrbVNBRiNgLzcdee66925386;     xULqjtveNHvRQEOrbVNBRiNgLzcdee66925386 = xULqjtveNHvRQEOrbVNBRiNgLzcdee44320852;     xULqjtveNHvRQEOrbVNBRiNgLzcdee44320852 = xULqjtveNHvRQEOrbVNBRiNgLzcdee24565218;     xULqjtveNHvRQEOrbVNBRiNgLzcdee24565218 = xULqjtveNHvRQEOrbVNBRiNgLzcdee46017400;     xULqjtveNHvRQEOrbVNBRiNgLzcdee46017400 = xULqjtveNHvRQEOrbVNBRiNgLzcdee56314285;     xULqjtveNHvRQEOrbVNBRiNgLzcdee56314285 = xULqjtveNHvRQEOrbVNBRiNgLzcdee60604484;     xULqjtveNHvRQEOrbVNBRiNgLzcdee60604484 = xULqjtveNHvRQEOrbVNBRiNgLzcdee98306119;     xULqjtveNHvRQEOrbVNBRiNgLzcdee98306119 = xULqjtveNHvRQEOrbVNBRiNgLzcdee94005682;     xULqjtveNHvRQEOrbVNBRiNgLzcdee94005682 = xULqjtveNHvRQEOrbVNBRiNgLzcdee33589730;     xULqjtveNHvRQEOrbVNBRiNgLzcdee33589730 = xULqjtveNHvRQEOrbVNBRiNgLzcdee3632797;     xULqjtveNHvRQEOrbVNBRiNgLzcdee3632797 = xULqjtveNHvRQEOrbVNBRiNgLzcdee22946335;     xULqjtveNHvRQEOrbVNBRiNgLzcdee22946335 = xULqjtveNHvRQEOrbVNBRiNgLzcdee79090378;     xULqjtveNHvRQEOrbVNBRiNgLzcdee79090378 = xULqjtveNHvRQEOrbVNBRiNgLzcdee20137787;     xULqjtveNHvRQEOrbVNBRiNgLzcdee20137787 = xULqjtveNHvRQEOrbVNBRiNgLzcdee86472707;     xULqjtveNHvRQEOrbVNBRiNgLzcdee86472707 = xULqjtveNHvRQEOrbVNBRiNgLzcdee11316343;     xULqjtveNHvRQEOrbVNBRiNgLzcdee11316343 = xULqjtveNHvRQEOrbVNBRiNgLzcdee50437717;     xULqjtveNHvRQEOrbVNBRiNgLzcdee50437717 = xULqjtveNHvRQEOrbVNBRiNgLzcdee93871230;     xULqjtveNHvRQEOrbVNBRiNgLzcdee93871230 = xULqjtveNHvRQEOrbVNBRiNgLzcdee91857785;     xULqjtveNHvRQEOrbVNBRiNgLzcdee91857785 = xULqjtveNHvRQEOrbVNBRiNgLzcdee4364899;     xULqjtveNHvRQEOrbVNBRiNgLzcdee4364899 = xULqjtveNHvRQEOrbVNBRiNgLzcdee28208778;     xULqjtveNHvRQEOrbVNBRiNgLzcdee28208778 = xULqjtveNHvRQEOrbVNBRiNgLzcdee51918519;     xULqjtveNHvRQEOrbVNBRiNgLzcdee51918519 = xULqjtveNHvRQEOrbVNBRiNgLzcdee61373594;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void oCzqmWWpcqGRNUbRbZbdOjEhK22630283() {     double ujYDltdoFeDzqaBtlBNJvjtoLORahW83195815 = -202575563;    double ujYDltdoFeDzqaBtlBNJvjtoLORahW61649304 = -425643183;    double ujYDltdoFeDzqaBtlBNJvjtoLORahW75259457 = -929920622;    double ujYDltdoFeDzqaBtlBNJvjtoLORahW10165908 = -292106143;    double ujYDltdoFeDzqaBtlBNJvjtoLORahW24523734 = -199095964;    double ujYDltdoFeDzqaBtlBNJvjtoLORahW21155790 = -519832961;    double ujYDltdoFeDzqaBtlBNJvjtoLORahW42625462 = -102985256;    double ujYDltdoFeDzqaBtlBNJvjtoLORahW68399604 = -747197365;    double ujYDltdoFeDzqaBtlBNJvjtoLORahW54784953 = -189559597;    double ujYDltdoFeDzqaBtlBNJvjtoLORahW22694667 = -367134714;    double ujYDltdoFeDzqaBtlBNJvjtoLORahW48590581 = -789519733;    double ujYDltdoFeDzqaBtlBNJvjtoLORahW26716181 = 72647467;    double ujYDltdoFeDzqaBtlBNJvjtoLORahW93406980 = -87676404;    double ujYDltdoFeDzqaBtlBNJvjtoLORahW15378167 = -164090558;    double ujYDltdoFeDzqaBtlBNJvjtoLORahW77724842 = -182087989;    double ujYDltdoFeDzqaBtlBNJvjtoLORahW38297016 = -906396060;    double ujYDltdoFeDzqaBtlBNJvjtoLORahW91009469 = -827286027;    double ujYDltdoFeDzqaBtlBNJvjtoLORahW13910588 = -491494026;    double ujYDltdoFeDzqaBtlBNJvjtoLORahW82927435 = 42930696;    double ujYDltdoFeDzqaBtlBNJvjtoLORahW8814568 = -947261767;    double ujYDltdoFeDzqaBtlBNJvjtoLORahW34441426 = -606959321;    double ujYDltdoFeDzqaBtlBNJvjtoLORahW88929302 = -697524332;    double ujYDltdoFeDzqaBtlBNJvjtoLORahW94099340 = -364473040;    double ujYDltdoFeDzqaBtlBNJvjtoLORahW64767725 = -687698507;    double ujYDltdoFeDzqaBtlBNJvjtoLORahW32524566 = -814836996;    double ujYDltdoFeDzqaBtlBNJvjtoLORahW41939502 = -799090564;    double ujYDltdoFeDzqaBtlBNJvjtoLORahW96884271 = -478204588;    double ujYDltdoFeDzqaBtlBNJvjtoLORahW52391059 = -680452944;    double ujYDltdoFeDzqaBtlBNJvjtoLORahW34008068 = -621571244;    double ujYDltdoFeDzqaBtlBNJvjtoLORahW42013329 = -901357180;    double ujYDltdoFeDzqaBtlBNJvjtoLORahW64817560 = -326124495;    double ujYDltdoFeDzqaBtlBNJvjtoLORahW91185466 = -184831722;    double ujYDltdoFeDzqaBtlBNJvjtoLORahW68334319 = -957640314;    double ujYDltdoFeDzqaBtlBNJvjtoLORahW11910330 = -474817795;    double ujYDltdoFeDzqaBtlBNJvjtoLORahW40626817 = -679279123;    double ujYDltdoFeDzqaBtlBNJvjtoLORahW64220902 = -383842277;    double ujYDltdoFeDzqaBtlBNJvjtoLORahW65262127 = -896696618;    double ujYDltdoFeDzqaBtlBNJvjtoLORahW10607433 = -888029397;    double ujYDltdoFeDzqaBtlBNJvjtoLORahW83722543 = -831103106;    double ujYDltdoFeDzqaBtlBNJvjtoLORahW36398170 = -182609873;    double ujYDltdoFeDzqaBtlBNJvjtoLORahW45040721 = -213104811;    double ujYDltdoFeDzqaBtlBNJvjtoLORahW3785777 = 85612943;    double ujYDltdoFeDzqaBtlBNJvjtoLORahW13797360 = -370715605;    double ujYDltdoFeDzqaBtlBNJvjtoLORahW24062783 = -271929089;    double ujYDltdoFeDzqaBtlBNJvjtoLORahW37214501 = -700516918;    double ujYDltdoFeDzqaBtlBNJvjtoLORahW30874992 = 90732860;    double ujYDltdoFeDzqaBtlBNJvjtoLORahW33710907 = -209849257;    double ujYDltdoFeDzqaBtlBNJvjtoLORahW81122202 = -373282445;    double ujYDltdoFeDzqaBtlBNJvjtoLORahW77857926 = -705390584;    double ujYDltdoFeDzqaBtlBNJvjtoLORahW45844347 = -960210776;    double ujYDltdoFeDzqaBtlBNJvjtoLORahW24053587 = -569844480;    double ujYDltdoFeDzqaBtlBNJvjtoLORahW11734839 = -745169338;    double ujYDltdoFeDzqaBtlBNJvjtoLORahW69511323 = -931647604;    double ujYDltdoFeDzqaBtlBNJvjtoLORahW37450247 = -324695789;    double ujYDltdoFeDzqaBtlBNJvjtoLORahW88188857 = -515137425;    double ujYDltdoFeDzqaBtlBNJvjtoLORahW94266512 = -505051232;    double ujYDltdoFeDzqaBtlBNJvjtoLORahW67549963 = 38829857;    double ujYDltdoFeDzqaBtlBNJvjtoLORahW10491733 = -142222115;    double ujYDltdoFeDzqaBtlBNJvjtoLORahW77641341 = -477269148;    double ujYDltdoFeDzqaBtlBNJvjtoLORahW82584232 = -400005401;    double ujYDltdoFeDzqaBtlBNJvjtoLORahW24271519 = 58371627;    double ujYDltdoFeDzqaBtlBNJvjtoLORahW90234403 = -422532313;    double ujYDltdoFeDzqaBtlBNJvjtoLORahW34391537 = -25626122;    double ujYDltdoFeDzqaBtlBNJvjtoLORahW12771624 = -288202417;    double ujYDltdoFeDzqaBtlBNJvjtoLORahW57877106 = 58989781;    double ujYDltdoFeDzqaBtlBNJvjtoLORahW57405114 = -504688012;    double ujYDltdoFeDzqaBtlBNJvjtoLORahW58381861 = 30287780;    double ujYDltdoFeDzqaBtlBNJvjtoLORahW81496650 = -612858610;    double ujYDltdoFeDzqaBtlBNJvjtoLORahW74751349 = -484811436;    double ujYDltdoFeDzqaBtlBNJvjtoLORahW13503940 = -798245712;    double ujYDltdoFeDzqaBtlBNJvjtoLORahW73034888 = 90300557;    double ujYDltdoFeDzqaBtlBNJvjtoLORahW80402037 = -939256631;    double ujYDltdoFeDzqaBtlBNJvjtoLORahW30188044 = -660390920;    double ujYDltdoFeDzqaBtlBNJvjtoLORahW46529266 = -774459431;    double ujYDltdoFeDzqaBtlBNJvjtoLORahW63773847 = -634156956;    double ujYDltdoFeDzqaBtlBNJvjtoLORahW30655650 = -592572264;    double ujYDltdoFeDzqaBtlBNJvjtoLORahW75131943 = -226808727;    double ujYDltdoFeDzqaBtlBNJvjtoLORahW70036557 = 7456048;    double ujYDltdoFeDzqaBtlBNJvjtoLORahW27553224 = -987181590;    double ujYDltdoFeDzqaBtlBNJvjtoLORahW1649575 = -805569856;    double ujYDltdoFeDzqaBtlBNJvjtoLORahW8228595 = -489241307;    double ujYDltdoFeDzqaBtlBNJvjtoLORahW15762070 = -4922144;    double ujYDltdoFeDzqaBtlBNJvjtoLORahW74533133 = -975062361;    double ujYDltdoFeDzqaBtlBNJvjtoLORahW88163721 = -661360469;    double ujYDltdoFeDzqaBtlBNJvjtoLORahW17959743 = -231512701;    double ujYDltdoFeDzqaBtlBNJvjtoLORahW53082721 = -580955158;    double ujYDltdoFeDzqaBtlBNJvjtoLORahW21674144 = -253184119;    double ujYDltdoFeDzqaBtlBNJvjtoLORahW30884073 = -532944526;    double ujYDltdoFeDzqaBtlBNJvjtoLORahW23721473 = -959680370;    double ujYDltdoFeDzqaBtlBNJvjtoLORahW46360305 = -74227892;    double ujYDltdoFeDzqaBtlBNJvjtoLORahW96670938 = -322672134;    double ujYDltdoFeDzqaBtlBNJvjtoLORahW54770394 = -654474503;    double ujYDltdoFeDzqaBtlBNJvjtoLORahW32966091 = -310760249;    double ujYDltdoFeDzqaBtlBNJvjtoLORahW1138312 = -331097706;    double ujYDltdoFeDzqaBtlBNJvjtoLORahW12126652 = -140981501;    double ujYDltdoFeDzqaBtlBNJvjtoLORahW54806318 = -790572499;    double ujYDltdoFeDzqaBtlBNJvjtoLORahW69394240 = -888760936;    double ujYDltdoFeDzqaBtlBNJvjtoLORahW1025736 = 17486812;    double ujYDltdoFeDzqaBtlBNJvjtoLORahW66185677 = -230918871;    double ujYDltdoFeDzqaBtlBNJvjtoLORahW79809387 = -202575563;     ujYDltdoFeDzqaBtlBNJvjtoLORahW83195815 = ujYDltdoFeDzqaBtlBNJvjtoLORahW61649304;     ujYDltdoFeDzqaBtlBNJvjtoLORahW61649304 = ujYDltdoFeDzqaBtlBNJvjtoLORahW75259457;     ujYDltdoFeDzqaBtlBNJvjtoLORahW75259457 = ujYDltdoFeDzqaBtlBNJvjtoLORahW10165908;     ujYDltdoFeDzqaBtlBNJvjtoLORahW10165908 = ujYDltdoFeDzqaBtlBNJvjtoLORahW24523734;     ujYDltdoFeDzqaBtlBNJvjtoLORahW24523734 = ujYDltdoFeDzqaBtlBNJvjtoLORahW21155790;     ujYDltdoFeDzqaBtlBNJvjtoLORahW21155790 = ujYDltdoFeDzqaBtlBNJvjtoLORahW42625462;     ujYDltdoFeDzqaBtlBNJvjtoLORahW42625462 = ujYDltdoFeDzqaBtlBNJvjtoLORahW68399604;     ujYDltdoFeDzqaBtlBNJvjtoLORahW68399604 = ujYDltdoFeDzqaBtlBNJvjtoLORahW54784953;     ujYDltdoFeDzqaBtlBNJvjtoLORahW54784953 = ujYDltdoFeDzqaBtlBNJvjtoLORahW22694667;     ujYDltdoFeDzqaBtlBNJvjtoLORahW22694667 = ujYDltdoFeDzqaBtlBNJvjtoLORahW48590581;     ujYDltdoFeDzqaBtlBNJvjtoLORahW48590581 = ujYDltdoFeDzqaBtlBNJvjtoLORahW26716181;     ujYDltdoFeDzqaBtlBNJvjtoLORahW26716181 = ujYDltdoFeDzqaBtlBNJvjtoLORahW93406980;     ujYDltdoFeDzqaBtlBNJvjtoLORahW93406980 = ujYDltdoFeDzqaBtlBNJvjtoLORahW15378167;     ujYDltdoFeDzqaBtlBNJvjtoLORahW15378167 = ujYDltdoFeDzqaBtlBNJvjtoLORahW77724842;     ujYDltdoFeDzqaBtlBNJvjtoLORahW77724842 = ujYDltdoFeDzqaBtlBNJvjtoLORahW38297016;     ujYDltdoFeDzqaBtlBNJvjtoLORahW38297016 = ujYDltdoFeDzqaBtlBNJvjtoLORahW91009469;     ujYDltdoFeDzqaBtlBNJvjtoLORahW91009469 = ujYDltdoFeDzqaBtlBNJvjtoLORahW13910588;     ujYDltdoFeDzqaBtlBNJvjtoLORahW13910588 = ujYDltdoFeDzqaBtlBNJvjtoLORahW82927435;     ujYDltdoFeDzqaBtlBNJvjtoLORahW82927435 = ujYDltdoFeDzqaBtlBNJvjtoLORahW8814568;     ujYDltdoFeDzqaBtlBNJvjtoLORahW8814568 = ujYDltdoFeDzqaBtlBNJvjtoLORahW34441426;     ujYDltdoFeDzqaBtlBNJvjtoLORahW34441426 = ujYDltdoFeDzqaBtlBNJvjtoLORahW88929302;     ujYDltdoFeDzqaBtlBNJvjtoLORahW88929302 = ujYDltdoFeDzqaBtlBNJvjtoLORahW94099340;     ujYDltdoFeDzqaBtlBNJvjtoLORahW94099340 = ujYDltdoFeDzqaBtlBNJvjtoLORahW64767725;     ujYDltdoFeDzqaBtlBNJvjtoLORahW64767725 = ujYDltdoFeDzqaBtlBNJvjtoLORahW32524566;     ujYDltdoFeDzqaBtlBNJvjtoLORahW32524566 = ujYDltdoFeDzqaBtlBNJvjtoLORahW41939502;     ujYDltdoFeDzqaBtlBNJvjtoLORahW41939502 = ujYDltdoFeDzqaBtlBNJvjtoLORahW96884271;     ujYDltdoFeDzqaBtlBNJvjtoLORahW96884271 = ujYDltdoFeDzqaBtlBNJvjtoLORahW52391059;     ujYDltdoFeDzqaBtlBNJvjtoLORahW52391059 = ujYDltdoFeDzqaBtlBNJvjtoLORahW34008068;     ujYDltdoFeDzqaBtlBNJvjtoLORahW34008068 = ujYDltdoFeDzqaBtlBNJvjtoLORahW42013329;     ujYDltdoFeDzqaBtlBNJvjtoLORahW42013329 = ujYDltdoFeDzqaBtlBNJvjtoLORahW64817560;     ujYDltdoFeDzqaBtlBNJvjtoLORahW64817560 = ujYDltdoFeDzqaBtlBNJvjtoLORahW91185466;     ujYDltdoFeDzqaBtlBNJvjtoLORahW91185466 = ujYDltdoFeDzqaBtlBNJvjtoLORahW68334319;     ujYDltdoFeDzqaBtlBNJvjtoLORahW68334319 = ujYDltdoFeDzqaBtlBNJvjtoLORahW11910330;     ujYDltdoFeDzqaBtlBNJvjtoLORahW11910330 = ujYDltdoFeDzqaBtlBNJvjtoLORahW40626817;     ujYDltdoFeDzqaBtlBNJvjtoLORahW40626817 = ujYDltdoFeDzqaBtlBNJvjtoLORahW64220902;     ujYDltdoFeDzqaBtlBNJvjtoLORahW64220902 = ujYDltdoFeDzqaBtlBNJvjtoLORahW65262127;     ujYDltdoFeDzqaBtlBNJvjtoLORahW65262127 = ujYDltdoFeDzqaBtlBNJvjtoLORahW10607433;     ujYDltdoFeDzqaBtlBNJvjtoLORahW10607433 = ujYDltdoFeDzqaBtlBNJvjtoLORahW83722543;     ujYDltdoFeDzqaBtlBNJvjtoLORahW83722543 = ujYDltdoFeDzqaBtlBNJvjtoLORahW36398170;     ujYDltdoFeDzqaBtlBNJvjtoLORahW36398170 = ujYDltdoFeDzqaBtlBNJvjtoLORahW45040721;     ujYDltdoFeDzqaBtlBNJvjtoLORahW45040721 = ujYDltdoFeDzqaBtlBNJvjtoLORahW3785777;     ujYDltdoFeDzqaBtlBNJvjtoLORahW3785777 = ujYDltdoFeDzqaBtlBNJvjtoLORahW13797360;     ujYDltdoFeDzqaBtlBNJvjtoLORahW13797360 = ujYDltdoFeDzqaBtlBNJvjtoLORahW24062783;     ujYDltdoFeDzqaBtlBNJvjtoLORahW24062783 = ujYDltdoFeDzqaBtlBNJvjtoLORahW37214501;     ujYDltdoFeDzqaBtlBNJvjtoLORahW37214501 = ujYDltdoFeDzqaBtlBNJvjtoLORahW30874992;     ujYDltdoFeDzqaBtlBNJvjtoLORahW30874992 = ujYDltdoFeDzqaBtlBNJvjtoLORahW33710907;     ujYDltdoFeDzqaBtlBNJvjtoLORahW33710907 = ujYDltdoFeDzqaBtlBNJvjtoLORahW81122202;     ujYDltdoFeDzqaBtlBNJvjtoLORahW81122202 = ujYDltdoFeDzqaBtlBNJvjtoLORahW77857926;     ujYDltdoFeDzqaBtlBNJvjtoLORahW77857926 = ujYDltdoFeDzqaBtlBNJvjtoLORahW45844347;     ujYDltdoFeDzqaBtlBNJvjtoLORahW45844347 = ujYDltdoFeDzqaBtlBNJvjtoLORahW24053587;     ujYDltdoFeDzqaBtlBNJvjtoLORahW24053587 = ujYDltdoFeDzqaBtlBNJvjtoLORahW11734839;     ujYDltdoFeDzqaBtlBNJvjtoLORahW11734839 = ujYDltdoFeDzqaBtlBNJvjtoLORahW69511323;     ujYDltdoFeDzqaBtlBNJvjtoLORahW69511323 = ujYDltdoFeDzqaBtlBNJvjtoLORahW37450247;     ujYDltdoFeDzqaBtlBNJvjtoLORahW37450247 = ujYDltdoFeDzqaBtlBNJvjtoLORahW88188857;     ujYDltdoFeDzqaBtlBNJvjtoLORahW88188857 = ujYDltdoFeDzqaBtlBNJvjtoLORahW94266512;     ujYDltdoFeDzqaBtlBNJvjtoLORahW94266512 = ujYDltdoFeDzqaBtlBNJvjtoLORahW67549963;     ujYDltdoFeDzqaBtlBNJvjtoLORahW67549963 = ujYDltdoFeDzqaBtlBNJvjtoLORahW10491733;     ujYDltdoFeDzqaBtlBNJvjtoLORahW10491733 = ujYDltdoFeDzqaBtlBNJvjtoLORahW77641341;     ujYDltdoFeDzqaBtlBNJvjtoLORahW77641341 = ujYDltdoFeDzqaBtlBNJvjtoLORahW82584232;     ujYDltdoFeDzqaBtlBNJvjtoLORahW82584232 = ujYDltdoFeDzqaBtlBNJvjtoLORahW24271519;     ujYDltdoFeDzqaBtlBNJvjtoLORahW24271519 = ujYDltdoFeDzqaBtlBNJvjtoLORahW90234403;     ujYDltdoFeDzqaBtlBNJvjtoLORahW90234403 = ujYDltdoFeDzqaBtlBNJvjtoLORahW34391537;     ujYDltdoFeDzqaBtlBNJvjtoLORahW34391537 = ujYDltdoFeDzqaBtlBNJvjtoLORahW12771624;     ujYDltdoFeDzqaBtlBNJvjtoLORahW12771624 = ujYDltdoFeDzqaBtlBNJvjtoLORahW57877106;     ujYDltdoFeDzqaBtlBNJvjtoLORahW57877106 = ujYDltdoFeDzqaBtlBNJvjtoLORahW57405114;     ujYDltdoFeDzqaBtlBNJvjtoLORahW57405114 = ujYDltdoFeDzqaBtlBNJvjtoLORahW58381861;     ujYDltdoFeDzqaBtlBNJvjtoLORahW58381861 = ujYDltdoFeDzqaBtlBNJvjtoLORahW81496650;     ujYDltdoFeDzqaBtlBNJvjtoLORahW81496650 = ujYDltdoFeDzqaBtlBNJvjtoLORahW74751349;     ujYDltdoFeDzqaBtlBNJvjtoLORahW74751349 = ujYDltdoFeDzqaBtlBNJvjtoLORahW13503940;     ujYDltdoFeDzqaBtlBNJvjtoLORahW13503940 = ujYDltdoFeDzqaBtlBNJvjtoLORahW73034888;     ujYDltdoFeDzqaBtlBNJvjtoLORahW73034888 = ujYDltdoFeDzqaBtlBNJvjtoLORahW80402037;     ujYDltdoFeDzqaBtlBNJvjtoLORahW80402037 = ujYDltdoFeDzqaBtlBNJvjtoLORahW30188044;     ujYDltdoFeDzqaBtlBNJvjtoLORahW30188044 = ujYDltdoFeDzqaBtlBNJvjtoLORahW46529266;     ujYDltdoFeDzqaBtlBNJvjtoLORahW46529266 = ujYDltdoFeDzqaBtlBNJvjtoLORahW63773847;     ujYDltdoFeDzqaBtlBNJvjtoLORahW63773847 = ujYDltdoFeDzqaBtlBNJvjtoLORahW30655650;     ujYDltdoFeDzqaBtlBNJvjtoLORahW30655650 = ujYDltdoFeDzqaBtlBNJvjtoLORahW75131943;     ujYDltdoFeDzqaBtlBNJvjtoLORahW75131943 = ujYDltdoFeDzqaBtlBNJvjtoLORahW70036557;     ujYDltdoFeDzqaBtlBNJvjtoLORahW70036557 = ujYDltdoFeDzqaBtlBNJvjtoLORahW27553224;     ujYDltdoFeDzqaBtlBNJvjtoLORahW27553224 = ujYDltdoFeDzqaBtlBNJvjtoLORahW1649575;     ujYDltdoFeDzqaBtlBNJvjtoLORahW1649575 = ujYDltdoFeDzqaBtlBNJvjtoLORahW8228595;     ujYDltdoFeDzqaBtlBNJvjtoLORahW8228595 = ujYDltdoFeDzqaBtlBNJvjtoLORahW15762070;     ujYDltdoFeDzqaBtlBNJvjtoLORahW15762070 = ujYDltdoFeDzqaBtlBNJvjtoLORahW74533133;     ujYDltdoFeDzqaBtlBNJvjtoLORahW74533133 = ujYDltdoFeDzqaBtlBNJvjtoLORahW88163721;     ujYDltdoFeDzqaBtlBNJvjtoLORahW88163721 = ujYDltdoFeDzqaBtlBNJvjtoLORahW17959743;     ujYDltdoFeDzqaBtlBNJvjtoLORahW17959743 = ujYDltdoFeDzqaBtlBNJvjtoLORahW53082721;     ujYDltdoFeDzqaBtlBNJvjtoLORahW53082721 = ujYDltdoFeDzqaBtlBNJvjtoLORahW21674144;     ujYDltdoFeDzqaBtlBNJvjtoLORahW21674144 = ujYDltdoFeDzqaBtlBNJvjtoLORahW30884073;     ujYDltdoFeDzqaBtlBNJvjtoLORahW30884073 = ujYDltdoFeDzqaBtlBNJvjtoLORahW23721473;     ujYDltdoFeDzqaBtlBNJvjtoLORahW23721473 = ujYDltdoFeDzqaBtlBNJvjtoLORahW46360305;     ujYDltdoFeDzqaBtlBNJvjtoLORahW46360305 = ujYDltdoFeDzqaBtlBNJvjtoLORahW96670938;     ujYDltdoFeDzqaBtlBNJvjtoLORahW96670938 = ujYDltdoFeDzqaBtlBNJvjtoLORahW54770394;     ujYDltdoFeDzqaBtlBNJvjtoLORahW54770394 = ujYDltdoFeDzqaBtlBNJvjtoLORahW32966091;     ujYDltdoFeDzqaBtlBNJvjtoLORahW32966091 = ujYDltdoFeDzqaBtlBNJvjtoLORahW1138312;     ujYDltdoFeDzqaBtlBNJvjtoLORahW1138312 = ujYDltdoFeDzqaBtlBNJvjtoLORahW12126652;     ujYDltdoFeDzqaBtlBNJvjtoLORahW12126652 = ujYDltdoFeDzqaBtlBNJvjtoLORahW54806318;     ujYDltdoFeDzqaBtlBNJvjtoLORahW54806318 = ujYDltdoFeDzqaBtlBNJvjtoLORahW69394240;     ujYDltdoFeDzqaBtlBNJvjtoLORahW69394240 = ujYDltdoFeDzqaBtlBNJvjtoLORahW1025736;     ujYDltdoFeDzqaBtlBNJvjtoLORahW1025736 = ujYDltdoFeDzqaBtlBNJvjtoLORahW66185677;     ujYDltdoFeDzqaBtlBNJvjtoLORahW66185677 = ujYDltdoFeDzqaBtlBNJvjtoLORahW79809387;     ujYDltdoFeDzqaBtlBNJvjtoLORahW79809387 = ujYDltdoFeDzqaBtlBNJvjtoLORahW83195815;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void QHkNXfAwdTQpECXpiVDrCSkxq84477541() {     double IdTdRemZeylBmlTBozFdKzaJHdkpGo34359898 = -25165906;    double IdTdRemZeylBmlTBozFdKzaJHdkpGo93015907 = -979193862;    double IdTdRemZeylBmlTBozFdKzaJHdkpGo42331021 = -491972308;    double IdTdRemZeylBmlTBozFdKzaJHdkpGo86689627 = -127292760;    double IdTdRemZeylBmlTBozFdKzaJHdkpGo72047845 = -761295860;    double IdTdRemZeylBmlTBozFdKzaJHdkpGo89979775 = -529227779;    double IdTdRemZeylBmlTBozFdKzaJHdkpGo21814487 = -972064137;    double IdTdRemZeylBmlTBozFdKzaJHdkpGo67633903 = -112738441;    double IdTdRemZeylBmlTBozFdKzaJHdkpGo88183702 = -895653757;    double IdTdRemZeylBmlTBozFdKzaJHdkpGo57650945 = -673064632;    double IdTdRemZeylBmlTBozFdKzaJHdkpGo97578294 = -269847578;    double IdTdRemZeylBmlTBozFdKzaJHdkpGo11643170 = -550248709;    double IdTdRemZeylBmlTBozFdKzaJHdkpGo78421450 = -737831610;    double IdTdRemZeylBmlTBozFdKzaJHdkpGo52341820 = -458292197;    double IdTdRemZeylBmlTBozFdKzaJHdkpGo35434727 = 78107243;    double IdTdRemZeylBmlTBozFdKzaJHdkpGo28303649 = 88425335;    double IdTdRemZeylBmlTBozFdKzaJHdkpGo46458462 = -23540185;    double IdTdRemZeylBmlTBozFdKzaJHdkpGo79142929 = -821120369;    double IdTdRemZeylBmlTBozFdKzaJHdkpGo26285147 = 59000714;    double IdTdRemZeylBmlTBozFdKzaJHdkpGo3211264 = -408164969;    double IdTdRemZeylBmlTBozFdKzaJHdkpGo16129381 = -140825256;    double IdTdRemZeylBmlTBozFdKzaJHdkpGo70231782 = -946982074;    double IdTdRemZeylBmlTBozFdKzaJHdkpGo38505333 = -911615093;    double IdTdRemZeylBmlTBozFdKzaJHdkpGo11845919 = -286316989;    double IdTdRemZeylBmlTBozFdKzaJHdkpGo70773533 = -376523133;    double IdTdRemZeylBmlTBozFdKzaJHdkpGo17491852 = -936197575;    double IdTdRemZeylBmlTBozFdKzaJHdkpGo31881671 = 89369429;    double IdTdRemZeylBmlTBozFdKzaJHdkpGo15592185 = -648744398;    double IdTdRemZeylBmlTBozFdKzaJHdkpGo62440939 = -640229260;    double IdTdRemZeylBmlTBozFdKzaJHdkpGo24748181 = -394607678;    double IdTdRemZeylBmlTBozFdKzaJHdkpGo42323508 = -270511792;    double IdTdRemZeylBmlTBozFdKzaJHdkpGo50289189 = -24245151;    double IdTdRemZeylBmlTBozFdKzaJHdkpGo96160846 = -955226804;    double IdTdRemZeylBmlTBozFdKzaJHdkpGo19367310 = -463789471;    double IdTdRemZeylBmlTBozFdKzaJHdkpGo25794832 = -141464870;    double IdTdRemZeylBmlTBozFdKzaJHdkpGo16632793 = -398797455;    double IdTdRemZeylBmlTBozFdKzaJHdkpGo76494265 = -857373885;    double IdTdRemZeylBmlTBozFdKzaJHdkpGo31670486 = -580721726;    double IdTdRemZeylBmlTBozFdKzaJHdkpGo883298 = -260461167;    double IdTdRemZeylBmlTBozFdKzaJHdkpGo25838410 = -731982198;    double IdTdRemZeylBmlTBozFdKzaJHdkpGo27198951 = -351169089;    double IdTdRemZeylBmlTBozFdKzaJHdkpGo77502617 = -26256147;    double IdTdRemZeylBmlTBozFdKzaJHdkpGo72481158 = -987058622;    double IdTdRemZeylBmlTBozFdKzaJHdkpGo24881240 = -765724730;    double IdTdRemZeylBmlTBozFdKzaJHdkpGo5194306 = 48181446;    double IdTdRemZeylBmlTBozFdKzaJHdkpGo4103604 = -766406886;    double IdTdRemZeylBmlTBozFdKzaJHdkpGo60945608 = -756067600;    double IdTdRemZeylBmlTBozFdKzaJHdkpGo72731325 = -268409494;    double IdTdRemZeylBmlTBozFdKzaJHdkpGo98138955 = -468506898;    double IdTdRemZeylBmlTBozFdKzaJHdkpGo73509759 = -243281968;    double IdTdRemZeylBmlTBozFdKzaJHdkpGo57585451 = -645716691;    double IdTdRemZeylBmlTBozFdKzaJHdkpGo80799255 = -383473445;    double IdTdRemZeylBmlTBozFdKzaJHdkpGo81106879 = -859498709;    double IdTdRemZeylBmlTBozFdKzaJHdkpGo85498335 = -386743203;    double IdTdRemZeylBmlTBozFdKzaJHdkpGo68348160 = -122217538;    double IdTdRemZeylBmlTBozFdKzaJHdkpGo64128116 = -78183832;    double IdTdRemZeylBmlTBozFdKzaJHdkpGo54510574 = 32421231;    double IdTdRemZeylBmlTBozFdKzaJHdkpGo30485103 = -105655319;    double IdTdRemZeylBmlTBozFdKzaJHdkpGo15916094 = -750769627;    double IdTdRemZeylBmlTBozFdKzaJHdkpGo54555993 = -825098285;    double IdTdRemZeylBmlTBozFdKzaJHdkpGo58098104 = -518597209;    double IdTdRemZeylBmlTBozFdKzaJHdkpGo6222303 = -223319740;    double IdTdRemZeylBmlTBozFdKzaJHdkpGo5192965 = -472509181;    double IdTdRemZeylBmlTBozFdKzaJHdkpGo63435522 = -401046079;    double IdTdRemZeylBmlTBozFdKzaJHdkpGo15327437 = -302552840;    double IdTdRemZeylBmlTBozFdKzaJHdkpGo47289105 = -145602428;    double IdTdRemZeylBmlTBozFdKzaJHdkpGo15482323 = -595021906;    double IdTdRemZeylBmlTBozFdKzaJHdkpGo59054141 = -174042139;    double IdTdRemZeylBmlTBozFdKzaJHdkpGo26546989 = -216827327;    double IdTdRemZeylBmlTBozFdKzaJHdkpGo18801934 = -523095302;    double IdTdRemZeylBmlTBozFdKzaJHdkpGo51809383 = -54200781;    double IdTdRemZeylBmlTBozFdKzaJHdkpGo14787977 = -442818460;    double IdTdRemZeylBmlTBozFdKzaJHdkpGo78259631 = -460659203;    double IdTdRemZeylBmlTBozFdKzaJHdkpGo446738 = -209017088;    double IdTdRemZeylBmlTBozFdKzaJHdkpGo76012313 = 43004119;    double IdTdRemZeylBmlTBozFdKzaJHdkpGo38626763 = -14569110;    double IdTdRemZeylBmlTBozFdKzaJHdkpGo97750623 = -959923452;    double IdTdRemZeylBmlTBozFdKzaJHdkpGo13624094 = -45890363;    double IdTdRemZeylBmlTBozFdKzaJHdkpGo6651613 = -234498435;    double IdTdRemZeylBmlTBozFdKzaJHdkpGo66669929 = -610116248;    double IdTdRemZeylBmlTBozFdKzaJHdkpGo56546244 = -80129976;    double IdTdRemZeylBmlTBozFdKzaJHdkpGo59150346 = -642221077;    double IdTdRemZeylBmlTBozFdKzaJHdkpGo17453229 = -80237500;    double IdTdRemZeylBmlTBozFdKzaJHdkpGo88931179 = -296947292;    double IdTdRemZeylBmlTBozFdKzaJHdkpGo67162729 = -748890987;    double IdTdRemZeylBmlTBozFdKzaJHdkpGo61524252 = -887038347;    double IdTdRemZeylBmlTBozFdKzaJHdkpGo69182310 = -164746442;    double IdTdRemZeylBmlTBozFdKzaJHdkpGo10662512 = -468483602;    double IdTdRemZeylBmlTBozFdKzaJHdkpGo51019149 = -241571933;    double IdTdRemZeylBmlTBozFdKzaJHdkpGo61666715 = 36718961;    double IdTdRemZeylBmlTBozFdKzaJHdkpGo62122219 = -331218686;    double IdTdRemZeylBmlTBozFdKzaJHdkpGo46009163 = -651718567;    double IdTdRemZeylBmlTBozFdKzaJHdkpGo15754392 = -829952100;    double IdTdRemZeylBmlTBozFdKzaJHdkpGo46327304 = -435362882;    double IdTdRemZeylBmlTBozFdKzaJHdkpGo67740306 = -113384989;    double IdTdRemZeylBmlTBozFdKzaJHdkpGo20976648 = -27849350;    double IdTdRemZeylBmlTBozFdKzaJHdkpGo72309653 = -553746966;    double IdTdRemZeylBmlTBozFdKzaJHdkpGo9045637 = -486012543;    double IdTdRemZeylBmlTBozFdKzaJHdkpGo9553803 = -363171890;    double IdTdRemZeylBmlTBozFdKzaJHdkpGo57905201 = -25165906;     IdTdRemZeylBmlTBozFdKzaJHdkpGo34359898 = IdTdRemZeylBmlTBozFdKzaJHdkpGo93015907;     IdTdRemZeylBmlTBozFdKzaJHdkpGo93015907 = IdTdRemZeylBmlTBozFdKzaJHdkpGo42331021;     IdTdRemZeylBmlTBozFdKzaJHdkpGo42331021 = IdTdRemZeylBmlTBozFdKzaJHdkpGo86689627;     IdTdRemZeylBmlTBozFdKzaJHdkpGo86689627 = IdTdRemZeylBmlTBozFdKzaJHdkpGo72047845;     IdTdRemZeylBmlTBozFdKzaJHdkpGo72047845 = IdTdRemZeylBmlTBozFdKzaJHdkpGo89979775;     IdTdRemZeylBmlTBozFdKzaJHdkpGo89979775 = IdTdRemZeylBmlTBozFdKzaJHdkpGo21814487;     IdTdRemZeylBmlTBozFdKzaJHdkpGo21814487 = IdTdRemZeylBmlTBozFdKzaJHdkpGo67633903;     IdTdRemZeylBmlTBozFdKzaJHdkpGo67633903 = IdTdRemZeylBmlTBozFdKzaJHdkpGo88183702;     IdTdRemZeylBmlTBozFdKzaJHdkpGo88183702 = IdTdRemZeylBmlTBozFdKzaJHdkpGo57650945;     IdTdRemZeylBmlTBozFdKzaJHdkpGo57650945 = IdTdRemZeylBmlTBozFdKzaJHdkpGo97578294;     IdTdRemZeylBmlTBozFdKzaJHdkpGo97578294 = IdTdRemZeylBmlTBozFdKzaJHdkpGo11643170;     IdTdRemZeylBmlTBozFdKzaJHdkpGo11643170 = IdTdRemZeylBmlTBozFdKzaJHdkpGo78421450;     IdTdRemZeylBmlTBozFdKzaJHdkpGo78421450 = IdTdRemZeylBmlTBozFdKzaJHdkpGo52341820;     IdTdRemZeylBmlTBozFdKzaJHdkpGo52341820 = IdTdRemZeylBmlTBozFdKzaJHdkpGo35434727;     IdTdRemZeylBmlTBozFdKzaJHdkpGo35434727 = IdTdRemZeylBmlTBozFdKzaJHdkpGo28303649;     IdTdRemZeylBmlTBozFdKzaJHdkpGo28303649 = IdTdRemZeylBmlTBozFdKzaJHdkpGo46458462;     IdTdRemZeylBmlTBozFdKzaJHdkpGo46458462 = IdTdRemZeylBmlTBozFdKzaJHdkpGo79142929;     IdTdRemZeylBmlTBozFdKzaJHdkpGo79142929 = IdTdRemZeylBmlTBozFdKzaJHdkpGo26285147;     IdTdRemZeylBmlTBozFdKzaJHdkpGo26285147 = IdTdRemZeylBmlTBozFdKzaJHdkpGo3211264;     IdTdRemZeylBmlTBozFdKzaJHdkpGo3211264 = IdTdRemZeylBmlTBozFdKzaJHdkpGo16129381;     IdTdRemZeylBmlTBozFdKzaJHdkpGo16129381 = IdTdRemZeylBmlTBozFdKzaJHdkpGo70231782;     IdTdRemZeylBmlTBozFdKzaJHdkpGo70231782 = IdTdRemZeylBmlTBozFdKzaJHdkpGo38505333;     IdTdRemZeylBmlTBozFdKzaJHdkpGo38505333 = IdTdRemZeylBmlTBozFdKzaJHdkpGo11845919;     IdTdRemZeylBmlTBozFdKzaJHdkpGo11845919 = IdTdRemZeylBmlTBozFdKzaJHdkpGo70773533;     IdTdRemZeylBmlTBozFdKzaJHdkpGo70773533 = IdTdRemZeylBmlTBozFdKzaJHdkpGo17491852;     IdTdRemZeylBmlTBozFdKzaJHdkpGo17491852 = IdTdRemZeylBmlTBozFdKzaJHdkpGo31881671;     IdTdRemZeylBmlTBozFdKzaJHdkpGo31881671 = IdTdRemZeylBmlTBozFdKzaJHdkpGo15592185;     IdTdRemZeylBmlTBozFdKzaJHdkpGo15592185 = IdTdRemZeylBmlTBozFdKzaJHdkpGo62440939;     IdTdRemZeylBmlTBozFdKzaJHdkpGo62440939 = IdTdRemZeylBmlTBozFdKzaJHdkpGo24748181;     IdTdRemZeylBmlTBozFdKzaJHdkpGo24748181 = IdTdRemZeylBmlTBozFdKzaJHdkpGo42323508;     IdTdRemZeylBmlTBozFdKzaJHdkpGo42323508 = IdTdRemZeylBmlTBozFdKzaJHdkpGo50289189;     IdTdRemZeylBmlTBozFdKzaJHdkpGo50289189 = IdTdRemZeylBmlTBozFdKzaJHdkpGo96160846;     IdTdRemZeylBmlTBozFdKzaJHdkpGo96160846 = IdTdRemZeylBmlTBozFdKzaJHdkpGo19367310;     IdTdRemZeylBmlTBozFdKzaJHdkpGo19367310 = IdTdRemZeylBmlTBozFdKzaJHdkpGo25794832;     IdTdRemZeylBmlTBozFdKzaJHdkpGo25794832 = IdTdRemZeylBmlTBozFdKzaJHdkpGo16632793;     IdTdRemZeylBmlTBozFdKzaJHdkpGo16632793 = IdTdRemZeylBmlTBozFdKzaJHdkpGo76494265;     IdTdRemZeylBmlTBozFdKzaJHdkpGo76494265 = IdTdRemZeylBmlTBozFdKzaJHdkpGo31670486;     IdTdRemZeylBmlTBozFdKzaJHdkpGo31670486 = IdTdRemZeylBmlTBozFdKzaJHdkpGo883298;     IdTdRemZeylBmlTBozFdKzaJHdkpGo883298 = IdTdRemZeylBmlTBozFdKzaJHdkpGo25838410;     IdTdRemZeylBmlTBozFdKzaJHdkpGo25838410 = IdTdRemZeylBmlTBozFdKzaJHdkpGo27198951;     IdTdRemZeylBmlTBozFdKzaJHdkpGo27198951 = IdTdRemZeylBmlTBozFdKzaJHdkpGo77502617;     IdTdRemZeylBmlTBozFdKzaJHdkpGo77502617 = IdTdRemZeylBmlTBozFdKzaJHdkpGo72481158;     IdTdRemZeylBmlTBozFdKzaJHdkpGo72481158 = IdTdRemZeylBmlTBozFdKzaJHdkpGo24881240;     IdTdRemZeylBmlTBozFdKzaJHdkpGo24881240 = IdTdRemZeylBmlTBozFdKzaJHdkpGo5194306;     IdTdRemZeylBmlTBozFdKzaJHdkpGo5194306 = IdTdRemZeylBmlTBozFdKzaJHdkpGo4103604;     IdTdRemZeylBmlTBozFdKzaJHdkpGo4103604 = IdTdRemZeylBmlTBozFdKzaJHdkpGo60945608;     IdTdRemZeylBmlTBozFdKzaJHdkpGo60945608 = IdTdRemZeylBmlTBozFdKzaJHdkpGo72731325;     IdTdRemZeylBmlTBozFdKzaJHdkpGo72731325 = IdTdRemZeylBmlTBozFdKzaJHdkpGo98138955;     IdTdRemZeylBmlTBozFdKzaJHdkpGo98138955 = IdTdRemZeylBmlTBozFdKzaJHdkpGo73509759;     IdTdRemZeylBmlTBozFdKzaJHdkpGo73509759 = IdTdRemZeylBmlTBozFdKzaJHdkpGo57585451;     IdTdRemZeylBmlTBozFdKzaJHdkpGo57585451 = IdTdRemZeylBmlTBozFdKzaJHdkpGo80799255;     IdTdRemZeylBmlTBozFdKzaJHdkpGo80799255 = IdTdRemZeylBmlTBozFdKzaJHdkpGo81106879;     IdTdRemZeylBmlTBozFdKzaJHdkpGo81106879 = IdTdRemZeylBmlTBozFdKzaJHdkpGo85498335;     IdTdRemZeylBmlTBozFdKzaJHdkpGo85498335 = IdTdRemZeylBmlTBozFdKzaJHdkpGo68348160;     IdTdRemZeylBmlTBozFdKzaJHdkpGo68348160 = IdTdRemZeylBmlTBozFdKzaJHdkpGo64128116;     IdTdRemZeylBmlTBozFdKzaJHdkpGo64128116 = IdTdRemZeylBmlTBozFdKzaJHdkpGo54510574;     IdTdRemZeylBmlTBozFdKzaJHdkpGo54510574 = IdTdRemZeylBmlTBozFdKzaJHdkpGo30485103;     IdTdRemZeylBmlTBozFdKzaJHdkpGo30485103 = IdTdRemZeylBmlTBozFdKzaJHdkpGo15916094;     IdTdRemZeylBmlTBozFdKzaJHdkpGo15916094 = IdTdRemZeylBmlTBozFdKzaJHdkpGo54555993;     IdTdRemZeylBmlTBozFdKzaJHdkpGo54555993 = IdTdRemZeylBmlTBozFdKzaJHdkpGo58098104;     IdTdRemZeylBmlTBozFdKzaJHdkpGo58098104 = IdTdRemZeylBmlTBozFdKzaJHdkpGo6222303;     IdTdRemZeylBmlTBozFdKzaJHdkpGo6222303 = IdTdRemZeylBmlTBozFdKzaJHdkpGo5192965;     IdTdRemZeylBmlTBozFdKzaJHdkpGo5192965 = IdTdRemZeylBmlTBozFdKzaJHdkpGo63435522;     IdTdRemZeylBmlTBozFdKzaJHdkpGo63435522 = IdTdRemZeylBmlTBozFdKzaJHdkpGo15327437;     IdTdRemZeylBmlTBozFdKzaJHdkpGo15327437 = IdTdRemZeylBmlTBozFdKzaJHdkpGo47289105;     IdTdRemZeylBmlTBozFdKzaJHdkpGo47289105 = IdTdRemZeylBmlTBozFdKzaJHdkpGo15482323;     IdTdRemZeylBmlTBozFdKzaJHdkpGo15482323 = IdTdRemZeylBmlTBozFdKzaJHdkpGo59054141;     IdTdRemZeylBmlTBozFdKzaJHdkpGo59054141 = IdTdRemZeylBmlTBozFdKzaJHdkpGo26546989;     IdTdRemZeylBmlTBozFdKzaJHdkpGo26546989 = IdTdRemZeylBmlTBozFdKzaJHdkpGo18801934;     IdTdRemZeylBmlTBozFdKzaJHdkpGo18801934 = IdTdRemZeylBmlTBozFdKzaJHdkpGo51809383;     IdTdRemZeylBmlTBozFdKzaJHdkpGo51809383 = IdTdRemZeylBmlTBozFdKzaJHdkpGo14787977;     IdTdRemZeylBmlTBozFdKzaJHdkpGo14787977 = IdTdRemZeylBmlTBozFdKzaJHdkpGo78259631;     IdTdRemZeylBmlTBozFdKzaJHdkpGo78259631 = IdTdRemZeylBmlTBozFdKzaJHdkpGo446738;     IdTdRemZeylBmlTBozFdKzaJHdkpGo446738 = IdTdRemZeylBmlTBozFdKzaJHdkpGo76012313;     IdTdRemZeylBmlTBozFdKzaJHdkpGo76012313 = IdTdRemZeylBmlTBozFdKzaJHdkpGo38626763;     IdTdRemZeylBmlTBozFdKzaJHdkpGo38626763 = IdTdRemZeylBmlTBozFdKzaJHdkpGo97750623;     IdTdRemZeylBmlTBozFdKzaJHdkpGo97750623 = IdTdRemZeylBmlTBozFdKzaJHdkpGo13624094;     IdTdRemZeylBmlTBozFdKzaJHdkpGo13624094 = IdTdRemZeylBmlTBozFdKzaJHdkpGo6651613;     IdTdRemZeylBmlTBozFdKzaJHdkpGo6651613 = IdTdRemZeylBmlTBozFdKzaJHdkpGo66669929;     IdTdRemZeylBmlTBozFdKzaJHdkpGo66669929 = IdTdRemZeylBmlTBozFdKzaJHdkpGo56546244;     IdTdRemZeylBmlTBozFdKzaJHdkpGo56546244 = IdTdRemZeylBmlTBozFdKzaJHdkpGo59150346;     IdTdRemZeylBmlTBozFdKzaJHdkpGo59150346 = IdTdRemZeylBmlTBozFdKzaJHdkpGo17453229;     IdTdRemZeylBmlTBozFdKzaJHdkpGo17453229 = IdTdRemZeylBmlTBozFdKzaJHdkpGo88931179;     IdTdRemZeylBmlTBozFdKzaJHdkpGo88931179 = IdTdRemZeylBmlTBozFdKzaJHdkpGo67162729;     IdTdRemZeylBmlTBozFdKzaJHdkpGo67162729 = IdTdRemZeylBmlTBozFdKzaJHdkpGo61524252;     IdTdRemZeylBmlTBozFdKzaJHdkpGo61524252 = IdTdRemZeylBmlTBozFdKzaJHdkpGo69182310;     IdTdRemZeylBmlTBozFdKzaJHdkpGo69182310 = IdTdRemZeylBmlTBozFdKzaJHdkpGo10662512;     IdTdRemZeylBmlTBozFdKzaJHdkpGo10662512 = IdTdRemZeylBmlTBozFdKzaJHdkpGo51019149;     IdTdRemZeylBmlTBozFdKzaJHdkpGo51019149 = IdTdRemZeylBmlTBozFdKzaJHdkpGo61666715;     IdTdRemZeylBmlTBozFdKzaJHdkpGo61666715 = IdTdRemZeylBmlTBozFdKzaJHdkpGo62122219;     IdTdRemZeylBmlTBozFdKzaJHdkpGo62122219 = IdTdRemZeylBmlTBozFdKzaJHdkpGo46009163;     IdTdRemZeylBmlTBozFdKzaJHdkpGo46009163 = IdTdRemZeylBmlTBozFdKzaJHdkpGo15754392;     IdTdRemZeylBmlTBozFdKzaJHdkpGo15754392 = IdTdRemZeylBmlTBozFdKzaJHdkpGo46327304;     IdTdRemZeylBmlTBozFdKzaJHdkpGo46327304 = IdTdRemZeylBmlTBozFdKzaJHdkpGo67740306;     IdTdRemZeylBmlTBozFdKzaJHdkpGo67740306 = IdTdRemZeylBmlTBozFdKzaJHdkpGo20976648;     IdTdRemZeylBmlTBozFdKzaJHdkpGo20976648 = IdTdRemZeylBmlTBozFdKzaJHdkpGo72309653;     IdTdRemZeylBmlTBozFdKzaJHdkpGo72309653 = IdTdRemZeylBmlTBozFdKzaJHdkpGo9045637;     IdTdRemZeylBmlTBozFdKzaJHdkpGo9045637 = IdTdRemZeylBmlTBozFdKzaJHdkpGo9553803;     IdTdRemZeylBmlTBozFdKzaJHdkpGo9553803 = IdTdRemZeylBmlTBozFdKzaJHdkpGo57905201;     IdTdRemZeylBmlTBozFdKzaJHdkpGo57905201 = IdTdRemZeylBmlTBozFdKzaJHdkpGo34359898;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void KRAicpJnmouUacpBSNiOzvhbO94082267() {     double xFDSIJppZSGQFfLvWPxEOMeQiFojIq56182119 = -593381237;    double xFDSIJppZSGQFfLvWPxEOMeQiFojIq54483711 = -261792715;    double xFDSIJppZSGQFfLvWPxEOMeQiFojIq88058291 = -539189840;    double xFDSIJppZSGQFfLvWPxEOMeQiFojIq18064773 = -332076936;    double xFDSIJppZSGQFfLvWPxEOMeQiFojIq32182176 = -638546782;    double xFDSIJppZSGQFfLvWPxEOMeQiFojIq13998091 = -540770937;    double xFDSIJppZSGQFfLvWPxEOMeQiFojIq50835072 = 64617739;    double xFDSIJppZSGQFfLvWPxEOMeQiFojIq54496532 = -120919289;    double xFDSIJppZSGQFfLvWPxEOMeQiFojIq84707342 = -881449174;    double xFDSIJppZSGQFfLvWPxEOMeQiFojIq18934171 = -543283029;    double xFDSIJppZSGQFfLvWPxEOMeQiFojIq68494563 = -925605281;    double xFDSIJppZSGQFfLvWPxEOMeQiFojIq27825053 = -653430315;    double xFDSIJppZSGQFfLvWPxEOMeQiFojIq11410393 = -175865399;    double xFDSIJppZSGQFfLvWPxEOMeQiFojIq19308288 = -208368994;    double xFDSIJppZSGQFfLvWPxEOMeQiFojIq30692523 = -948734675;    double xFDSIJppZSGQFfLvWPxEOMeQiFojIq76274374 = -353941206;    double xFDSIJppZSGQFfLvWPxEOMeQiFojIq39907521 = -409364904;    double xFDSIJppZSGQFfLvWPxEOMeQiFojIq41668232 = -742841286;    double xFDSIJppZSGQFfLvWPxEOMeQiFojIq30922371 = -14134943;    double xFDSIJppZSGQFfLvWPxEOMeQiFojIq84320906 = -899410025;    double xFDSIJppZSGQFfLvWPxEOMeQiFojIq73283666 = -972903959;    double xFDSIJppZSGQFfLvWPxEOMeQiFojIq34633760 = 82266762;    double xFDSIJppZSGQFfLvWPxEOMeQiFojIq47976737 = -467642448;    double xFDSIJppZSGQFfLvWPxEOMeQiFojIq49123540 = -696415855;    double xFDSIJppZSGQFfLvWPxEOMeQiFojIq44704201 = -287420106;    double xFDSIJppZSGQFfLvWPxEOMeQiFojIq7067706 = -163383103;    double xFDSIJppZSGQFfLvWPxEOMeQiFojIq4918275 = -537434615;    double xFDSIJppZSGQFfLvWPxEOMeQiFojIq51172010 = -513192630;    double xFDSIJppZSGQFfLvWPxEOMeQiFojIq10337852 = -307175177;    double xFDSIJppZSGQFfLvWPxEOMeQiFojIq70565258 = -770821872;    double xFDSIJppZSGQFfLvWPxEOMeQiFojIq93488773 = -676239539;    double xFDSIJppZSGQFfLvWPxEOMeQiFojIq69180515 = -900133982;    double xFDSIJppZSGQFfLvWPxEOMeQiFojIq21480312 = -697830687;    double xFDSIJppZSGQFfLvWPxEOMeQiFojIq91906426 = -139609098;    double xFDSIJppZSGQFfLvWPxEOMeQiFojIq6629044 = -291283472;    double xFDSIJppZSGQFfLvWPxEOMeQiFojIq86209753 = -413213435;    double xFDSIJppZSGQFfLvWPxEOMeQiFojIq19576522 = -906990982;    double xFDSIJppZSGQFfLvWPxEOMeQiFojIq35608348 = -62264484;    double xFDSIJppZSGQFfLvWPxEOMeQiFojIq61263744 = -32866447;    double xFDSIJppZSGQFfLvWPxEOMeQiFojIq38509056 = -89531199;    double xFDSIJppZSGQFfLvWPxEOMeQiFojIq81574796 = -785308347;    double xFDSIJppZSGQFfLvWPxEOMeQiFojIq94004788 = -813722225;    double xFDSIJppZSGQFfLvWPxEOMeQiFojIq19848558 = 68974563;    double xFDSIJppZSGQFfLvWPxEOMeQiFojIq72976098 = -674530899;    double xFDSIJppZSGQFfLvWPxEOMeQiFojIq85110116 = -138507184;    double xFDSIJppZSGQFfLvWPxEOMeQiFojIq43310083 = -469839116;    double xFDSIJppZSGQFfLvWPxEOMeQiFojIq86613719 = -937075120;    double xFDSIJppZSGQFfLvWPxEOMeQiFojIq54571077 = -6905483;    double xFDSIJppZSGQFfLvWPxEOMeQiFojIq5203049 = -653623321;    double xFDSIJppZSGQFfLvWPxEOMeQiFojIq89557236 = -222337153;    double xFDSIJppZSGQFfLvWPxEOMeQiFojIq46047270 = -689606017;    double xFDSIJppZSGQFfLvWPxEOMeQiFojIq77187919 = -708851526;    double xFDSIJppZSGQFfLvWPxEOMeQiFojIq72329743 = -823093849;    double xFDSIJppZSGQFfLvWPxEOMeQiFojIq13523458 = -577752262;    double xFDSIJppZSGQFfLvWPxEOMeQiFojIq20798602 = -83339287;    double xFDSIJppZSGQFfLvWPxEOMeQiFojIq21548359 = -575647999;    double xFDSIJppZSGQFfLvWPxEOMeQiFojIq6506974 = -794150267;    double xFDSIJppZSGQFfLvWPxEOMeQiFojIq38934751 = -842773985;    double xFDSIJppZSGQFfLvWPxEOMeQiFojIq73360572 = 55343170;    double xFDSIJppZSGQFfLvWPxEOMeQiFojIq25114471 = -375163679;    double xFDSIJppZSGQFfLvWPxEOMeQiFojIq9079816 = 96663677;    double xFDSIJppZSGQFfLvWPxEOMeQiFojIq99663061 = -422189631;    double xFDSIJppZSGQFfLvWPxEOMeQiFojIq44158681 = -813744112;    double xFDSIJppZSGQFfLvWPxEOMeQiFojIq14142084 = -10627303;    double xFDSIJppZSGQFfLvWPxEOMeQiFojIq25445397 = -867043490;    double xFDSIJppZSGQFfLvWPxEOMeQiFojIq99314048 = 74528700;    double xFDSIJppZSGQFfLvWPxEOMeQiFojIq6344742 = -955599629;    double xFDSIJppZSGQFfLvWPxEOMeQiFojIq19503966 = 63743699;    double xFDSIJppZSGQFfLvWPxEOMeQiFojIq12679244 = -917085522;    double xFDSIJppZSGQFfLvWPxEOMeQiFojIq44482770 = -435521241;    double xFDSIJppZSGQFfLvWPxEOMeQiFojIq56697853 = -446950225;    double xFDSIJppZSGQFfLvWPxEOMeQiFojIq4299174 = -247100420;    double xFDSIJppZSGQFfLvWPxEOMeQiFojIq80404488 = -609974840;    double xFDSIJppZSGQFfLvWPxEOMeQiFojIq92413315 = -924603744;    double xFDSIJppZSGQFfLvWPxEOMeQiFojIq2746110 = -14101679;    double xFDSIJppZSGQFfLvWPxEOMeQiFojIq79278877 = -59181735;    double xFDSIJppZSGQFfLvWPxEOMeQiFojIq14785203 = -986707802;    double xFDSIJppZSGQFfLvWPxEOMeQiFojIq75000639 = -793111549;    double xFDSIJppZSGQFfLvWPxEOMeQiFojIq64013423 = -457908672;    double xFDSIJppZSGQFfLvWPxEOMeQiFojIq1394118 = -817580990;    double xFDSIJppZSGQFfLvWPxEOMeQiFojIq20453987 = -226307984;    double xFDSIJppZSGQFfLvWPxEOMeQiFojIq50347198 = -430529133;    double xFDSIJppZSGQFfLvWPxEOMeQiFojIq45968962 = -859569310;    double xFDSIJppZSGQFfLvWPxEOMeQiFojIq20780616 = 15161975;    double xFDSIJppZSGQFfLvWPxEOMeQiFojIq24517988 = 18784145;    double xFDSIJppZSGQFfLvWPxEOMeQiFojIq16300854 = -967388013;    double xFDSIJppZSGQFfLvWPxEOMeQiFojIq96850771 = 22959867;    double xFDSIJppZSGQFfLvWPxEOMeQiFojIq7956854 = -20078425;    double xFDSIJppZSGQFfLvWPxEOMeQiFojIq71107825 = 43730188;    double xFDSIJppZSGQFfLvWPxEOMeQiFojIq85080685 = -715635474;    double xFDSIJppZSGQFfLvWPxEOMeQiFojIq79702779 = -619063168;    double xFDSIJppZSGQFfLvWPxEOMeQiFojIq80641771 = 35783003;    double xFDSIJppZSGQFfLvWPxEOMeQiFojIq62247775 = -17607654;    double xFDSIJppZSGQFfLvWPxEOMeQiFojIq36149273 = -657702769;    double xFDSIJppZSGQFfLvWPxEOMeQiFojIq29429240 = -86194877;    double xFDSIJppZSGQFfLvWPxEOMeQiFojIq81911734 = -263118717;    double xFDSIJppZSGQFfLvWPxEOMeQiFojIq49846108 = -999978114;    double xFDSIJppZSGQFfLvWPxEOMeQiFojIq5706474 = -920398134;    double xFDSIJppZSGQFfLvWPxEOMeQiFojIq47530701 = -807487410;    double xFDSIJppZSGQFfLvWPxEOMeQiFojIq85796068 = -593381237;     xFDSIJppZSGQFfLvWPxEOMeQiFojIq56182119 = xFDSIJppZSGQFfLvWPxEOMeQiFojIq54483711;     xFDSIJppZSGQFfLvWPxEOMeQiFojIq54483711 = xFDSIJppZSGQFfLvWPxEOMeQiFojIq88058291;     xFDSIJppZSGQFfLvWPxEOMeQiFojIq88058291 = xFDSIJppZSGQFfLvWPxEOMeQiFojIq18064773;     xFDSIJppZSGQFfLvWPxEOMeQiFojIq18064773 = xFDSIJppZSGQFfLvWPxEOMeQiFojIq32182176;     xFDSIJppZSGQFfLvWPxEOMeQiFojIq32182176 = xFDSIJppZSGQFfLvWPxEOMeQiFojIq13998091;     xFDSIJppZSGQFfLvWPxEOMeQiFojIq13998091 = xFDSIJppZSGQFfLvWPxEOMeQiFojIq50835072;     xFDSIJppZSGQFfLvWPxEOMeQiFojIq50835072 = xFDSIJppZSGQFfLvWPxEOMeQiFojIq54496532;     xFDSIJppZSGQFfLvWPxEOMeQiFojIq54496532 = xFDSIJppZSGQFfLvWPxEOMeQiFojIq84707342;     xFDSIJppZSGQFfLvWPxEOMeQiFojIq84707342 = xFDSIJppZSGQFfLvWPxEOMeQiFojIq18934171;     xFDSIJppZSGQFfLvWPxEOMeQiFojIq18934171 = xFDSIJppZSGQFfLvWPxEOMeQiFojIq68494563;     xFDSIJppZSGQFfLvWPxEOMeQiFojIq68494563 = xFDSIJppZSGQFfLvWPxEOMeQiFojIq27825053;     xFDSIJppZSGQFfLvWPxEOMeQiFojIq27825053 = xFDSIJppZSGQFfLvWPxEOMeQiFojIq11410393;     xFDSIJppZSGQFfLvWPxEOMeQiFojIq11410393 = xFDSIJppZSGQFfLvWPxEOMeQiFojIq19308288;     xFDSIJppZSGQFfLvWPxEOMeQiFojIq19308288 = xFDSIJppZSGQFfLvWPxEOMeQiFojIq30692523;     xFDSIJppZSGQFfLvWPxEOMeQiFojIq30692523 = xFDSIJppZSGQFfLvWPxEOMeQiFojIq76274374;     xFDSIJppZSGQFfLvWPxEOMeQiFojIq76274374 = xFDSIJppZSGQFfLvWPxEOMeQiFojIq39907521;     xFDSIJppZSGQFfLvWPxEOMeQiFojIq39907521 = xFDSIJppZSGQFfLvWPxEOMeQiFojIq41668232;     xFDSIJppZSGQFfLvWPxEOMeQiFojIq41668232 = xFDSIJppZSGQFfLvWPxEOMeQiFojIq30922371;     xFDSIJppZSGQFfLvWPxEOMeQiFojIq30922371 = xFDSIJppZSGQFfLvWPxEOMeQiFojIq84320906;     xFDSIJppZSGQFfLvWPxEOMeQiFojIq84320906 = xFDSIJppZSGQFfLvWPxEOMeQiFojIq73283666;     xFDSIJppZSGQFfLvWPxEOMeQiFojIq73283666 = xFDSIJppZSGQFfLvWPxEOMeQiFojIq34633760;     xFDSIJppZSGQFfLvWPxEOMeQiFojIq34633760 = xFDSIJppZSGQFfLvWPxEOMeQiFojIq47976737;     xFDSIJppZSGQFfLvWPxEOMeQiFojIq47976737 = xFDSIJppZSGQFfLvWPxEOMeQiFojIq49123540;     xFDSIJppZSGQFfLvWPxEOMeQiFojIq49123540 = xFDSIJppZSGQFfLvWPxEOMeQiFojIq44704201;     xFDSIJppZSGQFfLvWPxEOMeQiFojIq44704201 = xFDSIJppZSGQFfLvWPxEOMeQiFojIq7067706;     xFDSIJppZSGQFfLvWPxEOMeQiFojIq7067706 = xFDSIJppZSGQFfLvWPxEOMeQiFojIq4918275;     xFDSIJppZSGQFfLvWPxEOMeQiFojIq4918275 = xFDSIJppZSGQFfLvWPxEOMeQiFojIq51172010;     xFDSIJppZSGQFfLvWPxEOMeQiFojIq51172010 = xFDSIJppZSGQFfLvWPxEOMeQiFojIq10337852;     xFDSIJppZSGQFfLvWPxEOMeQiFojIq10337852 = xFDSIJppZSGQFfLvWPxEOMeQiFojIq70565258;     xFDSIJppZSGQFfLvWPxEOMeQiFojIq70565258 = xFDSIJppZSGQFfLvWPxEOMeQiFojIq93488773;     xFDSIJppZSGQFfLvWPxEOMeQiFojIq93488773 = xFDSIJppZSGQFfLvWPxEOMeQiFojIq69180515;     xFDSIJppZSGQFfLvWPxEOMeQiFojIq69180515 = xFDSIJppZSGQFfLvWPxEOMeQiFojIq21480312;     xFDSIJppZSGQFfLvWPxEOMeQiFojIq21480312 = xFDSIJppZSGQFfLvWPxEOMeQiFojIq91906426;     xFDSIJppZSGQFfLvWPxEOMeQiFojIq91906426 = xFDSIJppZSGQFfLvWPxEOMeQiFojIq6629044;     xFDSIJppZSGQFfLvWPxEOMeQiFojIq6629044 = xFDSIJppZSGQFfLvWPxEOMeQiFojIq86209753;     xFDSIJppZSGQFfLvWPxEOMeQiFojIq86209753 = xFDSIJppZSGQFfLvWPxEOMeQiFojIq19576522;     xFDSIJppZSGQFfLvWPxEOMeQiFojIq19576522 = xFDSIJppZSGQFfLvWPxEOMeQiFojIq35608348;     xFDSIJppZSGQFfLvWPxEOMeQiFojIq35608348 = xFDSIJppZSGQFfLvWPxEOMeQiFojIq61263744;     xFDSIJppZSGQFfLvWPxEOMeQiFojIq61263744 = xFDSIJppZSGQFfLvWPxEOMeQiFojIq38509056;     xFDSIJppZSGQFfLvWPxEOMeQiFojIq38509056 = xFDSIJppZSGQFfLvWPxEOMeQiFojIq81574796;     xFDSIJppZSGQFfLvWPxEOMeQiFojIq81574796 = xFDSIJppZSGQFfLvWPxEOMeQiFojIq94004788;     xFDSIJppZSGQFfLvWPxEOMeQiFojIq94004788 = xFDSIJppZSGQFfLvWPxEOMeQiFojIq19848558;     xFDSIJppZSGQFfLvWPxEOMeQiFojIq19848558 = xFDSIJppZSGQFfLvWPxEOMeQiFojIq72976098;     xFDSIJppZSGQFfLvWPxEOMeQiFojIq72976098 = xFDSIJppZSGQFfLvWPxEOMeQiFojIq85110116;     xFDSIJppZSGQFfLvWPxEOMeQiFojIq85110116 = xFDSIJppZSGQFfLvWPxEOMeQiFojIq43310083;     xFDSIJppZSGQFfLvWPxEOMeQiFojIq43310083 = xFDSIJppZSGQFfLvWPxEOMeQiFojIq86613719;     xFDSIJppZSGQFfLvWPxEOMeQiFojIq86613719 = xFDSIJppZSGQFfLvWPxEOMeQiFojIq54571077;     xFDSIJppZSGQFfLvWPxEOMeQiFojIq54571077 = xFDSIJppZSGQFfLvWPxEOMeQiFojIq5203049;     xFDSIJppZSGQFfLvWPxEOMeQiFojIq5203049 = xFDSIJppZSGQFfLvWPxEOMeQiFojIq89557236;     xFDSIJppZSGQFfLvWPxEOMeQiFojIq89557236 = xFDSIJppZSGQFfLvWPxEOMeQiFojIq46047270;     xFDSIJppZSGQFfLvWPxEOMeQiFojIq46047270 = xFDSIJppZSGQFfLvWPxEOMeQiFojIq77187919;     xFDSIJppZSGQFfLvWPxEOMeQiFojIq77187919 = xFDSIJppZSGQFfLvWPxEOMeQiFojIq72329743;     xFDSIJppZSGQFfLvWPxEOMeQiFojIq72329743 = xFDSIJppZSGQFfLvWPxEOMeQiFojIq13523458;     xFDSIJppZSGQFfLvWPxEOMeQiFojIq13523458 = xFDSIJppZSGQFfLvWPxEOMeQiFojIq20798602;     xFDSIJppZSGQFfLvWPxEOMeQiFojIq20798602 = xFDSIJppZSGQFfLvWPxEOMeQiFojIq21548359;     xFDSIJppZSGQFfLvWPxEOMeQiFojIq21548359 = xFDSIJppZSGQFfLvWPxEOMeQiFojIq6506974;     xFDSIJppZSGQFfLvWPxEOMeQiFojIq6506974 = xFDSIJppZSGQFfLvWPxEOMeQiFojIq38934751;     xFDSIJppZSGQFfLvWPxEOMeQiFojIq38934751 = xFDSIJppZSGQFfLvWPxEOMeQiFojIq73360572;     xFDSIJppZSGQFfLvWPxEOMeQiFojIq73360572 = xFDSIJppZSGQFfLvWPxEOMeQiFojIq25114471;     xFDSIJppZSGQFfLvWPxEOMeQiFojIq25114471 = xFDSIJppZSGQFfLvWPxEOMeQiFojIq9079816;     xFDSIJppZSGQFfLvWPxEOMeQiFojIq9079816 = xFDSIJppZSGQFfLvWPxEOMeQiFojIq99663061;     xFDSIJppZSGQFfLvWPxEOMeQiFojIq99663061 = xFDSIJppZSGQFfLvWPxEOMeQiFojIq44158681;     xFDSIJppZSGQFfLvWPxEOMeQiFojIq44158681 = xFDSIJppZSGQFfLvWPxEOMeQiFojIq14142084;     xFDSIJppZSGQFfLvWPxEOMeQiFojIq14142084 = xFDSIJppZSGQFfLvWPxEOMeQiFojIq25445397;     xFDSIJppZSGQFfLvWPxEOMeQiFojIq25445397 = xFDSIJppZSGQFfLvWPxEOMeQiFojIq99314048;     xFDSIJppZSGQFfLvWPxEOMeQiFojIq99314048 = xFDSIJppZSGQFfLvWPxEOMeQiFojIq6344742;     xFDSIJppZSGQFfLvWPxEOMeQiFojIq6344742 = xFDSIJppZSGQFfLvWPxEOMeQiFojIq19503966;     xFDSIJppZSGQFfLvWPxEOMeQiFojIq19503966 = xFDSIJppZSGQFfLvWPxEOMeQiFojIq12679244;     xFDSIJppZSGQFfLvWPxEOMeQiFojIq12679244 = xFDSIJppZSGQFfLvWPxEOMeQiFojIq44482770;     xFDSIJppZSGQFfLvWPxEOMeQiFojIq44482770 = xFDSIJppZSGQFfLvWPxEOMeQiFojIq56697853;     xFDSIJppZSGQFfLvWPxEOMeQiFojIq56697853 = xFDSIJppZSGQFfLvWPxEOMeQiFojIq4299174;     xFDSIJppZSGQFfLvWPxEOMeQiFojIq4299174 = xFDSIJppZSGQFfLvWPxEOMeQiFojIq80404488;     xFDSIJppZSGQFfLvWPxEOMeQiFojIq80404488 = xFDSIJppZSGQFfLvWPxEOMeQiFojIq92413315;     xFDSIJppZSGQFfLvWPxEOMeQiFojIq92413315 = xFDSIJppZSGQFfLvWPxEOMeQiFojIq2746110;     xFDSIJppZSGQFfLvWPxEOMeQiFojIq2746110 = xFDSIJppZSGQFfLvWPxEOMeQiFojIq79278877;     xFDSIJppZSGQFfLvWPxEOMeQiFojIq79278877 = xFDSIJppZSGQFfLvWPxEOMeQiFojIq14785203;     xFDSIJppZSGQFfLvWPxEOMeQiFojIq14785203 = xFDSIJppZSGQFfLvWPxEOMeQiFojIq75000639;     xFDSIJppZSGQFfLvWPxEOMeQiFojIq75000639 = xFDSIJppZSGQFfLvWPxEOMeQiFojIq64013423;     xFDSIJppZSGQFfLvWPxEOMeQiFojIq64013423 = xFDSIJppZSGQFfLvWPxEOMeQiFojIq1394118;     xFDSIJppZSGQFfLvWPxEOMeQiFojIq1394118 = xFDSIJppZSGQFfLvWPxEOMeQiFojIq20453987;     xFDSIJppZSGQFfLvWPxEOMeQiFojIq20453987 = xFDSIJppZSGQFfLvWPxEOMeQiFojIq50347198;     xFDSIJppZSGQFfLvWPxEOMeQiFojIq50347198 = xFDSIJppZSGQFfLvWPxEOMeQiFojIq45968962;     xFDSIJppZSGQFfLvWPxEOMeQiFojIq45968962 = xFDSIJppZSGQFfLvWPxEOMeQiFojIq20780616;     xFDSIJppZSGQFfLvWPxEOMeQiFojIq20780616 = xFDSIJppZSGQFfLvWPxEOMeQiFojIq24517988;     xFDSIJppZSGQFfLvWPxEOMeQiFojIq24517988 = xFDSIJppZSGQFfLvWPxEOMeQiFojIq16300854;     xFDSIJppZSGQFfLvWPxEOMeQiFojIq16300854 = xFDSIJppZSGQFfLvWPxEOMeQiFojIq96850771;     xFDSIJppZSGQFfLvWPxEOMeQiFojIq96850771 = xFDSIJppZSGQFfLvWPxEOMeQiFojIq7956854;     xFDSIJppZSGQFfLvWPxEOMeQiFojIq7956854 = xFDSIJppZSGQFfLvWPxEOMeQiFojIq71107825;     xFDSIJppZSGQFfLvWPxEOMeQiFojIq71107825 = xFDSIJppZSGQFfLvWPxEOMeQiFojIq85080685;     xFDSIJppZSGQFfLvWPxEOMeQiFojIq85080685 = xFDSIJppZSGQFfLvWPxEOMeQiFojIq79702779;     xFDSIJppZSGQFfLvWPxEOMeQiFojIq79702779 = xFDSIJppZSGQFfLvWPxEOMeQiFojIq80641771;     xFDSIJppZSGQFfLvWPxEOMeQiFojIq80641771 = xFDSIJppZSGQFfLvWPxEOMeQiFojIq62247775;     xFDSIJppZSGQFfLvWPxEOMeQiFojIq62247775 = xFDSIJppZSGQFfLvWPxEOMeQiFojIq36149273;     xFDSIJppZSGQFfLvWPxEOMeQiFojIq36149273 = xFDSIJppZSGQFfLvWPxEOMeQiFojIq29429240;     xFDSIJppZSGQFfLvWPxEOMeQiFojIq29429240 = xFDSIJppZSGQFfLvWPxEOMeQiFojIq81911734;     xFDSIJppZSGQFfLvWPxEOMeQiFojIq81911734 = xFDSIJppZSGQFfLvWPxEOMeQiFojIq49846108;     xFDSIJppZSGQFfLvWPxEOMeQiFojIq49846108 = xFDSIJppZSGQFfLvWPxEOMeQiFojIq5706474;     xFDSIJppZSGQFfLvWPxEOMeQiFojIq5706474 = xFDSIJppZSGQFfLvWPxEOMeQiFojIq47530701;     xFDSIJppZSGQFfLvWPxEOMeQiFojIq47530701 = xFDSIJppZSGQFfLvWPxEOMeQiFojIq85796068;     xFDSIJppZSGQFfLvWPxEOMeQiFojIq85796068 = xFDSIJppZSGQFfLvWPxEOMeQiFojIq56182119;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void LsHHELoEGGPsDpDPHTzkLVqkr55929526() {     double wgVtLEZEJgTklURKkSKprwcOsXvrcX7346202 = -415971580;    double wgVtLEZEJgTklURKkSKprwcOsXvrcX85850314 = -815343393;    double wgVtLEZEJgTklURKkSKprwcOsXvrcX55129854 = -101241525;    double wgVtLEZEJgTklURKkSKprwcOsXvrcX94588493 = -167263552;    double wgVtLEZEJgTklURKkSKprwcOsXvrcX79706288 = -100746677;    double wgVtLEZEJgTklURKkSKprwcOsXvrcX82822076 = -550165755;    double wgVtLEZEJgTklURKkSKprwcOsXvrcX30024097 = -804461142;    double wgVtLEZEJgTklURKkSKprwcOsXvrcX53730831 = -586460364;    double wgVtLEZEJgTklURKkSKprwcOsXvrcX18106092 = -487543334;    double wgVtLEZEJgTklURKkSKprwcOsXvrcX53890449 = -849212947;    double wgVtLEZEJgTklURKkSKprwcOsXvrcX17482276 = -405933126;    double wgVtLEZEJgTklURKkSKprwcOsXvrcX12752042 = -176326491;    double wgVtLEZEJgTklURKkSKprwcOsXvrcX96424862 = -826020604;    double wgVtLEZEJgTklURKkSKprwcOsXvrcX56271942 = -502570633;    double wgVtLEZEJgTklURKkSKprwcOsXvrcX88402407 = -688539443;    double wgVtLEZEJgTklURKkSKprwcOsXvrcX66281007 = -459119811;    double wgVtLEZEJgTklURKkSKprwcOsXvrcX95356513 = -705619062;    double wgVtLEZEJgTklURKkSKprwcOsXvrcX6900574 = 27532370;    double wgVtLEZEJgTklURKkSKprwcOsXvrcX74280083 = 1935076;    double wgVtLEZEJgTklURKkSKprwcOsXvrcX78717602 = -360313228;    double wgVtLEZEJgTklURKkSKprwcOsXvrcX54971621 = -506769895;    double wgVtLEZEJgTklURKkSKprwcOsXvrcX15936240 = -167190980;    double wgVtLEZEJgTklURKkSKprwcOsXvrcX92382729 = 85215500;    double wgVtLEZEJgTklURKkSKprwcOsXvrcX96201733 = -295034337;    double wgVtLEZEJgTklURKkSKprwcOsXvrcX82953168 = -949106244;    double wgVtLEZEJgTklURKkSKprwcOsXvrcX82620056 = -300490115;    double wgVtLEZEJgTklURKkSKprwcOsXvrcX39915675 = 30139403;    double wgVtLEZEJgTklURKkSKprwcOsXvrcX14373136 = -481484084;    double wgVtLEZEJgTklURKkSKprwcOsXvrcX38770724 = -325833193;    double wgVtLEZEJgTklURKkSKprwcOsXvrcX53300110 = -264072369;    double wgVtLEZEJgTklURKkSKprwcOsXvrcX70994721 = -620626835;    double wgVtLEZEJgTklURKkSKprwcOsXvrcX28284237 = -739547411;    double wgVtLEZEJgTklURKkSKprwcOsXvrcX49306838 = -695417177;    double wgVtLEZEJgTklURKkSKprwcOsXvrcX99363406 = -128580774;    double wgVtLEZEJgTklURKkSKprwcOsXvrcX91797058 = -853469220;    double wgVtLEZEJgTklURKkSKprwcOsXvrcX38621644 = -428168613;    double wgVtLEZEJgTklURKkSKprwcOsXvrcX30808661 = -867668249;    double wgVtLEZEJgTklURKkSKprwcOsXvrcX56671400 = -854956813;    double wgVtLEZEJgTklURKkSKprwcOsXvrcX78424497 = -562224507;    double wgVtLEZEJgTklURKkSKprwcOsXvrcX27949297 = -638903523;    double wgVtLEZEJgTklURKkSKprwcOsXvrcX63733026 = -923372625;    double wgVtLEZEJgTklURKkSKprwcOsXvrcX67721629 = -925591315;    double wgVtLEZEJgTklURKkSKprwcOsXvrcX78532356 = -547368454;    double wgVtLEZEJgTklURKkSKprwcOsXvrcX73794555 = -68326541;    double wgVtLEZEJgTklURKkSKprwcOsXvrcX53089921 = -489808820;    double wgVtLEZEJgTklURKkSKprwcOsXvrcX16538696 = -226978862;    double wgVtLEZEJgTklURKkSKprwcOsXvrcX13848420 = -383293463;    double wgVtLEZEJgTklURKkSKprwcOsXvrcX46180199 = 97967468;    double wgVtLEZEJgTklURKkSKprwcOsXvrcX25484078 = -416739635;    double wgVtLEZEJgTklURKkSKprwcOsXvrcX17222650 = -605408346;    double wgVtLEZEJgTklURKkSKprwcOsXvrcX79579135 = -765478229;    double wgVtLEZEJgTklURKkSKprwcOsXvrcX46252336 = -347155633;    double wgVtLEZEJgTklURKkSKprwcOsXvrcX83925299 = -750944955;    double wgVtLEZEJgTklURKkSKprwcOsXvrcX61571546 = -639799677;    double wgVtLEZEJgTklURKkSKprwcOsXvrcX957906 = -790419399;    double wgVtLEZEJgTklURKkSKprwcOsXvrcX91409962 = -148780600;    double wgVtLEZEJgTklURKkSKprwcOsXvrcX93467584 = -800558893;    double wgVtLEZEJgTklURKkSKprwcOsXvrcX58928121 = -806207189;    double wgVtLEZEJgTklURKkSKprwcOsXvrcX11635325 = -218157309;    double wgVtLEZEJgTklURKkSKprwcOsXvrcX97086232 = -800256563;    double wgVtLEZEJgTklURKkSKprwcOsXvrcX42906402 = -480305159;    double wgVtLEZEJgTklURKkSKprwcOsXvrcX15650962 = -222977058;    double wgVtLEZEJgTklURKkSKprwcOsXvrcX14960108 = -160627171;    double wgVtLEZEJgTklURKkSKprwcOsXvrcX64805982 = -123470965;    double wgVtLEZEJgTklURKkSKprwcOsXvrcX82895728 = -128586112;    double wgVtLEZEJgTklURKkSKprwcOsXvrcX89198038 = -666385716;    double wgVtLEZEJgTklURKkSKprwcOsXvrcX63445203 = -480909315;    double wgVtLEZEJgTklURKkSKprwcOsXvrcX97061455 = -597439831;    double wgVtLEZEJgTklURKkSKprwcOsXvrcX64474883 = -649101413;    double wgVtLEZEJgTklURKkSKprwcOsXvrcX49780764 = -160370830;    double wgVtLEZEJgTklURKkSKprwcOsXvrcX35472347 = -591451562;    double wgVtLEZEJgTklURKkSKprwcOsXvrcX38685113 = -850662249;    double wgVtLEZEJgTklURKkSKprwcOsXvrcX28476077 = -410243123;    double wgVtLEZEJgTklURKkSKprwcOsXvrcX46330787 = -359161401;    double wgVtLEZEJgTklURKkSKprwcOsXvrcX14984577 = -436940603;    double wgVtLEZEJgTklURKkSKprwcOsXvrcX87249991 = -581178580;    double wgVtLEZEJgTklURKkSKprwcOsXvrcX37403883 = -619822527;    double wgVtLEZEJgTklURKkSKprwcOsXvrcX18588175 = -846457960;    double wgVtLEZEJgTklURKkSKprwcOsXvrcX43111812 = -805225517;    double wgVtLEZEJgTklURKkSKprwcOsXvrcX66414473 = -622127382;    double wgVtLEZEJgTklURKkSKprwcOsXvrcX68771636 = -917196652;    double wgVtLEZEJgTklURKkSKprwcOsXvrcX93735475 = 32171935;    double wgVtLEZEJgTklURKkSKprwcOsXvrcX88889057 = 35255551;    double wgVtLEZEJgTklURKkSKprwcOsXvrcX21548074 = -720424848;    double wgVtLEZEJgTklURKkSKprwcOsXvrcX73720975 = -498594141;    double wgVtLEZEJgTklURKkSKprwcOsXvrcX24742385 = -173471203;    double wgVtLEZEJgTklURKkSKprwcOsXvrcX44358938 = -988602457;    double wgVtLEZEJgTklURKkSKprwcOsXvrcX87735292 = 44382499;    double wgVtLEZEJgTklURKkSKprwcOsXvrcX98405501 = -338161375;    double wgVtLEZEJgTklURKkSKprwcOsXvrcX387096 = -604688621;    double wgVtLEZEJgTklURKkSKprwcOsXvrcX45154059 = -627609720;    double wgVtLEZEJgTklURKkSKprwcOsXvrcX71880539 = 38538940;    double wgVtLEZEJgTklURKkSKprwcOsXvrcX45036076 = -536799504;    double wgVtLEZEJgTklURKkSKprwcOsXvrcX81338265 = -761967945;    double wgVtLEZEJgTklURKkSKprwcOsXvrcX85042895 = -58598365;    double wgVtLEZEJgTklURKkSKprwcOsXvrcX48082065 = -600395567;    double wgVtLEZEJgTklURKkSKprwcOsXvrcX52761522 = -664964144;    double wgVtLEZEJgTklURKkSKprwcOsXvrcX13726375 = -323897489;    double wgVtLEZEJgTklURKkSKprwcOsXvrcX90898827 = -939740429;    double wgVtLEZEJgTklURKkSKprwcOsXvrcX63891882 = -415971580;     wgVtLEZEJgTklURKkSKprwcOsXvrcX7346202 = wgVtLEZEJgTklURKkSKprwcOsXvrcX85850314;     wgVtLEZEJgTklURKkSKprwcOsXvrcX85850314 = wgVtLEZEJgTklURKkSKprwcOsXvrcX55129854;     wgVtLEZEJgTklURKkSKprwcOsXvrcX55129854 = wgVtLEZEJgTklURKkSKprwcOsXvrcX94588493;     wgVtLEZEJgTklURKkSKprwcOsXvrcX94588493 = wgVtLEZEJgTklURKkSKprwcOsXvrcX79706288;     wgVtLEZEJgTklURKkSKprwcOsXvrcX79706288 = wgVtLEZEJgTklURKkSKprwcOsXvrcX82822076;     wgVtLEZEJgTklURKkSKprwcOsXvrcX82822076 = wgVtLEZEJgTklURKkSKprwcOsXvrcX30024097;     wgVtLEZEJgTklURKkSKprwcOsXvrcX30024097 = wgVtLEZEJgTklURKkSKprwcOsXvrcX53730831;     wgVtLEZEJgTklURKkSKprwcOsXvrcX53730831 = wgVtLEZEJgTklURKkSKprwcOsXvrcX18106092;     wgVtLEZEJgTklURKkSKprwcOsXvrcX18106092 = wgVtLEZEJgTklURKkSKprwcOsXvrcX53890449;     wgVtLEZEJgTklURKkSKprwcOsXvrcX53890449 = wgVtLEZEJgTklURKkSKprwcOsXvrcX17482276;     wgVtLEZEJgTklURKkSKprwcOsXvrcX17482276 = wgVtLEZEJgTklURKkSKprwcOsXvrcX12752042;     wgVtLEZEJgTklURKkSKprwcOsXvrcX12752042 = wgVtLEZEJgTklURKkSKprwcOsXvrcX96424862;     wgVtLEZEJgTklURKkSKprwcOsXvrcX96424862 = wgVtLEZEJgTklURKkSKprwcOsXvrcX56271942;     wgVtLEZEJgTklURKkSKprwcOsXvrcX56271942 = wgVtLEZEJgTklURKkSKprwcOsXvrcX88402407;     wgVtLEZEJgTklURKkSKprwcOsXvrcX88402407 = wgVtLEZEJgTklURKkSKprwcOsXvrcX66281007;     wgVtLEZEJgTklURKkSKprwcOsXvrcX66281007 = wgVtLEZEJgTklURKkSKprwcOsXvrcX95356513;     wgVtLEZEJgTklURKkSKprwcOsXvrcX95356513 = wgVtLEZEJgTklURKkSKprwcOsXvrcX6900574;     wgVtLEZEJgTklURKkSKprwcOsXvrcX6900574 = wgVtLEZEJgTklURKkSKprwcOsXvrcX74280083;     wgVtLEZEJgTklURKkSKprwcOsXvrcX74280083 = wgVtLEZEJgTklURKkSKprwcOsXvrcX78717602;     wgVtLEZEJgTklURKkSKprwcOsXvrcX78717602 = wgVtLEZEJgTklURKkSKprwcOsXvrcX54971621;     wgVtLEZEJgTklURKkSKprwcOsXvrcX54971621 = wgVtLEZEJgTklURKkSKprwcOsXvrcX15936240;     wgVtLEZEJgTklURKkSKprwcOsXvrcX15936240 = wgVtLEZEJgTklURKkSKprwcOsXvrcX92382729;     wgVtLEZEJgTklURKkSKprwcOsXvrcX92382729 = wgVtLEZEJgTklURKkSKprwcOsXvrcX96201733;     wgVtLEZEJgTklURKkSKprwcOsXvrcX96201733 = wgVtLEZEJgTklURKkSKprwcOsXvrcX82953168;     wgVtLEZEJgTklURKkSKprwcOsXvrcX82953168 = wgVtLEZEJgTklURKkSKprwcOsXvrcX82620056;     wgVtLEZEJgTklURKkSKprwcOsXvrcX82620056 = wgVtLEZEJgTklURKkSKprwcOsXvrcX39915675;     wgVtLEZEJgTklURKkSKprwcOsXvrcX39915675 = wgVtLEZEJgTklURKkSKprwcOsXvrcX14373136;     wgVtLEZEJgTklURKkSKprwcOsXvrcX14373136 = wgVtLEZEJgTklURKkSKprwcOsXvrcX38770724;     wgVtLEZEJgTklURKkSKprwcOsXvrcX38770724 = wgVtLEZEJgTklURKkSKprwcOsXvrcX53300110;     wgVtLEZEJgTklURKkSKprwcOsXvrcX53300110 = wgVtLEZEJgTklURKkSKprwcOsXvrcX70994721;     wgVtLEZEJgTklURKkSKprwcOsXvrcX70994721 = wgVtLEZEJgTklURKkSKprwcOsXvrcX28284237;     wgVtLEZEJgTklURKkSKprwcOsXvrcX28284237 = wgVtLEZEJgTklURKkSKprwcOsXvrcX49306838;     wgVtLEZEJgTklURKkSKprwcOsXvrcX49306838 = wgVtLEZEJgTklURKkSKprwcOsXvrcX99363406;     wgVtLEZEJgTklURKkSKprwcOsXvrcX99363406 = wgVtLEZEJgTklURKkSKprwcOsXvrcX91797058;     wgVtLEZEJgTklURKkSKprwcOsXvrcX91797058 = wgVtLEZEJgTklURKkSKprwcOsXvrcX38621644;     wgVtLEZEJgTklURKkSKprwcOsXvrcX38621644 = wgVtLEZEJgTklURKkSKprwcOsXvrcX30808661;     wgVtLEZEJgTklURKkSKprwcOsXvrcX30808661 = wgVtLEZEJgTklURKkSKprwcOsXvrcX56671400;     wgVtLEZEJgTklURKkSKprwcOsXvrcX56671400 = wgVtLEZEJgTklURKkSKprwcOsXvrcX78424497;     wgVtLEZEJgTklURKkSKprwcOsXvrcX78424497 = wgVtLEZEJgTklURKkSKprwcOsXvrcX27949297;     wgVtLEZEJgTklURKkSKprwcOsXvrcX27949297 = wgVtLEZEJgTklURKkSKprwcOsXvrcX63733026;     wgVtLEZEJgTklURKkSKprwcOsXvrcX63733026 = wgVtLEZEJgTklURKkSKprwcOsXvrcX67721629;     wgVtLEZEJgTklURKkSKprwcOsXvrcX67721629 = wgVtLEZEJgTklURKkSKprwcOsXvrcX78532356;     wgVtLEZEJgTklURKkSKprwcOsXvrcX78532356 = wgVtLEZEJgTklURKkSKprwcOsXvrcX73794555;     wgVtLEZEJgTklURKkSKprwcOsXvrcX73794555 = wgVtLEZEJgTklURKkSKprwcOsXvrcX53089921;     wgVtLEZEJgTklURKkSKprwcOsXvrcX53089921 = wgVtLEZEJgTklURKkSKprwcOsXvrcX16538696;     wgVtLEZEJgTklURKkSKprwcOsXvrcX16538696 = wgVtLEZEJgTklURKkSKprwcOsXvrcX13848420;     wgVtLEZEJgTklURKkSKprwcOsXvrcX13848420 = wgVtLEZEJgTklURKkSKprwcOsXvrcX46180199;     wgVtLEZEJgTklURKkSKprwcOsXvrcX46180199 = wgVtLEZEJgTklURKkSKprwcOsXvrcX25484078;     wgVtLEZEJgTklURKkSKprwcOsXvrcX25484078 = wgVtLEZEJgTklURKkSKprwcOsXvrcX17222650;     wgVtLEZEJgTklURKkSKprwcOsXvrcX17222650 = wgVtLEZEJgTklURKkSKprwcOsXvrcX79579135;     wgVtLEZEJgTklURKkSKprwcOsXvrcX79579135 = wgVtLEZEJgTklURKkSKprwcOsXvrcX46252336;     wgVtLEZEJgTklURKkSKprwcOsXvrcX46252336 = wgVtLEZEJgTklURKkSKprwcOsXvrcX83925299;     wgVtLEZEJgTklURKkSKprwcOsXvrcX83925299 = wgVtLEZEJgTklURKkSKprwcOsXvrcX61571546;     wgVtLEZEJgTklURKkSKprwcOsXvrcX61571546 = wgVtLEZEJgTklURKkSKprwcOsXvrcX957906;     wgVtLEZEJgTklURKkSKprwcOsXvrcX957906 = wgVtLEZEJgTklURKkSKprwcOsXvrcX91409962;     wgVtLEZEJgTklURKkSKprwcOsXvrcX91409962 = wgVtLEZEJgTklURKkSKprwcOsXvrcX93467584;     wgVtLEZEJgTklURKkSKprwcOsXvrcX93467584 = wgVtLEZEJgTklURKkSKprwcOsXvrcX58928121;     wgVtLEZEJgTklURKkSKprwcOsXvrcX58928121 = wgVtLEZEJgTklURKkSKprwcOsXvrcX11635325;     wgVtLEZEJgTklURKkSKprwcOsXvrcX11635325 = wgVtLEZEJgTklURKkSKprwcOsXvrcX97086232;     wgVtLEZEJgTklURKkSKprwcOsXvrcX97086232 = wgVtLEZEJgTklURKkSKprwcOsXvrcX42906402;     wgVtLEZEJgTklURKkSKprwcOsXvrcX42906402 = wgVtLEZEJgTklURKkSKprwcOsXvrcX15650962;     wgVtLEZEJgTklURKkSKprwcOsXvrcX15650962 = wgVtLEZEJgTklURKkSKprwcOsXvrcX14960108;     wgVtLEZEJgTklURKkSKprwcOsXvrcX14960108 = wgVtLEZEJgTklURKkSKprwcOsXvrcX64805982;     wgVtLEZEJgTklURKkSKprwcOsXvrcX64805982 = wgVtLEZEJgTklURKkSKprwcOsXvrcX82895728;     wgVtLEZEJgTklURKkSKprwcOsXvrcX82895728 = wgVtLEZEJgTklURKkSKprwcOsXvrcX89198038;     wgVtLEZEJgTklURKkSKprwcOsXvrcX89198038 = wgVtLEZEJgTklURKkSKprwcOsXvrcX63445203;     wgVtLEZEJgTklURKkSKprwcOsXvrcX63445203 = wgVtLEZEJgTklURKkSKprwcOsXvrcX97061455;     wgVtLEZEJgTklURKkSKprwcOsXvrcX97061455 = wgVtLEZEJgTklURKkSKprwcOsXvrcX64474883;     wgVtLEZEJgTklURKkSKprwcOsXvrcX64474883 = wgVtLEZEJgTklURKkSKprwcOsXvrcX49780764;     wgVtLEZEJgTklURKkSKprwcOsXvrcX49780764 = wgVtLEZEJgTklURKkSKprwcOsXvrcX35472347;     wgVtLEZEJgTklURKkSKprwcOsXvrcX35472347 = wgVtLEZEJgTklURKkSKprwcOsXvrcX38685113;     wgVtLEZEJgTklURKkSKprwcOsXvrcX38685113 = wgVtLEZEJgTklURKkSKprwcOsXvrcX28476077;     wgVtLEZEJgTklURKkSKprwcOsXvrcX28476077 = wgVtLEZEJgTklURKkSKprwcOsXvrcX46330787;     wgVtLEZEJgTklURKkSKprwcOsXvrcX46330787 = wgVtLEZEJgTklURKkSKprwcOsXvrcX14984577;     wgVtLEZEJgTklURKkSKprwcOsXvrcX14984577 = wgVtLEZEJgTklURKkSKprwcOsXvrcX87249991;     wgVtLEZEJgTklURKkSKprwcOsXvrcX87249991 = wgVtLEZEJgTklURKkSKprwcOsXvrcX37403883;     wgVtLEZEJgTklURKkSKprwcOsXvrcX37403883 = wgVtLEZEJgTklURKkSKprwcOsXvrcX18588175;     wgVtLEZEJgTklURKkSKprwcOsXvrcX18588175 = wgVtLEZEJgTklURKkSKprwcOsXvrcX43111812;     wgVtLEZEJgTklURKkSKprwcOsXvrcX43111812 = wgVtLEZEJgTklURKkSKprwcOsXvrcX66414473;     wgVtLEZEJgTklURKkSKprwcOsXvrcX66414473 = wgVtLEZEJgTklURKkSKprwcOsXvrcX68771636;     wgVtLEZEJgTklURKkSKprwcOsXvrcX68771636 = wgVtLEZEJgTklURKkSKprwcOsXvrcX93735475;     wgVtLEZEJgTklURKkSKprwcOsXvrcX93735475 = wgVtLEZEJgTklURKkSKprwcOsXvrcX88889057;     wgVtLEZEJgTklURKkSKprwcOsXvrcX88889057 = wgVtLEZEJgTklURKkSKprwcOsXvrcX21548074;     wgVtLEZEJgTklURKkSKprwcOsXvrcX21548074 = wgVtLEZEJgTklURKkSKprwcOsXvrcX73720975;     wgVtLEZEJgTklURKkSKprwcOsXvrcX73720975 = wgVtLEZEJgTklURKkSKprwcOsXvrcX24742385;     wgVtLEZEJgTklURKkSKprwcOsXvrcX24742385 = wgVtLEZEJgTklURKkSKprwcOsXvrcX44358938;     wgVtLEZEJgTklURKkSKprwcOsXvrcX44358938 = wgVtLEZEJgTklURKkSKprwcOsXvrcX87735292;     wgVtLEZEJgTklURKkSKprwcOsXvrcX87735292 = wgVtLEZEJgTklURKkSKprwcOsXvrcX98405501;     wgVtLEZEJgTklURKkSKprwcOsXvrcX98405501 = wgVtLEZEJgTklURKkSKprwcOsXvrcX387096;     wgVtLEZEJgTklURKkSKprwcOsXvrcX387096 = wgVtLEZEJgTklURKkSKprwcOsXvrcX45154059;     wgVtLEZEJgTklURKkSKprwcOsXvrcX45154059 = wgVtLEZEJgTklURKkSKprwcOsXvrcX71880539;     wgVtLEZEJgTklURKkSKprwcOsXvrcX71880539 = wgVtLEZEJgTklURKkSKprwcOsXvrcX45036076;     wgVtLEZEJgTklURKkSKprwcOsXvrcX45036076 = wgVtLEZEJgTklURKkSKprwcOsXvrcX81338265;     wgVtLEZEJgTklURKkSKprwcOsXvrcX81338265 = wgVtLEZEJgTklURKkSKprwcOsXvrcX85042895;     wgVtLEZEJgTklURKkSKprwcOsXvrcX85042895 = wgVtLEZEJgTklURKkSKprwcOsXvrcX48082065;     wgVtLEZEJgTklURKkSKprwcOsXvrcX48082065 = wgVtLEZEJgTklURKkSKprwcOsXvrcX52761522;     wgVtLEZEJgTklURKkSKprwcOsXvrcX52761522 = wgVtLEZEJgTklURKkSKprwcOsXvrcX13726375;     wgVtLEZEJgTklURKkSKprwcOsXvrcX13726375 = wgVtLEZEJgTklURKkSKprwcOsXvrcX90898827;     wgVtLEZEJgTklURKkSKprwcOsXvrcX90898827 = wgVtLEZEJgTklURKkSKprwcOsXvrcX63891882;     wgVtLEZEJgTklURKkSKprwcOsXvrcX63891882 = wgVtLEZEJgTklURKkSKprwcOsXvrcX7346202;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void YcYykextXARVIVNyHNHvKNeIu65534252() {     double YwUZTIkWvNnrtblmyKppgfBJbCuDxH29168423 = -984186912;    double YwUZTIkWvNnrtblmyKppgfBJbCuDxH47318118 = -97942246;    double YwUZTIkWvNnrtblmyKppgfBJbCuDxH857125 = -148459057;    double YwUZTIkWvNnrtblmyKppgfBJbCuDxH25963639 = -372047728;    double YwUZTIkWvNnrtblmyKppgfBJbCuDxH39840619 = 22002401;    double YwUZTIkWvNnrtblmyKppgfBJbCuDxH6840392 = -561708913;    double YwUZTIkWvNnrtblmyKppgfBJbCuDxH59044681 = -867779266;    double YwUZTIkWvNnrtblmyKppgfBJbCuDxH40593461 = -594641212;    double YwUZTIkWvNnrtblmyKppgfBJbCuDxH14629731 = -473338752;    double YwUZTIkWvNnrtblmyKppgfBJbCuDxH15173675 = -719431344;    double YwUZTIkWvNnrtblmyKppgfBJbCuDxH88398544 = 38309171;    double YwUZTIkWvNnrtblmyKppgfBJbCuDxH28933925 = -279508098;    double YwUZTIkWvNnrtblmyKppgfBJbCuDxH29413805 = -264054393;    double YwUZTIkWvNnrtblmyKppgfBJbCuDxH23238409 = -252647430;    double YwUZTIkWvNnrtblmyKppgfBJbCuDxH83660203 = -615381362;    double YwUZTIkWvNnrtblmyKppgfBJbCuDxH14251734 = -901486352;    double YwUZTIkWvNnrtblmyKppgfBJbCuDxH88805572 = 8556220;    double YwUZTIkWvNnrtblmyKppgfBJbCuDxH69425877 = -994188547;    double YwUZTIkWvNnrtblmyKppgfBJbCuDxH78917306 = -71200581;    double YwUZTIkWvNnrtblmyKppgfBJbCuDxH59827245 = -851558283;    double YwUZTIkWvNnrtblmyKppgfBJbCuDxH12125906 = -238848597;    double YwUZTIkWvNnrtblmyKppgfBJbCuDxH80338217 = -237942145;    double YwUZTIkWvNnrtblmyKppgfBJbCuDxH1854134 = -570811855;    double YwUZTIkWvNnrtblmyKppgfBJbCuDxH33479356 = -705133202;    double YwUZTIkWvNnrtblmyKppgfBJbCuDxH56883836 = -860003216;    double YwUZTIkWvNnrtblmyKppgfBJbCuDxH72195910 = -627675643;    double YwUZTIkWvNnrtblmyKppgfBJbCuDxH12952279 = -596664642;    double YwUZTIkWvNnrtblmyKppgfBJbCuDxH49952961 = -345932317;    double YwUZTIkWvNnrtblmyKppgfBJbCuDxH86667636 = 7220889;    double YwUZTIkWvNnrtblmyKppgfBJbCuDxH99117187 = -640286564;    double YwUZTIkWvNnrtblmyKppgfBJbCuDxH22159987 = 73645417;    double YwUZTIkWvNnrtblmyKppgfBJbCuDxH47175563 = -515436242;    double YwUZTIkWvNnrtblmyKppgfBJbCuDxH74626303 = -438021060;    double YwUZTIkWvNnrtblmyKppgfBJbCuDxH71902524 = -904400401;    double YwUZTIkWvNnrtblmyKppgfBJbCuDxH72631271 = 96712178;    double YwUZTIkWvNnrtblmyKppgfBJbCuDxH8198604 = -442584593;    double YwUZTIkWvNnrtblmyKppgfBJbCuDxH73890917 = -917285346;    double YwUZTIkWvNnrtblmyKppgfBJbCuDxH60609262 = -336499571;    double YwUZTIkWvNnrtblmyKppgfBJbCuDxH38804944 = -334629788;    double YwUZTIkWvNnrtblmyKppgfBJbCuDxH40619942 = 3547476;    double YwUZTIkWvNnrtblmyKppgfBJbCuDxH18108872 = -257511883;    double YwUZTIkWvNnrtblmyKppgfBJbCuDxH84223800 = -613057393;    double YwUZTIkWvNnrtblmyKppgfBJbCuDxH25899756 = -591335269;    double YwUZTIkWvNnrtblmyKppgfBJbCuDxH21889414 = 22867290;    double YwUZTIkWvNnrtblmyKppgfBJbCuDxH33005732 = -676497449;    double YwUZTIkWvNnrtblmyKppgfBJbCuDxH55745175 = 69588908;    double YwUZTIkWvNnrtblmyKppgfBJbCuDxH39516532 = -564300983;    double YwUZTIkWvNnrtblmyKppgfBJbCuDxH28019952 = -740528521;    double YwUZTIkWvNnrtblmyKppgfBJbCuDxH32548170 = -601856058;    double YwUZTIkWvNnrtblmyKppgfBJbCuDxH33270126 = -584463531;    double YwUZTIkWvNnrtblmyKppgfBJbCuDxH68040954 = -809367555;    double YwUZTIkWvNnrtblmyKppgfBJbCuDxH42641000 = -672533714;    double YwUZTIkWvNnrtblmyKppgfBJbCuDxH75148163 = -714540094;    double YwUZTIkWvNnrtblmyKppgfBJbCuDxH89596668 = -830808736;    double YwUZTIkWvNnrtblmyKppgfBJbCuDxH53408347 = -751541148;    double YwUZTIkWvNnrtblmyKppgfBJbCuDxH48830205 = -646244767;    double YwUZTIkWvNnrtblmyKppgfBJbCuDxH45463984 = -527130391;    double YwUZTIkWvNnrtblmyKppgfBJbCuDxH67377769 = -443325856;    double YwUZTIkWvNnrtblmyKppgfBJbCuDxH69079803 = -512044513;    double YwUZTIkWvNnrtblmyKppgfBJbCuDxH67644709 = -350321957;    double YwUZTIkWvNnrtblmyKppgfBJbCuDxH93888113 = -965044272;    double YwUZTIkWvNnrtblmyKppgfBJbCuDxH9091721 = -421846949;    double YwUZTIkWvNnrtblmyKppgfBJbCuDxH53925824 = -501862102;    double YwUZTIkWvNnrtblmyKppgfBJbCuDxH15512544 = -833052189;    double YwUZTIkWvNnrtblmyKppgfBJbCuDxH93013688 = -693076762;    double YwUZTIkWvNnrtblmyKppgfBJbCuDxH41222982 = -446254588;    double YwUZTIkWvNnrtblmyKppgfBJbCuDxH54307621 = -841487039;    double YwUZTIkWvNnrtblmyKppgfBJbCuDxH57511281 = -359653992;    double YwUZTIkWvNnrtblmyKppgfBJbCuDxH50607138 = -249359608;    double YwUZTIkWvNnrtblmyKppgfBJbCuDxH75461599 = -72796769;    double YwUZTIkWvNnrtblmyKppgfBJbCuDxH40360817 = -984201007;    double YwUZTIkWvNnrtblmyKppgfBJbCuDxH28196310 = -654944210;    double YwUZTIkWvNnrtblmyKppgfBJbCuDxH30620933 = -559558760;    double YwUZTIkWvNnrtblmyKppgfBJbCuDxH38297364 = 25251943;    double YwUZTIkWvNnrtblmyKppgfBJbCuDxH41718373 = -494046401;    double YwUZTIkWvNnrtblmyKppgfBJbCuDxH27902105 = -625791205;    double YwUZTIkWvNnrtblmyKppgfBJbCuDxH54438462 = -646606877;    double YwUZTIkWvNnrtblmyKppgfBJbCuDxH79964720 = -493679146;    double YwUZTIkWvNnrtblmyKppgfBJbCuDxH473624 = 71364246;    double YwUZTIkWvNnrtblmyKppgfBJbCuDxH1138661 = -829592124;    double YwUZTIkWvNnrtblmyKppgfBJbCuDxH32679379 = 36625340;    double YwUZTIkWvNnrtblmyKppgfBJbCuDxH84932327 = -856136121;    double YwUZTIkWvNnrtblmyKppgfBJbCuDxH17404791 = -744076260;    double YwUZTIkWvNnrtblmyKppgfBJbCuDxH53397510 = -408315581;    double YwUZTIkWvNnrtblmyKppgfBJbCuDxH31076233 = -830919009;    double YwUZTIkWvNnrtblmyKppgfBJbCuDxH79518986 = -253820869;    double YwUZTIkWvNnrtblmyKppgfBJbCuDxH72027399 = -800896148;    double YwUZTIkWvNnrtblmyKppgfBJbCuDxH85029634 = -607212324;    double YwUZTIkWvNnrtblmyKppgfBJbCuDxH18494177 = -52859253;    double YwUZTIkWvNnrtblmyKppgfBJbCuDxH23801066 = -257043056;    double YwUZTIkWvNnrtblmyKppgfBJbCuDxH62734619 = -915454202;    double YwUZTIkWvNnrtblmyKppgfBJbCuDxH6513148 = -373959490;    double YwUZTIkWvNnrtblmyKppgfBJbCuDxH91529459 = -824455058;    double YwUZTIkWvNnrtblmyKppgfBJbCuDxH71160234 = -984307832;    double YwUZTIkWvNnrtblmyKppgfBJbCuDxH46731829 = -31408253;    double YwUZTIkWvNnrtblmyKppgfBJbCuDxH9017152 = -835664934;    double YwUZTIkWvNnrtblmyKppgfBJbCuDxH30297977 = -11195292;    double YwUZTIkWvNnrtblmyKppgfBJbCuDxH10387212 = -758283081;    double YwUZTIkWvNnrtblmyKppgfBJbCuDxH28875726 = -284055948;    double YwUZTIkWvNnrtblmyKppgfBJbCuDxH91782750 = -984186912;     YwUZTIkWvNnrtblmyKppgfBJbCuDxH29168423 = YwUZTIkWvNnrtblmyKppgfBJbCuDxH47318118;     YwUZTIkWvNnrtblmyKppgfBJbCuDxH47318118 = YwUZTIkWvNnrtblmyKppgfBJbCuDxH857125;     YwUZTIkWvNnrtblmyKppgfBJbCuDxH857125 = YwUZTIkWvNnrtblmyKppgfBJbCuDxH25963639;     YwUZTIkWvNnrtblmyKppgfBJbCuDxH25963639 = YwUZTIkWvNnrtblmyKppgfBJbCuDxH39840619;     YwUZTIkWvNnrtblmyKppgfBJbCuDxH39840619 = YwUZTIkWvNnrtblmyKppgfBJbCuDxH6840392;     YwUZTIkWvNnrtblmyKppgfBJbCuDxH6840392 = YwUZTIkWvNnrtblmyKppgfBJbCuDxH59044681;     YwUZTIkWvNnrtblmyKppgfBJbCuDxH59044681 = YwUZTIkWvNnrtblmyKppgfBJbCuDxH40593461;     YwUZTIkWvNnrtblmyKppgfBJbCuDxH40593461 = YwUZTIkWvNnrtblmyKppgfBJbCuDxH14629731;     YwUZTIkWvNnrtblmyKppgfBJbCuDxH14629731 = YwUZTIkWvNnrtblmyKppgfBJbCuDxH15173675;     YwUZTIkWvNnrtblmyKppgfBJbCuDxH15173675 = YwUZTIkWvNnrtblmyKppgfBJbCuDxH88398544;     YwUZTIkWvNnrtblmyKppgfBJbCuDxH88398544 = YwUZTIkWvNnrtblmyKppgfBJbCuDxH28933925;     YwUZTIkWvNnrtblmyKppgfBJbCuDxH28933925 = YwUZTIkWvNnrtblmyKppgfBJbCuDxH29413805;     YwUZTIkWvNnrtblmyKppgfBJbCuDxH29413805 = YwUZTIkWvNnrtblmyKppgfBJbCuDxH23238409;     YwUZTIkWvNnrtblmyKppgfBJbCuDxH23238409 = YwUZTIkWvNnrtblmyKppgfBJbCuDxH83660203;     YwUZTIkWvNnrtblmyKppgfBJbCuDxH83660203 = YwUZTIkWvNnrtblmyKppgfBJbCuDxH14251734;     YwUZTIkWvNnrtblmyKppgfBJbCuDxH14251734 = YwUZTIkWvNnrtblmyKppgfBJbCuDxH88805572;     YwUZTIkWvNnrtblmyKppgfBJbCuDxH88805572 = YwUZTIkWvNnrtblmyKppgfBJbCuDxH69425877;     YwUZTIkWvNnrtblmyKppgfBJbCuDxH69425877 = YwUZTIkWvNnrtblmyKppgfBJbCuDxH78917306;     YwUZTIkWvNnrtblmyKppgfBJbCuDxH78917306 = YwUZTIkWvNnrtblmyKppgfBJbCuDxH59827245;     YwUZTIkWvNnrtblmyKppgfBJbCuDxH59827245 = YwUZTIkWvNnrtblmyKppgfBJbCuDxH12125906;     YwUZTIkWvNnrtblmyKppgfBJbCuDxH12125906 = YwUZTIkWvNnrtblmyKppgfBJbCuDxH80338217;     YwUZTIkWvNnrtblmyKppgfBJbCuDxH80338217 = YwUZTIkWvNnrtblmyKppgfBJbCuDxH1854134;     YwUZTIkWvNnrtblmyKppgfBJbCuDxH1854134 = YwUZTIkWvNnrtblmyKppgfBJbCuDxH33479356;     YwUZTIkWvNnrtblmyKppgfBJbCuDxH33479356 = YwUZTIkWvNnrtblmyKppgfBJbCuDxH56883836;     YwUZTIkWvNnrtblmyKppgfBJbCuDxH56883836 = YwUZTIkWvNnrtblmyKppgfBJbCuDxH72195910;     YwUZTIkWvNnrtblmyKppgfBJbCuDxH72195910 = YwUZTIkWvNnrtblmyKppgfBJbCuDxH12952279;     YwUZTIkWvNnrtblmyKppgfBJbCuDxH12952279 = YwUZTIkWvNnrtblmyKppgfBJbCuDxH49952961;     YwUZTIkWvNnrtblmyKppgfBJbCuDxH49952961 = YwUZTIkWvNnrtblmyKppgfBJbCuDxH86667636;     YwUZTIkWvNnrtblmyKppgfBJbCuDxH86667636 = YwUZTIkWvNnrtblmyKppgfBJbCuDxH99117187;     YwUZTIkWvNnrtblmyKppgfBJbCuDxH99117187 = YwUZTIkWvNnrtblmyKppgfBJbCuDxH22159987;     YwUZTIkWvNnrtblmyKppgfBJbCuDxH22159987 = YwUZTIkWvNnrtblmyKppgfBJbCuDxH47175563;     YwUZTIkWvNnrtblmyKppgfBJbCuDxH47175563 = YwUZTIkWvNnrtblmyKppgfBJbCuDxH74626303;     YwUZTIkWvNnrtblmyKppgfBJbCuDxH74626303 = YwUZTIkWvNnrtblmyKppgfBJbCuDxH71902524;     YwUZTIkWvNnrtblmyKppgfBJbCuDxH71902524 = YwUZTIkWvNnrtblmyKppgfBJbCuDxH72631271;     YwUZTIkWvNnrtblmyKppgfBJbCuDxH72631271 = YwUZTIkWvNnrtblmyKppgfBJbCuDxH8198604;     YwUZTIkWvNnrtblmyKppgfBJbCuDxH8198604 = YwUZTIkWvNnrtblmyKppgfBJbCuDxH73890917;     YwUZTIkWvNnrtblmyKppgfBJbCuDxH73890917 = YwUZTIkWvNnrtblmyKppgfBJbCuDxH60609262;     YwUZTIkWvNnrtblmyKppgfBJbCuDxH60609262 = YwUZTIkWvNnrtblmyKppgfBJbCuDxH38804944;     YwUZTIkWvNnrtblmyKppgfBJbCuDxH38804944 = YwUZTIkWvNnrtblmyKppgfBJbCuDxH40619942;     YwUZTIkWvNnrtblmyKppgfBJbCuDxH40619942 = YwUZTIkWvNnrtblmyKppgfBJbCuDxH18108872;     YwUZTIkWvNnrtblmyKppgfBJbCuDxH18108872 = YwUZTIkWvNnrtblmyKppgfBJbCuDxH84223800;     YwUZTIkWvNnrtblmyKppgfBJbCuDxH84223800 = YwUZTIkWvNnrtblmyKppgfBJbCuDxH25899756;     YwUZTIkWvNnrtblmyKppgfBJbCuDxH25899756 = YwUZTIkWvNnrtblmyKppgfBJbCuDxH21889414;     YwUZTIkWvNnrtblmyKppgfBJbCuDxH21889414 = YwUZTIkWvNnrtblmyKppgfBJbCuDxH33005732;     YwUZTIkWvNnrtblmyKppgfBJbCuDxH33005732 = YwUZTIkWvNnrtblmyKppgfBJbCuDxH55745175;     YwUZTIkWvNnrtblmyKppgfBJbCuDxH55745175 = YwUZTIkWvNnrtblmyKppgfBJbCuDxH39516532;     YwUZTIkWvNnrtblmyKppgfBJbCuDxH39516532 = YwUZTIkWvNnrtblmyKppgfBJbCuDxH28019952;     YwUZTIkWvNnrtblmyKppgfBJbCuDxH28019952 = YwUZTIkWvNnrtblmyKppgfBJbCuDxH32548170;     YwUZTIkWvNnrtblmyKppgfBJbCuDxH32548170 = YwUZTIkWvNnrtblmyKppgfBJbCuDxH33270126;     YwUZTIkWvNnrtblmyKppgfBJbCuDxH33270126 = YwUZTIkWvNnrtblmyKppgfBJbCuDxH68040954;     YwUZTIkWvNnrtblmyKppgfBJbCuDxH68040954 = YwUZTIkWvNnrtblmyKppgfBJbCuDxH42641000;     YwUZTIkWvNnrtblmyKppgfBJbCuDxH42641000 = YwUZTIkWvNnrtblmyKppgfBJbCuDxH75148163;     YwUZTIkWvNnrtblmyKppgfBJbCuDxH75148163 = YwUZTIkWvNnrtblmyKppgfBJbCuDxH89596668;     YwUZTIkWvNnrtblmyKppgfBJbCuDxH89596668 = YwUZTIkWvNnrtblmyKppgfBJbCuDxH53408347;     YwUZTIkWvNnrtblmyKppgfBJbCuDxH53408347 = YwUZTIkWvNnrtblmyKppgfBJbCuDxH48830205;     YwUZTIkWvNnrtblmyKppgfBJbCuDxH48830205 = YwUZTIkWvNnrtblmyKppgfBJbCuDxH45463984;     YwUZTIkWvNnrtblmyKppgfBJbCuDxH45463984 = YwUZTIkWvNnrtblmyKppgfBJbCuDxH67377769;     YwUZTIkWvNnrtblmyKppgfBJbCuDxH67377769 = YwUZTIkWvNnrtblmyKppgfBJbCuDxH69079803;     YwUZTIkWvNnrtblmyKppgfBJbCuDxH69079803 = YwUZTIkWvNnrtblmyKppgfBJbCuDxH67644709;     YwUZTIkWvNnrtblmyKppgfBJbCuDxH67644709 = YwUZTIkWvNnrtblmyKppgfBJbCuDxH93888113;     YwUZTIkWvNnrtblmyKppgfBJbCuDxH93888113 = YwUZTIkWvNnrtblmyKppgfBJbCuDxH9091721;     YwUZTIkWvNnrtblmyKppgfBJbCuDxH9091721 = YwUZTIkWvNnrtblmyKppgfBJbCuDxH53925824;     YwUZTIkWvNnrtblmyKppgfBJbCuDxH53925824 = YwUZTIkWvNnrtblmyKppgfBJbCuDxH15512544;     YwUZTIkWvNnrtblmyKppgfBJbCuDxH15512544 = YwUZTIkWvNnrtblmyKppgfBJbCuDxH93013688;     YwUZTIkWvNnrtblmyKppgfBJbCuDxH93013688 = YwUZTIkWvNnrtblmyKppgfBJbCuDxH41222982;     YwUZTIkWvNnrtblmyKppgfBJbCuDxH41222982 = YwUZTIkWvNnrtblmyKppgfBJbCuDxH54307621;     YwUZTIkWvNnrtblmyKppgfBJbCuDxH54307621 = YwUZTIkWvNnrtblmyKppgfBJbCuDxH57511281;     YwUZTIkWvNnrtblmyKppgfBJbCuDxH57511281 = YwUZTIkWvNnrtblmyKppgfBJbCuDxH50607138;     YwUZTIkWvNnrtblmyKppgfBJbCuDxH50607138 = YwUZTIkWvNnrtblmyKppgfBJbCuDxH75461599;     YwUZTIkWvNnrtblmyKppgfBJbCuDxH75461599 = YwUZTIkWvNnrtblmyKppgfBJbCuDxH40360817;     YwUZTIkWvNnrtblmyKppgfBJbCuDxH40360817 = YwUZTIkWvNnrtblmyKppgfBJbCuDxH28196310;     YwUZTIkWvNnrtblmyKppgfBJbCuDxH28196310 = YwUZTIkWvNnrtblmyKppgfBJbCuDxH30620933;     YwUZTIkWvNnrtblmyKppgfBJbCuDxH30620933 = YwUZTIkWvNnrtblmyKppgfBJbCuDxH38297364;     YwUZTIkWvNnrtblmyKppgfBJbCuDxH38297364 = YwUZTIkWvNnrtblmyKppgfBJbCuDxH41718373;     YwUZTIkWvNnrtblmyKppgfBJbCuDxH41718373 = YwUZTIkWvNnrtblmyKppgfBJbCuDxH27902105;     YwUZTIkWvNnrtblmyKppgfBJbCuDxH27902105 = YwUZTIkWvNnrtblmyKppgfBJbCuDxH54438462;     YwUZTIkWvNnrtblmyKppgfBJbCuDxH54438462 = YwUZTIkWvNnrtblmyKppgfBJbCuDxH79964720;     YwUZTIkWvNnrtblmyKppgfBJbCuDxH79964720 = YwUZTIkWvNnrtblmyKppgfBJbCuDxH473624;     YwUZTIkWvNnrtblmyKppgfBJbCuDxH473624 = YwUZTIkWvNnrtblmyKppgfBJbCuDxH1138661;     YwUZTIkWvNnrtblmyKppgfBJbCuDxH1138661 = YwUZTIkWvNnrtblmyKppgfBJbCuDxH32679379;     YwUZTIkWvNnrtblmyKppgfBJbCuDxH32679379 = YwUZTIkWvNnrtblmyKppgfBJbCuDxH84932327;     YwUZTIkWvNnrtblmyKppgfBJbCuDxH84932327 = YwUZTIkWvNnrtblmyKppgfBJbCuDxH17404791;     YwUZTIkWvNnrtblmyKppgfBJbCuDxH17404791 = YwUZTIkWvNnrtblmyKppgfBJbCuDxH53397510;     YwUZTIkWvNnrtblmyKppgfBJbCuDxH53397510 = YwUZTIkWvNnrtblmyKppgfBJbCuDxH31076233;     YwUZTIkWvNnrtblmyKppgfBJbCuDxH31076233 = YwUZTIkWvNnrtblmyKppgfBJbCuDxH79518986;     YwUZTIkWvNnrtblmyKppgfBJbCuDxH79518986 = YwUZTIkWvNnrtblmyKppgfBJbCuDxH72027399;     YwUZTIkWvNnrtblmyKppgfBJbCuDxH72027399 = YwUZTIkWvNnrtblmyKppgfBJbCuDxH85029634;     YwUZTIkWvNnrtblmyKppgfBJbCuDxH85029634 = YwUZTIkWvNnrtblmyKppgfBJbCuDxH18494177;     YwUZTIkWvNnrtblmyKppgfBJbCuDxH18494177 = YwUZTIkWvNnrtblmyKppgfBJbCuDxH23801066;     YwUZTIkWvNnrtblmyKppgfBJbCuDxH23801066 = YwUZTIkWvNnrtblmyKppgfBJbCuDxH62734619;     YwUZTIkWvNnrtblmyKppgfBJbCuDxH62734619 = YwUZTIkWvNnrtblmyKppgfBJbCuDxH6513148;     YwUZTIkWvNnrtblmyKppgfBJbCuDxH6513148 = YwUZTIkWvNnrtblmyKppgfBJbCuDxH91529459;     YwUZTIkWvNnrtblmyKppgfBJbCuDxH91529459 = YwUZTIkWvNnrtblmyKppgfBJbCuDxH71160234;     YwUZTIkWvNnrtblmyKppgfBJbCuDxH71160234 = YwUZTIkWvNnrtblmyKppgfBJbCuDxH46731829;     YwUZTIkWvNnrtblmyKppgfBJbCuDxH46731829 = YwUZTIkWvNnrtblmyKppgfBJbCuDxH9017152;     YwUZTIkWvNnrtblmyKppgfBJbCuDxH9017152 = YwUZTIkWvNnrtblmyKppgfBJbCuDxH30297977;     YwUZTIkWvNnrtblmyKppgfBJbCuDxH30297977 = YwUZTIkWvNnrtblmyKppgfBJbCuDxH10387212;     YwUZTIkWvNnrtblmyKppgfBJbCuDxH10387212 = YwUZTIkWvNnrtblmyKppgfBJbCuDxH28875726;     YwUZTIkWvNnrtblmyKppgfBJbCuDxH28875726 = YwUZTIkWvNnrtblmyKppgfBJbCuDxH91782750;     YwUZTIkWvNnrtblmyKppgfBJbCuDxH91782750 = YwUZTIkWvNnrtblmyKppgfBJbCuDxH29168423;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void IrDEGhbAdrpAMNlNbCNdQtDVN27381511() {     double IdgBtyoQmPcyIiEpzBhlBKrbDganaj80332505 = -806777254;    double IdgBtyoQmPcyIiEpzBhlBKrbDganaj78684721 = -651492925;    double IdgBtyoQmPcyIiEpzBhlBKrbDganaj67928688 = -810510743;    double IdgBtyoQmPcyIiEpzBhlBKrbDganaj2487359 = -207234345;    double IdgBtyoQmPcyIiEpzBhlBKrbDganaj87364730 = -540197495;    double IdgBtyoQmPcyIiEpzBhlBKrbDganaj75664377 = -571103732;    double IdgBtyoQmPcyIiEpzBhlBKrbDganaj38233706 = -636858147;    double IdgBtyoQmPcyIiEpzBhlBKrbDganaj39827760 = 39817712;    double IdgBtyoQmPcyIiEpzBhlBKrbDganaj48028481 = -79432911;    double IdgBtyoQmPcyIiEpzBhlBKrbDganaj50129953 = 74638738;    double IdgBtyoQmPcyIiEpzBhlBKrbDganaj37386258 = -542018674;    double IdgBtyoQmPcyIiEpzBhlBKrbDganaj13860914 = -902404274;    double IdgBtyoQmPcyIiEpzBhlBKrbDganaj14428275 = -914209598;    double IdgBtyoQmPcyIiEpzBhlBKrbDganaj60202063 = -546849069;    double IdgBtyoQmPcyIiEpzBhlBKrbDganaj41370088 = -355186129;    double IdgBtyoQmPcyIiEpzBhlBKrbDganaj4258367 = 93335043;    double IdgBtyoQmPcyIiEpzBhlBKrbDganaj44254564 = -287697938;    double IdgBtyoQmPcyIiEpzBhlBKrbDganaj34658219 = -223814891;    double IdgBtyoQmPcyIiEpzBhlBKrbDganaj22275019 = -55130562;    double IdgBtyoQmPcyIiEpzBhlBKrbDganaj54223941 = -312461486;    double IdgBtyoQmPcyIiEpzBhlBKrbDganaj93813860 = -872714533;    double IdgBtyoQmPcyIiEpzBhlBKrbDganaj61640697 = -487399887;    double IdgBtyoQmPcyIiEpzBhlBKrbDganaj46260126 = -17953908;    double IdgBtyoQmPcyIiEpzBhlBKrbDganaj80557548 = -303751684;    double IdgBtyoQmPcyIiEpzBhlBKrbDganaj95132803 = -421689354;    double IdgBtyoQmPcyIiEpzBhlBKrbDganaj47748260 = -764782654;    double IdgBtyoQmPcyIiEpzBhlBKrbDganaj47949678 = -29090624;    double IdgBtyoQmPcyIiEpzBhlBKrbDganaj13154087 = -314223770;    double IdgBtyoQmPcyIiEpzBhlBKrbDganaj15100508 = -11437127;    double IdgBtyoQmPcyIiEpzBhlBKrbDganaj81852039 = -133537061;    double IdgBtyoQmPcyIiEpzBhlBKrbDganaj99665934 = -970741879;    double IdgBtyoQmPcyIiEpzBhlBKrbDganaj6279286 = -354849671;    double IdgBtyoQmPcyIiEpzBhlBKrbDganaj2452830 = -435607550;    double IdgBtyoQmPcyIiEpzBhlBKrbDganaj79359503 = -893372076;    double IdgBtyoQmPcyIiEpzBhlBKrbDganaj57799285 = -465473570;    double IdgBtyoQmPcyIiEpzBhlBKrbDganaj60610494 = -457539771;    double IdgBtyoQmPcyIiEpzBhlBKrbDganaj85123055 = -877962613;    double IdgBtyoQmPcyIiEpzBhlBKrbDganaj81672315 = -29191900;    double IdgBtyoQmPcyIiEpzBhlBKrbDganaj55965698 = -863987848;    double IdgBtyoQmPcyIiEpzBhlBKrbDganaj30060183 = -545824849;    double IdgBtyoQmPcyIiEpzBhlBKrbDganaj267102 = -395576161;    double IdgBtyoQmPcyIiEpzBhlBKrbDganaj57940641 = -724926483;    double IdgBtyoQmPcyIiEpzBhlBKrbDganaj84583554 = -107678286;    double IdgBtyoQmPcyIiEpzBhlBKrbDganaj22707871 = -470928351;    double IdgBtyoQmPcyIiEpzBhlBKrbDganaj985537 = 72200915;    double IdgBtyoQmPcyIiEpzBhlBKrbDganaj28973788 = -787550838;    double IdgBtyoQmPcyIiEpzBhlBKrbDganaj66751232 = -10519327;    double IdgBtyoQmPcyIiEpzBhlBKrbDganaj19629074 = -635655570;    double IdgBtyoQmPcyIiEpzBhlBKrbDganaj52829199 = -364972372;    double IdgBtyoQmPcyIiEpzBhlBKrbDganaj60935539 = -967534723;    double IdgBtyoQmPcyIiEpzBhlBKrbDganaj1572819 = -885239766;    double IdgBtyoQmPcyIiEpzBhlBKrbDganaj11705417 = -310837821;    double IdgBtyoQmPcyIiEpzBhlBKrbDganaj86743719 = -642391200;    double IdgBtyoQmPcyIiEpzBhlBKrbDganaj37644757 = -892856150;    double IdgBtyoQmPcyIiEpzBhlBKrbDganaj33567650 = -358621261;    double IdgBtyoQmPcyIiEpzBhlBKrbDganaj18691809 = -219377368;    double IdgBtyoQmPcyIiEpzBhlBKrbDganaj32424595 = -533539017;    double IdgBtyoQmPcyIiEpzBhlBKrbDganaj87371139 = -406759060;    double IdgBtyoQmPcyIiEpzBhlBKrbDganaj7354556 = -785544992;    double IdgBtyoQmPcyIiEpzBhlBKrbDganaj39616471 = -775414841;    double IdgBtyoQmPcyIiEpzBhlBKrbDganaj27714699 = -442013109;    double IdgBtyoQmPcyIiEpzBhlBKrbDganaj25079620 = -222634377;    double IdgBtyoQmPcyIiEpzBhlBKrbDganaj24727252 = -948745161;    double IdgBtyoQmPcyIiEpzBhlBKrbDganaj66176442 = -945895851;    double IdgBtyoQmPcyIiEpzBhlBKrbDganaj50464019 = 45380616;    double IdgBtyoQmPcyIiEpzBhlBKrbDganaj31106973 = -87169004;    double IdgBtyoQmPcyIiEpzBhlBKrbDganaj11408084 = -366796725;    double IdgBtyoQmPcyIiEpzBhlBKrbDganaj35068771 = 79162478;    double IdgBtyoQmPcyIiEpzBhlBKrbDganaj2402778 = 18624500;    double IdgBtyoQmPcyIiEpzBhlBKrbDganaj80759594 = -897646359;    double IdgBtyoQmPcyIiEpzBhlBKrbDganaj19135311 = -28702344;    double IdgBtyoQmPcyIiEpzBhlBKrbDganaj62582249 = -158506039;    double IdgBtyoQmPcyIiEpzBhlBKrbDganaj78692521 = -359827043;    double IdgBtyoQmPcyIiEpzBhlBKrbDganaj92214835 = -509305714;    double IdgBtyoQmPcyIiEpzBhlBKrbDganaj53956840 = -916885325;    double IdgBtyoQmPcyIiEpzBhlBKrbDganaj35873219 = -47788051;    double IdgBtyoQmPcyIiEpzBhlBKrbDganaj77057142 = -279721602;    double IdgBtyoQmPcyIiEpzBhlBKrbDganaj23552256 = -547025558;    double IdgBtyoQmPcyIiEpzBhlBKrbDganaj79572012 = -275952599;    double IdgBtyoQmPcyIiEpzBhlBKrbDganaj66159016 = -634138516;    double IdgBtyoQmPcyIiEpzBhlBKrbDganaj80997027 = -654263328;    double IdgBtyoQmPcyIiEpzBhlBKrbDganaj28320604 = -393435054;    double IdgBtyoQmPcyIiEpzBhlBKrbDganaj60324887 = -949251399;    double IdgBtyoQmPcyIiEpzBhlBKrbDganaj54164969 = -43902404;    double IdgBtyoQmPcyIiEpzBhlBKrbDganaj80279220 = -248297295;    double IdgBtyoQmPcyIiEpzBhlBKrbDganaj87960517 = -559904058;    double IdgBtyoQmPcyIiEpzBhlBKrbDganaj19535567 = -712458472;    double IdgBtyoQmPcyIiEpzBhlBKrbDganaj64808073 = -542751400;    double IdgBtyoQmPcyIiEpzBhlBKrbDganaj45791854 = -434750816;    double IdgBtyoQmPcyIiEpzBhlBKrbDganaj39107477 = -146096203;    double IdgBtyoQmPcyIiEpzBhlBKrbDganaj28185899 = -924000754;    double IdgBtyoQmPcyIiEpzBhlBKrbDganaj97751916 = -371203554;    double IdgBtyoQmPcyIiEpzBhlBKrbDganaj74317760 = -243646909;    double IdgBtyoQmPcyIiEpzBhlBKrbDganaj16349228 = 11426993;    double IdgBtyoQmPcyIiEpzBhlBKrbDganaj2345484 = -3811741;    double IdgBtyoQmPcyIiEpzBhlBKrbDganaj75187481 = -72941785;    double IdgBtyoQmPcyIiEpzBhlBKrbDganaj33213390 = -776181322;    double IdgBtyoQmPcyIiEpzBhlBKrbDganaj18407113 = -161782436;    double IdgBtyoQmPcyIiEpzBhlBKrbDganaj72243851 = -416308968;    double IdgBtyoQmPcyIiEpzBhlBKrbDganaj69878564 = -806777254;     IdgBtyoQmPcyIiEpzBhlBKrbDganaj80332505 = IdgBtyoQmPcyIiEpzBhlBKrbDganaj78684721;     IdgBtyoQmPcyIiEpzBhlBKrbDganaj78684721 = IdgBtyoQmPcyIiEpzBhlBKrbDganaj67928688;     IdgBtyoQmPcyIiEpzBhlBKrbDganaj67928688 = IdgBtyoQmPcyIiEpzBhlBKrbDganaj2487359;     IdgBtyoQmPcyIiEpzBhlBKrbDganaj2487359 = IdgBtyoQmPcyIiEpzBhlBKrbDganaj87364730;     IdgBtyoQmPcyIiEpzBhlBKrbDganaj87364730 = IdgBtyoQmPcyIiEpzBhlBKrbDganaj75664377;     IdgBtyoQmPcyIiEpzBhlBKrbDganaj75664377 = IdgBtyoQmPcyIiEpzBhlBKrbDganaj38233706;     IdgBtyoQmPcyIiEpzBhlBKrbDganaj38233706 = IdgBtyoQmPcyIiEpzBhlBKrbDganaj39827760;     IdgBtyoQmPcyIiEpzBhlBKrbDganaj39827760 = IdgBtyoQmPcyIiEpzBhlBKrbDganaj48028481;     IdgBtyoQmPcyIiEpzBhlBKrbDganaj48028481 = IdgBtyoQmPcyIiEpzBhlBKrbDganaj50129953;     IdgBtyoQmPcyIiEpzBhlBKrbDganaj50129953 = IdgBtyoQmPcyIiEpzBhlBKrbDganaj37386258;     IdgBtyoQmPcyIiEpzBhlBKrbDganaj37386258 = IdgBtyoQmPcyIiEpzBhlBKrbDganaj13860914;     IdgBtyoQmPcyIiEpzBhlBKrbDganaj13860914 = IdgBtyoQmPcyIiEpzBhlBKrbDganaj14428275;     IdgBtyoQmPcyIiEpzBhlBKrbDganaj14428275 = IdgBtyoQmPcyIiEpzBhlBKrbDganaj60202063;     IdgBtyoQmPcyIiEpzBhlBKrbDganaj60202063 = IdgBtyoQmPcyIiEpzBhlBKrbDganaj41370088;     IdgBtyoQmPcyIiEpzBhlBKrbDganaj41370088 = IdgBtyoQmPcyIiEpzBhlBKrbDganaj4258367;     IdgBtyoQmPcyIiEpzBhlBKrbDganaj4258367 = IdgBtyoQmPcyIiEpzBhlBKrbDganaj44254564;     IdgBtyoQmPcyIiEpzBhlBKrbDganaj44254564 = IdgBtyoQmPcyIiEpzBhlBKrbDganaj34658219;     IdgBtyoQmPcyIiEpzBhlBKrbDganaj34658219 = IdgBtyoQmPcyIiEpzBhlBKrbDganaj22275019;     IdgBtyoQmPcyIiEpzBhlBKrbDganaj22275019 = IdgBtyoQmPcyIiEpzBhlBKrbDganaj54223941;     IdgBtyoQmPcyIiEpzBhlBKrbDganaj54223941 = IdgBtyoQmPcyIiEpzBhlBKrbDganaj93813860;     IdgBtyoQmPcyIiEpzBhlBKrbDganaj93813860 = IdgBtyoQmPcyIiEpzBhlBKrbDganaj61640697;     IdgBtyoQmPcyIiEpzBhlBKrbDganaj61640697 = IdgBtyoQmPcyIiEpzBhlBKrbDganaj46260126;     IdgBtyoQmPcyIiEpzBhlBKrbDganaj46260126 = IdgBtyoQmPcyIiEpzBhlBKrbDganaj80557548;     IdgBtyoQmPcyIiEpzBhlBKrbDganaj80557548 = IdgBtyoQmPcyIiEpzBhlBKrbDganaj95132803;     IdgBtyoQmPcyIiEpzBhlBKrbDganaj95132803 = IdgBtyoQmPcyIiEpzBhlBKrbDganaj47748260;     IdgBtyoQmPcyIiEpzBhlBKrbDganaj47748260 = IdgBtyoQmPcyIiEpzBhlBKrbDganaj47949678;     IdgBtyoQmPcyIiEpzBhlBKrbDganaj47949678 = IdgBtyoQmPcyIiEpzBhlBKrbDganaj13154087;     IdgBtyoQmPcyIiEpzBhlBKrbDganaj13154087 = IdgBtyoQmPcyIiEpzBhlBKrbDganaj15100508;     IdgBtyoQmPcyIiEpzBhlBKrbDganaj15100508 = IdgBtyoQmPcyIiEpzBhlBKrbDganaj81852039;     IdgBtyoQmPcyIiEpzBhlBKrbDganaj81852039 = IdgBtyoQmPcyIiEpzBhlBKrbDganaj99665934;     IdgBtyoQmPcyIiEpzBhlBKrbDganaj99665934 = IdgBtyoQmPcyIiEpzBhlBKrbDganaj6279286;     IdgBtyoQmPcyIiEpzBhlBKrbDganaj6279286 = IdgBtyoQmPcyIiEpzBhlBKrbDganaj2452830;     IdgBtyoQmPcyIiEpzBhlBKrbDganaj2452830 = IdgBtyoQmPcyIiEpzBhlBKrbDganaj79359503;     IdgBtyoQmPcyIiEpzBhlBKrbDganaj79359503 = IdgBtyoQmPcyIiEpzBhlBKrbDganaj57799285;     IdgBtyoQmPcyIiEpzBhlBKrbDganaj57799285 = IdgBtyoQmPcyIiEpzBhlBKrbDganaj60610494;     IdgBtyoQmPcyIiEpzBhlBKrbDganaj60610494 = IdgBtyoQmPcyIiEpzBhlBKrbDganaj85123055;     IdgBtyoQmPcyIiEpzBhlBKrbDganaj85123055 = IdgBtyoQmPcyIiEpzBhlBKrbDganaj81672315;     IdgBtyoQmPcyIiEpzBhlBKrbDganaj81672315 = IdgBtyoQmPcyIiEpzBhlBKrbDganaj55965698;     IdgBtyoQmPcyIiEpzBhlBKrbDganaj55965698 = IdgBtyoQmPcyIiEpzBhlBKrbDganaj30060183;     IdgBtyoQmPcyIiEpzBhlBKrbDganaj30060183 = IdgBtyoQmPcyIiEpzBhlBKrbDganaj267102;     IdgBtyoQmPcyIiEpzBhlBKrbDganaj267102 = IdgBtyoQmPcyIiEpzBhlBKrbDganaj57940641;     IdgBtyoQmPcyIiEpzBhlBKrbDganaj57940641 = IdgBtyoQmPcyIiEpzBhlBKrbDganaj84583554;     IdgBtyoQmPcyIiEpzBhlBKrbDganaj84583554 = IdgBtyoQmPcyIiEpzBhlBKrbDganaj22707871;     IdgBtyoQmPcyIiEpzBhlBKrbDganaj22707871 = IdgBtyoQmPcyIiEpzBhlBKrbDganaj985537;     IdgBtyoQmPcyIiEpzBhlBKrbDganaj985537 = IdgBtyoQmPcyIiEpzBhlBKrbDganaj28973788;     IdgBtyoQmPcyIiEpzBhlBKrbDganaj28973788 = IdgBtyoQmPcyIiEpzBhlBKrbDganaj66751232;     IdgBtyoQmPcyIiEpzBhlBKrbDganaj66751232 = IdgBtyoQmPcyIiEpzBhlBKrbDganaj19629074;     IdgBtyoQmPcyIiEpzBhlBKrbDganaj19629074 = IdgBtyoQmPcyIiEpzBhlBKrbDganaj52829199;     IdgBtyoQmPcyIiEpzBhlBKrbDganaj52829199 = IdgBtyoQmPcyIiEpzBhlBKrbDganaj60935539;     IdgBtyoQmPcyIiEpzBhlBKrbDganaj60935539 = IdgBtyoQmPcyIiEpzBhlBKrbDganaj1572819;     IdgBtyoQmPcyIiEpzBhlBKrbDganaj1572819 = IdgBtyoQmPcyIiEpzBhlBKrbDganaj11705417;     IdgBtyoQmPcyIiEpzBhlBKrbDganaj11705417 = IdgBtyoQmPcyIiEpzBhlBKrbDganaj86743719;     IdgBtyoQmPcyIiEpzBhlBKrbDganaj86743719 = IdgBtyoQmPcyIiEpzBhlBKrbDganaj37644757;     IdgBtyoQmPcyIiEpzBhlBKrbDganaj37644757 = IdgBtyoQmPcyIiEpzBhlBKrbDganaj33567650;     IdgBtyoQmPcyIiEpzBhlBKrbDganaj33567650 = IdgBtyoQmPcyIiEpzBhlBKrbDganaj18691809;     IdgBtyoQmPcyIiEpzBhlBKrbDganaj18691809 = IdgBtyoQmPcyIiEpzBhlBKrbDganaj32424595;     IdgBtyoQmPcyIiEpzBhlBKrbDganaj32424595 = IdgBtyoQmPcyIiEpzBhlBKrbDganaj87371139;     IdgBtyoQmPcyIiEpzBhlBKrbDganaj87371139 = IdgBtyoQmPcyIiEpzBhlBKrbDganaj7354556;     IdgBtyoQmPcyIiEpzBhlBKrbDganaj7354556 = IdgBtyoQmPcyIiEpzBhlBKrbDganaj39616471;     IdgBtyoQmPcyIiEpzBhlBKrbDganaj39616471 = IdgBtyoQmPcyIiEpzBhlBKrbDganaj27714699;     IdgBtyoQmPcyIiEpzBhlBKrbDganaj27714699 = IdgBtyoQmPcyIiEpzBhlBKrbDganaj25079620;     IdgBtyoQmPcyIiEpzBhlBKrbDganaj25079620 = IdgBtyoQmPcyIiEpzBhlBKrbDganaj24727252;     IdgBtyoQmPcyIiEpzBhlBKrbDganaj24727252 = IdgBtyoQmPcyIiEpzBhlBKrbDganaj66176442;     IdgBtyoQmPcyIiEpzBhlBKrbDganaj66176442 = IdgBtyoQmPcyIiEpzBhlBKrbDganaj50464019;     IdgBtyoQmPcyIiEpzBhlBKrbDganaj50464019 = IdgBtyoQmPcyIiEpzBhlBKrbDganaj31106973;     IdgBtyoQmPcyIiEpzBhlBKrbDganaj31106973 = IdgBtyoQmPcyIiEpzBhlBKrbDganaj11408084;     IdgBtyoQmPcyIiEpzBhlBKrbDganaj11408084 = IdgBtyoQmPcyIiEpzBhlBKrbDganaj35068771;     IdgBtyoQmPcyIiEpzBhlBKrbDganaj35068771 = IdgBtyoQmPcyIiEpzBhlBKrbDganaj2402778;     IdgBtyoQmPcyIiEpzBhlBKrbDganaj2402778 = IdgBtyoQmPcyIiEpzBhlBKrbDganaj80759594;     IdgBtyoQmPcyIiEpzBhlBKrbDganaj80759594 = IdgBtyoQmPcyIiEpzBhlBKrbDganaj19135311;     IdgBtyoQmPcyIiEpzBhlBKrbDganaj19135311 = IdgBtyoQmPcyIiEpzBhlBKrbDganaj62582249;     IdgBtyoQmPcyIiEpzBhlBKrbDganaj62582249 = IdgBtyoQmPcyIiEpzBhlBKrbDganaj78692521;     IdgBtyoQmPcyIiEpzBhlBKrbDganaj78692521 = IdgBtyoQmPcyIiEpzBhlBKrbDganaj92214835;     IdgBtyoQmPcyIiEpzBhlBKrbDganaj92214835 = IdgBtyoQmPcyIiEpzBhlBKrbDganaj53956840;     IdgBtyoQmPcyIiEpzBhlBKrbDganaj53956840 = IdgBtyoQmPcyIiEpzBhlBKrbDganaj35873219;     IdgBtyoQmPcyIiEpzBhlBKrbDganaj35873219 = IdgBtyoQmPcyIiEpzBhlBKrbDganaj77057142;     IdgBtyoQmPcyIiEpzBhlBKrbDganaj77057142 = IdgBtyoQmPcyIiEpzBhlBKrbDganaj23552256;     IdgBtyoQmPcyIiEpzBhlBKrbDganaj23552256 = IdgBtyoQmPcyIiEpzBhlBKrbDganaj79572012;     IdgBtyoQmPcyIiEpzBhlBKrbDganaj79572012 = IdgBtyoQmPcyIiEpzBhlBKrbDganaj66159016;     IdgBtyoQmPcyIiEpzBhlBKrbDganaj66159016 = IdgBtyoQmPcyIiEpzBhlBKrbDganaj80997027;     IdgBtyoQmPcyIiEpzBhlBKrbDganaj80997027 = IdgBtyoQmPcyIiEpzBhlBKrbDganaj28320604;     IdgBtyoQmPcyIiEpzBhlBKrbDganaj28320604 = IdgBtyoQmPcyIiEpzBhlBKrbDganaj60324887;     IdgBtyoQmPcyIiEpzBhlBKrbDganaj60324887 = IdgBtyoQmPcyIiEpzBhlBKrbDganaj54164969;     IdgBtyoQmPcyIiEpzBhlBKrbDganaj54164969 = IdgBtyoQmPcyIiEpzBhlBKrbDganaj80279220;     IdgBtyoQmPcyIiEpzBhlBKrbDganaj80279220 = IdgBtyoQmPcyIiEpzBhlBKrbDganaj87960517;     IdgBtyoQmPcyIiEpzBhlBKrbDganaj87960517 = IdgBtyoQmPcyIiEpzBhlBKrbDganaj19535567;     IdgBtyoQmPcyIiEpzBhlBKrbDganaj19535567 = IdgBtyoQmPcyIiEpzBhlBKrbDganaj64808073;     IdgBtyoQmPcyIiEpzBhlBKrbDganaj64808073 = IdgBtyoQmPcyIiEpzBhlBKrbDganaj45791854;     IdgBtyoQmPcyIiEpzBhlBKrbDganaj45791854 = IdgBtyoQmPcyIiEpzBhlBKrbDganaj39107477;     IdgBtyoQmPcyIiEpzBhlBKrbDganaj39107477 = IdgBtyoQmPcyIiEpzBhlBKrbDganaj28185899;     IdgBtyoQmPcyIiEpzBhlBKrbDganaj28185899 = IdgBtyoQmPcyIiEpzBhlBKrbDganaj97751916;     IdgBtyoQmPcyIiEpzBhlBKrbDganaj97751916 = IdgBtyoQmPcyIiEpzBhlBKrbDganaj74317760;     IdgBtyoQmPcyIiEpzBhlBKrbDganaj74317760 = IdgBtyoQmPcyIiEpzBhlBKrbDganaj16349228;     IdgBtyoQmPcyIiEpzBhlBKrbDganaj16349228 = IdgBtyoQmPcyIiEpzBhlBKrbDganaj2345484;     IdgBtyoQmPcyIiEpzBhlBKrbDganaj2345484 = IdgBtyoQmPcyIiEpzBhlBKrbDganaj75187481;     IdgBtyoQmPcyIiEpzBhlBKrbDganaj75187481 = IdgBtyoQmPcyIiEpzBhlBKrbDganaj33213390;     IdgBtyoQmPcyIiEpzBhlBKrbDganaj33213390 = IdgBtyoQmPcyIiEpzBhlBKrbDganaj18407113;     IdgBtyoQmPcyIiEpzBhlBKrbDganaj18407113 = IdgBtyoQmPcyIiEpzBhlBKrbDganaj72243851;     IdgBtyoQmPcyIiEpzBhlBKrbDganaj72243851 = IdgBtyoQmPcyIiEpzBhlBKrbDganaj69878564;     IdgBtyoQmPcyIiEpzBhlBKrbDganaj69878564 = IdgBtyoQmPcyIiEpzBhlBKrbDganaj80332505;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void sZTMrNXOkQoAVaKwiSdIjEypw36986237() {     double KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ2154727 = -274992586;    double KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ40152525 = 65908222;    double KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ13655959 = -857728275;    double KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ33862505 = -412018521;    double KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ47499062 = -417448417;    double KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ99682692 = -582646890;    double KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ67254290 = -700176270;    double KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ26690389 = 31636864;    double KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ44552120 = -65228329;    double KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ11413179 = -895579659;    double KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ8302527 = -97776377;    double KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ30042797 = 94414120;    double KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ47417217 = -352243387;    double KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ27168531 = -296925866;    double KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ36627884 = -282028048;    double KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ52229093 = -349031498;    double KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ37703624 = -673522656;    double KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ97183521 = -145535808;    double KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ26912243 = -128266219;    double KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ35333584 = -803706542;    double KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ50968146 = -604793236;    double KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ26042675 = -558151052;    double KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ55731531 = -673981263;    double KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ17835171 = -713850550;    double KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ69063470 = -332586326;    double KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ37324114 = 8031818;    double KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ20986282 = -655894668;    double KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ48733912 = -178672003;    double KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ62997420 = -778383045;    double KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ27669117 = -509751255;    double KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ50831200 = -276469626;    double KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ25170611 = -130738502;    double KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ27772295 = -178211432;    double KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ51898621 = -569191704;    double KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ38633498 = -615292172;    double KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ30187454 = -471955751;    double KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ28205312 = -927579710;    double KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ85610177 = -610734657;    double KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ16346144 = -636393129;    double KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ42730829 = 96626150;    double KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ54642947 = -829715419;    double KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ74442812 = -412392560;    double KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ31950953 = -151645101;    double KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ70802729 = -379734520;    double KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ80901347 = -114487715;    double KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ68180267 = -490983068;    double KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ92419343 = -191526847;    double KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ1468826 = -374151559;    double KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ59893291 = -550088795;    double KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ76983015 = -946589908;    double KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ90034638 = -929129092;    double KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ8094081 = -636215902;    double KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ77966583 = -605986339;    double KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ65669879 = 16134790;    double KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ86018091 = -319743010;    double KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ76112051 = -716841535;    double KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ84420994 = -260110515;    double KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ95820787 = -43877726;    double KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ64799034 = 20567805;    double KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ10174948 = -325480235;    double KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ78696411 = -926752222;    double KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ18520379 = -421504268;    double KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ63692968 = -189980091;    double KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ16883004 = -555477074;    double KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ60581979 = -519110034;    double KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ83131915 = -967037876;    double KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ2270502 = -727374448;    double KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ95518596 = -783051684;    double KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ88535032 = -681633695;    double KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ6440430 = -810072298;    double KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ24023781 = -421451788;    double KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ52093446 = 37212001;    double KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ80837377 = -509142680;    double KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ84181413 = -124892370;    double KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ80690636 = -973991123;    double KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ76525333 = -92400676;    double KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ94091721 = -306505951;    double KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ84928801 = -194246743;    double KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ36933823 = -499362835;    double KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ883204 = -841603258;    double KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ44904770 = -800441336;    double KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ19517456 = -181743110;    double KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ88840620 = -628583209;    double KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ86014405 = -831793137;    double KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ37634478 = -580622163;    double KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ42737119 = -640253725;    double KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ47204028 = -524752163;    double KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ62102415 = -94346223;    double KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ65880529 = -149448694;    double KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ62521446 = -898450638;    double KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ45766459 = -111845236;    double KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ32384524 = -783701984;    double KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ20811144 = -531302463;    double KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ6171197 = -210912894;    double KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ64034418 = 23378372;    double KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ36122569 = -308211152;    double KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ10749845 = -122412470;    double KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ15067950 = -596168027;    double KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ10220750 = -860624487;    double KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ97769432 = -274992586;     KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ2154727 = KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ40152525;     KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ40152525 = KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ13655959;     KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ13655959 = KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ33862505;     KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ33862505 = KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ47499062;     KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ47499062 = KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ99682692;     KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ99682692 = KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ67254290;     KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ67254290 = KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ26690389;     KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ26690389 = KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ44552120;     KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ44552120 = KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ11413179;     KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ11413179 = KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ8302527;     KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ8302527 = KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ30042797;     KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ30042797 = KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ47417217;     KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ47417217 = KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ27168531;     KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ27168531 = KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ36627884;     KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ36627884 = KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ52229093;     KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ52229093 = KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ37703624;     KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ37703624 = KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ97183521;     KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ97183521 = KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ26912243;     KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ26912243 = KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ35333584;     KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ35333584 = KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ50968146;     KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ50968146 = KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ26042675;     KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ26042675 = KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ55731531;     KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ55731531 = KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ17835171;     KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ17835171 = KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ69063470;     KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ69063470 = KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ37324114;     KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ37324114 = KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ20986282;     KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ20986282 = KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ48733912;     KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ48733912 = KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ62997420;     KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ62997420 = KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ27669117;     KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ27669117 = KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ50831200;     KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ50831200 = KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ25170611;     KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ25170611 = KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ27772295;     KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ27772295 = KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ51898621;     KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ51898621 = KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ38633498;     KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ38633498 = KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ30187454;     KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ30187454 = KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ28205312;     KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ28205312 = KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ85610177;     KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ85610177 = KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ16346144;     KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ16346144 = KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ42730829;     KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ42730829 = KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ54642947;     KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ54642947 = KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ74442812;     KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ74442812 = KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ31950953;     KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ31950953 = KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ70802729;     KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ70802729 = KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ80901347;     KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ80901347 = KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ68180267;     KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ68180267 = KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ92419343;     KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ92419343 = KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ1468826;     KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ1468826 = KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ59893291;     KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ59893291 = KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ76983015;     KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ76983015 = KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ90034638;     KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ90034638 = KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ8094081;     KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ8094081 = KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ77966583;     KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ77966583 = KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ65669879;     KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ65669879 = KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ86018091;     KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ86018091 = KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ76112051;     KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ76112051 = KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ84420994;     KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ84420994 = KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ95820787;     KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ95820787 = KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ64799034;     KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ64799034 = KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ10174948;     KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ10174948 = KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ78696411;     KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ78696411 = KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ18520379;     KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ18520379 = KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ63692968;     KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ63692968 = KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ16883004;     KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ16883004 = KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ60581979;     KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ60581979 = KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ83131915;     KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ83131915 = KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ2270502;     KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ2270502 = KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ95518596;     KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ95518596 = KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ88535032;     KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ88535032 = KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ6440430;     KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ6440430 = KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ24023781;     KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ24023781 = KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ52093446;     KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ52093446 = KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ80837377;     KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ80837377 = KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ84181413;     KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ84181413 = KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ80690636;     KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ80690636 = KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ76525333;     KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ76525333 = KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ94091721;     KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ94091721 = KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ84928801;     KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ84928801 = KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ36933823;     KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ36933823 = KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ883204;     KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ883204 = KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ44904770;     KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ44904770 = KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ19517456;     KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ19517456 = KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ88840620;     KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ88840620 = KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ86014405;     KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ86014405 = KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ37634478;     KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ37634478 = KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ42737119;     KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ42737119 = KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ47204028;     KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ47204028 = KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ62102415;     KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ62102415 = KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ65880529;     KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ65880529 = KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ62521446;     KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ62521446 = KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ45766459;     KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ45766459 = KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ32384524;     KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ32384524 = KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ20811144;     KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ20811144 = KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ6171197;     KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ6171197 = KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ64034418;     KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ64034418 = KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ36122569;     KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ36122569 = KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ10749845;     KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ10749845 = KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ15067950;     KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ15067950 = KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ10220750;     KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ10220750 = KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ97769432;     KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ97769432 = KWzeXGkwAdsTrqASlfCHwdwlwrFaoJ2154727;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void VvAroPJCEAGxyAMsHbpMnoiDD98833495() {     double AecRgSFKAoaEMIXMowebkNlDnLpRyH53318809 = -97582929;    double AecRgSFKAoaEMIXMowebkNlDnLpRyH71519128 = -487642456;    double AecRgSFKAoaEMIXMowebkNlDnLpRyH80727521 = -419779961;    double AecRgSFKAoaEMIXMowebkNlDnLpRyH10386225 = -247205137;    double AecRgSFKAoaEMIXMowebkNlDnLpRyH95023173 = -979648312;    double AecRgSFKAoaEMIXMowebkNlDnLpRyH68506678 = -592041708;    double AecRgSFKAoaEMIXMowebkNlDnLpRyH46443316 = -469255151;    double AecRgSFKAoaEMIXMowebkNlDnLpRyH25924688 = -433904211;    double AecRgSFKAoaEMIXMowebkNlDnLpRyH77950869 = -771322488;    double AecRgSFKAoaEMIXMowebkNlDnLpRyH46369457 = -101509577;    double AecRgSFKAoaEMIXMowebkNlDnLpRyH57290239 = -678104222;    double AecRgSFKAoaEMIXMowebkNlDnLpRyH14969786 = -528482056;    double AecRgSFKAoaEMIXMowebkNlDnLpRyH32431687 = 97601408;    double AecRgSFKAoaEMIXMowebkNlDnLpRyH64132184 = -591127505;    double AecRgSFKAoaEMIXMowebkNlDnLpRyH94337768 = -21832816;    double AecRgSFKAoaEMIXMowebkNlDnLpRyH42235726 = -454210102;    double AecRgSFKAoaEMIXMowebkNlDnLpRyH93152615 = -969776814;    double AecRgSFKAoaEMIXMowebkNlDnLpRyH62415863 = -475162152;    double AecRgSFKAoaEMIXMowebkNlDnLpRyH70269954 = -112196201;    double AecRgSFKAoaEMIXMowebkNlDnLpRyH29730280 = -264609744;    double AecRgSFKAoaEMIXMowebkNlDnLpRyH32656101 = -138659172;    double AecRgSFKAoaEMIXMowebkNlDnLpRyH7345155 = -807608794;    double AecRgSFKAoaEMIXMowebkNlDnLpRyH137524 = -121123316;    double AecRgSFKAoaEMIXMowebkNlDnLpRyH64913364 = -312469031;    double AecRgSFKAoaEMIXMowebkNlDnLpRyH7312439 = -994272464;    double AecRgSFKAoaEMIXMowebkNlDnLpRyH12876465 = -129075194;    double AecRgSFKAoaEMIXMowebkNlDnLpRyH55983682 = -88320650;    double AecRgSFKAoaEMIXMowebkNlDnLpRyH11935037 = -146963457;    double AecRgSFKAoaEMIXMowebkNlDnLpRyH91430292 = -797041061;    double AecRgSFKAoaEMIXMowebkNlDnLpRyH10403968 = -3001752;    double AecRgSFKAoaEMIXMowebkNlDnLpRyH28337148 = -220856922;    double AecRgSFKAoaEMIXMowebkNlDnLpRyH84274333 = 29848069;    double AecRgSFKAoaEMIXMowebkNlDnLpRyH55598822 = -175797922;    double AecRgSFKAoaEMIXMowebkNlDnLpRyH59355600 = -558163379;    double AecRgSFKAoaEMIXMowebkNlDnLpRyH23801512 = -77477920;    double AecRgSFKAoaEMIXMowebkNlDnLpRyH82599344 = -486910929;    double AecRgSFKAoaEMIXMowebkNlDnLpRyH39437451 = -888256977;    double AecRgSFKAoaEMIXMowebkNlDnLpRyH6673231 = -303426987;    double AecRgSFKAoaEMIXMowebkNlDnLpRyH33506898 = -65751189;    double AecRgSFKAoaEMIXMowebkNlDnLpRyH32171069 = -452746174;    double AecRgSFKAoaEMIXMowebkNlDnLpRyH36801177 = -967779697;    double AecRgSFKAoaEMIXMowebkNlDnLpRyH48159654 = -524261651;    double AecRgSFKAoaEMIXMowebkNlDnLpRyH90634752 = -767988118;    double AecRgSFKAoaEMIXMowebkNlDnLpRyH71621185 = -873530161;    double AecRgSFKAoaEMIXMowebkNlDnLpRyH48881152 = -465789351;    double AecRgSFKAoaEMIXMowebkNlDnLpRyH41408880 = -248122814;    double AecRgSFKAoaEMIXMowebkNlDnLpRyH19654045 = -737745190;    double AecRgSFKAoaEMIXMowebkNlDnLpRyH93077948 = -269278608;    double AecRgSFKAoaEMIXMowebkNlDnLpRyH80174321 = -313205109;    double AecRgSFKAoaEMIXMowebkNlDnLpRyH4648429 = -229661101;    double AecRgSFKAoaEMIXMowebkNlDnLpRyH23566503 = 94998696;    double AecRgSFKAoaEMIXMowebkNlDnLpRyH77158497 = -274520009;    double AecRgSFKAoaEMIXMowebkNlDnLpRyH89562138 = -533837445;    double AecRgSFKAoaEMIXMowebkNlDnLpRyH13717968 = -45912624;    double AecRgSFKAoaEMIXMowebkNlDnLpRyH66177395 = 73176877;    double AecRgSFKAoaEMIXMowebkNlDnLpRyH45973655 = -289974136;    double AecRgSFKAoaEMIXMowebkNlDnLpRyH71381605 = -266519141;    double AecRgSFKAoaEMIXMowebkNlDnLpRyH15814158 = -7310930;    double AecRgSFKAoaEMIXMowebkNlDnLpRyH3073787 = -252932674;    double AecRgSFKAoaEMIXMowebkNlDnLpRyH82146709 = -750573119;    double AecRgSFKAoaEMIXMowebkNlDnLpRyH12522997 = -403721058;    double AecRgSFKAoaEMIXMowebkNlDnLpRyH34508279 = -222291695;    double AecRgSFKAoaEMIXMowebkNlDnLpRyH34494395 = -636863151;    double AecRgSFKAoaEMIXMowebkNlDnLpRyH67546901 = -668320736;    double AecRgSFKAoaEMIXMowebkNlDnLpRyH18032310 = -880652655;    double AecRgSFKAoaEMIXMowebkNlDnLpRyH73015906 = -607952292;    double AecRgSFKAoaEMIXMowebkNlDnLpRyH59370964 = -252684134;    double AecRgSFKAoaEMIXMowebkNlDnLpRyH73076086 = -344235213;    double AecRgSFKAoaEMIXMowebkNlDnLpRyH40330673 = -413649586;    double AecRgSFKAoaEMIXMowebkNlDnLpRyH11738425 = -534921887;    double AecRgSFKAoaEMIXMowebkNlDnLpRyH2798276 = -565953126;    double AecRgSFKAoaEMIXMowebkNlDnLpRyH86479385 = -566349828;    double AecRgSFKAoaEMIXMowebkNlDnLpRyH28908966 = -309410964;    double AecRgSFKAoaEMIXMowebkNlDnLpRyH38098885 = -659450027;    double AecRgSFKAoaEMIXMowebkNlDnLpRyH92929102 = -296830048;    double AecRgSFKAoaEMIXMowebkNlDnLpRyH84496447 = -614397521;    double AecRgSFKAoaEMIXMowebkNlDnLpRyH16710403 = 60379324;    double AecRgSFKAoaEMIXMowebkNlDnLpRyH28516338 = -247593155;    double AecRgSFKAoaEMIXMowebkNlDnLpRyH16032212 = -846679681;    double AecRgSFKAoaEMIXMowebkNlDnLpRyH65903559 = -646149650;    double AecRgSFKAoaEMIXMowebkNlDnLpRyH93222419 = -391330005;    double AecRgSFKAoaEMIXMowebkNlDnLpRyH62905733 = -819042042;    double AecRgSFKAoaEMIXMowebkNlDnLpRyH31760716 = -833758348;    double AecRgSFKAoaEMIXMowebkNlDnLpRyH86781863 = -467379960;    double AecRgSFKAoaEMIXMowebkNlDnLpRyH86837465 = 1999551;    double AecRgSFKAoaEMIXMowebkNlDnLpRyH51178650 = -946336914;    double AecRgSFKAoaEMIXMowebkNlDnLpRyH94712194 = -436314486;    double AecRgSFKAoaEMIXMowebkNlDnLpRyH41880854 = -29885299;    double AecRgSFKAoaEMIXMowebkNlDnLpRyH93178205 = -531340257;    double AecRgSFKAoaEMIXMowebkNlDnLpRyH77827857 = -787503785;    double AecRgSFKAoaEMIXMowebkNlDnLpRyH11217740 = -120391788;    double AecRgSFKAoaEMIXMowebkNlDnLpRyH23623293 = -780946047;    double AecRgSFKAoaEMIXMowebkNlDnLpRyH3599445 = 49505687;    double AecRgSFKAoaEMIXMowebkNlDnLpRyH51360189 = -315178070;    double AecRgSFKAoaEMIXMowebkNlDnLpRyH19648073 = 50974884;    double AecRgSFKAoaEMIXMowebkNlDnLpRyH2292899 = -645488002;    double AecRgSFKAoaEMIXMowebkNlDnLpRyH13665259 = -887398500;    double AecRgSFKAoaEMIXMowebkNlDnLpRyH23087851 = 332618;    double AecRgSFKAoaEMIXMowebkNlDnLpRyH53588876 = -992877506;    double AecRgSFKAoaEMIXMowebkNlDnLpRyH75865246 = -97582929;     AecRgSFKAoaEMIXMowebkNlDnLpRyH53318809 = AecRgSFKAoaEMIXMowebkNlDnLpRyH71519128;     AecRgSFKAoaEMIXMowebkNlDnLpRyH71519128 = AecRgSFKAoaEMIXMowebkNlDnLpRyH80727521;     AecRgSFKAoaEMIXMowebkNlDnLpRyH80727521 = AecRgSFKAoaEMIXMowebkNlDnLpRyH10386225;     AecRgSFKAoaEMIXMowebkNlDnLpRyH10386225 = AecRgSFKAoaEMIXMowebkNlDnLpRyH95023173;     AecRgSFKAoaEMIXMowebkNlDnLpRyH95023173 = AecRgSFKAoaEMIXMowebkNlDnLpRyH68506678;     AecRgSFKAoaEMIXMowebkNlDnLpRyH68506678 = AecRgSFKAoaEMIXMowebkNlDnLpRyH46443316;     AecRgSFKAoaEMIXMowebkNlDnLpRyH46443316 = AecRgSFKAoaEMIXMowebkNlDnLpRyH25924688;     AecRgSFKAoaEMIXMowebkNlDnLpRyH25924688 = AecRgSFKAoaEMIXMowebkNlDnLpRyH77950869;     AecRgSFKAoaEMIXMowebkNlDnLpRyH77950869 = AecRgSFKAoaEMIXMowebkNlDnLpRyH46369457;     AecRgSFKAoaEMIXMowebkNlDnLpRyH46369457 = AecRgSFKAoaEMIXMowebkNlDnLpRyH57290239;     AecRgSFKAoaEMIXMowebkNlDnLpRyH57290239 = AecRgSFKAoaEMIXMowebkNlDnLpRyH14969786;     AecRgSFKAoaEMIXMowebkNlDnLpRyH14969786 = AecRgSFKAoaEMIXMowebkNlDnLpRyH32431687;     AecRgSFKAoaEMIXMowebkNlDnLpRyH32431687 = AecRgSFKAoaEMIXMowebkNlDnLpRyH64132184;     AecRgSFKAoaEMIXMowebkNlDnLpRyH64132184 = AecRgSFKAoaEMIXMowebkNlDnLpRyH94337768;     AecRgSFKAoaEMIXMowebkNlDnLpRyH94337768 = AecRgSFKAoaEMIXMowebkNlDnLpRyH42235726;     AecRgSFKAoaEMIXMowebkNlDnLpRyH42235726 = AecRgSFKAoaEMIXMowebkNlDnLpRyH93152615;     AecRgSFKAoaEMIXMowebkNlDnLpRyH93152615 = AecRgSFKAoaEMIXMowebkNlDnLpRyH62415863;     AecRgSFKAoaEMIXMowebkNlDnLpRyH62415863 = AecRgSFKAoaEMIXMowebkNlDnLpRyH70269954;     AecRgSFKAoaEMIXMowebkNlDnLpRyH70269954 = AecRgSFKAoaEMIXMowebkNlDnLpRyH29730280;     AecRgSFKAoaEMIXMowebkNlDnLpRyH29730280 = AecRgSFKAoaEMIXMowebkNlDnLpRyH32656101;     AecRgSFKAoaEMIXMowebkNlDnLpRyH32656101 = AecRgSFKAoaEMIXMowebkNlDnLpRyH7345155;     AecRgSFKAoaEMIXMowebkNlDnLpRyH7345155 = AecRgSFKAoaEMIXMowebkNlDnLpRyH137524;     AecRgSFKAoaEMIXMowebkNlDnLpRyH137524 = AecRgSFKAoaEMIXMowebkNlDnLpRyH64913364;     AecRgSFKAoaEMIXMowebkNlDnLpRyH64913364 = AecRgSFKAoaEMIXMowebkNlDnLpRyH7312439;     AecRgSFKAoaEMIXMowebkNlDnLpRyH7312439 = AecRgSFKAoaEMIXMowebkNlDnLpRyH12876465;     AecRgSFKAoaEMIXMowebkNlDnLpRyH12876465 = AecRgSFKAoaEMIXMowebkNlDnLpRyH55983682;     AecRgSFKAoaEMIXMowebkNlDnLpRyH55983682 = AecRgSFKAoaEMIXMowebkNlDnLpRyH11935037;     AecRgSFKAoaEMIXMowebkNlDnLpRyH11935037 = AecRgSFKAoaEMIXMowebkNlDnLpRyH91430292;     AecRgSFKAoaEMIXMowebkNlDnLpRyH91430292 = AecRgSFKAoaEMIXMowebkNlDnLpRyH10403968;     AecRgSFKAoaEMIXMowebkNlDnLpRyH10403968 = AecRgSFKAoaEMIXMowebkNlDnLpRyH28337148;     AecRgSFKAoaEMIXMowebkNlDnLpRyH28337148 = AecRgSFKAoaEMIXMowebkNlDnLpRyH84274333;     AecRgSFKAoaEMIXMowebkNlDnLpRyH84274333 = AecRgSFKAoaEMIXMowebkNlDnLpRyH55598822;     AecRgSFKAoaEMIXMowebkNlDnLpRyH55598822 = AecRgSFKAoaEMIXMowebkNlDnLpRyH59355600;     AecRgSFKAoaEMIXMowebkNlDnLpRyH59355600 = AecRgSFKAoaEMIXMowebkNlDnLpRyH23801512;     AecRgSFKAoaEMIXMowebkNlDnLpRyH23801512 = AecRgSFKAoaEMIXMowebkNlDnLpRyH82599344;     AecRgSFKAoaEMIXMowebkNlDnLpRyH82599344 = AecRgSFKAoaEMIXMowebkNlDnLpRyH39437451;     AecRgSFKAoaEMIXMowebkNlDnLpRyH39437451 = AecRgSFKAoaEMIXMowebkNlDnLpRyH6673231;     AecRgSFKAoaEMIXMowebkNlDnLpRyH6673231 = AecRgSFKAoaEMIXMowebkNlDnLpRyH33506898;     AecRgSFKAoaEMIXMowebkNlDnLpRyH33506898 = AecRgSFKAoaEMIXMowebkNlDnLpRyH32171069;     AecRgSFKAoaEMIXMowebkNlDnLpRyH32171069 = AecRgSFKAoaEMIXMowebkNlDnLpRyH36801177;     AecRgSFKAoaEMIXMowebkNlDnLpRyH36801177 = AecRgSFKAoaEMIXMowebkNlDnLpRyH48159654;     AecRgSFKAoaEMIXMowebkNlDnLpRyH48159654 = AecRgSFKAoaEMIXMowebkNlDnLpRyH90634752;     AecRgSFKAoaEMIXMowebkNlDnLpRyH90634752 = AecRgSFKAoaEMIXMowebkNlDnLpRyH71621185;     AecRgSFKAoaEMIXMowebkNlDnLpRyH71621185 = AecRgSFKAoaEMIXMowebkNlDnLpRyH48881152;     AecRgSFKAoaEMIXMowebkNlDnLpRyH48881152 = AecRgSFKAoaEMIXMowebkNlDnLpRyH41408880;     AecRgSFKAoaEMIXMowebkNlDnLpRyH41408880 = AecRgSFKAoaEMIXMowebkNlDnLpRyH19654045;     AecRgSFKAoaEMIXMowebkNlDnLpRyH19654045 = AecRgSFKAoaEMIXMowebkNlDnLpRyH93077948;     AecRgSFKAoaEMIXMowebkNlDnLpRyH93077948 = AecRgSFKAoaEMIXMowebkNlDnLpRyH80174321;     AecRgSFKAoaEMIXMowebkNlDnLpRyH80174321 = AecRgSFKAoaEMIXMowebkNlDnLpRyH4648429;     AecRgSFKAoaEMIXMowebkNlDnLpRyH4648429 = AecRgSFKAoaEMIXMowebkNlDnLpRyH23566503;     AecRgSFKAoaEMIXMowebkNlDnLpRyH23566503 = AecRgSFKAoaEMIXMowebkNlDnLpRyH77158497;     AecRgSFKAoaEMIXMowebkNlDnLpRyH77158497 = AecRgSFKAoaEMIXMowebkNlDnLpRyH89562138;     AecRgSFKAoaEMIXMowebkNlDnLpRyH89562138 = AecRgSFKAoaEMIXMowebkNlDnLpRyH13717968;     AecRgSFKAoaEMIXMowebkNlDnLpRyH13717968 = AecRgSFKAoaEMIXMowebkNlDnLpRyH66177395;     AecRgSFKAoaEMIXMowebkNlDnLpRyH66177395 = AecRgSFKAoaEMIXMowebkNlDnLpRyH45973655;     AecRgSFKAoaEMIXMowebkNlDnLpRyH45973655 = AecRgSFKAoaEMIXMowebkNlDnLpRyH71381605;     AecRgSFKAoaEMIXMowebkNlDnLpRyH71381605 = AecRgSFKAoaEMIXMowebkNlDnLpRyH15814158;     AecRgSFKAoaEMIXMowebkNlDnLpRyH15814158 = AecRgSFKAoaEMIXMowebkNlDnLpRyH3073787;     AecRgSFKAoaEMIXMowebkNlDnLpRyH3073787 = AecRgSFKAoaEMIXMowebkNlDnLpRyH82146709;     AecRgSFKAoaEMIXMowebkNlDnLpRyH82146709 = AecRgSFKAoaEMIXMowebkNlDnLpRyH12522997;     AecRgSFKAoaEMIXMowebkNlDnLpRyH12522997 = AecRgSFKAoaEMIXMowebkNlDnLpRyH34508279;     AecRgSFKAoaEMIXMowebkNlDnLpRyH34508279 = AecRgSFKAoaEMIXMowebkNlDnLpRyH34494395;     AecRgSFKAoaEMIXMowebkNlDnLpRyH34494395 = AecRgSFKAoaEMIXMowebkNlDnLpRyH67546901;     AecRgSFKAoaEMIXMowebkNlDnLpRyH67546901 = AecRgSFKAoaEMIXMowebkNlDnLpRyH18032310;     AecRgSFKAoaEMIXMowebkNlDnLpRyH18032310 = AecRgSFKAoaEMIXMowebkNlDnLpRyH73015906;     AecRgSFKAoaEMIXMowebkNlDnLpRyH73015906 = AecRgSFKAoaEMIXMowebkNlDnLpRyH59370964;     AecRgSFKAoaEMIXMowebkNlDnLpRyH59370964 = AecRgSFKAoaEMIXMowebkNlDnLpRyH73076086;     AecRgSFKAoaEMIXMowebkNlDnLpRyH73076086 = AecRgSFKAoaEMIXMowebkNlDnLpRyH40330673;     AecRgSFKAoaEMIXMowebkNlDnLpRyH40330673 = AecRgSFKAoaEMIXMowebkNlDnLpRyH11738425;     AecRgSFKAoaEMIXMowebkNlDnLpRyH11738425 = AecRgSFKAoaEMIXMowebkNlDnLpRyH2798276;     AecRgSFKAoaEMIXMowebkNlDnLpRyH2798276 = AecRgSFKAoaEMIXMowebkNlDnLpRyH86479385;     AecRgSFKAoaEMIXMowebkNlDnLpRyH86479385 = AecRgSFKAoaEMIXMowebkNlDnLpRyH28908966;     AecRgSFKAoaEMIXMowebkNlDnLpRyH28908966 = AecRgSFKAoaEMIXMowebkNlDnLpRyH38098885;     AecRgSFKAoaEMIXMowebkNlDnLpRyH38098885 = AecRgSFKAoaEMIXMowebkNlDnLpRyH92929102;     AecRgSFKAoaEMIXMowebkNlDnLpRyH92929102 = AecRgSFKAoaEMIXMowebkNlDnLpRyH84496447;     AecRgSFKAoaEMIXMowebkNlDnLpRyH84496447 = AecRgSFKAoaEMIXMowebkNlDnLpRyH16710403;     AecRgSFKAoaEMIXMowebkNlDnLpRyH16710403 = AecRgSFKAoaEMIXMowebkNlDnLpRyH28516338;     AecRgSFKAoaEMIXMowebkNlDnLpRyH28516338 = AecRgSFKAoaEMIXMowebkNlDnLpRyH16032212;     AecRgSFKAoaEMIXMowebkNlDnLpRyH16032212 = AecRgSFKAoaEMIXMowebkNlDnLpRyH65903559;     AecRgSFKAoaEMIXMowebkNlDnLpRyH65903559 = AecRgSFKAoaEMIXMowebkNlDnLpRyH93222419;     AecRgSFKAoaEMIXMowebkNlDnLpRyH93222419 = AecRgSFKAoaEMIXMowebkNlDnLpRyH62905733;     AecRgSFKAoaEMIXMowebkNlDnLpRyH62905733 = AecRgSFKAoaEMIXMowebkNlDnLpRyH31760716;     AecRgSFKAoaEMIXMowebkNlDnLpRyH31760716 = AecRgSFKAoaEMIXMowebkNlDnLpRyH86781863;     AecRgSFKAoaEMIXMowebkNlDnLpRyH86781863 = AecRgSFKAoaEMIXMowebkNlDnLpRyH86837465;     AecRgSFKAoaEMIXMowebkNlDnLpRyH86837465 = AecRgSFKAoaEMIXMowebkNlDnLpRyH51178650;     AecRgSFKAoaEMIXMowebkNlDnLpRyH51178650 = AecRgSFKAoaEMIXMowebkNlDnLpRyH94712194;     AecRgSFKAoaEMIXMowebkNlDnLpRyH94712194 = AecRgSFKAoaEMIXMowebkNlDnLpRyH41880854;     AecRgSFKAoaEMIXMowebkNlDnLpRyH41880854 = AecRgSFKAoaEMIXMowebkNlDnLpRyH93178205;     AecRgSFKAoaEMIXMowebkNlDnLpRyH93178205 = AecRgSFKAoaEMIXMowebkNlDnLpRyH77827857;     AecRgSFKAoaEMIXMowebkNlDnLpRyH77827857 = AecRgSFKAoaEMIXMowebkNlDnLpRyH11217740;     AecRgSFKAoaEMIXMowebkNlDnLpRyH11217740 = AecRgSFKAoaEMIXMowebkNlDnLpRyH23623293;     AecRgSFKAoaEMIXMowebkNlDnLpRyH23623293 = AecRgSFKAoaEMIXMowebkNlDnLpRyH3599445;     AecRgSFKAoaEMIXMowebkNlDnLpRyH3599445 = AecRgSFKAoaEMIXMowebkNlDnLpRyH51360189;     AecRgSFKAoaEMIXMowebkNlDnLpRyH51360189 = AecRgSFKAoaEMIXMowebkNlDnLpRyH19648073;     AecRgSFKAoaEMIXMowebkNlDnLpRyH19648073 = AecRgSFKAoaEMIXMowebkNlDnLpRyH2292899;     AecRgSFKAoaEMIXMowebkNlDnLpRyH2292899 = AecRgSFKAoaEMIXMowebkNlDnLpRyH13665259;     AecRgSFKAoaEMIXMowebkNlDnLpRyH13665259 = AecRgSFKAoaEMIXMowebkNlDnLpRyH23087851;     AecRgSFKAoaEMIXMowebkNlDnLpRyH23087851 = AecRgSFKAoaEMIXMowebkNlDnLpRyH53588876;     AecRgSFKAoaEMIXMowebkNlDnLpRyH53588876 = AecRgSFKAoaEMIXMowebkNlDnLpRyH75865246;     AecRgSFKAoaEMIXMowebkNlDnLpRyH75865246 = AecRgSFKAoaEMIXMowebkNlDnLpRyH53318809;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void VwaCxnRaWMTwgKsHCqdwkQRfF8438222() {     double XihDBqtRDPUjXcgMsXTEROstlOkHmo75141030 = -665798261;    double XihDBqtRDPUjXcgMsXTEROstlOkHmo32986932 = -870241309;    double XihDBqtRDPUjXcgMsXTEROstlOkHmo26454792 = -466997493;    double XihDBqtRDPUjXcgMsXTEROstlOkHmo41761371 = -451989313;    double XihDBqtRDPUjXcgMsXTEROstlOkHmo55157504 = -856899234;    double XihDBqtRDPUjXcgMsXTEROstlOkHmo92524993 = -603584866;    double XihDBqtRDPUjXcgMsXTEROstlOkHmo75463900 = -532573275;    double XihDBqtRDPUjXcgMsXTEROstlOkHmo12787317 = -442085059;    double XihDBqtRDPUjXcgMsXTEROstlOkHmo74474509 = -757117906;    double XihDBqtRDPUjXcgMsXTEROstlOkHmo7652683 = 28272026;    double XihDBqtRDPUjXcgMsXTEROstlOkHmo28206508 = -233861925;    double XihDBqtRDPUjXcgMsXTEROstlOkHmo31151669 = -631663662;    double XihDBqtRDPUjXcgMsXTEROstlOkHmo65420629 = -440432381;    double XihDBqtRDPUjXcgMsXTEROstlOkHmo31098652 = -341204303;    double XihDBqtRDPUjXcgMsXTEROstlOkHmo89595564 = 51325266;    double XihDBqtRDPUjXcgMsXTEROstlOkHmo90206451 = -896576643;    double XihDBqtRDPUjXcgMsXTEROstlOkHmo86601675 = -255601532;    double XihDBqtRDPUjXcgMsXTEROstlOkHmo24941167 = -396883069;    double XihDBqtRDPUjXcgMsXTEROstlOkHmo74907178 = -185331858;    double XihDBqtRDPUjXcgMsXTEROstlOkHmo10839923 = -755854800;    double XihDBqtRDPUjXcgMsXTEROstlOkHmo89810385 = -970737874;    double XihDBqtRDPUjXcgMsXTEROstlOkHmo71747132 = -878359958;    double XihDBqtRDPUjXcgMsXTEROstlOkHmo9608928 = -777150671;    double XihDBqtRDPUjXcgMsXTEROstlOkHmo2190986 = -722567897;    double XihDBqtRDPUjXcgMsXTEROstlOkHmo81243105 = -905169437;    double XihDBqtRDPUjXcgMsXTEROstlOkHmo2452319 = -456260722;    double XihDBqtRDPUjXcgMsXTEROstlOkHmo29020286 = -715124695;    double XihDBqtRDPUjXcgMsXTEROstlOkHmo47514863 = -11411690;    double XihDBqtRDPUjXcgMsXTEROstlOkHmo39327205 = -463986978;    double XihDBqtRDPUjXcgMsXTEROstlOkHmo56221045 = -379215947;    double XihDBqtRDPUjXcgMsXTEROstlOkHmo79502413 = -626584670;    double XihDBqtRDPUjXcgMsXTEROstlOkHmo3165659 = -846040762;    double XihDBqtRDPUjXcgMsXTEROstlOkHmo80918286 = 81598195;    double XihDBqtRDPUjXcgMsXTEROstlOkHmo31894718 = -233983007;    double XihDBqtRDPUjXcgMsXTEROstlOkHmo4635725 = -227296522;    double XihDBqtRDPUjXcgMsXTEROstlOkHmo52176304 = -501326909;    double XihDBqtRDPUjXcgMsXTEROstlOkHmo82519707 = -937874074;    double XihDBqtRDPUjXcgMsXTEROstlOkHmo10611093 = -884969744;    double XihDBqtRDPUjXcgMsXTEROstlOkHmo93887344 = -938156469;    double XihDBqtRDPUjXcgMsXTEROstlOkHmo44841715 = -910295175;    double XihDBqtRDPUjXcgMsXTEROstlOkHmo91177022 = -301918955;    double XihDBqtRDPUjXcgMsXTEROstlOkHmo64661824 = -211727728;    double XihDBqtRDPUjXcgMsXTEROstlOkHmo38002151 = -811954933;    double XihDBqtRDPUjXcgMsXTEROstlOkHmo19716045 = -782336330;    double XihDBqtRDPUjXcgMsXTEROstlOkHmo28796963 = -652477980;    double XihDBqtRDPUjXcgMsXTEROstlOkHmo80615358 = 48444955;    double XihDBqtRDPUjXcgMsXTEROstlOkHmo45322156 = -918752710;    double XihDBqtRDPUjXcgMsXTEROstlOkHmo74917700 = -7774597;    double XihDBqtRDPUjXcgMsXTEROstlOkHmo87238413 = -498321532;    double XihDBqtRDPUjXcgMsXTEROstlOkHmo20695905 = -208716285;    double XihDBqtRDPUjXcgMsXTEROstlOkHmo12028322 = 51109370;    double XihDBqtRDPUjXcgMsXTEROstlOkHmo73547161 = -599898090;    double XihDBqtRDPUjXcgMsXTEROstlOkHmo80785003 = -497432585;    double XihDBqtRDPUjXcgMsXTEROstlOkHmo41743090 = -236921683;    double XihDBqtRDPUjXcgMsXTEROstlOkHmo18627837 = -987944872;    double XihDBqtRDPUjXcgMsXTEROstlOkHmo3393898 = -787438303;    double XihDBqtRDPUjXcgMsXTEROstlOkHmo23378005 = 6909361;    double XihDBqtRDPUjXcgMsXTEROstlOkHmo24263806 = -744429597;    double XihDBqtRDPUjXcgMsXTEROstlOkHmo60518265 = -546819877;    double XihDBqtRDPUjXcgMsXTEROstlOkHmo52705186 = -300638513;    double XihDBqtRDPUjXcgMsXTEROstlOkHmo63504708 = -888460172;    double XihDBqtRDPUjXcgMsXTEROstlOkHmo27949038 = -421161586;    double XihDBqtRDPUjXcgMsXTEROstlOkHmo73460111 = -978098081;    double XihDBqtRDPUjXcgMsXTEROstlOkHmo18253464 = -277901960;    double XihDBqtRDPUjXcgMsXTEROstlOkHmo28150270 = -345143305;    double XihDBqtRDPUjXcgMsXTEROstlOkHmo25040849 = -387821164;    double XihDBqtRDPUjXcgMsXTEROstlOkHmo50233382 = -613261857;    double XihDBqtRDPUjXcgMsXTEROstlOkHmo33525912 = -106449375;    double XihDBqtRDPUjXcgMsXTEROstlOkHmo26462927 = -13907781;    double XihDBqtRDPUjXcgMsXTEROstlOkHmo37419260 = -447347826;    double XihDBqtRDPUjXcgMsXTEROstlOkHmo7686745 = -958702570;    double XihDBqtRDPUjXcgMsXTEROstlOkHmo75990582 = -370631789;    double XihDBqtRDPUjXcgMsXTEROstlOkHmo31053823 = -458726601;    double XihDBqtRDPUjXcgMsXTEROstlOkHmo30065463 = -275036683;    double XihDBqtRDPUjXcgMsXTEROstlOkHmo19662900 = -353935846;    double XihDBqtRDPUjXcgMsXTEROstlOkHmo25148561 = -659010146;    double XihDBqtRDPUjXcgMsXTEROstlOkHmo33744982 = 33594974;    double XihDBqtRDPUjXcgMsXTEROstlOkHmo89892883 = -994814341;    double XihDBqtRDPUjXcgMsXTEROstlOkHmo73394022 = 29910083;    double XihDBqtRDPUjXcgMsXTEROstlOkHmo627748 = -853614392;    double XihDBqtRDPUjXcgMsXTEROstlOkHmo57130162 = -537508013;    double XihDBqtRDPUjXcgMsXTEROstlOkHmo54102585 = -607350098;    double XihDBqtRDPUjXcgMsXTEROstlOkHmo60276449 = -513090158;    double XihDBqtRDPUjXcgMsXTEROstlOkHmo18631300 = -155270693;    double XihDBqtRDPUjXcgMsXTEROstlOkHmo44192724 = -330325318;    double XihDBqtRDPUjXcgMsXTEROstlOkHmo5955252 = 73313420;    double XihDBqtRDPUjXcgMsXTEROstlOkHmo22380656 = -248608178;    double XihDBqtRDPUjXcgMsXTEROstlOkHmo39175197 = -681480122;    double XihDBqtRDPUjXcgMsXTEROstlOkHmo13266882 = -246038135;    double XihDBqtRDPUjXcgMsXTEROstlOkHmo1241827 = -439858220;    double XihDBqtRDPUjXcgMsXTEROstlOkHmo28798300 = -408236270;    double XihDBqtRDPUjXcgMsXTEROstlOkHmo58255901 = -93444478;    double XihDBqtRDPUjXcgMsXTEROstlOkHmo50092827 = -238149867;    double XihDBqtRDPUjXcgMsXTEROstlOkHmo41182158 = -537517957;    double XihDBqtRDPUjXcgMsXTEROstlOkHmo81337006 = 78164996;    double XihDBqtRDPUjXcgMsXTEROstlOkHmo63227985 = -880757369;    double XihDBqtRDPUjXcgMsXTEROstlOkHmo91201712 = -233629648;    double XihDBqtRDPUjXcgMsXTEROstlOkHmo19748687 = -434052973;    double XihDBqtRDPUjXcgMsXTEROstlOkHmo91565774 = -337193026;    double XihDBqtRDPUjXcgMsXTEROstlOkHmo3756115 = -665798261;     XihDBqtRDPUjXcgMsXTEROstlOkHmo75141030 = XihDBqtRDPUjXcgMsXTEROstlOkHmo32986932;     XihDBqtRDPUjXcgMsXTEROstlOkHmo32986932 = XihDBqtRDPUjXcgMsXTEROstlOkHmo26454792;     XihDBqtRDPUjXcgMsXTEROstlOkHmo26454792 = XihDBqtRDPUjXcgMsXTEROstlOkHmo41761371;     XihDBqtRDPUjXcgMsXTEROstlOkHmo41761371 = XihDBqtRDPUjXcgMsXTEROstlOkHmo55157504;     XihDBqtRDPUjXcgMsXTEROstlOkHmo55157504 = XihDBqtRDPUjXcgMsXTEROstlOkHmo92524993;     XihDBqtRDPUjXcgMsXTEROstlOkHmo92524993 = XihDBqtRDPUjXcgMsXTEROstlOkHmo75463900;     XihDBqtRDPUjXcgMsXTEROstlOkHmo75463900 = XihDBqtRDPUjXcgMsXTEROstlOkHmo12787317;     XihDBqtRDPUjXcgMsXTEROstlOkHmo12787317 = XihDBqtRDPUjXcgMsXTEROstlOkHmo74474509;     XihDBqtRDPUjXcgMsXTEROstlOkHmo74474509 = XihDBqtRDPUjXcgMsXTEROstlOkHmo7652683;     XihDBqtRDPUjXcgMsXTEROstlOkHmo7652683 = XihDBqtRDPUjXcgMsXTEROstlOkHmo28206508;     XihDBqtRDPUjXcgMsXTEROstlOkHmo28206508 = XihDBqtRDPUjXcgMsXTEROstlOkHmo31151669;     XihDBqtRDPUjXcgMsXTEROstlOkHmo31151669 = XihDBqtRDPUjXcgMsXTEROstlOkHmo65420629;     XihDBqtRDPUjXcgMsXTEROstlOkHmo65420629 = XihDBqtRDPUjXcgMsXTEROstlOkHmo31098652;     XihDBqtRDPUjXcgMsXTEROstlOkHmo31098652 = XihDBqtRDPUjXcgMsXTEROstlOkHmo89595564;     XihDBqtRDPUjXcgMsXTEROstlOkHmo89595564 = XihDBqtRDPUjXcgMsXTEROstlOkHmo90206451;     XihDBqtRDPUjXcgMsXTEROstlOkHmo90206451 = XihDBqtRDPUjXcgMsXTEROstlOkHmo86601675;     XihDBqtRDPUjXcgMsXTEROstlOkHmo86601675 = XihDBqtRDPUjXcgMsXTEROstlOkHmo24941167;     XihDBqtRDPUjXcgMsXTEROstlOkHmo24941167 = XihDBqtRDPUjXcgMsXTEROstlOkHmo74907178;     XihDBqtRDPUjXcgMsXTEROstlOkHmo74907178 = XihDBqtRDPUjXcgMsXTEROstlOkHmo10839923;     XihDBqtRDPUjXcgMsXTEROstlOkHmo10839923 = XihDBqtRDPUjXcgMsXTEROstlOkHmo89810385;     XihDBqtRDPUjXcgMsXTEROstlOkHmo89810385 = XihDBqtRDPUjXcgMsXTEROstlOkHmo71747132;     XihDBqtRDPUjXcgMsXTEROstlOkHmo71747132 = XihDBqtRDPUjXcgMsXTEROstlOkHmo9608928;     XihDBqtRDPUjXcgMsXTEROstlOkHmo9608928 = XihDBqtRDPUjXcgMsXTEROstlOkHmo2190986;     XihDBqtRDPUjXcgMsXTEROstlOkHmo2190986 = XihDBqtRDPUjXcgMsXTEROstlOkHmo81243105;     XihDBqtRDPUjXcgMsXTEROstlOkHmo81243105 = XihDBqtRDPUjXcgMsXTEROstlOkHmo2452319;     XihDBqtRDPUjXcgMsXTEROstlOkHmo2452319 = XihDBqtRDPUjXcgMsXTEROstlOkHmo29020286;     XihDBqtRDPUjXcgMsXTEROstlOkHmo29020286 = XihDBqtRDPUjXcgMsXTEROstlOkHmo47514863;     XihDBqtRDPUjXcgMsXTEROstlOkHmo47514863 = XihDBqtRDPUjXcgMsXTEROstlOkHmo39327205;     XihDBqtRDPUjXcgMsXTEROstlOkHmo39327205 = XihDBqtRDPUjXcgMsXTEROstlOkHmo56221045;     XihDBqtRDPUjXcgMsXTEROstlOkHmo56221045 = XihDBqtRDPUjXcgMsXTEROstlOkHmo79502413;     XihDBqtRDPUjXcgMsXTEROstlOkHmo79502413 = XihDBqtRDPUjXcgMsXTEROstlOkHmo3165659;     XihDBqtRDPUjXcgMsXTEROstlOkHmo3165659 = XihDBqtRDPUjXcgMsXTEROstlOkHmo80918286;     XihDBqtRDPUjXcgMsXTEROstlOkHmo80918286 = XihDBqtRDPUjXcgMsXTEROstlOkHmo31894718;     XihDBqtRDPUjXcgMsXTEROstlOkHmo31894718 = XihDBqtRDPUjXcgMsXTEROstlOkHmo4635725;     XihDBqtRDPUjXcgMsXTEROstlOkHmo4635725 = XihDBqtRDPUjXcgMsXTEROstlOkHmo52176304;     XihDBqtRDPUjXcgMsXTEROstlOkHmo52176304 = XihDBqtRDPUjXcgMsXTEROstlOkHmo82519707;     XihDBqtRDPUjXcgMsXTEROstlOkHmo82519707 = XihDBqtRDPUjXcgMsXTEROstlOkHmo10611093;     XihDBqtRDPUjXcgMsXTEROstlOkHmo10611093 = XihDBqtRDPUjXcgMsXTEROstlOkHmo93887344;     XihDBqtRDPUjXcgMsXTEROstlOkHmo93887344 = XihDBqtRDPUjXcgMsXTEROstlOkHmo44841715;     XihDBqtRDPUjXcgMsXTEROstlOkHmo44841715 = XihDBqtRDPUjXcgMsXTEROstlOkHmo91177022;     XihDBqtRDPUjXcgMsXTEROstlOkHmo91177022 = XihDBqtRDPUjXcgMsXTEROstlOkHmo64661824;     XihDBqtRDPUjXcgMsXTEROstlOkHmo64661824 = XihDBqtRDPUjXcgMsXTEROstlOkHmo38002151;     XihDBqtRDPUjXcgMsXTEROstlOkHmo38002151 = XihDBqtRDPUjXcgMsXTEROstlOkHmo19716045;     XihDBqtRDPUjXcgMsXTEROstlOkHmo19716045 = XihDBqtRDPUjXcgMsXTEROstlOkHmo28796963;     XihDBqtRDPUjXcgMsXTEROstlOkHmo28796963 = XihDBqtRDPUjXcgMsXTEROstlOkHmo80615358;     XihDBqtRDPUjXcgMsXTEROstlOkHmo80615358 = XihDBqtRDPUjXcgMsXTEROstlOkHmo45322156;     XihDBqtRDPUjXcgMsXTEROstlOkHmo45322156 = XihDBqtRDPUjXcgMsXTEROstlOkHmo74917700;     XihDBqtRDPUjXcgMsXTEROstlOkHmo74917700 = XihDBqtRDPUjXcgMsXTEROstlOkHmo87238413;     XihDBqtRDPUjXcgMsXTEROstlOkHmo87238413 = XihDBqtRDPUjXcgMsXTEROstlOkHmo20695905;     XihDBqtRDPUjXcgMsXTEROstlOkHmo20695905 = XihDBqtRDPUjXcgMsXTEROstlOkHmo12028322;     XihDBqtRDPUjXcgMsXTEROstlOkHmo12028322 = XihDBqtRDPUjXcgMsXTEROstlOkHmo73547161;     XihDBqtRDPUjXcgMsXTEROstlOkHmo73547161 = XihDBqtRDPUjXcgMsXTEROstlOkHmo80785003;     XihDBqtRDPUjXcgMsXTEROstlOkHmo80785003 = XihDBqtRDPUjXcgMsXTEROstlOkHmo41743090;     XihDBqtRDPUjXcgMsXTEROstlOkHmo41743090 = XihDBqtRDPUjXcgMsXTEROstlOkHmo18627837;     XihDBqtRDPUjXcgMsXTEROstlOkHmo18627837 = XihDBqtRDPUjXcgMsXTEROstlOkHmo3393898;     XihDBqtRDPUjXcgMsXTEROstlOkHmo3393898 = XihDBqtRDPUjXcgMsXTEROstlOkHmo23378005;     XihDBqtRDPUjXcgMsXTEROstlOkHmo23378005 = XihDBqtRDPUjXcgMsXTEROstlOkHmo24263806;     XihDBqtRDPUjXcgMsXTEROstlOkHmo24263806 = XihDBqtRDPUjXcgMsXTEROstlOkHmo60518265;     XihDBqtRDPUjXcgMsXTEROstlOkHmo60518265 = XihDBqtRDPUjXcgMsXTEROstlOkHmo52705186;     XihDBqtRDPUjXcgMsXTEROstlOkHmo52705186 = XihDBqtRDPUjXcgMsXTEROstlOkHmo63504708;     XihDBqtRDPUjXcgMsXTEROstlOkHmo63504708 = XihDBqtRDPUjXcgMsXTEROstlOkHmo27949038;     XihDBqtRDPUjXcgMsXTEROstlOkHmo27949038 = XihDBqtRDPUjXcgMsXTEROstlOkHmo73460111;     XihDBqtRDPUjXcgMsXTEROstlOkHmo73460111 = XihDBqtRDPUjXcgMsXTEROstlOkHmo18253464;     XihDBqtRDPUjXcgMsXTEROstlOkHmo18253464 = XihDBqtRDPUjXcgMsXTEROstlOkHmo28150270;     XihDBqtRDPUjXcgMsXTEROstlOkHmo28150270 = XihDBqtRDPUjXcgMsXTEROstlOkHmo25040849;     XihDBqtRDPUjXcgMsXTEROstlOkHmo25040849 = XihDBqtRDPUjXcgMsXTEROstlOkHmo50233382;     XihDBqtRDPUjXcgMsXTEROstlOkHmo50233382 = XihDBqtRDPUjXcgMsXTEROstlOkHmo33525912;     XihDBqtRDPUjXcgMsXTEROstlOkHmo33525912 = XihDBqtRDPUjXcgMsXTEROstlOkHmo26462927;     XihDBqtRDPUjXcgMsXTEROstlOkHmo26462927 = XihDBqtRDPUjXcgMsXTEROstlOkHmo37419260;     XihDBqtRDPUjXcgMsXTEROstlOkHmo37419260 = XihDBqtRDPUjXcgMsXTEROstlOkHmo7686745;     XihDBqtRDPUjXcgMsXTEROstlOkHmo7686745 = XihDBqtRDPUjXcgMsXTEROstlOkHmo75990582;     XihDBqtRDPUjXcgMsXTEROstlOkHmo75990582 = XihDBqtRDPUjXcgMsXTEROstlOkHmo31053823;     XihDBqtRDPUjXcgMsXTEROstlOkHmo31053823 = XihDBqtRDPUjXcgMsXTEROstlOkHmo30065463;     XihDBqtRDPUjXcgMsXTEROstlOkHmo30065463 = XihDBqtRDPUjXcgMsXTEROstlOkHmo19662900;     XihDBqtRDPUjXcgMsXTEROstlOkHmo19662900 = XihDBqtRDPUjXcgMsXTEROstlOkHmo25148561;     XihDBqtRDPUjXcgMsXTEROstlOkHmo25148561 = XihDBqtRDPUjXcgMsXTEROstlOkHmo33744982;     XihDBqtRDPUjXcgMsXTEROstlOkHmo33744982 = XihDBqtRDPUjXcgMsXTEROstlOkHmo89892883;     XihDBqtRDPUjXcgMsXTEROstlOkHmo89892883 = XihDBqtRDPUjXcgMsXTEROstlOkHmo73394022;     XihDBqtRDPUjXcgMsXTEROstlOkHmo73394022 = XihDBqtRDPUjXcgMsXTEROstlOkHmo627748;     XihDBqtRDPUjXcgMsXTEROstlOkHmo627748 = XihDBqtRDPUjXcgMsXTEROstlOkHmo57130162;     XihDBqtRDPUjXcgMsXTEROstlOkHmo57130162 = XihDBqtRDPUjXcgMsXTEROstlOkHmo54102585;     XihDBqtRDPUjXcgMsXTEROstlOkHmo54102585 = XihDBqtRDPUjXcgMsXTEROstlOkHmo60276449;     XihDBqtRDPUjXcgMsXTEROstlOkHmo60276449 = XihDBqtRDPUjXcgMsXTEROstlOkHmo18631300;     XihDBqtRDPUjXcgMsXTEROstlOkHmo18631300 = XihDBqtRDPUjXcgMsXTEROstlOkHmo44192724;     XihDBqtRDPUjXcgMsXTEROstlOkHmo44192724 = XihDBqtRDPUjXcgMsXTEROstlOkHmo5955252;     XihDBqtRDPUjXcgMsXTEROstlOkHmo5955252 = XihDBqtRDPUjXcgMsXTEROstlOkHmo22380656;     XihDBqtRDPUjXcgMsXTEROstlOkHmo22380656 = XihDBqtRDPUjXcgMsXTEROstlOkHmo39175197;     XihDBqtRDPUjXcgMsXTEROstlOkHmo39175197 = XihDBqtRDPUjXcgMsXTEROstlOkHmo13266882;     XihDBqtRDPUjXcgMsXTEROstlOkHmo13266882 = XihDBqtRDPUjXcgMsXTEROstlOkHmo1241827;     XihDBqtRDPUjXcgMsXTEROstlOkHmo1241827 = XihDBqtRDPUjXcgMsXTEROstlOkHmo28798300;     XihDBqtRDPUjXcgMsXTEROstlOkHmo28798300 = XihDBqtRDPUjXcgMsXTEROstlOkHmo58255901;     XihDBqtRDPUjXcgMsXTEROstlOkHmo58255901 = XihDBqtRDPUjXcgMsXTEROstlOkHmo50092827;     XihDBqtRDPUjXcgMsXTEROstlOkHmo50092827 = XihDBqtRDPUjXcgMsXTEROstlOkHmo41182158;     XihDBqtRDPUjXcgMsXTEROstlOkHmo41182158 = XihDBqtRDPUjXcgMsXTEROstlOkHmo81337006;     XihDBqtRDPUjXcgMsXTEROstlOkHmo81337006 = XihDBqtRDPUjXcgMsXTEROstlOkHmo63227985;     XihDBqtRDPUjXcgMsXTEROstlOkHmo63227985 = XihDBqtRDPUjXcgMsXTEROstlOkHmo91201712;     XihDBqtRDPUjXcgMsXTEROstlOkHmo91201712 = XihDBqtRDPUjXcgMsXTEROstlOkHmo19748687;     XihDBqtRDPUjXcgMsXTEROstlOkHmo19748687 = XihDBqtRDPUjXcgMsXTEROstlOkHmo91565774;     XihDBqtRDPUjXcgMsXTEROstlOkHmo91565774 = XihDBqtRDPUjXcgMsXTEROstlOkHmo3756115;     XihDBqtRDPUjXcgMsXTEROstlOkHmo3756115 = XihDBqtRDPUjXcgMsXTEROstlOkHmo75141030;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void VOhglRhuqaJHxyOBhQoOBzjaa70285480() {     double QcoZiPEaTkJmPivpcWKadNYCmhFfPH26305113 = -488388603;    double QcoZiPEaTkJmPivpcWKadNYCmhFfPH64353535 = -323791988;    double QcoZiPEaTkJmPivpcWKadNYCmhFfPH93526355 = -29049179;    double QcoZiPEaTkJmPivpcWKadNYCmhFfPH18285091 = -287175930;    double QcoZiPEaTkJmPivpcWKadNYCmhFfPH2681617 = -319099130;    double QcoZiPEaTkJmPivpcWKadNYCmhFfPH61348979 = -612979685;    double QcoZiPEaTkJmPivpcWKadNYCmhFfPH54652925 = -301652156;    double QcoZiPEaTkJmPivpcWKadNYCmhFfPH12021616 = -907626135;    double QcoZiPEaTkJmPivpcWKadNYCmhFfPH7873259 = -363212065;    double QcoZiPEaTkJmPivpcWKadNYCmhFfPH42608962 = -277657892;    double QcoZiPEaTkJmPivpcWKadNYCmhFfPH77194221 = -814189771;    double QcoZiPEaTkJmPivpcWKadNYCmhFfPH16078658 = -154559838;    double QcoZiPEaTkJmPivpcWKadNYCmhFfPH50435099 = 9412414;    double QcoZiPEaTkJmPivpcWKadNYCmhFfPH68062305 = -635405941;    double QcoZiPEaTkJmPivpcWKadNYCmhFfPH47305449 = -788479502;    double QcoZiPEaTkJmPivpcWKadNYCmhFfPH80213084 = 98244752;    double QcoZiPEaTkJmPivpcWKadNYCmhFfPH42050667 = -551855691;    double QcoZiPEaTkJmPivpcWKadNYCmhFfPH90173507 = -726509413;    double QcoZiPEaTkJmPivpcWKadNYCmhFfPH18264890 = -169261839;    double QcoZiPEaTkJmPivpcWKadNYCmhFfPH5236619 = -216758002;    double QcoZiPEaTkJmPivpcWKadNYCmhFfPH71498340 = -504603810;    double QcoZiPEaTkJmPivpcWKadNYCmhFfPH53049612 = -27817700;    double QcoZiPEaTkJmPivpcWKadNYCmhFfPH54014920 = -224292723;    double QcoZiPEaTkJmPivpcWKadNYCmhFfPH49269179 = -321186379;    double QcoZiPEaTkJmPivpcWKadNYCmhFfPH19492074 = -466855574;    double QcoZiPEaTkJmPivpcWKadNYCmhFfPH78004668 = -593367733;    double QcoZiPEaTkJmPivpcWKadNYCmhFfPH64017685 = -147550677;    double QcoZiPEaTkJmPivpcWKadNYCmhFfPH10715988 = 20296857;    double QcoZiPEaTkJmPivpcWKadNYCmhFfPH67760076 = -482644994;    double QcoZiPEaTkJmPivpcWKadNYCmhFfPH38955897 = -972466444;    double QcoZiPEaTkJmPivpcWKadNYCmhFfPH57008361 = -570971966;    double QcoZiPEaTkJmPivpcWKadNYCmhFfPH62269381 = -685454191;    double QcoZiPEaTkJmPivpcWKadNYCmhFfPH8744814 = 84011705;    double QcoZiPEaTkJmPivpcWKadNYCmhFfPH39351697 = -222954682;    double QcoZiPEaTkJmPivpcWKadNYCmhFfPH89803738 = -789482270;    double QcoZiPEaTkJmPivpcWKadNYCmhFfPH4588195 = -516282087;    double QcoZiPEaTkJmPivpcWKadNYCmhFfPH93751845 = -898551341;    double QcoZiPEaTkJmPivpcWKadNYCmhFfPH31674146 = -577662073;    double QcoZiPEaTkJmPivpcWKadNYCmhFfPH11048098 = -367514529;    double QcoZiPEaTkJmPivpcWKadNYCmhFfPH34281955 = -359667500;    double QcoZiPEaTkJmPivpcWKadNYCmhFfPH73335252 = -439983233;    double QcoZiPEaTkJmPivpcWKadNYCmhFfPH38378666 = -323596819;    double QcoZiPEaTkJmPivpcWKadNYCmhFfPH96685949 = -328297950;    double QcoZiPEaTkJmPivpcWKadNYCmhFfPH20534501 = -176131971;    double QcoZiPEaTkJmPivpcWKadNYCmhFfPH96776767 = 96220384;    double QcoZiPEaTkJmPivpcWKadNYCmhFfPH53843971 = -808694791;    double QcoZiPEaTkJmPivpcWKadNYCmhFfPH72556857 = -364971053;    double QcoZiPEaTkJmPivpcWKadNYCmhFfPH66526823 = 97098354;    double QcoZiPEaTkJmPivpcWKadNYCmhFfPH7519443 = -261437846;    double QcoZiPEaTkJmPivpcWKadNYCmhFfPH48361318 = -591787478;    double QcoZiPEaTkJmPivpcWKadNYCmhFfPH45560187 = -24762841;    double QcoZiPEaTkJmPivpcWKadNYCmhFfPH42611578 = -238202197;    double QcoZiPEaTkJmPivpcWKadNYCmhFfPH92380558 = -425283690;    double QcoZiPEaTkJmPivpcWKadNYCmhFfPH89791178 = -298969098;    double QcoZiPEaTkJmPivpcWKadNYCmhFfPH98787139 = -595024984;    double QcoZiPEaTkJmPivpcWKadNYCmhFfPH73255501 = -360570904;    double QcoZiPEaTkJmPivpcWKadNYCmhFfPH10338616 = 500735;    double QcoZiPEaTkJmPivpcWKadNYCmhFfPH44257176 = -707862801;    double QcoZiPEaTkJmPivpcWKadNYCmhFfPH98793017 = -820320356;    double QcoZiPEaTkJmPivpcWKadNYCmhFfPH24676948 = -725731397;    double QcoZiPEaTkJmPivpcWKadNYCmhFfPH97331293 = -365429008;    double QcoZiPEaTkJmPivpcWKadNYCmhFfPH43936937 = -221949013;    double QcoZiPEaTkJmPivpcWKadNYCmhFfPH44261539 = -324981141;    double QcoZiPEaTkJmPivpcWKadNYCmhFfPH68917361 = -390745622;    double QcoZiPEaTkJmPivpcWKadNYCmhFfPH85600601 = -706685927;    double QcoZiPEaTkJmPivpcWKadNYCmhFfPH14924840 = -28735580;    double QcoZiPEaTkJmPivpcWKadNYCmhFfPH7333845 = -138571543;    double QcoZiPEaTkJmPivpcWKadNYCmhFfPH11083402 = -767632904;    double QcoZiPEaTkJmPivpcWKadNYCmhFfPH78258567 = -845923672;    double QcoZiPEaTkJmPivpcWKadNYCmhFfPH42717254 = -172197415;    double QcoZiPEaTkJmPivpcWKadNYCmhFfPH86461239 = -3203908;    double QcoZiPEaTkJmPivpcWKadNYCmhFfPH10376522 = -974193618;    double QcoZiPEaTkJmPivpcWKadNYCmhFfPH79125410 = -258994884;    double QcoZiPEaTkJmPivpcWKadNYCmhFfPH83982934 = -809594340;    double QcoZiPEaTkJmPivpcWKadNYCmhFfPH31901366 = -776774770;    double QcoZiPEaTkJmPivpcWKadNYCmhFfPH33119675 = -81006992;    double QcoZiPEaTkJmPivpcWKadNYCmhFfPH56363662 = -699519751;    double QcoZiPEaTkJmPivpcWKadNYCmhFfPH33480419 = 51839248;    double QcoZiPEaTkJmPivpcWKadNYCmhFfPH52492411 = -317406763;    double QcoZiPEaTkJmPivpcWKadNYCmhFfPH65648102 = -658160784;    double QcoZiPEaTkJmPivpcWKadNYCmhFfPH5447812 = -128396681;    double QcoZiPEaTkJmPivpcWKadNYCmhFfPH97490861 = -144649031;    double QcoZiPEaTkJmPivpcWKadNYCmhFfPH3196546 = -718265297;    double QcoZiPEaTkJmPivpcWKadNYCmhFfPH19398759 = -890857517;    double QcoZiPEaTkJmPivpcWKadNYCmhFfPH93395710 = -847703603;    double QcoZiPEaTkJmPivpcWKadNYCmhFfPH14396783 = -232769769;    double QcoZiPEaTkJmPivpcWKadNYCmhFfPH69888822 = -160170501;    double QcoZiPEaTkJmPivpcWKadNYCmhFfPH18953635 = -617019198;    double QcoZiPEaTkJmPivpcWKadNYCmhFfPH40564558 = -627929698;    double QcoZiPEaTkJmPivpcWKadNYCmhFfPH16548238 = -328911367;    double QcoZiPEaTkJmPivpcWKadNYCmhFfPH94249579 = -416782822;    double QcoZiPEaTkJmPivpcWKadNYCmhFfPH49494669 = -90688541;    double QcoZiPEaTkJmPivpcWKadNYCmhFfPH32881129 = -757341718;    double QcoZiPEaTkJmPivpcWKadNYCmhFfPH86371150 = -641783133;    double QcoZiPEaTkJmPivpcWKadNYCmhFfPH36950661 = -994238492;    double QcoZiPEaTkJmPivpcWKadNYCmhFfPH29398316 = -118034220;    double QcoZiPEaTkJmPivpcWKadNYCmhFfPH94117126 = -998615678;    double QcoZiPEaTkJmPivpcWKadNYCmhFfPH27768589 = -937552328;    double QcoZiPEaTkJmPivpcWKadNYCmhFfPH34933900 = -469446045;    double QcoZiPEaTkJmPivpcWKadNYCmhFfPH81851928 = -488388603;     QcoZiPEaTkJmPivpcWKadNYCmhFfPH26305113 = QcoZiPEaTkJmPivpcWKadNYCmhFfPH64353535;     QcoZiPEaTkJmPivpcWKadNYCmhFfPH64353535 = QcoZiPEaTkJmPivpcWKadNYCmhFfPH93526355;     QcoZiPEaTkJmPivpcWKadNYCmhFfPH93526355 = QcoZiPEaTkJmPivpcWKadNYCmhFfPH18285091;     QcoZiPEaTkJmPivpcWKadNYCmhFfPH18285091 = QcoZiPEaTkJmPivpcWKadNYCmhFfPH2681617;     QcoZiPEaTkJmPivpcWKadNYCmhFfPH2681617 = QcoZiPEaTkJmPivpcWKadNYCmhFfPH61348979;     QcoZiPEaTkJmPivpcWKadNYCmhFfPH61348979 = QcoZiPEaTkJmPivpcWKadNYCmhFfPH54652925;     QcoZiPEaTkJmPivpcWKadNYCmhFfPH54652925 = QcoZiPEaTkJmPivpcWKadNYCmhFfPH12021616;     QcoZiPEaTkJmPivpcWKadNYCmhFfPH12021616 = QcoZiPEaTkJmPivpcWKadNYCmhFfPH7873259;     QcoZiPEaTkJmPivpcWKadNYCmhFfPH7873259 = QcoZiPEaTkJmPivpcWKadNYCmhFfPH42608962;     QcoZiPEaTkJmPivpcWKadNYCmhFfPH42608962 = QcoZiPEaTkJmPivpcWKadNYCmhFfPH77194221;     QcoZiPEaTkJmPivpcWKadNYCmhFfPH77194221 = QcoZiPEaTkJmPivpcWKadNYCmhFfPH16078658;     QcoZiPEaTkJmPivpcWKadNYCmhFfPH16078658 = QcoZiPEaTkJmPivpcWKadNYCmhFfPH50435099;     QcoZiPEaTkJmPivpcWKadNYCmhFfPH50435099 = QcoZiPEaTkJmPivpcWKadNYCmhFfPH68062305;     QcoZiPEaTkJmPivpcWKadNYCmhFfPH68062305 = QcoZiPEaTkJmPivpcWKadNYCmhFfPH47305449;     QcoZiPEaTkJmPivpcWKadNYCmhFfPH47305449 = QcoZiPEaTkJmPivpcWKadNYCmhFfPH80213084;     QcoZiPEaTkJmPivpcWKadNYCmhFfPH80213084 = QcoZiPEaTkJmPivpcWKadNYCmhFfPH42050667;     QcoZiPEaTkJmPivpcWKadNYCmhFfPH42050667 = QcoZiPEaTkJmPivpcWKadNYCmhFfPH90173507;     QcoZiPEaTkJmPivpcWKadNYCmhFfPH90173507 = QcoZiPEaTkJmPivpcWKadNYCmhFfPH18264890;     QcoZiPEaTkJmPivpcWKadNYCmhFfPH18264890 = QcoZiPEaTkJmPivpcWKadNYCmhFfPH5236619;     QcoZiPEaTkJmPivpcWKadNYCmhFfPH5236619 = QcoZiPEaTkJmPivpcWKadNYCmhFfPH71498340;     QcoZiPEaTkJmPivpcWKadNYCmhFfPH71498340 = QcoZiPEaTkJmPivpcWKadNYCmhFfPH53049612;     QcoZiPEaTkJmPivpcWKadNYCmhFfPH53049612 = QcoZiPEaTkJmPivpcWKadNYCmhFfPH54014920;     QcoZiPEaTkJmPivpcWKadNYCmhFfPH54014920 = QcoZiPEaTkJmPivpcWKadNYCmhFfPH49269179;     QcoZiPEaTkJmPivpcWKadNYCmhFfPH49269179 = QcoZiPEaTkJmPivpcWKadNYCmhFfPH19492074;     QcoZiPEaTkJmPivpcWKadNYCmhFfPH19492074 = QcoZiPEaTkJmPivpcWKadNYCmhFfPH78004668;     QcoZiPEaTkJmPivpcWKadNYCmhFfPH78004668 = QcoZiPEaTkJmPivpcWKadNYCmhFfPH64017685;     QcoZiPEaTkJmPivpcWKadNYCmhFfPH64017685 = QcoZiPEaTkJmPivpcWKadNYCmhFfPH10715988;     QcoZiPEaTkJmPivpcWKadNYCmhFfPH10715988 = QcoZiPEaTkJmPivpcWKadNYCmhFfPH67760076;     QcoZiPEaTkJmPivpcWKadNYCmhFfPH67760076 = QcoZiPEaTkJmPivpcWKadNYCmhFfPH38955897;     QcoZiPEaTkJmPivpcWKadNYCmhFfPH38955897 = QcoZiPEaTkJmPivpcWKadNYCmhFfPH57008361;     QcoZiPEaTkJmPivpcWKadNYCmhFfPH57008361 = QcoZiPEaTkJmPivpcWKadNYCmhFfPH62269381;     QcoZiPEaTkJmPivpcWKadNYCmhFfPH62269381 = QcoZiPEaTkJmPivpcWKadNYCmhFfPH8744814;     QcoZiPEaTkJmPivpcWKadNYCmhFfPH8744814 = QcoZiPEaTkJmPivpcWKadNYCmhFfPH39351697;     QcoZiPEaTkJmPivpcWKadNYCmhFfPH39351697 = QcoZiPEaTkJmPivpcWKadNYCmhFfPH89803738;     QcoZiPEaTkJmPivpcWKadNYCmhFfPH89803738 = QcoZiPEaTkJmPivpcWKadNYCmhFfPH4588195;     QcoZiPEaTkJmPivpcWKadNYCmhFfPH4588195 = QcoZiPEaTkJmPivpcWKadNYCmhFfPH93751845;     QcoZiPEaTkJmPivpcWKadNYCmhFfPH93751845 = QcoZiPEaTkJmPivpcWKadNYCmhFfPH31674146;     QcoZiPEaTkJmPivpcWKadNYCmhFfPH31674146 = QcoZiPEaTkJmPivpcWKadNYCmhFfPH11048098;     QcoZiPEaTkJmPivpcWKadNYCmhFfPH11048098 = QcoZiPEaTkJmPivpcWKadNYCmhFfPH34281955;     QcoZiPEaTkJmPivpcWKadNYCmhFfPH34281955 = QcoZiPEaTkJmPivpcWKadNYCmhFfPH73335252;     QcoZiPEaTkJmPivpcWKadNYCmhFfPH73335252 = QcoZiPEaTkJmPivpcWKadNYCmhFfPH38378666;     QcoZiPEaTkJmPivpcWKadNYCmhFfPH38378666 = QcoZiPEaTkJmPivpcWKadNYCmhFfPH96685949;     QcoZiPEaTkJmPivpcWKadNYCmhFfPH96685949 = QcoZiPEaTkJmPivpcWKadNYCmhFfPH20534501;     QcoZiPEaTkJmPivpcWKadNYCmhFfPH20534501 = QcoZiPEaTkJmPivpcWKadNYCmhFfPH96776767;     QcoZiPEaTkJmPivpcWKadNYCmhFfPH96776767 = QcoZiPEaTkJmPivpcWKadNYCmhFfPH53843971;     QcoZiPEaTkJmPivpcWKadNYCmhFfPH53843971 = QcoZiPEaTkJmPivpcWKadNYCmhFfPH72556857;     QcoZiPEaTkJmPivpcWKadNYCmhFfPH72556857 = QcoZiPEaTkJmPivpcWKadNYCmhFfPH66526823;     QcoZiPEaTkJmPivpcWKadNYCmhFfPH66526823 = QcoZiPEaTkJmPivpcWKadNYCmhFfPH7519443;     QcoZiPEaTkJmPivpcWKadNYCmhFfPH7519443 = QcoZiPEaTkJmPivpcWKadNYCmhFfPH48361318;     QcoZiPEaTkJmPivpcWKadNYCmhFfPH48361318 = QcoZiPEaTkJmPivpcWKadNYCmhFfPH45560187;     QcoZiPEaTkJmPivpcWKadNYCmhFfPH45560187 = QcoZiPEaTkJmPivpcWKadNYCmhFfPH42611578;     QcoZiPEaTkJmPivpcWKadNYCmhFfPH42611578 = QcoZiPEaTkJmPivpcWKadNYCmhFfPH92380558;     QcoZiPEaTkJmPivpcWKadNYCmhFfPH92380558 = QcoZiPEaTkJmPivpcWKadNYCmhFfPH89791178;     QcoZiPEaTkJmPivpcWKadNYCmhFfPH89791178 = QcoZiPEaTkJmPivpcWKadNYCmhFfPH98787139;     QcoZiPEaTkJmPivpcWKadNYCmhFfPH98787139 = QcoZiPEaTkJmPivpcWKadNYCmhFfPH73255501;     QcoZiPEaTkJmPivpcWKadNYCmhFfPH73255501 = QcoZiPEaTkJmPivpcWKadNYCmhFfPH10338616;     QcoZiPEaTkJmPivpcWKadNYCmhFfPH10338616 = QcoZiPEaTkJmPivpcWKadNYCmhFfPH44257176;     QcoZiPEaTkJmPivpcWKadNYCmhFfPH44257176 = QcoZiPEaTkJmPivpcWKadNYCmhFfPH98793017;     QcoZiPEaTkJmPivpcWKadNYCmhFfPH98793017 = QcoZiPEaTkJmPivpcWKadNYCmhFfPH24676948;     QcoZiPEaTkJmPivpcWKadNYCmhFfPH24676948 = QcoZiPEaTkJmPivpcWKadNYCmhFfPH97331293;     QcoZiPEaTkJmPivpcWKadNYCmhFfPH97331293 = QcoZiPEaTkJmPivpcWKadNYCmhFfPH43936937;     QcoZiPEaTkJmPivpcWKadNYCmhFfPH43936937 = QcoZiPEaTkJmPivpcWKadNYCmhFfPH44261539;     QcoZiPEaTkJmPivpcWKadNYCmhFfPH44261539 = QcoZiPEaTkJmPivpcWKadNYCmhFfPH68917361;     QcoZiPEaTkJmPivpcWKadNYCmhFfPH68917361 = QcoZiPEaTkJmPivpcWKadNYCmhFfPH85600601;     QcoZiPEaTkJmPivpcWKadNYCmhFfPH85600601 = QcoZiPEaTkJmPivpcWKadNYCmhFfPH14924840;     QcoZiPEaTkJmPivpcWKadNYCmhFfPH14924840 = QcoZiPEaTkJmPivpcWKadNYCmhFfPH7333845;     QcoZiPEaTkJmPivpcWKadNYCmhFfPH7333845 = QcoZiPEaTkJmPivpcWKadNYCmhFfPH11083402;     QcoZiPEaTkJmPivpcWKadNYCmhFfPH11083402 = QcoZiPEaTkJmPivpcWKadNYCmhFfPH78258567;     QcoZiPEaTkJmPivpcWKadNYCmhFfPH78258567 = QcoZiPEaTkJmPivpcWKadNYCmhFfPH42717254;     QcoZiPEaTkJmPivpcWKadNYCmhFfPH42717254 = QcoZiPEaTkJmPivpcWKadNYCmhFfPH86461239;     QcoZiPEaTkJmPivpcWKadNYCmhFfPH86461239 = QcoZiPEaTkJmPivpcWKadNYCmhFfPH10376522;     QcoZiPEaTkJmPivpcWKadNYCmhFfPH10376522 = QcoZiPEaTkJmPivpcWKadNYCmhFfPH79125410;     QcoZiPEaTkJmPivpcWKadNYCmhFfPH79125410 = QcoZiPEaTkJmPivpcWKadNYCmhFfPH83982934;     QcoZiPEaTkJmPivpcWKadNYCmhFfPH83982934 = QcoZiPEaTkJmPivpcWKadNYCmhFfPH31901366;     QcoZiPEaTkJmPivpcWKadNYCmhFfPH31901366 = QcoZiPEaTkJmPivpcWKadNYCmhFfPH33119675;     QcoZiPEaTkJmPivpcWKadNYCmhFfPH33119675 = QcoZiPEaTkJmPivpcWKadNYCmhFfPH56363662;     QcoZiPEaTkJmPivpcWKadNYCmhFfPH56363662 = QcoZiPEaTkJmPivpcWKadNYCmhFfPH33480419;     QcoZiPEaTkJmPivpcWKadNYCmhFfPH33480419 = QcoZiPEaTkJmPivpcWKadNYCmhFfPH52492411;     QcoZiPEaTkJmPivpcWKadNYCmhFfPH52492411 = QcoZiPEaTkJmPivpcWKadNYCmhFfPH65648102;     QcoZiPEaTkJmPivpcWKadNYCmhFfPH65648102 = QcoZiPEaTkJmPivpcWKadNYCmhFfPH5447812;     QcoZiPEaTkJmPivpcWKadNYCmhFfPH5447812 = QcoZiPEaTkJmPivpcWKadNYCmhFfPH97490861;     QcoZiPEaTkJmPivpcWKadNYCmhFfPH97490861 = QcoZiPEaTkJmPivpcWKadNYCmhFfPH3196546;     QcoZiPEaTkJmPivpcWKadNYCmhFfPH3196546 = QcoZiPEaTkJmPivpcWKadNYCmhFfPH19398759;     QcoZiPEaTkJmPivpcWKadNYCmhFfPH19398759 = QcoZiPEaTkJmPivpcWKadNYCmhFfPH93395710;     QcoZiPEaTkJmPivpcWKadNYCmhFfPH93395710 = QcoZiPEaTkJmPivpcWKadNYCmhFfPH14396783;     QcoZiPEaTkJmPivpcWKadNYCmhFfPH14396783 = QcoZiPEaTkJmPivpcWKadNYCmhFfPH69888822;     QcoZiPEaTkJmPivpcWKadNYCmhFfPH69888822 = QcoZiPEaTkJmPivpcWKadNYCmhFfPH18953635;     QcoZiPEaTkJmPivpcWKadNYCmhFfPH18953635 = QcoZiPEaTkJmPivpcWKadNYCmhFfPH40564558;     QcoZiPEaTkJmPivpcWKadNYCmhFfPH40564558 = QcoZiPEaTkJmPivpcWKadNYCmhFfPH16548238;     QcoZiPEaTkJmPivpcWKadNYCmhFfPH16548238 = QcoZiPEaTkJmPivpcWKadNYCmhFfPH94249579;     QcoZiPEaTkJmPivpcWKadNYCmhFfPH94249579 = QcoZiPEaTkJmPivpcWKadNYCmhFfPH49494669;     QcoZiPEaTkJmPivpcWKadNYCmhFfPH49494669 = QcoZiPEaTkJmPivpcWKadNYCmhFfPH32881129;     QcoZiPEaTkJmPivpcWKadNYCmhFfPH32881129 = QcoZiPEaTkJmPivpcWKadNYCmhFfPH86371150;     QcoZiPEaTkJmPivpcWKadNYCmhFfPH86371150 = QcoZiPEaTkJmPivpcWKadNYCmhFfPH36950661;     QcoZiPEaTkJmPivpcWKadNYCmhFfPH36950661 = QcoZiPEaTkJmPivpcWKadNYCmhFfPH29398316;     QcoZiPEaTkJmPivpcWKadNYCmhFfPH29398316 = QcoZiPEaTkJmPivpcWKadNYCmhFfPH94117126;     QcoZiPEaTkJmPivpcWKadNYCmhFfPH94117126 = QcoZiPEaTkJmPivpcWKadNYCmhFfPH27768589;     QcoZiPEaTkJmPivpcWKadNYCmhFfPH27768589 = QcoZiPEaTkJmPivpcWKadNYCmhFfPH34933900;     QcoZiPEaTkJmPivpcWKadNYCmhFfPH34933900 = QcoZiPEaTkJmPivpcWKadNYCmhFfPH81851928;     QcoZiPEaTkJmPivpcWKadNYCmhFfPH81851928 = QcoZiPEaTkJmPivpcWKadNYCmhFfPH26305113;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void xiepksYyTgWjTHzgNjlZotwrU79890206() {     double HjJdWBPyQwoTvUXyKTuUAzuodKhxcE48127334 = 43396065;    double HjJdWBPyQwoTvUXyKTuUAzuodKhxcE25821339 = -706390841;    double HjJdWBPyQwoTvUXyKTuUAzuodKhxcE39253626 = -76266711;    double HjJdWBPyQwoTvUXyKTuUAzuodKhxcE49660237 = -491960106;    double HjJdWBPyQwoTvUXyKTuUAzuodKhxcE62815947 = -196350052;    double HjJdWBPyQwoTvUXyKTuUAzuodKhxcE85367295 = -624522843;    double HjJdWBPyQwoTvUXyKTuUAzuodKhxcE83673509 = -364970280;    double HjJdWBPyQwoTvUXyKTuUAzuodKhxcE98884244 = -915806983;    double HjJdWBPyQwoTvUXyKTuUAzuodKhxcE4396899 = -349007483;    double HjJdWBPyQwoTvUXyKTuUAzuodKhxcE3892188 = -147876290;    double HjJdWBPyQwoTvUXyKTuUAzuodKhxcE48110490 = -369947473;    double HjJdWBPyQwoTvUXyKTuUAzuodKhxcE32260541 = -257741444;    double HjJdWBPyQwoTvUXyKTuUAzuodKhxcE83424041 = -528621375;    double HjJdWBPyQwoTvUXyKTuUAzuodKhxcE35028773 = -385482739;    double HjJdWBPyQwoTvUXyKTuUAzuodKhxcE42563245 = -715321421;    double HjJdWBPyQwoTvUXyKTuUAzuodKhxcE28183811 = -344121789;    double HjJdWBPyQwoTvUXyKTuUAzuodKhxcE35499726 = -937680409;    double HjJdWBPyQwoTvUXyKTuUAzuodKhxcE52698811 = -648230330;    double HjJdWBPyQwoTvUXyKTuUAzuodKhxcE22902114 = -242397496;    double HjJdWBPyQwoTvUXyKTuUAzuodKhxcE86346260 = -708003058;    double HjJdWBPyQwoTvUXyKTuUAzuodKhxcE28652626 = -236682513;    double HjJdWBPyQwoTvUXyKTuUAzuodKhxcE17451590 = -98568865;    double HjJdWBPyQwoTvUXyKTuUAzuodKhxcE63486324 = -880320078;    double HjJdWBPyQwoTvUXyKTuUAzuodKhxcE86546801 = -731285244;    double HjJdWBPyQwoTvUXyKTuUAzuodKhxcE93422740 = -377752547;    double HjJdWBPyQwoTvUXyKTuUAzuodKhxcE67580522 = -920553261;    double HjJdWBPyQwoTvUXyKTuUAzuodKhxcE37054289 = -774354721;    double HjJdWBPyQwoTvUXyKTuUAzuodKhxcE46295814 = -944151376;    double HjJdWBPyQwoTvUXyKTuUAzuodKhxcE15656989 = -149590912;    double HjJdWBPyQwoTvUXyKTuUAzuodKhxcE84772974 = -248680638;    double HjJdWBPyQwoTvUXyKTuUAzuodKhxcE8173626 = -976699713;    double HjJdWBPyQwoTvUXyKTuUAzuodKhxcE81160707 = -461343022;    double HjJdWBPyQwoTvUXyKTuUAzuodKhxcE34064278 = -758592178;    double HjJdWBPyQwoTvUXyKTuUAzuodKhxcE11890815 = -998774309;    double HjJdWBPyQwoTvUXyKTuUAzuodKhxcE70637951 = -939300872;    double HjJdWBPyQwoTvUXyKTuUAzuodKhxcE74165154 = -530698067;    double HjJdWBPyQwoTvUXyKTuUAzuodKhxcE36834102 = -948168438;    double HjJdWBPyQwoTvUXyKTuUAzuodKhxcE35612008 = -59204831;    double HjJdWBPyQwoTvUXyKTuUAzuodKhxcE71428544 = -139919810;    double HjJdWBPyQwoTvUXyKTuUAzuodKhxcE46952601 = -817216501;    double HjJdWBPyQwoTvUXyKTuUAzuodKhxcE27711099 = -874122491;    double HjJdWBPyQwoTvUXyKTuUAzuodKhxcE54880837 = -11062896;    double HjJdWBPyQwoTvUXyKTuUAzuodKhxcE44053349 = -372264765;    double HjJdWBPyQwoTvUXyKTuUAzuodKhxcE68629360 = -84938141;    double HjJdWBPyQwoTvUXyKTuUAzuodKhxcE76692578 = -90468246;    double HjJdWBPyQwoTvUXyKTuUAzuodKhxcE93050450 = -512127021;    double HjJdWBPyQwoTvUXyKTuUAzuodKhxcE98224968 = -545978573;    double HjJdWBPyQwoTvUXyKTuUAzuodKhxcE48366575 = -741397635;    double HjJdWBPyQwoTvUXyKTuUAzuodKhxcE14583535 = -446554269;    double HjJdWBPyQwoTvUXyKTuUAzuodKhxcE64408794 = -570842663;    double HjJdWBPyQwoTvUXyKTuUAzuodKhxcE34022006 = -68652167;    double HjJdWBPyQwoTvUXyKTuUAzuodKhxcE39000242 = -563580278;    double HjJdWBPyQwoTvUXyKTuUAzuodKhxcE83603423 = -388878830;    double HjJdWBPyQwoTvUXyKTuUAzuodKhxcE17816301 = -489978157;    double HjJdWBPyQwoTvUXyKTuUAzuodKhxcE51237581 = -556146733;    double HjJdWBPyQwoTvUXyKTuUAzuodKhxcE30675744 = -858035071;    double HjJdWBPyQwoTvUXyKTuUAzuodKhxcE62335015 = -826070763;    double HjJdWBPyQwoTvUXyKTuUAzuodKhxcE52706825 = -344981467;    double HjJdWBPyQwoTvUXyKTuUAzuodKhxcE56237496 = -14207560;    double HjJdWBPyQwoTvUXyKTuUAzuodKhxcE95235424 = -275796791;    double HjJdWBPyQwoTvUXyKTuUAzuodKhxcE48313006 = -850168122;    double HjJdWBPyQwoTvUXyKTuUAzuodKhxcE37377696 = -420818904;    double HjJdWBPyQwoTvUXyKTuUAzuodKhxcE83227255 = -666216071;    double HjJdWBPyQwoTvUXyKTuUAzuodKhxcE19623924 = -326846;    double HjJdWBPyQwoTvUXyKTuUAzuodKhxcE95718561 = -171176577;    double HjJdWBPyQwoTvUXyKTuUAzuodKhxcE66949783 = -908604452;    double HjJdWBPyQwoTvUXyKTuUAzuodKhxcE98196262 = -499149267;    double HjJdWBPyQwoTvUXyKTuUAzuodKhxcE71533226 = -529847066;    double HjJdWBPyQwoTvUXyKTuUAzuodKhxcE64390822 = -446181867;    double HjJdWBPyQwoTvUXyKTuUAzuodKhxcE68398090 = -84623354;    double HjJdWBPyQwoTvUXyKTuUAzuodKhxcE91349708 = -395953352;    double HjJdWBPyQwoTvUXyKTuUAzuodKhxcE99887718 = -778475578;    double HjJdWBPyQwoTvUXyKTuUAzuodKhxcE81270267 = -408310521;    double HjJdWBPyQwoTvUXyKTuUAzuodKhxcE75949512 = -425180996;    double HjJdWBPyQwoTvUXyKTuUAzuodKhxcE58635162 = -833880568;    double HjJdWBPyQwoTvUXyKTuUAzuodKhxcE73771789 = -125619617;    double HjJdWBPyQwoTvUXyKTuUAzuodKhxcE73398241 = -726304101;    double HjJdWBPyQwoTvUXyKTuUAzuodKhxcE94856964 = -695381938;    double HjJdWBPyQwoTvUXyKTuUAzuodKhxcE9854223 = -540816999;    double HjJdWBPyQwoTvUXyKTuUAzuodKhxcE372291 = -865625527;    double HjJdWBPyQwoTvUXyKTuUAzuodKhxcE69355554 = -274574689;    double HjJdWBPyQwoTvUXyKTuUAzuodKhxcE88687713 = 67042913;    double HjJdWBPyQwoTvUXyKTuUAzuodKhxcE31712279 = -397597108;    double HjJdWBPyQwoTvUXyKTuUAzuodKhxcE51248194 = -578748250;    double HjJdWBPyQwoTvUXyKTuUAzuodKhxcE50750969 = -80028472;    double HjJdWBPyQwoTvUXyKTuUAzuodKhxcE69173384 = -313119436;    double HjJdWBPyQwoTvUXyKTuUAzuodKhxcE97557283 = 27535808;    double HjJdWBPyQwoTvUXyKTuUAzuodKhxcE16247978 = -168614021;    double HjJdWBPyQwoTvUXyKTuUAzuodKhxcE60653234 = -342627577;    double HjJdWBPyQwoTvUXyKTuUAzuodKhxcE39962208 = 18734198;    double HjJdWBPyQwoTvUXyKTuUAzuodKhxcE11830140 = -704627304;    double HjJdWBPyQwoTvUXyKTuUAzuodKhxcE84127277 = -503186971;    double HjJdWBPyQwoTvUXyKTuUAzuodKhxcE79374511 = 55002728;    double HjJdWBPyQwoTvUXyKTuUAzuodKhxcE76193119 = -864123020;    double HjJdWBPyQwoTvUXyKTuUAzuodKhxcE98639595 = -967048380;    double HjJdWBPyQwoTvUXyKTuUAzuodKhxcE90333402 = -353303587;    double HjJdWBPyQwoTvUXyKTuUAzuodKhxcE71653581 = -344846825;    double HjJdWBPyQwoTvUXyKTuUAzuodKhxcE24429425 = -271937919;    double HjJdWBPyQwoTvUXyKTuUAzuodKhxcE72910798 = -913761564;    double HjJdWBPyQwoTvUXyKTuUAzuodKhxcE9742796 = 43396065;     HjJdWBPyQwoTvUXyKTuUAzuodKhxcE48127334 = HjJdWBPyQwoTvUXyKTuUAzuodKhxcE25821339;     HjJdWBPyQwoTvUXyKTuUAzuodKhxcE25821339 = HjJdWBPyQwoTvUXyKTuUAzuodKhxcE39253626;     HjJdWBPyQwoTvUXyKTuUAzuodKhxcE39253626 = HjJdWBPyQwoTvUXyKTuUAzuodKhxcE49660237;     HjJdWBPyQwoTvUXyKTuUAzuodKhxcE49660237 = HjJdWBPyQwoTvUXyKTuUAzuodKhxcE62815947;     HjJdWBPyQwoTvUXyKTuUAzuodKhxcE62815947 = HjJdWBPyQwoTvUXyKTuUAzuodKhxcE85367295;     HjJdWBPyQwoTvUXyKTuUAzuodKhxcE85367295 = HjJdWBPyQwoTvUXyKTuUAzuodKhxcE83673509;     HjJdWBPyQwoTvUXyKTuUAzuodKhxcE83673509 = HjJdWBPyQwoTvUXyKTuUAzuodKhxcE98884244;     HjJdWBPyQwoTvUXyKTuUAzuodKhxcE98884244 = HjJdWBPyQwoTvUXyKTuUAzuodKhxcE4396899;     HjJdWBPyQwoTvUXyKTuUAzuodKhxcE4396899 = HjJdWBPyQwoTvUXyKTuUAzuodKhxcE3892188;     HjJdWBPyQwoTvUXyKTuUAzuodKhxcE3892188 = HjJdWBPyQwoTvUXyKTuUAzuodKhxcE48110490;     HjJdWBPyQwoTvUXyKTuUAzuodKhxcE48110490 = HjJdWBPyQwoTvUXyKTuUAzuodKhxcE32260541;     HjJdWBPyQwoTvUXyKTuUAzuodKhxcE32260541 = HjJdWBPyQwoTvUXyKTuUAzuodKhxcE83424041;     HjJdWBPyQwoTvUXyKTuUAzuodKhxcE83424041 = HjJdWBPyQwoTvUXyKTuUAzuodKhxcE35028773;     HjJdWBPyQwoTvUXyKTuUAzuodKhxcE35028773 = HjJdWBPyQwoTvUXyKTuUAzuodKhxcE42563245;     HjJdWBPyQwoTvUXyKTuUAzuodKhxcE42563245 = HjJdWBPyQwoTvUXyKTuUAzuodKhxcE28183811;     HjJdWBPyQwoTvUXyKTuUAzuodKhxcE28183811 = HjJdWBPyQwoTvUXyKTuUAzuodKhxcE35499726;     HjJdWBPyQwoTvUXyKTuUAzuodKhxcE35499726 = HjJdWBPyQwoTvUXyKTuUAzuodKhxcE52698811;     HjJdWBPyQwoTvUXyKTuUAzuodKhxcE52698811 = HjJdWBPyQwoTvUXyKTuUAzuodKhxcE22902114;     HjJdWBPyQwoTvUXyKTuUAzuodKhxcE22902114 = HjJdWBPyQwoTvUXyKTuUAzuodKhxcE86346260;     HjJdWBPyQwoTvUXyKTuUAzuodKhxcE86346260 = HjJdWBPyQwoTvUXyKTuUAzuodKhxcE28652626;     HjJdWBPyQwoTvUXyKTuUAzuodKhxcE28652626 = HjJdWBPyQwoTvUXyKTuUAzuodKhxcE17451590;     HjJdWBPyQwoTvUXyKTuUAzuodKhxcE17451590 = HjJdWBPyQwoTvUXyKTuUAzuodKhxcE63486324;     HjJdWBPyQwoTvUXyKTuUAzuodKhxcE63486324 = HjJdWBPyQwoTvUXyKTuUAzuodKhxcE86546801;     HjJdWBPyQwoTvUXyKTuUAzuodKhxcE86546801 = HjJdWBPyQwoTvUXyKTuUAzuodKhxcE93422740;     HjJdWBPyQwoTvUXyKTuUAzuodKhxcE93422740 = HjJdWBPyQwoTvUXyKTuUAzuodKhxcE67580522;     HjJdWBPyQwoTvUXyKTuUAzuodKhxcE67580522 = HjJdWBPyQwoTvUXyKTuUAzuodKhxcE37054289;     HjJdWBPyQwoTvUXyKTuUAzuodKhxcE37054289 = HjJdWBPyQwoTvUXyKTuUAzuodKhxcE46295814;     HjJdWBPyQwoTvUXyKTuUAzuodKhxcE46295814 = HjJdWBPyQwoTvUXyKTuUAzuodKhxcE15656989;     HjJdWBPyQwoTvUXyKTuUAzuodKhxcE15656989 = HjJdWBPyQwoTvUXyKTuUAzuodKhxcE84772974;     HjJdWBPyQwoTvUXyKTuUAzuodKhxcE84772974 = HjJdWBPyQwoTvUXyKTuUAzuodKhxcE8173626;     HjJdWBPyQwoTvUXyKTuUAzuodKhxcE8173626 = HjJdWBPyQwoTvUXyKTuUAzuodKhxcE81160707;     HjJdWBPyQwoTvUXyKTuUAzuodKhxcE81160707 = HjJdWBPyQwoTvUXyKTuUAzuodKhxcE34064278;     HjJdWBPyQwoTvUXyKTuUAzuodKhxcE34064278 = HjJdWBPyQwoTvUXyKTuUAzuodKhxcE11890815;     HjJdWBPyQwoTvUXyKTuUAzuodKhxcE11890815 = HjJdWBPyQwoTvUXyKTuUAzuodKhxcE70637951;     HjJdWBPyQwoTvUXyKTuUAzuodKhxcE70637951 = HjJdWBPyQwoTvUXyKTuUAzuodKhxcE74165154;     HjJdWBPyQwoTvUXyKTuUAzuodKhxcE74165154 = HjJdWBPyQwoTvUXyKTuUAzuodKhxcE36834102;     HjJdWBPyQwoTvUXyKTuUAzuodKhxcE36834102 = HjJdWBPyQwoTvUXyKTuUAzuodKhxcE35612008;     HjJdWBPyQwoTvUXyKTuUAzuodKhxcE35612008 = HjJdWBPyQwoTvUXyKTuUAzuodKhxcE71428544;     HjJdWBPyQwoTvUXyKTuUAzuodKhxcE71428544 = HjJdWBPyQwoTvUXyKTuUAzuodKhxcE46952601;     HjJdWBPyQwoTvUXyKTuUAzuodKhxcE46952601 = HjJdWBPyQwoTvUXyKTuUAzuodKhxcE27711099;     HjJdWBPyQwoTvUXyKTuUAzuodKhxcE27711099 = HjJdWBPyQwoTvUXyKTuUAzuodKhxcE54880837;     HjJdWBPyQwoTvUXyKTuUAzuodKhxcE54880837 = HjJdWBPyQwoTvUXyKTuUAzuodKhxcE44053349;     HjJdWBPyQwoTvUXyKTuUAzuodKhxcE44053349 = HjJdWBPyQwoTvUXyKTuUAzuodKhxcE68629360;     HjJdWBPyQwoTvUXyKTuUAzuodKhxcE68629360 = HjJdWBPyQwoTvUXyKTuUAzuodKhxcE76692578;     HjJdWBPyQwoTvUXyKTuUAzuodKhxcE76692578 = HjJdWBPyQwoTvUXyKTuUAzuodKhxcE93050450;     HjJdWBPyQwoTvUXyKTuUAzuodKhxcE93050450 = HjJdWBPyQwoTvUXyKTuUAzuodKhxcE98224968;     HjJdWBPyQwoTvUXyKTuUAzuodKhxcE98224968 = HjJdWBPyQwoTvUXyKTuUAzuodKhxcE48366575;     HjJdWBPyQwoTvUXyKTuUAzuodKhxcE48366575 = HjJdWBPyQwoTvUXyKTuUAzuodKhxcE14583535;     HjJdWBPyQwoTvUXyKTuUAzuodKhxcE14583535 = HjJdWBPyQwoTvUXyKTuUAzuodKhxcE64408794;     HjJdWBPyQwoTvUXyKTuUAzuodKhxcE64408794 = HjJdWBPyQwoTvUXyKTuUAzuodKhxcE34022006;     HjJdWBPyQwoTvUXyKTuUAzuodKhxcE34022006 = HjJdWBPyQwoTvUXyKTuUAzuodKhxcE39000242;     HjJdWBPyQwoTvUXyKTuUAzuodKhxcE39000242 = HjJdWBPyQwoTvUXyKTuUAzuodKhxcE83603423;     HjJdWBPyQwoTvUXyKTuUAzuodKhxcE83603423 = HjJdWBPyQwoTvUXyKTuUAzuodKhxcE17816301;     HjJdWBPyQwoTvUXyKTuUAzuodKhxcE17816301 = HjJdWBPyQwoTvUXyKTuUAzuodKhxcE51237581;     HjJdWBPyQwoTvUXyKTuUAzuodKhxcE51237581 = HjJdWBPyQwoTvUXyKTuUAzuodKhxcE30675744;     HjJdWBPyQwoTvUXyKTuUAzuodKhxcE30675744 = HjJdWBPyQwoTvUXyKTuUAzuodKhxcE62335015;     HjJdWBPyQwoTvUXyKTuUAzuodKhxcE62335015 = HjJdWBPyQwoTvUXyKTuUAzuodKhxcE52706825;     HjJdWBPyQwoTvUXyKTuUAzuodKhxcE52706825 = HjJdWBPyQwoTvUXyKTuUAzuodKhxcE56237496;     HjJdWBPyQwoTvUXyKTuUAzuodKhxcE56237496 = HjJdWBPyQwoTvUXyKTuUAzuodKhxcE95235424;     HjJdWBPyQwoTvUXyKTuUAzuodKhxcE95235424 = HjJdWBPyQwoTvUXyKTuUAzuodKhxcE48313006;     HjJdWBPyQwoTvUXyKTuUAzuodKhxcE48313006 = HjJdWBPyQwoTvUXyKTuUAzuodKhxcE37377696;     HjJdWBPyQwoTvUXyKTuUAzuodKhxcE37377696 = HjJdWBPyQwoTvUXyKTuUAzuodKhxcE83227255;     HjJdWBPyQwoTvUXyKTuUAzuodKhxcE83227255 = HjJdWBPyQwoTvUXyKTuUAzuodKhxcE19623924;     HjJdWBPyQwoTvUXyKTuUAzuodKhxcE19623924 = HjJdWBPyQwoTvUXyKTuUAzuodKhxcE95718561;     HjJdWBPyQwoTvUXyKTuUAzuodKhxcE95718561 = HjJdWBPyQwoTvUXyKTuUAzuodKhxcE66949783;     HjJdWBPyQwoTvUXyKTuUAzuodKhxcE66949783 = HjJdWBPyQwoTvUXyKTuUAzuodKhxcE98196262;     HjJdWBPyQwoTvUXyKTuUAzuodKhxcE98196262 = HjJdWBPyQwoTvUXyKTuUAzuodKhxcE71533226;     HjJdWBPyQwoTvUXyKTuUAzuodKhxcE71533226 = HjJdWBPyQwoTvUXyKTuUAzuodKhxcE64390822;     HjJdWBPyQwoTvUXyKTuUAzuodKhxcE64390822 = HjJdWBPyQwoTvUXyKTuUAzuodKhxcE68398090;     HjJdWBPyQwoTvUXyKTuUAzuodKhxcE68398090 = HjJdWBPyQwoTvUXyKTuUAzuodKhxcE91349708;     HjJdWBPyQwoTvUXyKTuUAzuodKhxcE91349708 = HjJdWBPyQwoTvUXyKTuUAzuodKhxcE99887718;     HjJdWBPyQwoTvUXyKTuUAzuodKhxcE99887718 = HjJdWBPyQwoTvUXyKTuUAzuodKhxcE81270267;     HjJdWBPyQwoTvUXyKTuUAzuodKhxcE81270267 = HjJdWBPyQwoTvUXyKTuUAzuodKhxcE75949512;     HjJdWBPyQwoTvUXyKTuUAzuodKhxcE75949512 = HjJdWBPyQwoTvUXyKTuUAzuodKhxcE58635162;     HjJdWBPyQwoTvUXyKTuUAzuodKhxcE58635162 = HjJdWBPyQwoTvUXyKTuUAzuodKhxcE73771789;     HjJdWBPyQwoTvUXyKTuUAzuodKhxcE73771789 = HjJdWBPyQwoTvUXyKTuUAzuodKhxcE73398241;     HjJdWBPyQwoTvUXyKTuUAzuodKhxcE73398241 = HjJdWBPyQwoTvUXyKTuUAzuodKhxcE94856964;     HjJdWBPyQwoTvUXyKTuUAzuodKhxcE94856964 = HjJdWBPyQwoTvUXyKTuUAzuodKhxcE9854223;     HjJdWBPyQwoTvUXyKTuUAzuodKhxcE9854223 = HjJdWBPyQwoTvUXyKTuUAzuodKhxcE372291;     HjJdWBPyQwoTvUXyKTuUAzuodKhxcE372291 = HjJdWBPyQwoTvUXyKTuUAzuodKhxcE69355554;     HjJdWBPyQwoTvUXyKTuUAzuodKhxcE69355554 = HjJdWBPyQwoTvUXyKTuUAzuodKhxcE88687713;     HjJdWBPyQwoTvUXyKTuUAzuodKhxcE88687713 = HjJdWBPyQwoTvUXyKTuUAzuodKhxcE31712279;     HjJdWBPyQwoTvUXyKTuUAzuodKhxcE31712279 = HjJdWBPyQwoTvUXyKTuUAzuodKhxcE51248194;     HjJdWBPyQwoTvUXyKTuUAzuodKhxcE51248194 = HjJdWBPyQwoTvUXyKTuUAzuodKhxcE50750969;     HjJdWBPyQwoTvUXyKTuUAzuodKhxcE50750969 = HjJdWBPyQwoTvUXyKTuUAzuodKhxcE69173384;     HjJdWBPyQwoTvUXyKTuUAzuodKhxcE69173384 = HjJdWBPyQwoTvUXyKTuUAzuodKhxcE97557283;     HjJdWBPyQwoTvUXyKTuUAzuodKhxcE97557283 = HjJdWBPyQwoTvUXyKTuUAzuodKhxcE16247978;     HjJdWBPyQwoTvUXyKTuUAzuodKhxcE16247978 = HjJdWBPyQwoTvUXyKTuUAzuodKhxcE60653234;     HjJdWBPyQwoTvUXyKTuUAzuodKhxcE60653234 = HjJdWBPyQwoTvUXyKTuUAzuodKhxcE39962208;     HjJdWBPyQwoTvUXyKTuUAzuodKhxcE39962208 = HjJdWBPyQwoTvUXyKTuUAzuodKhxcE11830140;     HjJdWBPyQwoTvUXyKTuUAzuodKhxcE11830140 = HjJdWBPyQwoTvUXyKTuUAzuodKhxcE84127277;     HjJdWBPyQwoTvUXyKTuUAzuodKhxcE84127277 = HjJdWBPyQwoTvUXyKTuUAzuodKhxcE79374511;     HjJdWBPyQwoTvUXyKTuUAzuodKhxcE79374511 = HjJdWBPyQwoTvUXyKTuUAzuodKhxcE76193119;     HjJdWBPyQwoTvUXyKTuUAzuodKhxcE76193119 = HjJdWBPyQwoTvUXyKTuUAzuodKhxcE98639595;     HjJdWBPyQwoTvUXyKTuUAzuodKhxcE98639595 = HjJdWBPyQwoTvUXyKTuUAzuodKhxcE90333402;     HjJdWBPyQwoTvUXyKTuUAzuodKhxcE90333402 = HjJdWBPyQwoTvUXyKTuUAzuodKhxcE71653581;     HjJdWBPyQwoTvUXyKTuUAzuodKhxcE71653581 = HjJdWBPyQwoTvUXyKTuUAzuodKhxcE24429425;     HjJdWBPyQwoTvUXyKTuUAzuodKhxcE24429425 = HjJdWBPyQwoTvUXyKTuUAzuodKhxcE72910798;     HjJdWBPyQwoTvUXyKTuUAzuodKhxcE72910798 = HjJdWBPyQwoTvUXyKTuUAzuodKhxcE9742796;     HjJdWBPyQwoTvUXyKTuUAzuodKhxcE9742796 = HjJdWBPyQwoTvUXyKTuUAzuodKhxcE48127334;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void JVEsESlAgKniGzxJFsHDkxjVj41737465() {     double YSolEhkNuKCZqOZqJycpksUZAbflYM99291416 = -879194278;    double YSolEhkNuKCZqOZqJycpksUZAbflYM57187942 = -159941520;    double YSolEhkNuKCZqOZqJycpksUZAbflYM6325190 = -738318397;    double YSolEhkNuKCZqOZqJycpksUZAbflYM26183957 = -327146723;    double YSolEhkNuKCZqOZqJycpksUZAbflYM10340059 = -758549947;    double YSolEhkNuKCZqOZqJycpksUZAbflYM54191280 = -633917661;    double YSolEhkNuKCZqOZqJycpksUZAbflYM62862534 = -134049161;    double YSolEhkNuKCZqOZqJycpksUZAbflYM98118543 = -281348058;    double YSolEhkNuKCZqOZqJycpksUZAbflYM37795648 = 44898357;    double YSolEhkNuKCZqOZqJycpksUZAbflYM38848466 = -453806207;    double YSolEhkNuKCZqOZqJycpksUZAbflYM97098202 = -950275319;    double YSolEhkNuKCZqOZqJycpksUZAbflYM17187530 = -880637620;    double YSolEhkNuKCZqOZqJycpksUZAbflYM68438511 = -78776580;    double YSolEhkNuKCZqOZqJycpksUZAbflYM71992427 = -679684377;    double YSolEhkNuKCZqOZqJycpksUZAbflYM273130 = -455126188;    double YSolEhkNuKCZqOZqJycpksUZAbflYM18190444 = -449300394;    double YSolEhkNuKCZqOZqJycpksUZAbflYM90948718 = -133934567;    double YSolEhkNuKCZqOZqJycpksUZAbflYM17931153 = -977856674;    double YSolEhkNuKCZqOZqJycpksUZAbflYM66259825 = -226327477;    double YSolEhkNuKCZqOZqJycpksUZAbflYM80742957 = -168906261;    double YSolEhkNuKCZqOZqJycpksUZAbflYM10340581 = -870548448;    double YSolEhkNuKCZqOZqJycpksUZAbflYM98754069 = -348026607;    double YSolEhkNuKCZqOZqJycpksUZAbflYM7892317 = -327462131;    double YSolEhkNuKCZqOZqJycpksUZAbflYM33624994 = -329903726;    double YSolEhkNuKCZqOZqJycpksUZAbflYM31671709 = 60561315;    double YSolEhkNuKCZqOZqJycpksUZAbflYM43132873 = 42339727;    double YSolEhkNuKCZqOZqJycpksUZAbflYM72051689 = -206780703;    double YSolEhkNuKCZqOZqJycpksUZAbflYM9496939 = -912442830;    double YSolEhkNuKCZqOZqJycpksUZAbflYM44089861 = -168248928;    double YSolEhkNuKCZqOZqJycpksUZAbflYM67507826 = -841931136;    double YSolEhkNuKCZqOZqJycpksUZAbflYM85679573 = -921087010;    double YSolEhkNuKCZqOZqJycpksUZAbflYM40264430 = -300756451;    double YSolEhkNuKCZqOZqJycpksUZAbflYM61890805 = -756178668;    double YSolEhkNuKCZqOZqJycpksUZAbflYM19347795 = -987745985;    double YSolEhkNuKCZqOZqJycpksUZAbflYM55805965 = -401486619;    double YSolEhkNuKCZqOZqJycpksUZAbflYM26577045 = -545653245;    double YSolEhkNuKCZqOZqJycpksUZAbflYM48066241 = -908845705;    double YSolEhkNuKCZqOZqJycpksUZAbflYM56675060 = -851897160;    double YSolEhkNuKCZqOZqJycpksUZAbflYM88589298 = -669277870;    double YSolEhkNuKCZqOZqJycpksUZAbflYM36392842 = -266588825;    double YSolEhkNuKCZqOZqJycpksUZAbflYM9869328 = 87813231;    double YSolEhkNuKCZqOZqJycpksUZAbflYM28597678 = -122931986;    double YSolEhkNuKCZqOZqJycpksUZAbflYM2737148 = -988607782;    double YSolEhkNuKCZqOZqJycpksUZAbflYM69447816 = -578733782;    double YSolEhkNuKCZqOZqJycpksUZAbflYM44672383 = -441769882;    double YSolEhkNuKCZqOZqJycpksUZAbflYM66279063 = -269266767;    double YSolEhkNuKCZqOZqJycpksUZAbflYM25459670 = 7803084;    double YSolEhkNuKCZqOZqJycpksUZAbflYM39975698 = -636524684;    double YSolEhkNuKCZqOZqJycpksUZAbflYM34864565 = -209670584;    double YSolEhkNuKCZqOZqJycpksUZAbflYM92074207 = -953913855;    double YSolEhkNuKCZqOZqJycpksUZAbflYM67553870 = -144524379;    double YSolEhkNuKCZqOZqJycpksUZAbflYM8064659 = -201884385;    double YSolEhkNuKCZqOZqJycpksUZAbflYM95198978 = -316729936;    double YSolEhkNuKCZqOZqJycpksUZAbflYM65864389 = -552025571;    double YSolEhkNuKCZqOZqJycpksUZAbflYM31396884 = -163226846;    double YSolEhkNuKCZqOZqJycpksUZAbflYM537348 = -431167671;    double YSolEhkNuKCZqOZqJycpksUZAbflYM49295626 = -832479389;    double YSolEhkNuKCZqOZqJycpksUZAbflYM72700195 = -308414671;    double YSolEhkNuKCZqOZqJycpksUZAbflYM94512247 = -287708039;    double YSolEhkNuKCZqOZqJycpksUZAbflYM67207186 = -700889675;    double YSolEhkNuKCZqOZqJycpksUZAbflYM82139591 = -327136958;    double YSolEhkNuKCZqOZqJycpksUZAbflYM53365596 = -221606332;    double YSolEhkNuKCZqOZqJycpksUZAbflYM54028683 = -13099131;    double YSolEhkNuKCZqOZqJycpksUZAbflYM70287821 = -113170507;    double YSolEhkNuKCZqOZqJycpksUZAbflYM53168892 = -532719198;    double YSolEhkNuKCZqOZqJycpksUZAbflYM56833773 = -549518868;    double YSolEhkNuKCZqOZqJycpksUZAbflYM55296725 = -24458953;    double YSolEhkNuKCZqOZqJycpksUZAbflYM49090717 = -91030596;    double YSolEhkNuKCZqOZqJycpksUZAbflYM16186462 = -178197759;    double YSolEhkNuKCZqOZqJycpksUZAbflYM73696084 = -909472944;    double YSolEhkNuKCZqOZqJycpksUZAbflYM70124203 = -540454689;    double YSolEhkNuKCZqOZqJycpksUZAbflYM34273658 = -282037407;    double YSolEhkNuKCZqOZqJycpksUZAbflYM29341855 = -208578804;    double YSolEhkNuKCZqOZqJycpksUZAbflYM29866984 = -959738653;    double YSolEhkNuKCZqOZqJycpksUZAbflYM70873629 = -156719492;    double YSolEhkNuKCZqOZqJycpksUZAbflYM81742903 = -647616463;    double YSolEhkNuKCZqOZqJycpksUZAbflYM96016921 = -359418826;    double YSolEhkNuKCZqOZqJycpksUZAbflYM38444500 = -748728349;    double YSolEhkNuKCZqOZqJycpksUZAbflYM88952611 = -888133845;    double YSolEhkNuKCZqOZqJycpksUZAbflYM65392646 = -670171918;    double YSolEhkNuKCZqOZqJycpksUZAbflYM17673204 = -965463357;    double YSolEhkNuKCZqOZqJycpksUZAbflYM32075991 = -570256020;    double YSolEhkNuKCZqOZqJycpksUZAbflYM74632374 = -602772247;    double YSolEhkNuKCZqOZqJycpksUZAbflYM52015653 = -214335073;    double YSolEhkNuKCZqOZqJycpksUZAbflYM99953955 = -597406757;    double YSolEhkNuKCZqOZqJycpksUZAbflYM77614915 = -619202625;    double YSolEhkNuKCZqOZqJycpksUZAbflYM45065451 = -984026516;    double YSolEhkNuKCZqOZqJycpksUZAbflYM96026416 = -104153097;    double YSolEhkNuKCZqOZqJycpksUZAbflYM87950910 = -724519140;    double YSolEhkNuKCZqOZqJycpksUZAbflYM55268618 = -970318949;    double YSolEhkNuKCZqOZqJycpksUZAbflYM77281419 = -713173856;    double YSolEhkNuKCZqOZqJycpksUZAbflYM75366046 = -500431034;    double YSolEhkNuKCZqOZqJycpksUZAbflYM62162813 = -464189122;    double YSolEhkNuKCZqOZqJycpksUZAbflYM21382112 = -968388195;    double YSolEhkNuKCZqOZqJycpksUZAbflYM54253250 = -939451868;    double YSolEhkNuKCZqOZqJycpksUZAbflYM56503732 = -690580438;    double YSolEhkNuKCZqOZqJycpksUZAbflYM74568995 = -9832856;    double YSolEhkNuKCZqOZqJycpksUZAbflYM32449326 = -775437275;    double YSolEhkNuKCZqOZqJycpksUZAbflYM16278925 = 53985416;    double YSolEhkNuKCZqOZqJycpksUZAbflYM87838609 = -879194278;     YSolEhkNuKCZqOZqJycpksUZAbflYM99291416 = YSolEhkNuKCZqOZqJycpksUZAbflYM57187942;     YSolEhkNuKCZqOZqJycpksUZAbflYM57187942 = YSolEhkNuKCZqOZqJycpksUZAbflYM6325190;     YSolEhkNuKCZqOZqJycpksUZAbflYM6325190 = YSolEhkNuKCZqOZqJycpksUZAbflYM26183957;     YSolEhkNuKCZqOZqJycpksUZAbflYM26183957 = YSolEhkNuKCZqOZqJycpksUZAbflYM10340059;     YSolEhkNuKCZqOZqJycpksUZAbflYM10340059 = YSolEhkNuKCZqOZqJycpksUZAbflYM54191280;     YSolEhkNuKCZqOZqJycpksUZAbflYM54191280 = YSolEhkNuKCZqOZqJycpksUZAbflYM62862534;     YSolEhkNuKCZqOZqJycpksUZAbflYM62862534 = YSolEhkNuKCZqOZqJycpksUZAbflYM98118543;     YSolEhkNuKCZqOZqJycpksUZAbflYM98118543 = YSolEhkNuKCZqOZqJycpksUZAbflYM37795648;     YSolEhkNuKCZqOZqJycpksUZAbflYM37795648 = YSolEhkNuKCZqOZqJycpksUZAbflYM38848466;     YSolEhkNuKCZqOZqJycpksUZAbflYM38848466 = YSolEhkNuKCZqOZqJycpksUZAbflYM97098202;     YSolEhkNuKCZqOZqJycpksUZAbflYM97098202 = YSolEhkNuKCZqOZqJycpksUZAbflYM17187530;     YSolEhkNuKCZqOZqJycpksUZAbflYM17187530 = YSolEhkNuKCZqOZqJycpksUZAbflYM68438511;     YSolEhkNuKCZqOZqJycpksUZAbflYM68438511 = YSolEhkNuKCZqOZqJycpksUZAbflYM71992427;     YSolEhkNuKCZqOZqJycpksUZAbflYM71992427 = YSolEhkNuKCZqOZqJycpksUZAbflYM273130;     YSolEhkNuKCZqOZqJycpksUZAbflYM273130 = YSolEhkNuKCZqOZqJycpksUZAbflYM18190444;     YSolEhkNuKCZqOZqJycpksUZAbflYM18190444 = YSolEhkNuKCZqOZqJycpksUZAbflYM90948718;     YSolEhkNuKCZqOZqJycpksUZAbflYM90948718 = YSolEhkNuKCZqOZqJycpksUZAbflYM17931153;     YSolEhkNuKCZqOZqJycpksUZAbflYM17931153 = YSolEhkNuKCZqOZqJycpksUZAbflYM66259825;     YSolEhkNuKCZqOZqJycpksUZAbflYM66259825 = YSolEhkNuKCZqOZqJycpksUZAbflYM80742957;     YSolEhkNuKCZqOZqJycpksUZAbflYM80742957 = YSolEhkNuKCZqOZqJycpksUZAbflYM10340581;     YSolEhkNuKCZqOZqJycpksUZAbflYM10340581 = YSolEhkNuKCZqOZqJycpksUZAbflYM98754069;     YSolEhkNuKCZqOZqJycpksUZAbflYM98754069 = YSolEhkNuKCZqOZqJycpksUZAbflYM7892317;     YSolEhkNuKCZqOZqJycpksUZAbflYM7892317 = YSolEhkNuKCZqOZqJycpksUZAbflYM33624994;     YSolEhkNuKCZqOZqJycpksUZAbflYM33624994 = YSolEhkNuKCZqOZqJycpksUZAbflYM31671709;     YSolEhkNuKCZqOZqJycpksUZAbflYM31671709 = YSolEhkNuKCZqOZqJycpksUZAbflYM43132873;     YSolEhkNuKCZqOZqJycpksUZAbflYM43132873 = YSolEhkNuKCZqOZqJycpksUZAbflYM72051689;     YSolEhkNuKCZqOZqJycpksUZAbflYM72051689 = YSolEhkNuKCZqOZqJycpksUZAbflYM9496939;     YSolEhkNuKCZqOZqJycpksUZAbflYM9496939 = YSolEhkNuKCZqOZqJycpksUZAbflYM44089861;     YSolEhkNuKCZqOZqJycpksUZAbflYM44089861 = YSolEhkNuKCZqOZqJycpksUZAbflYM67507826;     YSolEhkNuKCZqOZqJycpksUZAbflYM67507826 = YSolEhkNuKCZqOZqJycpksUZAbflYM85679573;     YSolEhkNuKCZqOZqJycpksUZAbflYM85679573 = YSolEhkNuKCZqOZqJycpksUZAbflYM40264430;     YSolEhkNuKCZqOZqJycpksUZAbflYM40264430 = YSolEhkNuKCZqOZqJycpksUZAbflYM61890805;     YSolEhkNuKCZqOZqJycpksUZAbflYM61890805 = YSolEhkNuKCZqOZqJycpksUZAbflYM19347795;     YSolEhkNuKCZqOZqJycpksUZAbflYM19347795 = YSolEhkNuKCZqOZqJycpksUZAbflYM55805965;     YSolEhkNuKCZqOZqJycpksUZAbflYM55805965 = YSolEhkNuKCZqOZqJycpksUZAbflYM26577045;     YSolEhkNuKCZqOZqJycpksUZAbflYM26577045 = YSolEhkNuKCZqOZqJycpksUZAbflYM48066241;     YSolEhkNuKCZqOZqJycpksUZAbflYM48066241 = YSolEhkNuKCZqOZqJycpksUZAbflYM56675060;     YSolEhkNuKCZqOZqJycpksUZAbflYM56675060 = YSolEhkNuKCZqOZqJycpksUZAbflYM88589298;     YSolEhkNuKCZqOZqJycpksUZAbflYM88589298 = YSolEhkNuKCZqOZqJycpksUZAbflYM36392842;     YSolEhkNuKCZqOZqJycpksUZAbflYM36392842 = YSolEhkNuKCZqOZqJycpksUZAbflYM9869328;     YSolEhkNuKCZqOZqJycpksUZAbflYM9869328 = YSolEhkNuKCZqOZqJycpksUZAbflYM28597678;     YSolEhkNuKCZqOZqJycpksUZAbflYM28597678 = YSolEhkNuKCZqOZqJycpksUZAbflYM2737148;     YSolEhkNuKCZqOZqJycpksUZAbflYM2737148 = YSolEhkNuKCZqOZqJycpksUZAbflYM69447816;     YSolEhkNuKCZqOZqJycpksUZAbflYM69447816 = YSolEhkNuKCZqOZqJycpksUZAbflYM44672383;     YSolEhkNuKCZqOZqJycpksUZAbflYM44672383 = YSolEhkNuKCZqOZqJycpksUZAbflYM66279063;     YSolEhkNuKCZqOZqJycpksUZAbflYM66279063 = YSolEhkNuKCZqOZqJycpksUZAbflYM25459670;     YSolEhkNuKCZqOZqJycpksUZAbflYM25459670 = YSolEhkNuKCZqOZqJycpksUZAbflYM39975698;     YSolEhkNuKCZqOZqJycpksUZAbflYM39975698 = YSolEhkNuKCZqOZqJycpksUZAbflYM34864565;     YSolEhkNuKCZqOZqJycpksUZAbflYM34864565 = YSolEhkNuKCZqOZqJycpksUZAbflYM92074207;     YSolEhkNuKCZqOZqJycpksUZAbflYM92074207 = YSolEhkNuKCZqOZqJycpksUZAbflYM67553870;     YSolEhkNuKCZqOZqJycpksUZAbflYM67553870 = YSolEhkNuKCZqOZqJycpksUZAbflYM8064659;     YSolEhkNuKCZqOZqJycpksUZAbflYM8064659 = YSolEhkNuKCZqOZqJycpksUZAbflYM95198978;     YSolEhkNuKCZqOZqJycpksUZAbflYM95198978 = YSolEhkNuKCZqOZqJycpksUZAbflYM65864389;     YSolEhkNuKCZqOZqJycpksUZAbflYM65864389 = YSolEhkNuKCZqOZqJycpksUZAbflYM31396884;     YSolEhkNuKCZqOZqJycpksUZAbflYM31396884 = YSolEhkNuKCZqOZqJycpksUZAbflYM537348;     YSolEhkNuKCZqOZqJycpksUZAbflYM537348 = YSolEhkNuKCZqOZqJycpksUZAbflYM49295626;     YSolEhkNuKCZqOZqJycpksUZAbflYM49295626 = YSolEhkNuKCZqOZqJycpksUZAbflYM72700195;     YSolEhkNuKCZqOZqJycpksUZAbflYM72700195 = YSolEhkNuKCZqOZqJycpksUZAbflYM94512247;     YSolEhkNuKCZqOZqJycpksUZAbflYM94512247 = YSolEhkNuKCZqOZqJycpksUZAbflYM67207186;     YSolEhkNuKCZqOZqJycpksUZAbflYM67207186 = YSolEhkNuKCZqOZqJycpksUZAbflYM82139591;     YSolEhkNuKCZqOZqJycpksUZAbflYM82139591 = YSolEhkNuKCZqOZqJycpksUZAbflYM53365596;     YSolEhkNuKCZqOZqJycpksUZAbflYM53365596 = YSolEhkNuKCZqOZqJycpksUZAbflYM54028683;     YSolEhkNuKCZqOZqJycpksUZAbflYM54028683 = YSolEhkNuKCZqOZqJycpksUZAbflYM70287821;     YSolEhkNuKCZqOZqJycpksUZAbflYM70287821 = YSolEhkNuKCZqOZqJycpksUZAbflYM53168892;     YSolEhkNuKCZqOZqJycpksUZAbflYM53168892 = YSolEhkNuKCZqOZqJycpksUZAbflYM56833773;     YSolEhkNuKCZqOZqJycpksUZAbflYM56833773 = YSolEhkNuKCZqOZqJycpksUZAbflYM55296725;     YSolEhkNuKCZqOZqJycpksUZAbflYM55296725 = YSolEhkNuKCZqOZqJycpksUZAbflYM49090717;     YSolEhkNuKCZqOZqJycpksUZAbflYM49090717 = YSolEhkNuKCZqOZqJycpksUZAbflYM16186462;     YSolEhkNuKCZqOZqJycpksUZAbflYM16186462 = YSolEhkNuKCZqOZqJycpksUZAbflYM73696084;     YSolEhkNuKCZqOZqJycpksUZAbflYM73696084 = YSolEhkNuKCZqOZqJycpksUZAbflYM70124203;     YSolEhkNuKCZqOZqJycpksUZAbflYM70124203 = YSolEhkNuKCZqOZqJycpksUZAbflYM34273658;     YSolEhkNuKCZqOZqJycpksUZAbflYM34273658 = YSolEhkNuKCZqOZqJycpksUZAbflYM29341855;     YSolEhkNuKCZqOZqJycpksUZAbflYM29341855 = YSolEhkNuKCZqOZqJycpksUZAbflYM29866984;     YSolEhkNuKCZqOZqJycpksUZAbflYM29866984 = YSolEhkNuKCZqOZqJycpksUZAbflYM70873629;     YSolEhkNuKCZqOZqJycpksUZAbflYM70873629 = YSolEhkNuKCZqOZqJycpksUZAbflYM81742903;     YSolEhkNuKCZqOZqJycpksUZAbflYM81742903 = YSolEhkNuKCZqOZqJycpksUZAbflYM96016921;     YSolEhkNuKCZqOZqJycpksUZAbflYM96016921 = YSolEhkNuKCZqOZqJycpksUZAbflYM38444500;     YSolEhkNuKCZqOZqJycpksUZAbflYM38444500 = YSolEhkNuKCZqOZqJycpksUZAbflYM88952611;     YSolEhkNuKCZqOZqJycpksUZAbflYM88952611 = YSolEhkNuKCZqOZqJycpksUZAbflYM65392646;     YSolEhkNuKCZqOZqJycpksUZAbflYM65392646 = YSolEhkNuKCZqOZqJycpksUZAbflYM17673204;     YSolEhkNuKCZqOZqJycpksUZAbflYM17673204 = YSolEhkNuKCZqOZqJycpksUZAbflYM32075991;     YSolEhkNuKCZqOZqJycpksUZAbflYM32075991 = YSolEhkNuKCZqOZqJycpksUZAbflYM74632374;     YSolEhkNuKCZqOZqJycpksUZAbflYM74632374 = YSolEhkNuKCZqOZqJycpksUZAbflYM52015653;     YSolEhkNuKCZqOZqJycpksUZAbflYM52015653 = YSolEhkNuKCZqOZqJycpksUZAbflYM99953955;     YSolEhkNuKCZqOZqJycpksUZAbflYM99953955 = YSolEhkNuKCZqOZqJycpksUZAbflYM77614915;     YSolEhkNuKCZqOZqJycpksUZAbflYM77614915 = YSolEhkNuKCZqOZqJycpksUZAbflYM45065451;     YSolEhkNuKCZqOZqJycpksUZAbflYM45065451 = YSolEhkNuKCZqOZqJycpksUZAbflYM96026416;     YSolEhkNuKCZqOZqJycpksUZAbflYM96026416 = YSolEhkNuKCZqOZqJycpksUZAbflYM87950910;     YSolEhkNuKCZqOZqJycpksUZAbflYM87950910 = YSolEhkNuKCZqOZqJycpksUZAbflYM55268618;     YSolEhkNuKCZqOZqJycpksUZAbflYM55268618 = YSolEhkNuKCZqOZqJycpksUZAbflYM77281419;     YSolEhkNuKCZqOZqJycpksUZAbflYM77281419 = YSolEhkNuKCZqOZqJycpksUZAbflYM75366046;     YSolEhkNuKCZqOZqJycpksUZAbflYM75366046 = YSolEhkNuKCZqOZqJycpksUZAbflYM62162813;     YSolEhkNuKCZqOZqJycpksUZAbflYM62162813 = YSolEhkNuKCZqOZqJycpksUZAbflYM21382112;     YSolEhkNuKCZqOZqJycpksUZAbflYM21382112 = YSolEhkNuKCZqOZqJycpksUZAbflYM54253250;     YSolEhkNuKCZqOZqJycpksUZAbflYM54253250 = YSolEhkNuKCZqOZqJycpksUZAbflYM56503732;     YSolEhkNuKCZqOZqJycpksUZAbflYM56503732 = YSolEhkNuKCZqOZqJycpksUZAbflYM74568995;     YSolEhkNuKCZqOZqJycpksUZAbflYM74568995 = YSolEhkNuKCZqOZqJycpksUZAbflYM32449326;     YSolEhkNuKCZqOZqJycpksUZAbflYM32449326 = YSolEhkNuKCZqOZqJycpksUZAbflYM16278925;     YSolEhkNuKCZqOZqJycpksUZAbflYM16278925 = YSolEhkNuKCZqOZqJycpksUZAbflYM87838609;     YSolEhkNuKCZqOZqJycpksUZAbflYM87838609 = YSolEhkNuKCZqOZqJycpksUZAbflYM99291416;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void SjVzmzIXslBIraFQGybFCxoeP51342191() {     double XxgfUdViEZoUaRgDlxLsoVEjNtuzRg21113638 = -347409609;    double XxgfUdViEZoUaRgDlxLsoVEjNtuzRg18655747 = -542540372;    double XxgfUdViEZoUaRgDlxLsoVEjNtuzRg52052459 = -785535929;    double XxgfUdViEZoUaRgDlxLsoVEjNtuzRg57559103 = -531930898;    double XxgfUdViEZoUaRgDlxLsoVEjNtuzRg70474390 = -635800869;    double XxgfUdViEZoUaRgDlxLsoVEjNtuzRg78209596 = -645460819;    double XxgfUdViEZoUaRgDlxLsoVEjNtuzRg91883118 = -197367285;    double XxgfUdViEZoUaRgDlxLsoVEjNtuzRg84981172 = -289528906;    double XxgfUdViEZoUaRgDlxLsoVEjNtuzRg34319288 = 59102939;    double XxgfUdViEZoUaRgDlxLsoVEjNtuzRg131692 = -324024605;    double XxgfUdViEZoUaRgDlxLsoVEjNtuzRg68014471 = -506033021;    double XxgfUdViEZoUaRgDlxLsoVEjNtuzRg33369413 = -983819227;    double XxgfUdViEZoUaRgDlxLsoVEjNtuzRg1427454 = -616810369;    double XxgfUdViEZoUaRgDlxLsoVEjNtuzRg38958894 = -429761175;    double XxgfUdViEZoUaRgDlxLsoVEjNtuzRg95530925 = -381968107;    double XxgfUdViEZoUaRgDlxLsoVEjNtuzRg66161169 = -891666935;    double XxgfUdViEZoUaRgDlxLsoVEjNtuzRg84397777 = -519759285;    double XxgfUdViEZoUaRgDlxLsoVEjNtuzRg80456455 = -899577591;    double XxgfUdViEZoUaRgDlxLsoVEjNtuzRg70897049 = -299463134;    double XxgfUdViEZoUaRgDlxLsoVEjNtuzRg61852599 = -660151316;    double XxgfUdViEZoUaRgDlxLsoVEjNtuzRg67494865 = -602627151;    double XxgfUdViEZoUaRgDlxLsoVEjNtuzRg63156047 = -418777771;    double XxgfUdViEZoUaRgDlxLsoVEjNtuzRg17363721 = -983489486;    double XxgfUdViEZoUaRgDlxLsoVEjNtuzRg70902616 = -740002592;    double XxgfUdViEZoUaRgDlxLsoVEjNtuzRg5602376 = -950335657;    double XxgfUdViEZoUaRgDlxLsoVEjNtuzRg32708727 = -284845801;    double XxgfUdViEZoUaRgDlxLsoVEjNtuzRg45088293 = -833584748;    double XxgfUdViEZoUaRgDlxLsoVEjNtuzRg45076764 = -776891063;    double XxgfUdViEZoUaRgDlxLsoVEjNtuzRg91986773 = -935194846;    double XxgfUdViEZoUaRgDlxLsoVEjNtuzRg13324904 = -118145330;    double XxgfUdViEZoUaRgDlxLsoVEjNtuzRg36844839 = -226814757;    double XxgfUdViEZoUaRgDlxLsoVEjNtuzRg59155755 = -76645282;    double XxgfUdViEZoUaRgDlxLsoVEjNtuzRg87210269 = -498782551;    double XxgfUdViEZoUaRgDlxLsoVEjNtuzRg91886911 = -663565612;    double XxgfUdViEZoUaRgDlxLsoVEjNtuzRg36640178 = -551305222;    double XxgfUdViEZoUaRgDlxLsoVEjNtuzRg96154005 = -560069225;    double XxgfUdViEZoUaRgDlxLsoVEjNtuzRg91148497 = -958462802;    double XxgfUdViEZoUaRgDlxLsoVEjNtuzRg60612923 = -333439918;    double XxgfUdViEZoUaRgDlxLsoVEjNtuzRg48969744 = -441683151;    double XxgfUdViEZoUaRgDlxLsoVEjNtuzRg49063487 = -724137826;    double XxgfUdViEZoUaRgDlxLsoVEjNtuzRg64245174 = -346326027;    double XxgfUdViEZoUaRgDlxLsoVEjNtuzRg45099849 = -910398064;    double XxgfUdViEZoUaRgDlxLsoVEjNtuzRg50104547 = 67425404;    double XxgfUdViEZoUaRgDlxLsoVEjNtuzRg17542676 = -487539951;    double XxgfUdViEZoUaRgDlxLsoVEjNtuzRg24588194 = -628458511;    double XxgfUdViEZoUaRgDlxLsoVEjNtuzRg5485543 = 27301003;    double XxgfUdViEZoUaRgDlxLsoVEjNtuzRg51127781 = -173204436;    double XxgfUdViEZoUaRgDlxLsoVEjNtuzRg21815450 = -375020673;    double XxgfUdViEZoUaRgDlxLsoVEjNtuzRg41928657 = -394787006;    double XxgfUdViEZoUaRgDlxLsoVEjNtuzRg8121685 = -932969040;    double XxgfUdViEZoUaRgDlxLsoVEjNtuzRg56015690 = -188413705;    double XxgfUdViEZoUaRgDlxLsoVEjNtuzRg4453322 = -527262466;    double XxgfUdViEZoUaRgDlxLsoVEjNtuzRg86421843 = -280325075;    double XxgfUdViEZoUaRgDlxLsoVEjNtuzRg93889511 = -743034631;    double XxgfUdViEZoUaRgDlxLsoVEjNtuzRg83847325 = -124348595;    double XxgfUdViEZoUaRgDlxLsoVEjNtuzRg57957590 = -928631839;    double XxgfUdViEZoUaRgDlxLsoVEjNtuzRg1292026 = -559050887;    double XxgfUdViEZoUaRgDlxLsoVEjNtuzRg81149843 = 54466663;    double XxgfUdViEZoUaRgDlxLsoVEjNtuzRg51956727 = -581595242;    double XxgfUdViEZoUaRgDlxLsoVEjNtuzRg37765663 = -250955069;    double XxgfUdViEZoUaRgDlxLsoVEjNtuzRg33121303 = -811876072;    double XxgfUdViEZoUaRgDlxLsoVEjNtuzRg46806355 = -420476223;    double XxgfUdViEZoUaRgDlxLsoVEjNtuzRg92994399 = -354334061;    double XxgfUdViEZoUaRgDlxLsoVEjNtuzRg20994384 = -822751731;    double XxgfUdViEZoUaRgDlxLsoVEjNtuzRg63286852 = 2790151;    double XxgfUdViEZoUaRgDlxLsoVEjNtuzRg8858717 = -329387740;    double XxgfUdViEZoUaRgDlxLsoVEjNtuzRg46159143 = -385036676;    double XxgfUdViEZoUaRgDlxLsoVEjNtuzRg9540542 = -953244757;    double XxgfUdViEZoUaRgDlxLsoVEjNtuzRg2318717 = -878455954;    double XxgfUdViEZoUaRgDlxLsoVEjNtuzRg99376920 = -821898883;    double XxgfUdViEZoUaRgDlxLsoVEjNtuzRg75012672 = -933204134;    double XxgfUdViEZoUaRgDlxLsoVEjNtuzRg23784855 = -86319368;    double XxgfUdViEZoUaRgDlxLsoVEjNtuzRg31486712 = -357894441;    double XxgfUdViEZoUaRgDlxLsoVEjNtuzRg21833562 = -575325308;    double XxgfUdViEZoUaRgDlxLsoVEjNtuzRg97607425 = -213825290;    double XxgfUdViEZoUaRgDlxLsoVEjNtuzRg22395017 = -692229088;    double XxgfUdViEZoUaRgDlxLsoVEjNtuzRg13051501 = -386203175;    double XxgfUdViEZoUaRgDlxLsoVEjNtuzRg99821045 = -395949535;    double XxgfUdViEZoUaRgDlxLsoVEjNtuzRg46314422 = -11544081;    double XxgfUdViEZoUaRgDlxLsoVEjNtuzRg116834 = -877636661;    double XxgfUdViEZoUaRgDlxLsoVEjNtuzRg81580945 = -11641365;    double XxgfUdViEZoUaRgDlxLsoVEjNtuzRg23272843 = -358564075;    double XxgfUdViEZoUaRgDlxLsoVEjNtuzRg3148108 = -282104057;    double XxgfUdViEZoUaRgDlxLsoVEjNtuzRg83865089 = 97774194;    double XxgfUdViEZoUaRgDlxLsoVEjNtuzRg57309214 = -929731626;    double XxgfUdViEZoUaRgDlxLsoVEjNtuzRg32391517 = -699552291;    double XxgfUdViEZoUaRgDlxLsoVEjNtuzRg72733912 = -796320207;    double XxgfUdViEZoUaRgDlxLsoVEjNtuzRg93320758 = -755747921;    double XxgfUdViEZoUaRgDlxLsoVEjNtuzRg8039586 = -439217018;    double XxgfUdViEZoUaRgDlxLsoVEjNtuzRg78682588 = -622673384;    double XxgfUdViEZoUaRgDlxLsoVEjNtuzRg94861979 = 98981662;    double XxgfUdViEZoUaRgDlxLsoVEjNtuzRg9998655 = -912929465;    double XxgfUdViEZoUaRgDlxLsoVEjNtuzRg8656196 = -751844677;    double XxgfUdViEZoUaRgDlxLsoVEjNtuzRg11204081 = -90728082;    double XxgfUdViEZoUaRgDlxLsoVEjNtuzRg15942185 = -912261755;    double XxgfUdViEZoUaRgDlxLsoVEjNtuzRg17438820 = -925849805;    double XxgfUdViEZoUaRgDlxLsoVEjNtuzRg52105449 = -456064003;    double XxgfUdViEZoUaRgDlxLsoVEjNtuzRg29110163 = -109822866;    double XxgfUdViEZoUaRgDlxLsoVEjNtuzRg54255823 = -390330103;    double XxgfUdViEZoUaRgDlxLsoVEjNtuzRg15729478 = -347409609;     XxgfUdViEZoUaRgDlxLsoVEjNtuzRg21113638 = XxgfUdViEZoUaRgDlxLsoVEjNtuzRg18655747;     XxgfUdViEZoUaRgDlxLsoVEjNtuzRg18655747 = XxgfUdViEZoUaRgDlxLsoVEjNtuzRg52052459;     XxgfUdViEZoUaRgDlxLsoVEjNtuzRg52052459 = XxgfUdViEZoUaRgDlxLsoVEjNtuzRg57559103;     XxgfUdViEZoUaRgDlxLsoVEjNtuzRg57559103 = XxgfUdViEZoUaRgDlxLsoVEjNtuzRg70474390;     XxgfUdViEZoUaRgDlxLsoVEjNtuzRg70474390 = XxgfUdViEZoUaRgDlxLsoVEjNtuzRg78209596;     XxgfUdViEZoUaRgDlxLsoVEjNtuzRg78209596 = XxgfUdViEZoUaRgDlxLsoVEjNtuzRg91883118;     XxgfUdViEZoUaRgDlxLsoVEjNtuzRg91883118 = XxgfUdViEZoUaRgDlxLsoVEjNtuzRg84981172;     XxgfUdViEZoUaRgDlxLsoVEjNtuzRg84981172 = XxgfUdViEZoUaRgDlxLsoVEjNtuzRg34319288;     XxgfUdViEZoUaRgDlxLsoVEjNtuzRg34319288 = XxgfUdViEZoUaRgDlxLsoVEjNtuzRg131692;     XxgfUdViEZoUaRgDlxLsoVEjNtuzRg131692 = XxgfUdViEZoUaRgDlxLsoVEjNtuzRg68014471;     XxgfUdViEZoUaRgDlxLsoVEjNtuzRg68014471 = XxgfUdViEZoUaRgDlxLsoVEjNtuzRg33369413;     XxgfUdViEZoUaRgDlxLsoVEjNtuzRg33369413 = XxgfUdViEZoUaRgDlxLsoVEjNtuzRg1427454;     XxgfUdViEZoUaRgDlxLsoVEjNtuzRg1427454 = XxgfUdViEZoUaRgDlxLsoVEjNtuzRg38958894;     XxgfUdViEZoUaRgDlxLsoVEjNtuzRg38958894 = XxgfUdViEZoUaRgDlxLsoVEjNtuzRg95530925;     XxgfUdViEZoUaRgDlxLsoVEjNtuzRg95530925 = XxgfUdViEZoUaRgDlxLsoVEjNtuzRg66161169;     XxgfUdViEZoUaRgDlxLsoVEjNtuzRg66161169 = XxgfUdViEZoUaRgDlxLsoVEjNtuzRg84397777;     XxgfUdViEZoUaRgDlxLsoVEjNtuzRg84397777 = XxgfUdViEZoUaRgDlxLsoVEjNtuzRg80456455;     XxgfUdViEZoUaRgDlxLsoVEjNtuzRg80456455 = XxgfUdViEZoUaRgDlxLsoVEjNtuzRg70897049;     XxgfUdViEZoUaRgDlxLsoVEjNtuzRg70897049 = XxgfUdViEZoUaRgDlxLsoVEjNtuzRg61852599;     XxgfUdViEZoUaRgDlxLsoVEjNtuzRg61852599 = XxgfUdViEZoUaRgDlxLsoVEjNtuzRg67494865;     XxgfUdViEZoUaRgDlxLsoVEjNtuzRg67494865 = XxgfUdViEZoUaRgDlxLsoVEjNtuzRg63156047;     XxgfUdViEZoUaRgDlxLsoVEjNtuzRg63156047 = XxgfUdViEZoUaRgDlxLsoVEjNtuzRg17363721;     XxgfUdViEZoUaRgDlxLsoVEjNtuzRg17363721 = XxgfUdViEZoUaRgDlxLsoVEjNtuzRg70902616;     XxgfUdViEZoUaRgDlxLsoVEjNtuzRg70902616 = XxgfUdViEZoUaRgDlxLsoVEjNtuzRg5602376;     XxgfUdViEZoUaRgDlxLsoVEjNtuzRg5602376 = XxgfUdViEZoUaRgDlxLsoVEjNtuzRg32708727;     XxgfUdViEZoUaRgDlxLsoVEjNtuzRg32708727 = XxgfUdViEZoUaRgDlxLsoVEjNtuzRg45088293;     XxgfUdViEZoUaRgDlxLsoVEjNtuzRg45088293 = XxgfUdViEZoUaRgDlxLsoVEjNtuzRg45076764;     XxgfUdViEZoUaRgDlxLsoVEjNtuzRg45076764 = XxgfUdViEZoUaRgDlxLsoVEjNtuzRg91986773;     XxgfUdViEZoUaRgDlxLsoVEjNtuzRg91986773 = XxgfUdViEZoUaRgDlxLsoVEjNtuzRg13324904;     XxgfUdViEZoUaRgDlxLsoVEjNtuzRg13324904 = XxgfUdViEZoUaRgDlxLsoVEjNtuzRg36844839;     XxgfUdViEZoUaRgDlxLsoVEjNtuzRg36844839 = XxgfUdViEZoUaRgDlxLsoVEjNtuzRg59155755;     XxgfUdViEZoUaRgDlxLsoVEjNtuzRg59155755 = XxgfUdViEZoUaRgDlxLsoVEjNtuzRg87210269;     XxgfUdViEZoUaRgDlxLsoVEjNtuzRg87210269 = XxgfUdViEZoUaRgDlxLsoVEjNtuzRg91886911;     XxgfUdViEZoUaRgDlxLsoVEjNtuzRg91886911 = XxgfUdViEZoUaRgDlxLsoVEjNtuzRg36640178;     XxgfUdViEZoUaRgDlxLsoVEjNtuzRg36640178 = XxgfUdViEZoUaRgDlxLsoVEjNtuzRg96154005;     XxgfUdViEZoUaRgDlxLsoVEjNtuzRg96154005 = XxgfUdViEZoUaRgDlxLsoVEjNtuzRg91148497;     XxgfUdViEZoUaRgDlxLsoVEjNtuzRg91148497 = XxgfUdViEZoUaRgDlxLsoVEjNtuzRg60612923;     XxgfUdViEZoUaRgDlxLsoVEjNtuzRg60612923 = XxgfUdViEZoUaRgDlxLsoVEjNtuzRg48969744;     XxgfUdViEZoUaRgDlxLsoVEjNtuzRg48969744 = XxgfUdViEZoUaRgDlxLsoVEjNtuzRg49063487;     XxgfUdViEZoUaRgDlxLsoVEjNtuzRg49063487 = XxgfUdViEZoUaRgDlxLsoVEjNtuzRg64245174;     XxgfUdViEZoUaRgDlxLsoVEjNtuzRg64245174 = XxgfUdViEZoUaRgDlxLsoVEjNtuzRg45099849;     XxgfUdViEZoUaRgDlxLsoVEjNtuzRg45099849 = XxgfUdViEZoUaRgDlxLsoVEjNtuzRg50104547;     XxgfUdViEZoUaRgDlxLsoVEjNtuzRg50104547 = XxgfUdViEZoUaRgDlxLsoVEjNtuzRg17542676;     XxgfUdViEZoUaRgDlxLsoVEjNtuzRg17542676 = XxgfUdViEZoUaRgDlxLsoVEjNtuzRg24588194;     XxgfUdViEZoUaRgDlxLsoVEjNtuzRg24588194 = XxgfUdViEZoUaRgDlxLsoVEjNtuzRg5485543;     XxgfUdViEZoUaRgDlxLsoVEjNtuzRg5485543 = XxgfUdViEZoUaRgDlxLsoVEjNtuzRg51127781;     XxgfUdViEZoUaRgDlxLsoVEjNtuzRg51127781 = XxgfUdViEZoUaRgDlxLsoVEjNtuzRg21815450;     XxgfUdViEZoUaRgDlxLsoVEjNtuzRg21815450 = XxgfUdViEZoUaRgDlxLsoVEjNtuzRg41928657;     XxgfUdViEZoUaRgDlxLsoVEjNtuzRg41928657 = XxgfUdViEZoUaRgDlxLsoVEjNtuzRg8121685;     XxgfUdViEZoUaRgDlxLsoVEjNtuzRg8121685 = XxgfUdViEZoUaRgDlxLsoVEjNtuzRg56015690;     XxgfUdViEZoUaRgDlxLsoVEjNtuzRg56015690 = XxgfUdViEZoUaRgDlxLsoVEjNtuzRg4453322;     XxgfUdViEZoUaRgDlxLsoVEjNtuzRg4453322 = XxgfUdViEZoUaRgDlxLsoVEjNtuzRg86421843;     XxgfUdViEZoUaRgDlxLsoVEjNtuzRg86421843 = XxgfUdViEZoUaRgDlxLsoVEjNtuzRg93889511;     XxgfUdViEZoUaRgDlxLsoVEjNtuzRg93889511 = XxgfUdViEZoUaRgDlxLsoVEjNtuzRg83847325;     XxgfUdViEZoUaRgDlxLsoVEjNtuzRg83847325 = XxgfUdViEZoUaRgDlxLsoVEjNtuzRg57957590;     XxgfUdViEZoUaRgDlxLsoVEjNtuzRg57957590 = XxgfUdViEZoUaRgDlxLsoVEjNtuzRg1292026;     XxgfUdViEZoUaRgDlxLsoVEjNtuzRg1292026 = XxgfUdViEZoUaRgDlxLsoVEjNtuzRg81149843;     XxgfUdViEZoUaRgDlxLsoVEjNtuzRg81149843 = XxgfUdViEZoUaRgDlxLsoVEjNtuzRg51956727;     XxgfUdViEZoUaRgDlxLsoVEjNtuzRg51956727 = XxgfUdViEZoUaRgDlxLsoVEjNtuzRg37765663;     XxgfUdViEZoUaRgDlxLsoVEjNtuzRg37765663 = XxgfUdViEZoUaRgDlxLsoVEjNtuzRg33121303;     XxgfUdViEZoUaRgDlxLsoVEjNtuzRg33121303 = XxgfUdViEZoUaRgDlxLsoVEjNtuzRg46806355;     XxgfUdViEZoUaRgDlxLsoVEjNtuzRg46806355 = XxgfUdViEZoUaRgDlxLsoVEjNtuzRg92994399;     XxgfUdViEZoUaRgDlxLsoVEjNtuzRg92994399 = XxgfUdViEZoUaRgDlxLsoVEjNtuzRg20994384;     XxgfUdViEZoUaRgDlxLsoVEjNtuzRg20994384 = XxgfUdViEZoUaRgDlxLsoVEjNtuzRg63286852;     XxgfUdViEZoUaRgDlxLsoVEjNtuzRg63286852 = XxgfUdViEZoUaRgDlxLsoVEjNtuzRg8858717;     XxgfUdViEZoUaRgDlxLsoVEjNtuzRg8858717 = XxgfUdViEZoUaRgDlxLsoVEjNtuzRg46159143;     XxgfUdViEZoUaRgDlxLsoVEjNtuzRg46159143 = XxgfUdViEZoUaRgDlxLsoVEjNtuzRg9540542;     XxgfUdViEZoUaRgDlxLsoVEjNtuzRg9540542 = XxgfUdViEZoUaRgDlxLsoVEjNtuzRg2318717;     XxgfUdViEZoUaRgDlxLsoVEjNtuzRg2318717 = XxgfUdViEZoUaRgDlxLsoVEjNtuzRg99376920;     XxgfUdViEZoUaRgDlxLsoVEjNtuzRg99376920 = XxgfUdViEZoUaRgDlxLsoVEjNtuzRg75012672;     XxgfUdViEZoUaRgDlxLsoVEjNtuzRg75012672 = XxgfUdViEZoUaRgDlxLsoVEjNtuzRg23784855;     XxgfUdViEZoUaRgDlxLsoVEjNtuzRg23784855 = XxgfUdViEZoUaRgDlxLsoVEjNtuzRg31486712;     XxgfUdViEZoUaRgDlxLsoVEjNtuzRg31486712 = XxgfUdViEZoUaRgDlxLsoVEjNtuzRg21833562;     XxgfUdViEZoUaRgDlxLsoVEjNtuzRg21833562 = XxgfUdViEZoUaRgDlxLsoVEjNtuzRg97607425;     XxgfUdViEZoUaRgDlxLsoVEjNtuzRg97607425 = XxgfUdViEZoUaRgDlxLsoVEjNtuzRg22395017;     XxgfUdViEZoUaRgDlxLsoVEjNtuzRg22395017 = XxgfUdViEZoUaRgDlxLsoVEjNtuzRg13051501;     XxgfUdViEZoUaRgDlxLsoVEjNtuzRg13051501 = XxgfUdViEZoUaRgDlxLsoVEjNtuzRg99821045;     XxgfUdViEZoUaRgDlxLsoVEjNtuzRg99821045 = XxgfUdViEZoUaRgDlxLsoVEjNtuzRg46314422;     XxgfUdViEZoUaRgDlxLsoVEjNtuzRg46314422 = XxgfUdViEZoUaRgDlxLsoVEjNtuzRg116834;     XxgfUdViEZoUaRgDlxLsoVEjNtuzRg116834 = XxgfUdViEZoUaRgDlxLsoVEjNtuzRg81580945;     XxgfUdViEZoUaRgDlxLsoVEjNtuzRg81580945 = XxgfUdViEZoUaRgDlxLsoVEjNtuzRg23272843;     XxgfUdViEZoUaRgDlxLsoVEjNtuzRg23272843 = XxgfUdViEZoUaRgDlxLsoVEjNtuzRg3148108;     XxgfUdViEZoUaRgDlxLsoVEjNtuzRg3148108 = XxgfUdViEZoUaRgDlxLsoVEjNtuzRg83865089;     XxgfUdViEZoUaRgDlxLsoVEjNtuzRg83865089 = XxgfUdViEZoUaRgDlxLsoVEjNtuzRg57309214;     XxgfUdViEZoUaRgDlxLsoVEjNtuzRg57309214 = XxgfUdViEZoUaRgDlxLsoVEjNtuzRg32391517;     XxgfUdViEZoUaRgDlxLsoVEjNtuzRg32391517 = XxgfUdViEZoUaRgDlxLsoVEjNtuzRg72733912;     XxgfUdViEZoUaRgDlxLsoVEjNtuzRg72733912 = XxgfUdViEZoUaRgDlxLsoVEjNtuzRg93320758;     XxgfUdViEZoUaRgDlxLsoVEjNtuzRg93320758 = XxgfUdViEZoUaRgDlxLsoVEjNtuzRg8039586;     XxgfUdViEZoUaRgDlxLsoVEjNtuzRg8039586 = XxgfUdViEZoUaRgDlxLsoVEjNtuzRg78682588;     XxgfUdViEZoUaRgDlxLsoVEjNtuzRg78682588 = XxgfUdViEZoUaRgDlxLsoVEjNtuzRg94861979;     XxgfUdViEZoUaRgDlxLsoVEjNtuzRg94861979 = XxgfUdViEZoUaRgDlxLsoVEjNtuzRg9998655;     XxgfUdViEZoUaRgDlxLsoVEjNtuzRg9998655 = XxgfUdViEZoUaRgDlxLsoVEjNtuzRg8656196;     XxgfUdViEZoUaRgDlxLsoVEjNtuzRg8656196 = XxgfUdViEZoUaRgDlxLsoVEjNtuzRg11204081;     XxgfUdViEZoUaRgDlxLsoVEjNtuzRg11204081 = XxgfUdViEZoUaRgDlxLsoVEjNtuzRg15942185;     XxgfUdViEZoUaRgDlxLsoVEjNtuzRg15942185 = XxgfUdViEZoUaRgDlxLsoVEjNtuzRg17438820;     XxgfUdViEZoUaRgDlxLsoVEjNtuzRg17438820 = XxgfUdViEZoUaRgDlxLsoVEjNtuzRg52105449;     XxgfUdViEZoUaRgDlxLsoVEjNtuzRg52105449 = XxgfUdViEZoUaRgDlxLsoVEjNtuzRg29110163;     XxgfUdViEZoUaRgDlxLsoVEjNtuzRg29110163 = XxgfUdViEZoUaRgDlxLsoVEjNtuzRg54255823;     XxgfUdViEZoUaRgDlxLsoVEjNtuzRg54255823 = XxgfUdViEZoUaRgDlxLsoVEjNtuzRg15729478;     XxgfUdViEZoUaRgDlxLsoVEjNtuzRg15729478 = XxgfUdViEZoUaRgDlxLsoVEjNtuzRg21113638;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void pTdOQfZVdHUQaOIUPFfvVhJbW13189450() {     double FMwwEyjEzNaEiuwZCVWeZimVecKLhu72277720 = -169999952;    double FMwwEyjEzNaEiuwZCVWeZimVecKLhu50022349 = 3908949;    double FMwwEyjEzNaEiuwZCVWeZimVecKLhu19124023 = -347587615;    double FMwwEyjEzNaEiuwZCVWeZimVecKLhu34082823 = -367117515;    double FMwwEyjEzNaEiuwZCVWeZimVecKLhu17998502 = -98000765;    double FMwwEyjEzNaEiuwZCVWeZimVecKLhu47033581 = -654855637;    double FMwwEyjEzNaEiuwZCVWeZimVecKLhu71072144 = 33553834;    double FMwwEyjEzNaEiuwZCVWeZimVecKLhu84215471 = -755069981;    double FMwwEyjEzNaEiuwZCVWeZimVecKLhu67718037 = -646991220;    double FMwwEyjEzNaEiuwZCVWeZimVecKLhu35087970 = -629954523;    double FMwwEyjEzNaEiuwZCVWeZimVecKLhu17002185 = 13639133;    double FMwwEyjEzNaEiuwZCVWeZimVecKLhu18296402 = -506715403;    double FMwwEyjEzNaEiuwZCVWeZimVecKLhu86441923 = -166965574;    double FMwwEyjEzNaEiuwZCVWeZimVecKLhu75922548 = -723962814;    double FMwwEyjEzNaEiuwZCVWeZimVecKLhu53240810 = -121772875;    double FMwwEyjEzNaEiuwZCVWeZimVecKLhu56167803 = -996845540;    double FMwwEyjEzNaEiuwZCVWeZimVecKLhu39846770 = -816013443;    double FMwwEyjEzNaEiuwZCVWeZimVecKLhu45688797 = -129203935;    double FMwwEyjEzNaEiuwZCVWeZimVecKLhu14254762 = -283393116;    double FMwwEyjEzNaEiuwZCVWeZimVecKLhu56249296 = -121054519;    double FMwwEyjEzNaEiuwZCVWeZimVecKLhu49182820 = -136493087;    double FMwwEyjEzNaEiuwZCVWeZimVecKLhu44458527 = -668235513;    double FMwwEyjEzNaEiuwZCVWeZimVecKLhu61769713 = -430631538;    double FMwwEyjEzNaEiuwZCVWeZimVecKLhu17980810 = -338621074;    double FMwwEyjEzNaEiuwZCVWeZimVecKLhu43851344 = -512021795;    double FMwwEyjEzNaEiuwZCVWeZimVecKLhu8261077 = -421952812;    double FMwwEyjEzNaEiuwZCVWeZimVecKLhu80085692 = -266010730;    double FMwwEyjEzNaEiuwZCVWeZimVecKLhu8277890 = -745182516;    double FMwwEyjEzNaEiuwZCVWeZimVecKLhu20419645 = -953852861;    double FMwwEyjEzNaEiuwZCVWeZimVecKLhu96059755 = -711395827;    double FMwwEyjEzNaEiuwZCVWeZimVecKLhu14350787 = -171202053;    double FMwwEyjEzNaEiuwZCVWeZimVecKLhu18259478 = 83941289;    double FMwwEyjEzNaEiuwZCVWeZimVecKLhu15036797 = -496369041;    double FMwwEyjEzNaEiuwZCVWeZimVecKLhu99343891 = -652537288;    double FMwwEyjEzNaEiuwZCVWeZimVecKLhu21808192 = -13490969;    double FMwwEyjEzNaEiuwZCVWeZimVecKLhu48565896 = -575024403;    double FMwwEyjEzNaEiuwZCVWeZimVecKLhu2380636 = -919140069;    double FMwwEyjEzNaEiuwZCVWeZimVecKLhu81675975 = -26132247;    double FMwwEyjEzNaEiuwZCVWeZimVecKLhu66130498 = -971041211;    double FMwwEyjEzNaEiuwZCVWeZimVecKLhu38503728 = -173510151;    double FMwwEyjEzNaEiuwZCVWeZimVecKLhu46403403 = -484390305;    double FMwwEyjEzNaEiuwZCVWeZimVecKLhu18816690 = 77732846;    double FMwwEyjEzNaEiuwZCVWeZimVecKLhu8788346 = -548917613;    double FMwwEyjEzNaEiuwZCVWeZimVecKLhu18361132 = -981335592;    double FMwwEyjEzNaEiuwZCVWeZimVecKLhu92567998 = -979760148;    double FMwwEyjEzNaEiuwZCVWeZimVecKLhu78714155 = -829838743;    double FMwwEyjEzNaEiuwZCVWeZimVecKLhu78362481 = -719422779;    double FMwwEyjEzNaEiuwZCVWeZimVecKLhu13424573 = -270147723;    double FMwwEyjEzNaEiuwZCVWeZimVecKLhu62209686 = -157903321;    double FMwwEyjEzNaEiuwZCVWeZimVecKLhu35787098 = -216040233;    double FMwwEyjEzNaEiuwZCVWeZimVecKLhu89547554 = -264285916;    double FMwwEyjEzNaEiuwZCVWeZimVecKLhu73517738 = -165566573;    double FMwwEyjEzNaEiuwZCVWeZimVecKLhu98017398 = -208176181;    double FMwwEyjEzNaEiuwZCVWeZimVecKLhu41937600 = -805082045;    double FMwwEyjEzNaEiuwZCVWeZimVecKLhu64006629 = -831428707;    double FMwwEyjEzNaEiuwZCVWeZimVecKLhu27819194 = -501764439;    double FMwwEyjEzNaEiuwZCVWeZimVecKLhu88252636 = -565459513;    double FMwwEyjEzNaEiuwZCVWeZimVecKLhu1143214 = 91033459;    double FMwwEyjEzNaEiuwZCVWeZimVecKLhu90231478 = -855095721;    double FMwwEyjEzNaEiuwZCVWeZimVecKLhu9737425 = -676047953;    double FMwwEyjEzNaEiuwZCVWeZimVecKLhu66947889 = -288844908;    double FMwwEyjEzNaEiuwZCVWeZimVecKLhu62794254 = -221263650;    double FMwwEyjEzNaEiuwZCVWeZimVecKLhu63795826 = -801217121;    double FMwwEyjEzNaEiuwZCVWeZimVecKLhu71658281 = -935595393;    double FMwwEyjEzNaEiuwZCVWeZimVecKLhu20737183 = -358752470;    double FMwwEyjEzNaEiuwZCVWeZimVecKLhu98742707 = 29697844;    double FMwwEyjEzNaEiuwZCVWeZimVecKLhu3259605 = 89653638;    double FMwwEyjEzNaEiuwZCVWeZimVecKLhu87098031 = -514428287;    double FMwwEyjEzNaEiuwZCVWeZimVecKLhu54114356 = -610471845;    double FMwwEyjEzNaEiuwZCVWeZimVecKLhu4674915 = -546748472;    double FMwwEyjEzNaEiuwZCVWeZimVecKLhu53787167 = 22294529;    double FMwwEyjEzNaEiuwZCVWeZimVecKLhu58170794 = -689881196;    double FMwwEyjEzNaEiuwZCVWeZimVecKLhu79558299 = -158162724;    double FMwwEyjEzNaEiuwZCVWeZimVecKLhu75751033 = -9882965;    double FMwwEyjEzNaEiuwZCVWeZimVecKLhu9845893 = -636664215;    double FMwwEyjEzNaEiuwZCVWeZimVecKLhu30366131 = -114225933;    double FMwwEyjEzNaEiuwZCVWeZimVecKLhu35670181 = -19317900;    double FMwwEyjEzNaEiuwZCVWeZimVecKLhu43408582 = -449295947;    double FMwwEyjEzNaEiuwZCVWeZimVecKLhu25412811 = -358860927;    double FMwwEyjEzNaEiuwZCVWeZimVecKLhu65137189 = -682183053;    double FMwwEyjEzNaEiuwZCVWeZimVecKLhu29898595 = -702530034;    double FMwwEyjEzNaEiuwZCVWeZimVecKLhu66661120 = -995863008;    double FMwwEyjEzNaEiuwZCVWeZimVecKLhu46068204 = -487279196;    double FMwwEyjEzNaEiuwZCVWeZimVecKLhu84632547 = -637812629;    double FMwwEyjEzNaEiuwZCVWeZimVecKLhu6512202 = -347109911;    double FMwwEyjEzNaEiuwZCVWeZimVecKLhu40833048 = 94364520;    double FMwwEyjEzNaEiuwZCVWeZimVecKLhu20242079 = -707882531;    double FMwwEyjEzNaEiuwZCVWeZimVecKLhu73099197 = -691286996;    double FMwwEyjEzNaEiuwZCVWeZimVecKLhu35337263 = -821108581;    double FMwwEyjEzNaEiuwZCVWeZimVecKLhu93988998 = -511726531;    double FMwwEyjEzNaEiuwZCVWeZimVecKLhu60313260 = 90435110;    double FMwwEyjEzNaEiuwZCVWeZimVecKLhu1237423 = -910173528;    double FMwwEyjEzNaEiuwZCVWeZimVecKLhu91444496 = -171036527;    double FMwwEyjEzNaEiuwZCVWeZimVecKLhu56393073 = -194993258;    double FMwwEyjEzNaEiuwZCVWeZimVecKLhu71555839 = -884665243;    double FMwwEyjEzNaEiuwZCVWeZimVecKLhu83609149 = -163126655;    double FMwwEyjEzNaEiuwZCVWeZimVecKLhu55020863 = -121050034;    double FMwwEyjEzNaEiuwZCVWeZimVecKLhu37130064 = -613322221;    double FMwwEyjEzNaEiuwZCVWeZimVecKLhu97623948 = -522583123;    double FMwwEyjEzNaEiuwZCVWeZimVecKLhu93825291 = -169999952;     FMwwEyjEzNaEiuwZCVWeZimVecKLhu72277720 = FMwwEyjEzNaEiuwZCVWeZimVecKLhu50022349;     FMwwEyjEzNaEiuwZCVWeZimVecKLhu50022349 = FMwwEyjEzNaEiuwZCVWeZimVecKLhu19124023;     FMwwEyjEzNaEiuwZCVWeZimVecKLhu19124023 = FMwwEyjEzNaEiuwZCVWeZimVecKLhu34082823;     FMwwEyjEzNaEiuwZCVWeZimVecKLhu34082823 = FMwwEyjEzNaEiuwZCVWeZimVecKLhu17998502;     FMwwEyjEzNaEiuwZCVWeZimVecKLhu17998502 = FMwwEyjEzNaEiuwZCVWeZimVecKLhu47033581;     FMwwEyjEzNaEiuwZCVWeZimVecKLhu47033581 = FMwwEyjEzNaEiuwZCVWeZimVecKLhu71072144;     FMwwEyjEzNaEiuwZCVWeZimVecKLhu71072144 = FMwwEyjEzNaEiuwZCVWeZimVecKLhu84215471;     FMwwEyjEzNaEiuwZCVWeZimVecKLhu84215471 = FMwwEyjEzNaEiuwZCVWeZimVecKLhu67718037;     FMwwEyjEzNaEiuwZCVWeZimVecKLhu67718037 = FMwwEyjEzNaEiuwZCVWeZimVecKLhu35087970;     FMwwEyjEzNaEiuwZCVWeZimVecKLhu35087970 = FMwwEyjEzNaEiuwZCVWeZimVecKLhu17002185;     FMwwEyjEzNaEiuwZCVWeZimVecKLhu17002185 = FMwwEyjEzNaEiuwZCVWeZimVecKLhu18296402;     FMwwEyjEzNaEiuwZCVWeZimVecKLhu18296402 = FMwwEyjEzNaEiuwZCVWeZimVecKLhu86441923;     FMwwEyjEzNaEiuwZCVWeZimVecKLhu86441923 = FMwwEyjEzNaEiuwZCVWeZimVecKLhu75922548;     FMwwEyjEzNaEiuwZCVWeZimVecKLhu75922548 = FMwwEyjEzNaEiuwZCVWeZimVecKLhu53240810;     FMwwEyjEzNaEiuwZCVWeZimVecKLhu53240810 = FMwwEyjEzNaEiuwZCVWeZimVecKLhu56167803;     FMwwEyjEzNaEiuwZCVWeZimVecKLhu56167803 = FMwwEyjEzNaEiuwZCVWeZimVecKLhu39846770;     FMwwEyjEzNaEiuwZCVWeZimVecKLhu39846770 = FMwwEyjEzNaEiuwZCVWeZimVecKLhu45688797;     FMwwEyjEzNaEiuwZCVWeZimVecKLhu45688797 = FMwwEyjEzNaEiuwZCVWeZimVecKLhu14254762;     FMwwEyjEzNaEiuwZCVWeZimVecKLhu14254762 = FMwwEyjEzNaEiuwZCVWeZimVecKLhu56249296;     FMwwEyjEzNaEiuwZCVWeZimVecKLhu56249296 = FMwwEyjEzNaEiuwZCVWeZimVecKLhu49182820;     FMwwEyjEzNaEiuwZCVWeZimVecKLhu49182820 = FMwwEyjEzNaEiuwZCVWeZimVecKLhu44458527;     FMwwEyjEzNaEiuwZCVWeZimVecKLhu44458527 = FMwwEyjEzNaEiuwZCVWeZimVecKLhu61769713;     FMwwEyjEzNaEiuwZCVWeZimVecKLhu61769713 = FMwwEyjEzNaEiuwZCVWeZimVecKLhu17980810;     FMwwEyjEzNaEiuwZCVWeZimVecKLhu17980810 = FMwwEyjEzNaEiuwZCVWeZimVecKLhu43851344;     FMwwEyjEzNaEiuwZCVWeZimVecKLhu43851344 = FMwwEyjEzNaEiuwZCVWeZimVecKLhu8261077;     FMwwEyjEzNaEiuwZCVWeZimVecKLhu8261077 = FMwwEyjEzNaEiuwZCVWeZimVecKLhu80085692;     FMwwEyjEzNaEiuwZCVWeZimVecKLhu80085692 = FMwwEyjEzNaEiuwZCVWeZimVecKLhu8277890;     FMwwEyjEzNaEiuwZCVWeZimVecKLhu8277890 = FMwwEyjEzNaEiuwZCVWeZimVecKLhu20419645;     FMwwEyjEzNaEiuwZCVWeZimVecKLhu20419645 = FMwwEyjEzNaEiuwZCVWeZimVecKLhu96059755;     FMwwEyjEzNaEiuwZCVWeZimVecKLhu96059755 = FMwwEyjEzNaEiuwZCVWeZimVecKLhu14350787;     FMwwEyjEzNaEiuwZCVWeZimVecKLhu14350787 = FMwwEyjEzNaEiuwZCVWeZimVecKLhu18259478;     FMwwEyjEzNaEiuwZCVWeZimVecKLhu18259478 = FMwwEyjEzNaEiuwZCVWeZimVecKLhu15036797;     FMwwEyjEzNaEiuwZCVWeZimVecKLhu15036797 = FMwwEyjEzNaEiuwZCVWeZimVecKLhu99343891;     FMwwEyjEzNaEiuwZCVWeZimVecKLhu99343891 = FMwwEyjEzNaEiuwZCVWeZimVecKLhu21808192;     FMwwEyjEzNaEiuwZCVWeZimVecKLhu21808192 = FMwwEyjEzNaEiuwZCVWeZimVecKLhu48565896;     FMwwEyjEzNaEiuwZCVWeZimVecKLhu48565896 = FMwwEyjEzNaEiuwZCVWeZimVecKLhu2380636;     FMwwEyjEzNaEiuwZCVWeZimVecKLhu2380636 = FMwwEyjEzNaEiuwZCVWeZimVecKLhu81675975;     FMwwEyjEzNaEiuwZCVWeZimVecKLhu81675975 = FMwwEyjEzNaEiuwZCVWeZimVecKLhu66130498;     FMwwEyjEzNaEiuwZCVWeZimVecKLhu66130498 = FMwwEyjEzNaEiuwZCVWeZimVecKLhu38503728;     FMwwEyjEzNaEiuwZCVWeZimVecKLhu38503728 = FMwwEyjEzNaEiuwZCVWeZimVecKLhu46403403;     FMwwEyjEzNaEiuwZCVWeZimVecKLhu46403403 = FMwwEyjEzNaEiuwZCVWeZimVecKLhu18816690;     FMwwEyjEzNaEiuwZCVWeZimVecKLhu18816690 = FMwwEyjEzNaEiuwZCVWeZimVecKLhu8788346;     FMwwEyjEzNaEiuwZCVWeZimVecKLhu8788346 = FMwwEyjEzNaEiuwZCVWeZimVecKLhu18361132;     FMwwEyjEzNaEiuwZCVWeZimVecKLhu18361132 = FMwwEyjEzNaEiuwZCVWeZimVecKLhu92567998;     FMwwEyjEzNaEiuwZCVWeZimVecKLhu92567998 = FMwwEyjEzNaEiuwZCVWeZimVecKLhu78714155;     FMwwEyjEzNaEiuwZCVWeZimVecKLhu78714155 = FMwwEyjEzNaEiuwZCVWeZimVecKLhu78362481;     FMwwEyjEzNaEiuwZCVWeZimVecKLhu78362481 = FMwwEyjEzNaEiuwZCVWeZimVecKLhu13424573;     FMwwEyjEzNaEiuwZCVWeZimVecKLhu13424573 = FMwwEyjEzNaEiuwZCVWeZimVecKLhu62209686;     FMwwEyjEzNaEiuwZCVWeZimVecKLhu62209686 = FMwwEyjEzNaEiuwZCVWeZimVecKLhu35787098;     FMwwEyjEzNaEiuwZCVWeZimVecKLhu35787098 = FMwwEyjEzNaEiuwZCVWeZimVecKLhu89547554;     FMwwEyjEzNaEiuwZCVWeZimVecKLhu89547554 = FMwwEyjEzNaEiuwZCVWeZimVecKLhu73517738;     FMwwEyjEzNaEiuwZCVWeZimVecKLhu73517738 = FMwwEyjEzNaEiuwZCVWeZimVecKLhu98017398;     FMwwEyjEzNaEiuwZCVWeZimVecKLhu98017398 = FMwwEyjEzNaEiuwZCVWeZimVecKLhu41937600;     FMwwEyjEzNaEiuwZCVWeZimVecKLhu41937600 = FMwwEyjEzNaEiuwZCVWeZimVecKLhu64006629;     FMwwEyjEzNaEiuwZCVWeZimVecKLhu64006629 = FMwwEyjEzNaEiuwZCVWeZimVecKLhu27819194;     FMwwEyjEzNaEiuwZCVWeZimVecKLhu27819194 = FMwwEyjEzNaEiuwZCVWeZimVecKLhu88252636;     FMwwEyjEzNaEiuwZCVWeZimVecKLhu88252636 = FMwwEyjEzNaEiuwZCVWeZimVecKLhu1143214;     FMwwEyjEzNaEiuwZCVWeZimVecKLhu1143214 = FMwwEyjEzNaEiuwZCVWeZimVecKLhu90231478;     FMwwEyjEzNaEiuwZCVWeZimVecKLhu90231478 = FMwwEyjEzNaEiuwZCVWeZimVecKLhu9737425;     FMwwEyjEzNaEiuwZCVWeZimVecKLhu9737425 = FMwwEyjEzNaEiuwZCVWeZimVecKLhu66947889;     FMwwEyjEzNaEiuwZCVWeZimVecKLhu66947889 = FMwwEyjEzNaEiuwZCVWeZimVecKLhu62794254;     FMwwEyjEzNaEiuwZCVWeZimVecKLhu62794254 = FMwwEyjEzNaEiuwZCVWeZimVecKLhu63795826;     FMwwEyjEzNaEiuwZCVWeZimVecKLhu63795826 = FMwwEyjEzNaEiuwZCVWeZimVecKLhu71658281;     FMwwEyjEzNaEiuwZCVWeZimVecKLhu71658281 = FMwwEyjEzNaEiuwZCVWeZimVecKLhu20737183;     FMwwEyjEzNaEiuwZCVWeZimVecKLhu20737183 = FMwwEyjEzNaEiuwZCVWeZimVecKLhu98742707;     FMwwEyjEzNaEiuwZCVWeZimVecKLhu98742707 = FMwwEyjEzNaEiuwZCVWeZimVecKLhu3259605;     FMwwEyjEzNaEiuwZCVWeZimVecKLhu3259605 = FMwwEyjEzNaEiuwZCVWeZimVecKLhu87098031;     FMwwEyjEzNaEiuwZCVWeZimVecKLhu87098031 = FMwwEyjEzNaEiuwZCVWeZimVecKLhu54114356;     FMwwEyjEzNaEiuwZCVWeZimVecKLhu54114356 = FMwwEyjEzNaEiuwZCVWeZimVecKLhu4674915;     FMwwEyjEzNaEiuwZCVWeZimVecKLhu4674915 = FMwwEyjEzNaEiuwZCVWeZimVecKLhu53787167;     FMwwEyjEzNaEiuwZCVWeZimVecKLhu53787167 = FMwwEyjEzNaEiuwZCVWeZimVecKLhu58170794;     FMwwEyjEzNaEiuwZCVWeZimVecKLhu58170794 = FMwwEyjEzNaEiuwZCVWeZimVecKLhu79558299;     FMwwEyjEzNaEiuwZCVWeZimVecKLhu79558299 = FMwwEyjEzNaEiuwZCVWeZimVecKLhu75751033;     FMwwEyjEzNaEiuwZCVWeZimVecKLhu75751033 = FMwwEyjEzNaEiuwZCVWeZimVecKLhu9845893;     FMwwEyjEzNaEiuwZCVWeZimVecKLhu9845893 = FMwwEyjEzNaEiuwZCVWeZimVecKLhu30366131;     FMwwEyjEzNaEiuwZCVWeZimVecKLhu30366131 = FMwwEyjEzNaEiuwZCVWeZimVecKLhu35670181;     FMwwEyjEzNaEiuwZCVWeZimVecKLhu35670181 = FMwwEyjEzNaEiuwZCVWeZimVecKLhu43408582;     FMwwEyjEzNaEiuwZCVWeZimVecKLhu43408582 = FMwwEyjEzNaEiuwZCVWeZimVecKLhu25412811;     FMwwEyjEzNaEiuwZCVWeZimVecKLhu25412811 = FMwwEyjEzNaEiuwZCVWeZimVecKLhu65137189;     FMwwEyjEzNaEiuwZCVWeZimVecKLhu65137189 = FMwwEyjEzNaEiuwZCVWeZimVecKLhu29898595;     FMwwEyjEzNaEiuwZCVWeZimVecKLhu29898595 = FMwwEyjEzNaEiuwZCVWeZimVecKLhu66661120;     FMwwEyjEzNaEiuwZCVWeZimVecKLhu66661120 = FMwwEyjEzNaEiuwZCVWeZimVecKLhu46068204;     FMwwEyjEzNaEiuwZCVWeZimVecKLhu46068204 = FMwwEyjEzNaEiuwZCVWeZimVecKLhu84632547;     FMwwEyjEzNaEiuwZCVWeZimVecKLhu84632547 = FMwwEyjEzNaEiuwZCVWeZimVecKLhu6512202;     FMwwEyjEzNaEiuwZCVWeZimVecKLhu6512202 = FMwwEyjEzNaEiuwZCVWeZimVecKLhu40833048;     FMwwEyjEzNaEiuwZCVWeZimVecKLhu40833048 = FMwwEyjEzNaEiuwZCVWeZimVecKLhu20242079;     FMwwEyjEzNaEiuwZCVWeZimVecKLhu20242079 = FMwwEyjEzNaEiuwZCVWeZimVecKLhu73099197;     FMwwEyjEzNaEiuwZCVWeZimVecKLhu73099197 = FMwwEyjEzNaEiuwZCVWeZimVecKLhu35337263;     FMwwEyjEzNaEiuwZCVWeZimVecKLhu35337263 = FMwwEyjEzNaEiuwZCVWeZimVecKLhu93988998;     FMwwEyjEzNaEiuwZCVWeZimVecKLhu93988998 = FMwwEyjEzNaEiuwZCVWeZimVecKLhu60313260;     FMwwEyjEzNaEiuwZCVWeZimVecKLhu60313260 = FMwwEyjEzNaEiuwZCVWeZimVecKLhu1237423;     FMwwEyjEzNaEiuwZCVWeZimVecKLhu1237423 = FMwwEyjEzNaEiuwZCVWeZimVecKLhu91444496;     FMwwEyjEzNaEiuwZCVWeZimVecKLhu91444496 = FMwwEyjEzNaEiuwZCVWeZimVecKLhu56393073;     FMwwEyjEzNaEiuwZCVWeZimVecKLhu56393073 = FMwwEyjEzNaEiuwZCVWeZimVecKLhu71555839;     FMwwEyjEzNaEiuwZCVWeZimVecKLhu71555839 = FMwwEyjEzNaEiuwZCVWeZimVecKLhu83609149;     FMwwEyjEzNaEiuwZCVWeZimVecKLhu83609149 = FMwwEyjEzNaEiuwZCVWeZimVecKLhu55020863;     FMwwEyjEzNaEiuwZCVWeZimVecKLhu55020863 = FMwwEyjEzNaEiuwZCVWeZimVecKLhu37130064;     FMwwEyjEzNaEiuwZCVWeZimVecKLhu37130064 = FMwwEyjEzNaEiuwZCVWeZimVecKLhu97623948;     FMwwEyjEzNaEiuwZCVWeZimVecKLhu97623948 = FMwwEyjEzNaEiuwZCVWeZimVecKLhu93825291;     FMwwEyjEzNaEiuwZCVWeZimVecKLhu93825291 = FMwwEyjEzNaEiuwZCVWeZimVecKLhu72277720;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void LrudfDjYJEGMItiLZdEahCrKV22794176() {     double bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk94099941 = -738215284;    double bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk11490154 = -378689904;    double bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk64851293 = -394805147;    double bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk65457968 = -571901691;    double bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk78132832 = 24748313;    double bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk71051897 = -666398795;    double bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk92729 = -29764289;    double bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk71078100 = -763250830;    double bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk64241677 = -632786638;    double bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk96371195 = -500172920;    double bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk87918453 = -642118569;    double bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk34478285 = -609897009;    double bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk19430866 = -704999363;    double bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk42889015 = -474039611;    double bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk48498606 = -48614794;    double bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk4138529 = -339212081;    double bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk33295829 = -101838161;    double bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk8214101 = -50924852;    double bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk18891985 = -356528773;    double bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk37358938 = -612299575;    double bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk6337106 = -968571789;    double bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk8860506 = -738986678;    double bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk71241118 = 13341107;    double bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk55258431 = -748719939;    double bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk17782011 = -422918767;    double bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk97836930 = -749138340;    double bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk53122296 = -892814775;    double bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk43857715 = -609630749;    double bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk68316558 = -620798779;    double bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk41876833 = 12389979;    double bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk65516052 = -576929800;    double bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk37150803 = -791947542;    double bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk40356261 = -238972924;    double bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk71883008 = -328356915;    double bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk2642405 = -163309572;    double bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk18142856 = -589440383;    double bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk45462892 = -968757166;    double bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk85613837 = -607675005;    double bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk26510944 = -743446491;    double bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk51174374 = -631059152;    double bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk779250 = -918529563;    double bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk35318861 = -709733232;    double bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk56155744 = -592884428;    double bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk66455990 = -890141761;    double bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk72483809 = -66448777;    double bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk17920634 = -533270973;    double bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk4030593 = -900430299;    double bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk95264324 = -8643711;    double bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk69273778 = -343019743;    double bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk51834574 = -195095418;    double bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk78009373 = -308175242;    double bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk69906402 = -490944654;    double bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk89240263 = -171771321;    double bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk69962722 = -996091104;    double bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk16457071 = -792550457;    double bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk85239436 = -999228607;    double bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk40249036 = -292031011;    double bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk9592862 = -646085208;    double bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk47675958 = -48982924;    double bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk80295902 = -226113347;    double bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk17929601 = -773584021;    double bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk56235013 = -420133541;    double bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk2761543 = -42452051;    double bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk22364844 = -545176617;    double bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk30855143 = -923243120;    double bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk50767650 = -850171028;    double bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk94122023 = -270924086;    double bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk47547857 = -276642449;    double bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk40246611 = -210730040;    double bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk30355750 = -459174411;    double bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk58675636 = -370454915;    double bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk47681991 = -494163157;    double bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk81703156 = -307478361;    double bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk67717611 = -725469621;    double bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk36579689 = -693770013;    double bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk71018245 = -158838558;    double bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk52704761 = -46102250;    double bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk4785128 = -96517133;    double bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk82774622 = -582271163;    double bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk99861376 = -889647795;    double bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk93806337 = -848708042;    double bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk57857972 = -784171064;    double bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk74583937 = -166611006;    double bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk16481984 = -325703362;    double bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk63867459 = -679434780;    double bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk95609649 = 14014853;    double bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk47910540 = -520176222;    double bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk70393539 = -242881820;    double bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk55425938 = -535806459;    double bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk17402969 = -164080966;    double bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk77893820 = -197409372;    double bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk35870031 = -222671958;    double bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk37937880 = -458692081;    double bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk46215042 = -417333145;    double bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk33244773 = -857475131;    double bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk44544236 = -398396022;    double bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk32557318 = -567281181;    double bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk33790901 = 52292188;    double bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk35600848 = -966898642;    double bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk21716160 = -738215284;     bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk94099941 = bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk11490154;     bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk11490154 = bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk64851293;     bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk64851293 = bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk65457968;     bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk65457968 = bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk78132832;     bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk78132832 = bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk71051897;     bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk71051897 = bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk92729;     bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk92729 = bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk71078100;     bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk71078100 = bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk64241677;     bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk64241677 = bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk96371195;     bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk96371195 = bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk87918453;     bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk87918453 = bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk34478285;     bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk34478285 = bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk19430866;     bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk19430866 = bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk42889015;     bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk42889015 = bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk48498606;     bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk48498606 = bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk4138529;     bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk4138529 = bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk33295829;     bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk33295829 = bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk8214101;     bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk8214101 = bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk18891985;     bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk18891985 = bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk37358938;     bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk37358938 = bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk6337106;     bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk6337106 = bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk8860506;     bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk8860506 = bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk71241118;     bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk71241118 = bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk55258431;     bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk55258431 = bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk17782011;     bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk17782011 = bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk97836930;     bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk97836930 = bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk53122296;     bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk53122296 = bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk43857715;     bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk43857715 = bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk68316558;     bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk68316558 = bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk41876833;     bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk41876833 = bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk65516052;     bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk65516052 = bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk37150803;     bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk37150803 = bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk40356261;     bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk40356261 = bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk71883008;     bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk71883008 = bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk2642405;     bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk2642405 = bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk18142856;     bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk18142856 = bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk45462892;     bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk45462892 = bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk85613837;     bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk85613837 = bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk26510944;     bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk26510944 = bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk51174374;     bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk51174374 = bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk779250;     bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk779250 = bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk35318861;     bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk35318861 = bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk56155744;     bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk56155744 = bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk66455990;     bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk66455990 = bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk72483809;     bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk72483809 = bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk17920634;     bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk17920634 = bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk4030593;     bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk4030593 = bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk95264324;     bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk95264324 = bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk69273778;     bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk69273778 = bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk51834574;     bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk51834574 = bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk78009373;     bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk78009373 = bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk69906402;     bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk69906402 = bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk89240263;     bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk89240263 = bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk69962722;     bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk69962722 = bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk16457071;     bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk16457071 = bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk85239436;     bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk85239436 = bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk40249036;     bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk40249036 = bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk9592862;     bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk9592862 = bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk47675958;     bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk47675958 = bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk80295902;     bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk80295902 = bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk17929601;     bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk17929601 = bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk56235013;     bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk56235013 = bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk2761543;     bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk2761543 = bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk22364844;     bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk22364844 = bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk30855143;     bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk30855143 = bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk50767650;     bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk50767650 = bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk94122023;     bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk94122023 = bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk47547857;     bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk47547857 = bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk40246611;     bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk40246611 = bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk30355750;     bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk30355750 = bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk58675636;     bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk58675636 = bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk47681991;     bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk47681991 = bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk81703156;     bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk81703156 = bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk67717611;     bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk67717611 = bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk36579689;     bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk36579689 = bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk71018245;     bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk71018245 = bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk52704761;     bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk52704761 = bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk4785128;     bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk4785128 = bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk82774622;     bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk82774622 = bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk99861376;     bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk99861376 = bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk93806337;     bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk93806337 = bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk57857972;     bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk57857972 = bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk74583937;     bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk74583937 = bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk16481984;     bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk16481984 = bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk63867459;     bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk63867459 = bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk95609649;     bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk95609649 = bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk47910540;     bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk47910540 = bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk70393539;     bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk70393539 = bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk55425938;     bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk55425938 = bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk17402969;     bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk17402969 = bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk77893820;     bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk77893820 = bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk35870031;     bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk35870031 = bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk37937880;     bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk37937880 = bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk46215042;     bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk46215042 = bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk33244773;     bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk33244773 = bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk44544236;     bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk44544236 = bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk32557318;     bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk32557318 = bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk33790901;     bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk33790901 = bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk35600848;     bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk35600848 = bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk21716160;     bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk21716160 = bLmHiyuWJEQHnOjUOLfmQFsqAmlOwk94099941;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void ucJRvJgavOAHAfttPLpywjbvx84641434() {     double hCdGHticddNoDOSrFcmZcTiWuATlZj45264024 = -560805627;    double hCdGHticddNoDOSrFcmZcTiWuATlZj42856756 = -932240583;    double hCdGHticddNoDOSrFcmZcTiWuATlZj31922857 = 43143168;    double hCdGHticddNoDOSrFcmZcTiWuATlZj41981689 = -407088308;    double hCdGHticddNoDOSrFcmZcTiWuATlZj25656945 = -537451583;    double hCdGHticddNoDOSrFcmZcTiWuATlZj39875883 = -675793614;    double hCdGHticddNoDOSrFcmZcTiWuATlZj79281753 = -898843170;    double hCdGHticddNoDOSrFcmZcTiWuATlZj70312399 = -128791905;    double hCdGHticddNoDOSrFcmZcTiWuATlZj97640426 = -238880797;    double hCdGHticddNoDOSrFcmZcTiWuATlZj31327474 = -806102838;    double hCdGHticddNoDOSrFcmZcTiWuATlZj36906166 = -122446415;    double hCdGHticddNoDOSrFcmZcTiWuATlZj19405274 = -132793185;    double hCdGHticddNoDOSrFcmZcTiWuATlZj4445336 = -255154568;    double hCdGHticddNoDOSrFcmZcTiWuATlZj79852669 = -768241250;    double hCdGHticddNoDOSrFcmZcTiWuATlZj6208491 = -888419561;    double hCdGHticddNoDOSrFcmZcTiWuATlZj94145161 = -444390685;    double hCdGHticddNoDOSrFcmZcTiWuATlZj88744821 = -398092319;    double hCdGHticddNoDOSrFcmZcTiWuATlZj73446442 = -380551195;    double hCdGHticddNoDOSrFcmZcTiWuATlZj62249697 = -340458754;    double hCdGHticddNoDOSrFcmZcTiWuATlZj31755635 = -73202777;    double hCdGHticddNoDOSrFcmZcTiWuATlZj88025060 = -502437725;    double hCdGHticddNoDOSrFcmZcTiWuATlZj90162984 = -988444420;    double hCdGHticddNoDOSrFcmZcTiWuATlZj15647110 = -533800946;    double hCdGHticddNoDOSrFcmZcTiWuATlZj2336625 = -347338421;    double hCdGHticddNoDOSrFcmZcTiWuATlZj56030979 = 15395095;    double hCdGHticddNoDOSrFcmZcTiWuATlZj73389281 = -886245352;    double hCdGHticddNoDOSrFcmZcTiWuATlZj88119696 = -325240757;    double hCdGHticddNoDOSrFcmZcTiWuATlZj7058841 = -577922203;    double hCdGHticddNoDOSrFcmZcTiWuATlZj96749429 = -639456795;    double hCdGHticddNoDOSrFcmZcTiWuATlZj24611685 = -580860519;    double hCdGHticddNoDOSrFcmZcTiWuATlZj43022000 = -521317097;    double hCdGHticddNoDOSrFcmZcTiWuATlZj96254525 = -631360971;    double hCdGHticddNoDOSrFcmZcTiWuATlZj68182788 = -236559414;    double hCdGHticddNoDOSrFcmZcTiWuATlZj79339988 = -317328591;    double hCdGHticddNoDOSrFcmZcTiWuATlZj87810419 = -725495319;    double hCdGHticddNoDOSrFcmZcTiWuATlZj70554746 = -604395561;    double hCdGHticddNoDOSrFcmZcTiWuATlZj56695031 = -929434433;    double hCdGHticddNoDOSrFcmZcTiWuATlZj6676891 = -300367334;    double hCdGHticddNoDOSrFcmZcTiWuATlZj43671698 = -172804551;    double hCdGHticddNoDOSrFcmZcTiWuATlZj40614614 = -80431476;    double hCdGHticddNoDOSrFcmZcTiWuATlZj82937479 = 43406160;    double hCdGHticddNoDOSrFcmZcTiWuATlZj9035702 = -821602322;    double hCdGHticddNoDOSrFcmZcTiWuATlZj14839544 = -109227445;    double hCdGHticddNoDOSrFcmZcTiWuATlZj67274447 = -283937402;    double hCdGHticddNoDOSrFcmZcTiWuATlZj40463614 = -417750413;    double hCdGHticddNoDOSrFcmZcTiWuATlZj91149246 = -290410719;    double hCdGHticddNoDOSrFcmZcTiWuATlZj31265294 = -346648642;    double hCdGHticddNoDOSrFcmZcTiWuATlZj86873447 = 96229239;    double hCdGHticddNoDOSrFcmZcTiWuATlZj89554807 = -106136058;    double hCdGHticddNoDOSrFcmZcTiWuATlZj79499987 = -578166610;    double hCdGHticddNoDOSrFcmZcTiWuATlZj11541239 = -384047454;    double hCdGHticddNoDOSrFcmZcTiWuATlZj38970819 = -129248761;    double hCdGHticddNoDOSrFcmZcTiWuATlZj835819 = -99622426;    double hCdGHticddNoDOSrFcmZcTiWuATlZj18010811 = 41861481;    double hCdGHticddNoDOSrFcmZcTiWuATlZj96616373 = -399630569;    double hCdGHticddNoDOSrFcmZcTiWuATlZj55101040 = -572361207;    double hCdGHticddNoDOSrFcmZcTiWuATlZj27209646 = -298439637;    double hCdGHticddNoDOSrFcmZcTiWuATlZj29586232 = -609518412;    double hCdGHticddNoDOSrFcmZcTiWuATlZj85950709 = -322483403;    double hCdGHticddNoDOSrFcmZcTiWuATlZj52267663 = -651206231;    double hCdGHticddNoDOSrFcmZcTiWuATlZj51756186 = -250552858;    double hCdGHticddNoDOSrFcmZcTiWuATlZj72222913 = -220920968;    double hCdGHticddNoDOSrFcmZcTiWuATlZj73562970 = -489335110;    double hCdGHticddNoDOSrFcmZcTiWuATlZj73028741 = -658020279;    double hCdGHticddNoDOSrFcmZcTiWuATlZj88305474 = -184785742;    double hCdGHticddNoDOSrFcmZcTiWuATlZj40651641 = -491085444;    double hCdGHticddNoDOSrFcmZcTiWuATlZj51222485 = -896233772;    double hCdGHticddNoDOSrFcmZcTiWuATlZj25105347 = -937825978;    double hCdGHticddNoDOSrFcmZcTiWuATlZj92042250 = 57254069;    double hCdGHticddNoDOSrFcmZcTiWuATlZj35653745 = -184024001;    double hCdGHticddNoDOSrFcmZcTiWuATlZj37450131 = -514956253;    double hCdGHticddNoDOSrFcmZcTiWuATlZj82067930 = 2275014;    double hCdGHticddNoDOSrFcmZcTiWuATlZj29774744 = -107746645;    double hCdGHticddNoDOSrFcmZcTiWuATlZj21635083 = -160027278;    double hCdGHticddNoDOSrFcmZcTiWuATlZj48818155 = -16608937;    double hCdGHticddNoDOSrFcmZcTiWuATlZj78989359 = -680835404;    double hCdGHticddNoDOSrFcmZcTiWuATlZj75323441 = -779216975;    double hCdGHticddNoDOSrFcmZcTiWuATlZj48372663 = -149863544;    double hCdGHticddNoDOSrFcmZcTiWuATlZj61873010 = -929588008;    double hCdGHticddNoDOSrFcmZcTiWuATlZj64881732 = -694194187;    double hCdGHticddNoDOSrFcmZcTiWuATlZj42123987 = -439596710;    double hCdGHticddNoDOSrFcmZcTiWuATlZj1246249 = -321469997;    double hCdGHticddNoDOSrFcmZcTiWuATlZj17504033 = -371786145;    double hCdGHticddNoDOSrFcmZcTiWuATlZj17249443 = 38709815;    double hCdGHticddNoDOSrFcmZcTiWuATlZj13070447 = -96813065;    double hCdGHticddNoDOSrFcmZcTiWuATlZj4051181 = -292068336;    double hCdGHticddNoDOSrFcmZcTiWuATlZj95418706 = -431738545;    double hCdGHticddNoDOSrFcmZcTiWuATlZj50171978 = -178420896;    double hCdGHticddNoDOSrFcmZcTiWuATlZj82723614 = -917698022;    double hCdGHticddNoDOSrFcmZcTiWuATlZj32709380 = -53134113;    double hCdGHticddNoDOSrFcmZcTiWuATlZj43345100 = -205955924;    double hCdGHticddNoDOSrFcmZcTiWuATlZj27108799 = -219916022;    double hCdGHticddNoDOSrFcmZcTiWuATlZj20726181 = -977883931;    double hCdGHticddNoDOSrFcmZcTiWuATlZj91404034 = -521598321;    double hCdGHticddNoDOSrFcmZcTiWuATlZj88858427 = -829878619;    double hCdGHticddNoDOSrFcmZcTiWuATlZj10714567 = -735672873;    double hCdGHticddNoDOSrFcmZcTiWuATlZj35472731 = -232267212;    double hCdGHticddNoDOSrFcmZcTiWuATlZj41810802 = -451207167;    double hCdGHticddNoDOSrFcmZcTiWuATlZj78968973 = 848339;    double hCdGHticddNoDOSrFcmZcTiWuATlZj99811973 = -560805627;     hCdGHticddNoDOSrFcmZcTiWuATlZj45264024 = hCdGHticddNoDOSrFcmZcTiWuATlZj42856756;     hCdGHticddNoDOSrFcmZcTiWuATlZj42856756 = hCdGHticddNoDOSrFcmZcTiWuATlZj31922857;     hCdGHticddNoDOSrFcmZcTiWuATlZj31922857 = hCdGHticddNoDOSrFcmZcTiWuATlZj41981689;     hCdGHticddNoDOSrFcmZcTiWuATlZj41981689 = hCdGHticddNoDOSrFcmZcTiWuATlZj25656945;     hCdGHticddNoDOSrFcmZcTiWuATlZj25656945 = hCdGHticddNoDOSrFcmZcTiWuATlZj39875883;     hCdGHticddNoDOSrFcmZcTiWuATlZj39875883 = hCdGHticddNoDOSrFcmZcTiWuATlZj79281753;     hCdGHticddNoDOSrFcmZcTiWuATlZj79281753 = hCdGHticddNoDOSrFcmZcTiWuATlZj70312399;     hCdGHticddNoDOSrFcmZcTiWuATlZj70312399 = hCdGHticddNoDOSrFcmZcTiWuATlZj97640426;     hCdGHticddNoDOSrFcmZcTiWuATlZj97640426 = hCdGHticddNoDOSrFcmZcTiWuATlZj31327474;     hCdGHticddNoDOSrFcmZcTiWuATlZj31327474 = hCdGHticddNoDOSrFcmZcTiWuATlZj36906166;     hCdGHticddNoDOSrFcmZcTiWuATlZj36906166 = hCdGHticddNoDOSrFcmZcTiWuATlZj19405274;     hCdGHticddNoDOSrFcmZcTiWuATlZj19405274 = hCdGHticddNoDOSrFcmZcTiWuATlZj4445336;     hCdGHticddNoDOSrFcmZcTiWuATlZj4445336 = hCdGHticddNoDOSrFcmZcTiWuATlZj79852669;     hCdGHticddNoDOSrFcmZcTiWuATlZj79852669 = hCdGHticddNoDOSrFcmZcTiWuATlZj6208491;     hCdGHticddNoDOSrFcmZcTiWuATlZj6208491 = hCdGHticddNoDOSrFcmZcTiWuATlZj94145161;     hCdGHticddNoDOSrFcmZcTiWuATlZj94145161 = hCdGHticddNoDOSrFcmZcTiWuATlZj88744821;     hCdGHticddNoDOSrFcmZcTiWuATlZj88744821 = hCdGHticddNoDOSrFcmZcTiWuATlZj73446442;     hCdGHticddNoDOSrFcmZcTiWuATlZj73446442 = hCdGHticddNoDOSrFcmZcTiWuATlZj62249697;     hCdGHticddNoDOSrFcmZcTiWuATlZj62249697 = hCdGHticddNoDOSrFcmZcTiWuATlZj31755635;     hCdGHticddNoDOSrFcmZcTiWuATlZj31755635 = hCdGHticddNoDOSrFcmZcTiWuATlZj88025060;     hCdGHticddNoDOSrFcmZcTiWuATlZj88025060 = hCdGHticddNoDOSrFcmZcTiWuATlZj90162984;     hCdGHticddNoDOSrFcmZcTiWuATlZj90162984 = hCdGHticddNoDOSrFcmZcTiWuATlZj15647110;     hCdGHticddNoDOSrFcmZcTiWuATlZj15647110 = hCdGHticddNoDOSrFcmZcTiWuATlZj2336625;     hCdGHticddNoDOSrFcmZcTiWuATlZj2336625 = hCdGHticddNoDOSrFcmZcTiWuATlZj56030979;     hCdGHticddNoDOSrFcmZcTiWuATlZj56030979 = hCdGHticddNoDOSrFcmZcTiWuATlZj73389281;     hCdGHticddNoDOSrFcmZcTiWuATlZj73389281 = hCdGHticddNoDOSrFcmZcTiWuATlZj88119696;     hCdGHticddNoDOSrFcmZcTiWuATlZj88119696 = hCdGHticddNoDOSrFcmZcTiWuATlZj7058841;     hCdGHticddNoDOSrFcmZcTiWuATlZj7058841 = hCdGHticddNoDOSrFcmZcTiWuATlZj96749429;     hCdGHticddNoDOSrFcmZcTiWuATlZj96749429 = hCdGHticddNoDOSrFcmZcTiWuATlZj24611685;     hCdGHticddNoDOSrFcmZcTiWuATlZj24611685 = hCdGHticddNoDOSrFcmZcTiWuATlZj43022000;     hCdGHticddNoDOSrFcmZcTiWuATlZj43022000 = hCdGHticddNoDOSrFcmZcTiWuATlZj96254525;     hCdGHticddNoDOSrFcmZcTiWuATlZj96254525 = hCdGHticddNoDOSrFcmZcTiWuATlZj68182788;     hCdGHticddNoDOSrFcmZcTiWuATlZj68182788 = hCdGHticddNoDOSrFcmZcTiWuATlZj79339988;     hCdGHticddNoDOSrFcmZcTiWuATlZj79339988 = hCdGHticddNoDOSrFcmZcTiWuATlZj87810419;     hCdGHticddNoDOSrFcmZcTiWuATlZj87810419 = hCdGHticddNoDOSrFcmZcTiWuATlZj70554746;     hCdGHticddNoDOSrFcmZcTiWuATlZj70554746 = hCdGHticddNoDOSrFcmZcTiWuATlZj56695031;     hCdGHticddNoDOSrFcmZcTiWuATlZj56695031 = hCdGHticddNoDOSrFcmZcTiWuATlZj6676891;     hCdGHticddNoDOSrFcmZcTiWuATlZj6676891 = hCdGHticddNoDOSrFcmZcTiWuATlZj43671698;     hCdGHticddNoDOSrFcmZcTiWuATlZj43671698 = hCdGHticddNoDOSrFcmZcTiWuATlZj40614614;     hCdGHticddNoDOSrFcmZcTiWuATlZj40614614 = hCdGHticddNoDOSrFcmZcTiWuATlZj82937479;     hCdGHticddNoDOSrFcmZcTiWuATlZj82937479 = hCdGHticddNoDOSrFcmZcTiWuATlZj9035702;     hCdGHticddNoDOSrFcmZcTiWuATlZj9035702 = hCdGHticddNoDOSrFcmZcTiWuATlZj14839544;     hCdGHticddNoDOSrFcmZcTiWuATlZj14839544 = hCdGHticddNoDOSrFcmZcTiWuATlZj67274447;     hCdGHticddNoDOSrFcmZcTiWuATlZj67274447 = hCdGHticddNoDOSrFcmZcTiWuATlZj40463614;     hCdGHticddNoDOSrFcmZcTiWuATlZj40463614 = hCdGHticddNoDOSrFcmZcTiWuATlZj91149246;     hCdGHticddNoDOSrFcmZcTiWuATlZj91149246 = hCdGHticddNoDOSrFcmZcTiWuATlZj31265294;     hCdGHticddNoDOSrFcmZcTiWuATlZj31265294 = hCdGHticddNoDOSrFcmZcTiWuATlZj86873447;     hCdGHticddNoDOSrFcmZcTiWuATlZj86873447 = hCdGHticddNoDOSrFcmZcTiWuATlZj89554807;     hCdGHticddNoDOSrFcmZcTiWuATlZj89554807 = hCdGHticddNoDOSrFcmZcTiWuATlZj79499987;     hCdGHticddNoDOSrFcmZcTiWuATlZj79499987 = hCdGHticddNoDOSrFcmZcTiWuATlZj11541239;     hCdGHticddNoDOSrFcmZcTiWuATlZj11541239 = hCdGHticddNoDOSrFcmZcTiWuATlZj38970819;     hCdGHticddNoDOSrFcmZcTiWuATlZj38970819 = hCdGHticddNoDOSrFcmZcTiWuATlZj835819;     hCdGHticddNoDOSrFcmZcTiWuATlZj835819 = hCdGHticddNoDOSrFcmZcTiWuATlZj18010811;     hCdGHticddNoDOSrFcmZcTiWuATlZj18010811 = hCdGHticddNoDOSrFcmZcTiWuATlZj96616373;     hCdGHticddNoDOSrFcmZcTiWuATlZj96616373 = hCdGHticddNoDOSrFcmZcTiWuATlZj55101040;     hCdGHticddNoDOSrFcmZcTiWuATlZj55101040 = hCdGHticddNoDOSrFcmZcTiWuATlZj27209646;     hCdGHticddNoDOSrFcmZcTiWuATlZj27209646 = hCdGHticddNoDOSrFcmZcTiWuATlZj29586232;     hCdGHticddNoDOSrFcmZcTiWuATlZj29586232 = hCdGHticddNoDOSrFcmZcTiWuATlZj85950709;     hCdGHticddNoDOSrFcmZcTiWuATlZj85950709 = hCdGHticddNoDOSrFcmZcTiWuATlZj52267663;     hCdGHticddNoDOSrFcmZcTiWuATlZj52267663 = hCdGHticddNoDOSrFcmZcTiWuATlZj51756186;     hCdGHticddNoDOSrFcmZcTiWuATlZj51756186 = hCdGHticddNoDOSrFcmZcTiWuATlZj72222913;     hCdGHticddNoDOSrFcmZcTiWuATlZj72222913 = hCdGHticddNoDOSrFcmZcTiWuATlZj73562970;     hCdGHticddNoDOSrFcmZcTiWuATlZj73562970 = hCdGHticddNoDOSrFcmZcTiWuATlZj73028741;     hCdGHticddNoDOSrFcmZcTiWuATlZj73028741 = hCdGHticddNoDOSrFcmZcTiWuATlZj88305474;     hCdGHticddNoDOSrFcmZcTiWuATlZj88305474 = hCdGHticddNoDOSrFcmZcTiWuATlZj40651641;     hCdGHticddNoDOSrFcmZcTiWuATlZj40651641 = hCdGHticddNoDOSrFcmZcTiWuATlZj51222485;     hCdGHticddNoDOSrFcmZcTiWuATlZj51222485 = hCdGHticddNoDOSrFcmZcTiWuATlZj25105347;     hCdGHticddNoDOSrFcmZcTiWuATlZj25105347 = hCdGHticddNoDOSrFcmZcTiWuATlZj92042250;     hCdGHticddNoDOSrFcmZcTiWuATlZj92042250 = hCdGHticddNoDOSrFcmZcTiWuATlZj35653745;     hCdGHticddNoDOSrFcmZcTiWuATlZj35653745 = hCdGHticddNoDOSrFcmZcTiWuATlZj37450131;     hCdGHticddNoDOSrFcmZcTiWuATlZj37450131 = hCdGHticddNoDOSrFcmZcTiWuATlZj82067930;     hCdGHticddNoDOSrFcmZcTiWuATlZj82067930 = hCdGHticddNoDOSrFcmZcTiWuATlZj29774744;     hCdGHticddNoDOSrFcmZcTiWuATlZj29774744 = hCdGHticddNoDOSrFcmZcTiWuATlZj21635083;     hCdGHticddNoDOSrFcmZcTiWuATlZj21635083 = hCdGHticddNoDOSrFcmZcTiWuATlZj48818155;     hCdGHticddNoDOSrFcmZcTiWuATlZj48818155 = hCdGHticddNoDOSrFcmZcTiWuATlZj78989359;     hCdGHticddNoDOSrFcmZcTiWuATlZj78989359 = hCdGHticddNoDOSrFcmZcTiWuATlZj75323441;     hCdGHticddNoDOSrFcmZcTiWuATlZj75323441 = hCdGHticddNoDOSrFcmZcTiWuATlZj48372663;     hCdGHticddNoDOSrFcmZcTiWuATlZj48372663 = hCdGHticddNoDOSrFcmZcTiWuATlZj61873010;     hCdGHticddNoDOSrFcmZcTiWuATlZj61873010 = hCdGHticddNoDOSrFcmZcTiWuATlZj64881732;     hCdGHticddNoDOSrFcmZcTiWuATlZj64881732 = hCdGHticddNoDOSrFcmZcTiWuATlZj42123987;     hCdGHticddNoDOSrFcmZcTiWuATlZj42123987 = hCdGHticddNoDOSrFcmZcTiWuATlZj1246249;     hCdGHticddNoDOSrFcmZcTiWuATlZj1246249 = hCdGHticddNoDOSrFcmZcTiWuATlZj17504033;     hCdGHticddNoDOSrFcmZcTiWuATlZj17504033 = hCdGHticddNoDOSrFcmZcTiWuATlZj17249443;     hCdGHticddNoDOSrFcmZcTiWuATlZj17249443 = hCdGHticddNoDOSrFcmZcTiWuATlZj13070447;     hCdGHticddNoDOSrFcmZcTiWuATlZj13070447 = hCdGHticddNoDOSrFcmZcTiWuATlZj4051181;     hCdGHticddNoDOSrFcmZcTiWuATlZj4051181 = hCdGHticddNoDOSrFcmZcTiWuATlZj95418706;     hCdGHticddNoDOSrFcmZcTiWuATlZj95418706 = hCdGHticddNoDOSrFcmZcTiWuATlZj50171978;     hCdGHticddNoDOSrFcmZcTiWuATlZj50171978 = hCdGHticddNoDOSrFcmZcTiWuATlZj82723614;     hCdGHticddNoDOSrFcmZcTiWuATlZj82723614 = hCdGHticddNoDOSrFcmZcTiWuATlZj32709380;     hCdGHticddNoDOSrFcmZcTiWuATlZj32709380 = hCdGHticddNoDOSrFcmZcTiWuATlZj43345100;     hCdGHticddNoDOSrFcmZcTiWuATlZj43345100 = hCdGHticddNoDOSrFcmZcTiWuATlZj27108799;     hCdGHticddNoDOSrFcmZcTiWuATlZj27108799 = hCdGHticddNoDOSrFcmZcTiWuATlZj20726181;     hCdGHticddNoDOSrFcmZcTiWuATlZj20726181 = hCdGHticddNoDOSrFcmZcTiWuATlZj91404034;     hCdGHticddNoDOSrFcmZcTiWuATlZj91404034 = hCdGHticddNoDOSrFcmZcTiWuATlZj88858427;     hCdGHticddNoDOSrFcmZcTiWuATlZj88858427 = hCdGHticddNoDOSrFcmZcTiWuATlZj10714567;     hCdGHticddNoDOSrFcmZcTiWuATlZj10714567 = hCdGHticddNoDOSrFcmZcTiWuATlZj35472731;     hCdGHticddNoDOSrFcmZcTiWuATlZj35472731 = hCdGHticddNoDOSrFcmZcTiWuATlZj41810802;     hCdGHticddNoDOSrFcmZcTiWuATlZj41810802 = hCdGHticddNoDOSrFcmZcTiWuATlZj78968973;     hCdGHticddNoDOSrFcmZcTiWuATlZj78968973 = hCdGHticddNoDOSrFcmZcTiWuATlZj99811973;     hCdGHticddNoDOSrFcmZcTiWuATlZj99811973 = hCdGHticddNoDOSrFcmZcTiWuATlZj45264024;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void GQGvLgbeoxgPqGiCbgKRxRDYi94246160() {     double EBtuiXiQJKjvErRLsGioxTwUmfPKbZ67086245 = -29020958;    double EBtuiXiQJKjvErRLsGioxTwUmfPKbZ4324561 = -214839436;    double EBtuiXiQJKjvErRLsGioxTwUmfPKbZ77650126 = -4074364;    double EBtuiXiQJKjvErRLsGioxTwUmfPKbZ73356834 = -611872484;    double EBtuiXiQJKjvErRLsGioxTwUmfPKbZ85791275 = -414702504;    double EBtuiXiQJKjvErRLsGioxTwUmfPKbZ63894198 = -687336772;    double EBtuiXiQJKjvErRLsGioxTwUmfPKbZ8302338 = -962161294;    double EBtuiXiQJKjvErRLsGioxTwUmfPKbZ57175029 = -136972753;    double EBtuiXiQJKjvErRLsGioxTwUmfPKbZ94164066 = -224676215;    double EBtuiXiQJKjvErRLsGioxTwUmfPKbZ92610699 = -676321235;    double EBtuiXiQJKjvErRLsGioxTwUmfPKbZ7822435 = -778204118;    double EBtuiXiQJKjvErRLsGioxTwUmfPKbZ35587157 = -235974791;    double EBtuiXiQJKjvErRLsGioxTwUmfPKbZ37434278 = -793188357;    double EBtuiXiQJKjvErRLsGioxTwUmfPKbZ46819137 = -518318047;    double EBtuiXiQJKjvErRLsGioxTwUmfPKbZ1466287 = -815261480;    double EBtuiXiQJKjvErRLsGioxTwUmfPKbZ42115888 = -886757226;    double EBtuiXiQJKjvErRLsGioxTwUmfPKbZ82193880 = -783917038;    double EBtuiXiQJKjvErRLsGioxTwUmfPKbZ35971745 = -302272113;    double EBtuiXiQJKjvErRLsGioxTwUmfPKbZ66886921 = -413594411;    double EBtuiXiQJKjvErRLsGioxTwUmfPKbZ12865277 = -564447833;    double EBtuiXiQJKjvErRLsGioxTwUmfPKbZ45179346 = -234516428;    double EBtuiXiQJKjvErRLsGioxTwUmfPKbZ54564963 = 40804416;    double EBtuiXiQJKjvErRLsGioxTwUmfPKbZ25118515 = -89828301;    double EBtuiXiQJKjvErRLsGioxTwUmfPKbZ39614247 = -757437287;    double EBtuiXiQJKjvErRLsGioxTwUmfPKbZ29961646 = -995501877;    double EBtuiXiQJKjvErRLsGioxTwUmfPKbZ62965135 = -113430880;    double EBtuiXiQJKjvErRLsGioxTwUmfPKbZ61156300 = -952044801;    double EBtuiXiQJKjvErRLsGioxTwUmfPKbZ42638666 = -442370435;    double EBtuiXiQJKjvErRLsGioxTwUmfPKbZ44646342 = -306402713;    double EBtuiXiQJKjvErRLsGioxTwUmfPKbZ70428762 = -957074713;    double EBtuiXiQJKjvErRLsGioxTwUmfPKbZ94187265 = -927044844;    double EBtuiXiQJKjvErRLsGioxTwUmfPKbZ15145852 = -407249802;    double EBtuiXiQJKjvErRLsGioxTwUmfPKbZ93502253 = 20836703;    double EBtuiXiQJKjvErRLsGioxTwUmfPKbZ51879106 = 6851782;    double EBtuiXiQJKjvErRLsGioxTwUmfPKbZ68644631 = -875313921;    double EBtuiXiQJKjvErRLsGioxTwUmfPKbZ40131706 = -618811541;    double EBtuiXiQJKjvErRLsGioxTwUmfPKbZ99777287 = -979051530;    double EBtuiXiQJKjvErRLsGioxTwUmfPKbZ10614753 = -881910092;    double EBtuiXiQJKjvErRLsGioxTwUmfPKbZ4052145 = 54790168;    double EBtuiXiQJKjvErRLsGioxTwUmfPKbZ53285260 = -537980477;    double EBtuiXiQJKjvErRLsGioxTwUmfPKbZ37313325 = -390733098;    double EBtuiXiQJKjvErRLsGioxTwUmfPKbZ25537873 = -509068400;    double EBtuiXiQJKjvErRLsGioxTwUmfPKbZ62206942 = -153194260;    double EBtuiXiQJKjvErRLsGioxTwUmfPKbZ15369306 = -192743572;    double EBtuiXiQJKjvErRLsGioxTwUmfPKbZ20379425 = -604439042;    double EBtuiXiQJKjvErRLsGioxTwUmfPKbZ30355726 = 6157051;    double EBtuiXiQJKjvErRLsGioxTwUmfPKbZ56933405 = -527656162;    double EBtuiXiQJKjvErRLsGioxTwUmfPKbZ68713199 = -742266749;    double EBtuiXiQJKjvErRLsGioxTwUmfPKbZ96618900 = -291252480;    double EBtuiXiQJKjvErRLsGioxTwUmfPKbZ95547463 = -557221795;    double EBtuiXiQJKjvErRLsGioxTwUmfPKbZ3058 = -427936780;    double EBtuiXiQJKjvErRLsGioxTwUmfPKbZ35359483 = -454626842;    double EBtuiXiQJKjvErRLsGioxTwUmfPKbZ92058683 = -63217566;    double EBtuiXiQJKjvErRLsGioxTwUmfPKbZ46035932 = -149147578;    double EBtuiXiQJKjvErRLsGioxTwUmfPKbZ49066815 = -360752318;    double EBtuiXiQJKjvErRLsGioxTwUmfPKbZ12521283 = 30174626;    double EBtuiXiQJKjvErRLsGioxTwUmfPKbZ79206045 = -25011135;    double EBtuiXiQJKjvErRLsGioxTwUmfPKbZ38035880 = -246637078;    double EBtuiXiQJKjvErRLsGioxTwUmfPKbZ43395189 = -616370607;    double EBtuiXiQJKjvErRLsGioxTwUmfPKbZ22826141 = -201271625;    double EBtuiXiQJKjvErRLsGioxTwUmfPKbZ2737899 = -735291971;    double EBtuiXiQJKjvErRLsGioxTwUmfPKbZ65663672 = -419790859;    double EBtuiXiQJKjvErRLsGioxTwUmfPKbZ12528687 = -830570041;    double EBtuiXiQJKjvErRLsGioxTwUmfPKbZ23735304 = -267601503;    double EBtuiXiQJKjvErRLsGioxTwUmfPKbZ98423434 = -749276392;    double EBtuiXiQJKjvErRLsGioxTwUmfPKbZ92676583 = -270954316;    double EBtuiXiQJKjvErRLsGioxTwUmfPKbZ42084904 = -156811495;    double EBtuiXiQJKjvErRLsGioxTwUmfPKbZ85555172 = -700040140;    double EBtuiXiQJKjvErRLsGioxTwUmfPKbZ78174505 = -643004126;    double EBtuiXiQJKjvErRLsGioxTwUmfPKbZ61334580 = -96449940;    double EBtuiXiQJKjvErRLsGioxTwUmfPKbZ42338600 = -907705697;    double EBtuiXiQJKjvErRLsGioxTwUmfPKbZ71579127 = -902006946;    double EBtuiXiQJKjvErRLsGioxTwUmfPKbZ31919601 = -257062282;    double EBtuiXiQJKjvErRLsGioxTwUmfPKbZ13601661 = -875613934;    double EBtuiXiQJKjvErRLsGioxTwUmfPKbZ75551952 = -73714735;    double EBtuiXiQJKjvErRLsGioxTwUmfPKbZ19641473 = -725448029;    double EBtuiXiQJKjvErRLsGioxTwUmfPKbZ92358020 = -806001325;    double EBtuiXiQJKjvErRLsGioxTwUmfPKbZ9749209 = -897084730;    double EBtuiXiQJKjvErRLsGioxTwUmfPKbZ19234822 = -52998245;    double EBtuiXiQJKjvErRLsGioxTwUmfPKbZ99605920 = -901658929;    double EBtuiXiQJKjvErRLsGioxTwUmfPKbZ6031730 = -585774718;    double EBtuiXiQJKjvErRLsGioxTwUmfPKbZ92443100 = -109778052;    double EBtuiXiQJKjvErRLsGioxTwUmfPKbZ46019766 = -51117956;    double EBtuiXiQJKjvErRLsGioxTwUmfPKbZ49098879 = -749180918;    double EBtuiXiQJKjvErRLsGioxTwUmfPKbZ70425705 = -429137934;    double EBtuiXiQJKjvErRLsGioxTwUmfPKbZ58827783 = -372418002;    double EBtuiXiQJKjvErRLsGioxTwUmfPKbZ23087168 = -244032236;    double EBtuiXiQJKjvErRLsGioxTwUmfPKbZ47466321 = -830015719;    double EBtuiXiQJKjvErRLsGioxTwUmfPKbZ2812291 = -632395900;    double EBtuiXiQJKjvErRLsGioxTwUmfPKbZ56123349 = -805488548;    double EBtuiXiQJKjvErRLsGioxTwUmfPKbZ60925660 = -493800406;    double EBtuiXiQJKjvErRLsGioxTwUmfPKbZ61741407 = -632414452;    double EBtuiXiQJKjvErRLsGioxTwUmfPKbZ67219564 = -165539486;    double EBtuiXiQJKjvErRLsGioxTwUmfPKbZ81226003 = -743938208;    double EBtuiXiQJKjvErRLsGioxTwUmfPKbZ50547362 = -802688507;    double EBtuiXiQJKjvErRLsGioxTwUmfPKbZ71649653 = -970942240;    double EBtuiXiQJKjvErRLsGioxTwUmfPKbZ13009186 = -678498359;    double EBtuiXiQJKjvErRLsGioxTwUmfPKbZ38471639 = -885592758;    double EBtuiXiQJKjvErRLsGioxTwUmfPKbZ16945872 = -443467180;    double EBtuiXiQJKjvErRLsGioxTwUmfPKbZ27702842 = -29020958;     EBtuiXiQJKjvErRLsGioxTwUmfPKbZ67086245 = EBtuiXiQJKjvErRLsGioxTwUmfPKbZ4324561;     EBtuiXiQJKjvErRLsGioxTwUmfPKbZ4324561 = EBtuiXiQJKjvErRLsGioxTwUmfPKbZ77650126;     EBtuiXiQJKjvErRLsGioxTwUmfPKbZ77650126 = EBtuiXiQJKjvErRLsGioxTwUmfPKbZ73356834;     EBtuiXiQJKjvErRLsGioxTwUmfPKbZ73356834 = EBtuiXiQJKjvErRLsGioxTwUmfPKbZ85791275;     EBtuiXiQJKjvErRLsGioxTwUmfPKbZ85791275 = EBtuiXiQJKjvErRLsGioxTwUmfPKbZ63894198;     EBtuiXiQJKjvErRLsGioxTwUmfPKbZ63894198 = EBtuiXiQJKjvErRLsGioxTwUmfPKbZ8302338;     EBtuiXiQJKjvErRLsGioxTwUmfPKbZ8302338 = EBtuiXiQJKjvErRLsGioxTwUmfPKbZ57175029;     EBtuiXiQJKjvErRLsGioxTwUmfPKbZ57175029 = EBtuiXiQJKjvErRLsGioxTwUmfPKbZ94164066;     EBtuiXiQJKjvErRLsGioxTwUmfPKbZ94164066 = EBtuiXiQJKjvErRLsGioxTwUmfPKbZ92610699;     EBtuiXiQJKjvErRLsGioxTwUmfPKbZ92610699 = EBtuiXiQJKjvErRLsGioxTwUmfPKbZ7822435;     EBtuiXiQJKjvErRLsGioxTwUmfPKbZ7822435 = EBtuiXiQJKjvErRLsGioxTwUmfPKbZ35587157;     EBtuiXiQJKjvErRLsGioxTwUmfPKbZ35587157 = EBtuiXiQJKjvErRLsGioxTwUmfPKbZ37434278;     EBtuiXiQJKjvErRLsGioxTwUmfPKbZ37434278 = EBtuiXiQJKjvErRLsGioxTwUmfPKbZ46819137;     EBtuiXiQJKjvErRLsGioxTwUmfPKbZ46819137 = EBtuiXiQJKjvErRLsGioxTwUmfPKbZ1466287;     EBtuiXiQJKjvErRLsGioxTwUmfPKbZ1466287 = EBtuiXiQJKjvErRLsGioxTwUmfPKbZ42115888;     EBtuiXiQJKjvErRLsGioxTwUmfPKbZ42115888 = EBtuiXiQJKjvErRLsGioxTwUmfPKbZ82193880;     EBtuiXiQJKjvErRLsGioxTwUmfPKbZ82193880 = EBtuiXiQJKjvErRLsGioxTwUmfPKbZ35971745;     EBtuiXiQJKjvErRLsGioxTwUmfPKbZ35971745 = EBtuiXiQJKjvErRLsGioxTwUmfPKbZ66886921;     EBtuiXiQJKjvErRLsGioxTwUmfPKbZ66886921 = EBtuiXiQJKjvErRLsGioxTwUmfPKbZ12865277;     EBtuiXiQJKjvErRLsGioxTwUmfPKbZ12865277 = EBtuiXiQJKjvErRLsGioxTwUmfPKbZ45179346;     EBtuiXiQJKjvErRLsGioxTwUmfPKbZ45179346 = EBtuiXiQJKjvErRLsGioxTwUmfPKbZ54564963;     EBtuiXiQJKjvErRLsGioxTwUmfPKbZ54564963 = EBtuiXiQJKjvErRLsGioxTwUmfPKbZ25118515;     EBtuiXiQJKjvErRLsGioxTwUmfPKbZ25118515 = EBtuiXiQJKjvErRLsGioxTwUmfPKbZ39614247;     EBtuiXiQJKjvErRLsGioxTwUmfPKbZ39614247 = EBtuiXiQJKjvErRLsGioxTwUmfPKbZ29961646;     EBtuiXiQJKjvErRLsGioxTwUmfPKbZ29961646 = EBtuiXiQJKjvErRLsGioxTwUmfPKbZ62965135;     EBtuiXiQJKjvErRLsGioxTwUmfPKbZ62965135 = EBtuiXiQJKjvErRLsGioxTwUmfPKbZ61156300;     EBtuiXiQJKjvErRLsGioxTwUmfPKbZ61156300 = EBtuiXiQJKjvErRLsGioxTwUmfPKbZ42638666;     EBtuiXiQJKjvErRLsGioxTwUmfPKbZ42638666 = EBtuiXiQJKjvErRLsGioxTwUmfPKbZ44646342;     EBtuiXiQJKjvErRLsGioxTwUmfPKbZ44646342 = EBtuiXiQJKjvErRLsGioxTwUmfPKbZ70428762;     EBtuiXiQJKjvErRLsGioxTwUmfPKbZ70428762 = EBtuiXiQJKjvErRLsGioxTwUmfPKbZ94187265;     EBtuiXiQJKjvErRLsGioxTwUmfPKbZ94187265 = EBtuiXiQJKjvErRLsGioxTwUmfPKbZ15145852;     EBtuiXiQJKjvErRLsGioxTwUmfPKbZ15145852 = EBtuiXiQJKjvErRLsGioxTwUmfPKbZ93502253;     EBtuiXiQJKjvErRLsGioxTwUmfPKbZ93502253 = EBtuiXiQJKjvErRLsGioxTwUmfPKbZ51879106;     EBtuiXiQJKjvErRLsGioxTwUmfPKbZ51879106 = EBtuiXiQJKjvErRLsGioxTwUmfPKbZ68644631;     EBtuiXiQJKjvErRLsGioxTwUmfPKbZ68644631 = EBtuiXiQJKjvErRLsGioxTwUmfPKbZ40131706;     EBtuiXiQJKjvErRLsGioxTwUmfPKbZ40131706 = EBtuiXiQJKjvErRLsGioxTwUmfPKbZ99777287;     EBtuiXiQJKjvErRLsGioxTwUmfPKbZ99777287 = EBtuiXiQJKjvErRLsGioxTwUmfPKbZ10614753;     EBtuiXiQJKjvErRLsGioxTwUmfPKbZ10614753 = EBtuiXiQJKjvErRLsGioxTwUmfPKbZ4052145;     EBtuiXiQJKjvErRLsGioxTwUmfPKbZ4052145 = EBtuiXiQJKjvErRLsGioxTwUmfPKbZ53285260;     EBtuiXiQJKjvErRLsGioxTwUmfPKbZ53285260 = EBtuiXiQJKjvErRLsGioxTwUmfPKbZ37313325;     EBtuiXiQJKjvErRLsGioxTwUmfPKbZ37313325 = EBtuiXiQJKjvErRLsGioxTwUmfPKbZ25537873;     EBtuiXiQJKjvErRLsGioxTwUmfPKbZ25537873 = EBtuiXiQJKjvErRLsGioxTwUmfPKbZ62206942;     EBtuiXiQJKjvErRLsGioxTwUmfPKbZ62206942 = EBtuiXiQJKjvErRLsGioxTwUmfPKbZ15369306;     EBtuiXiQJKjvErRLsGioxTwUmfPKbZ15369306 = EBtuiXiQJKjvErRLsGioxTwUmfPKbZ20379425;     EBtuiXiQJKjvErRLsGioxTwUmfPKbZ20379425 = EBtuiXiQJKjvErRLsGioxTwUmfPKbZ30355726;     EBtuiXiQJKjvErRLsGioxTwUmfPKbZ30355726 = EBtuiXiQJKjvErRLsGioxTwUmfPKbZ56933405;     EBtuiXiQJKjvErRLsGioxTwUmfPKbZ56933405 = EBtuiXiQJKjvErRLsGioxTwUmfPKbZ68713199;     EBtuiXiQJKjvErRLsGioxTwUmfPKbZ68713199 = EBtuiXiQJKjvErRLsGioxTwUmfPKbZ96618900;     EBtuiXiQJKjvErRLsGioxTwUmfPKbZ96618900 = EBtuiXiQJKjvErRLsGioxTwUmfPKbZ95547463;     EBtuiXiQJKjvErRLsGioxTwUmfPKbZ95547463 = EBtuiXiQJKjvErRLsGioxTwUmfPKbZ3058;     EBtuiXiQJKjvErRLsGioxTwUmfPKbZ3058 = EBtuiXiQJKjvErRLsGioxTwUmfPKbZ35359483;     EBtuiXiQJKjvErRLsGioxTwUmfPKbZ35359483 = EBtuiXiQJKjvErRLsGioxTwUmfPKbZ92058683;     EBtuiXiQJKjvErRLsGioxTwUmfPKbZ92058683 = EBtuiXiQJKjvErRLsGioxTwUmfPKbZ46035932;     EBtuiXiQJKjvErRLsGioxTwUmfPKbZ46035932 = EBtuiXiQJKjvErRLsGioxTwUmfPKbZ49066815;     EBtuiXiQJKjvErRLsGioxTwUmfPKbZ49066815 = EBtuiXiQJKjvErRLsGioxTwUmfPKbZ12521283;     EBtuiXiQJKjvErRLsGioxTwUmfPKbZ12521283 = EBtuiXiQJKjvErRLsGioxTwUmfPKbZ79206045;     EBtuiXiQJKjvErRLsGioxTwUmfPKbZ79206045 = EBtuiXiQJKjvErRLsGioxTwUmfPKbZ38035880;     EBtuiXiQJKjvErRLsGioxTwUmfPKbZ38035880 = EBtuiXiQJKjvErRLsGioxTwUmfPKbZ43395189;     EBtuiXiQJKjvErRLsGioxTwUmfPKbZ43395189 = EBtuiXiQJKjvErRLsGioxTwUmfPKbZ22826141;     EBtuiXiQJKjvErRLsGioxTwUmfPKbZ22826141 = EBtuiXiQJKjvErRLsGioxTwUmfPKbZ2737899;     EBtuiXiQJKjvErRLsGioxTwUmfPKbZ2737899 = EBtuiXiQJKjvErRLsGioxTwUmfPKbZ65663672;     EBtuiXiQJKjvErRLsGioxTwUmfPKbZ65663672 = EBtuiXiQJKjvErRLsGioxTwUmfPKbZ12528687;     EBtuiXiQJKjvErRLsGioxTwUmfPKbZ12528687 = EBtuiXiQJKjvErRLsGioxTwUmfPKbZ23735304;     EBtuiXiQJKjvErRLsGioxTwUmfPKbZ23735304 = EBtuiXiQJKjvErRLsGioxTwUmfPKbZ98423434;     EBtuiXiQJKjvErRLsGioxTwUmfPKbZ98423434 = EBtuiXiQJKjvErRLsGioxTwUmfPKbZ92676583;     EBtuiXiQJKjvErRLsGioxTwUmfPKbZ92676583 = EBtuiXiQJKjvErRLsGioxTwUmfPKbZ42084904;     EBtuiXiQJKjvErRLsGioxTwUmfPKbZ42084904 = EBtuiXiQJKjvErRLsGioxTwUmfPKbZ85555172;     EBtuiXiQJKjvErRLsGioxTwUmfPKbZ85555172 = EBtuiXiQJKjvErRLsGioxTwUmfPKbZ78174505;     EBtuiXiQJKjvErRLsGioxTwUmfPKbZ78174505 = EBtuiXiQJKjvErRLsGioxTwUmfPKbZ61334580;     EBtuiXiQJKjvErRLsGioxTwUmfPKbZ61334580 = EBtuiXiQJKjvErRLsGioxTwUmfPKbZ42338600;     EBtuiXiQJKjvErRLsGioxTwUmfPKbZ42338600 = EBtuiXiQJKjvErRLsGioxTwUmfPKbZ71579127;     EBtuiXiQJKjvErRLsGioxTwUmfPKbZ71579127 = EBtuiXiQJKjvErRLsGioxTwUmfPKbZ31919601;     EBtuiXiQJKjvErRLsGioxTwUmfPKbZ31919601 = EBtuiXiQJKjvErRLsGioxTwUmfPKbZ13601661;     EBtuiXiQJKjvErRLsGioxTwUmfPKbZ13601661 = EBtuiXiQJKjvErRLsGioxTwUmfPKbZ75551952;     EBtuiXiQJKjvErRLsGioxTwUmfPKbZ75551952 = EBtuiXiQJKjvErRLsGioxTwUmfPKbZ19641473;     EBtuiXiQJKjvErRLsGioxTwUmfPKbZ19641473 = EBtuiXiQJKjvErRLsGioxTwUmfPKbZ92358020;     EBtuiXiQJKjvErRLsGioxTwUmfPKbZ92358020 = EBtuiXiQJKjvErRLsGioxTwUmfPKbZ9749209;     EBtuiXiQJKjvErRLsGioxTwUmfPKbZ9749209 = EBtuiXiQJKjvErRLsGioxTwUmfPKbZ19234822;     EBtuiXiQJKjvErRLsGioxTwUmfPKbZ19234822 = EBtuiXiQJKjvErRLsGioxTwUmfPKbZ99605920;     EBtuiXiQJKjvErRLsGioxTwUmfPKbZ99605920 = EBtuiXiQJKjvErRLsGioxTwUmfPKbZ6031730;     EBtuiXiQJKjvErRLsGioxTwUmfPKbZ6031730 = EBtuiXiQJKjvErRLsGioxTwUmfPKbZ92443100;     EBtuiXiQJKjvErRLsGioxTwUmfPKbZ92443100 = EBtuiXiQJKjvErRLsGioxTwUmfPKbZ46019766;     EBtuiXiQJKjvErRLsGioxTwUmfPKbZ46019766 = EBtuiXiQJKjvErRLsGioxTwUmfPKbZ49098879;     EBtuiXiQJKjvErRLsGioxTwUmfPKbZ49098879 = EBtuiXiQJKjvErRLsGioxTwUmfPKbZ70425705;     EBtuiXiQJKjvErRLsGioxTwUmfPKbZ70425705 = EBtuiXiQJKjvErRLsGioxTwUmfPKbZ58827783;     EBtuiXiQJKjvErRLsGioxTwUmfPKbZ58827783 = EBtuiXiQJKjvErRLsGioxTwUmfPKbZ23087168;     EBtuiXiQJKjvErRLsGioxTwUmfPKbZ23087168 = EBtuiXiQJKjvErRLsGioxTwUmfPKbZ47466321;     EBtuiXiQJKjvErRLsGioxTwUmfPKbZ47466321 = EBtuiXiQJKjvErRLsGioxTwUmfPKbZ2812291;     EBtuiXiQJKjvErRLsGioxTwUmfPKbZ2812291 = EBtuiXiQJKjvErRLsGioxTwUmfPKbZ56123349;     EBtuiXiQJKjvErRLsGioxTwUmfPKbZ56123349 = EBtuiXiQJKjvErRLsGioxTwUmfPKbZ60925660;     EBtuiXiQJKjvErRLsGioxTwUmfPKbZ60925660 = EBtuiXiQJKjvErRLsGioxTwUmfPKbZ61741407;     EBtuiXiQJKjvErRLsGioxTwUmfPKbZ61741407 = EBtuiXiQJKjvErRLsGioxTwUmfPKbZ67219564;     EBtuiXiQJKjvErRLsGioxTwUmfPKbZ67219564 = EBtuiXiQJKjvErRLsGioxTwUmfPKbZ81226003;     EBtuiXiQJKjvErRLsGioxTwUmfPKbZ81226003 = EBtuiXiQJKjvErRLsGioxTwUmfPKbZ50547362;     EBtuiXiQJKjvErRLsGioxTwUmfPKbZ50547362 = EBtuiXiQJKjvErRLsGioxTwUmfPKbZ71649653;     EBtuiXiQJKjvErRLsGioxTwUmfPKbZ71649653 = EBtuiXiQJKjvErRLsGioxTwUmfPKbZ13009186;     EBtuiXiQJKjvErRLsGioxTwUmfPKbZ13009186 = EBtuiXiQJKjvErRLsGioxTwUmfPKbZ38471639;     EBtuiXiQJKjvErRLsGioxTwUmfPKbZ38471639 = EBtuiXiQJKjvErRLsGioxTwUmfPKbZ16945872;     EBtuiXiQJKjvErRLsGioxTwUmfPKbZ16945872 = EBtuiXiQJKjvErRLsGioxTwUmfPKbZ27702842;     EBtuiXiQJKjvErRLsGioxTwUmfPKbZ27702842 = EBtuiXiQJKjvErRLsGioxTwUmfPKbZ67086245;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void AtLGPaSoKnPgZirgBVwxNcrvv56093419() {     double qcAiISZDtBuyUlkgzvlYVrKjfQsynn18250328 = -951611301;    double qcAiISZDtBuyUlkgzvlYVrKjfQsynn35691163 = -768390114;    double qcAiISZDtBuyUlkgzvlYVrKjfQsynn44721690 = -666126050;    double qcAiISZDtBuyUlkgzvlYVrKjfQsynn49880555 = -447059100;    double qcAiISZDtBuyUlkgzvlYVrKjfQsynn33315387 = -976902400;    double qcAiISZDtBuyUlkgzvlYVrKjfQsynn32718184 = -696731590;    double qcAiISZDtBuyUlkgzvlYVrKjfQsynn87491362 = -731240175;    double qcAiISZDtBuyUlkgzvlYVrKjfQsynn56409328 = -602513828;    double qcAiISZDtBuyUlkgzvlYVrKjfQsynn27562816 = -930770374;    double qcAiISZDtBuyUlkgzvlYVrKjfQsynn27566978 = -982251153;    double qcAiISZDtBuyUlkgzvlYVrKjfQsynn56810148 = -258531963;    double qcAiISZDtBuyUlkgzvlYVrKjfQsynn20514146 = -858870967;    double qcAiISZDtBuyUlkgzvlYVrKjfQsynn22448748 = -343343563;    double qcAiISZDtBuyUlkgzvlYVrKjfQsynn83782790 = -812519686;    double qcAiISZDtBuyUlkgzvlYVrKjfQsynn59176171 = -555066247;    double qcAiISZDtBuyUlkgzvlYVrKjfQsynn32122521 = -991935831;    double qcAiISZDtBuyUlkgzvlYVrKjfQsynn37642872 = 19828804;    double qcAiISZDtBuyUlkgzvlYVrKjfQsynn1204087 = -631898456;    double qcAiISZDtBuyUlkgzvlYVrKjfQsynn10244633 = -397524392;    double qcAiISZDtBuyUlkgzvlYVrKjfQsynn7261973 = -25351035;    double qcAiISZDtBuyUlkgzvlYVrKjfQsynn26867301 = -868382364;    double qcAiISZDtBuyUlkgzvlYVrKjfQsynn35867442 = -208653327;    double qcAiISZDtBuyUlkgzvlYVrKjfQsynn69524507 = -636970354;    double qcAiISZDtBuyUlkgzvlYVrKjfQsynn86692440 = -356055768;    double qcAiISZDtBuyUlkgzvlYVrKjfQsynn68210614 = -557188015;    double qcAiISZDtBuyUlkgzvlYVrKjfQsynn38517485 = -250537891;    double qcAiISZDtBuyUlkgzvlYVrKjfQsynn96153699 = -384470783;    double qcAiISZDtBuyUlkgzvlYVrKjfQsynn5839792 = -410661889;    double qcAiISZDtBuyUlkgzvlYVrKjfQsynn73079214 = -325060729;    double qcAiISZDtBuyUlkgzvlYVrKjfQsynn53163614 = -450325210;    double qcAiISZDtBuyUlkgzvlYVrKjfQsynn71693213 = -871432140;    double qcAiISZDtBuyUlkgzvlYVrKjfQsynn74249573 = -246663231;    double qcAiISZDtBuyUlkgzvlYVrKjfQsynn21328780 = 23250214;    double qcAiISZDtBuyUlkgzvlYVrKjfQsynn59336085 = 17880106;    double qcAiISZDtBuyUlkgzvlYVrKjfQsynn53812646 = -337499669;    double qcAiISZDtBuyUlkgzvlYVrKjfQsynn92543596 = -633766719;    double qcAiISZDtBuyUlkgzvlYVrKjfQsynn11009426 = -939728797;    double qcAiISZDtBuyUlkgzvlYVrKjfQsynn31677806 = -574602421;    double qcAiISZDtBuyUlkgzvlYVrKjfQsynn21212898 = -474567892;    double qcAiISZDtBuyUlkgzvlYVrKjfQsynn42725501 = 12647198;    double qcAiISZDtBuyUlkgzvlYVrKjfQsynn19471555 = -528797376;    double qcAiISZDtBuyUlkgzvlYVrKjfQsynn99254713 = -620937490;    double qcAiISZDtBuyUlkgzvlYVrKjfQsynn20890742 = -769537277;    double qcAiISZDtBuyUlkgzvlYVrKjfQsynn16187763 = -686539213;    double qcAiISZDtBuyUlkgzvlYVrKjfQsynn88359229 = -955740679;    double qcAiISZDtBuyUlkgzvlYVrKjfQsynn3584339 = -850982695;    double qcAiISZDtBuyUlkgzvlYVrKjfQsynn84168106 = 26125495;    double qcAiISZDtBuyUlkgzvlYVrKjfQsynn60322322 = -637393799;    double qcAiISZDtBuyUlkgzvlYVrKjfQsynn16899930 = -54368795;    double qcAiISZDtBuyUlkgzvlYVrKjfQsynn23212877 = -940292988;    double qcAiISZDtBuyUlkgzvlYVrKjfQsynn33534922 = -503808991;    double qcAiISZDtBuyUlkgzvlYVrKjfQsynn4423900 = -92930949;    double qcAiISZDtBuyUlkgzvlYVrKjfQsynn3654239 = 8931328;    double qcAiISZDtBuyUlkgzvlYVrKjfQsynn94084020 = -211194992;    double qcAiISZDtBuyUlkgzvlYVrKjfQsynn29226119 = 32167569;    double qcAiISZDtBuyUlkgzvlYVrKjfQsynn82382886 = -642957975;    double qcAiISZDtBuyUlkgzvlYVrKjfQsynn66166656 = -31419761;    double qcAiISZDtBuyUlkgzvlYVrKjfQsynn58029250 = -210070282;    double qcAiISZDtBuyUlkgzvlYVrKjfQsynn81669940 = -889871086;    double qcAiISZDtBuyUlkgzvlYVrKjfQsynn94797901 = -626364509;    double qcAiISZDtBuyUlkgzvlYVrKjfQsynn36564484 = -212260807;    double qcAiISZDtBuyUlkgzvlYVrKjfQsynn81651571 = -220578287;    double qcAiISZDtBuyUlkgzvlYVrKjfQsynn83330114 = -177453100;    double qcAiISZDtBuyUlkgzvlYVrKjfQsynn74399201 = -380445164;    double qcAiISZDtBuyUlkgzvlYVrKjfQsynn55873765 = -10819013;    double qcAiISZDtBuyUlkgzvlYVrKjfQsynn82560574 = 88131268;    double qcAiISZDtBuyUlkgzvlYVrKjfQsynn99185365 = -782121181;    double qcAiISZDtBuyUlkgzvlYVrKjfQsynn63112662 = -261223669;    double qcAiISZDtBuyUlkgzvlYVrKjfQsynn29970145 = -375020017;    double qcAiISZDtBuyUlkgzvlYVrKjfQsynn66632575 = -921299529;    double qcAiISZDtBuyUlkgzvlYVrKjfQsynn21113095 = 47792965;    double qcAiISZDtBuyUlkgzvlYVrKjfQsynn5965067 = -405568775;    double qcAiISZDtBuyUlkgzvlYVrKjfQsynn79991188 = -57330565;    double qcAiISZDtBuyUlkgzvlYVrKjfQsynn67519132 = -310171591;    double qcAiISZDtBuyUlkgzvlYVrKjfQsynn87790418 = -496553659;    double qcAiISZDtBuyUlkgzvlYVrKjfQsynn27612587 = -147444874;    double qcAiISZDtBuyUlkgzvlYVrKjfQsynn14976701 = -439116050;    double qcAiISZDtBuyUlkgzvlYVrKjfQsynn53336744 = -950431141;    double qcAiISZDtBuyUlkgzvlYVrKjfQsynn98333210 = -400315090;    double qcAiISZDtBuyUlkgzvlYVrKjfQsynn64626275 = -706205321;    double qcAiISZDtBuyUlkgzvlYVrKjfQsynn54349379 = -176663386;    double qcAiISZDtBuyUlkgzvlYVrKjfQsynn35831378 = -747076985;    double qcAiISZDtBuyUlkgzvlYVrKjfQsynn88939861 = -256293095;    double qcAiISZDtBuyUlkgzvlYVrKjfQsynn49866337 = -384767741;    double qcAiISZDtBuyUlkgzvlYVrKjfQsynn19628692 = -946516219;    double qcAiISZDtBuyUlkgzvlYVrKjfQsynn67269313 = -678501192;    double qcAiISZDtBuyUlkgzvlYVrKjfQsynn70595335 = -155594560;    double qcAiISZDtBuyUlkgzvlYVrKjfQsynn27244759 = -765554795;    double qcAiISZDtBuyUlkgzvlYVrKjfQsynn30109967 = 85712536;    double qcAiISZDtBuyUlkgzvlYVrKjfQsynn71429760 = -694541695;    double qcAiISZDtBuyUlkgzvlYVrKjfQsynn26376940 = -502346958;    double qcAiISZDtBuyUlkgzvlYVrKjfQsynn52980176 = -629658515;    double qcAiISZDtBuyUlkgzvlYVrKjfQsynn50007865 = -684731336;    double qcAiISZDtBuyUlkgzvlYVrKjfQsynn26414996 = -848203383;    double qcAiISZDtBuyUlkgzvlYVrKjfQsynn6161017 = -775091995;    double qcAiISZDtBuyUlkgzvlYVrKjfQsynn37819983 = -208219090;    double qcAiISZDtBuyUlkgzvlYVrKjfQsynn15924600 = -343484390;    double qcAiISZDtBuyUlkgzvlYVrKjfQsynn46491540 = -289092113;    double qcAiISZDtBuyUlkgzvlYVrKjfQsynn60313997 = -575720200;    double qcAiISZDtBuyUlkgzvlYVrKjfQsynn5798656 = -951611301;     qcAiISZDtBuyUlkgzvlYVrKjfQsynn18250328 = qcAiISZDtBuyUlkgzvlYVrKjfQsynn35691163;     qcAiISZDtBuyUlkgzvlYVrKjfQsynn35691163 = qcAiISZDtBuyUlkgzvlYVrKjfQsynn44721690;     qcAiISZDtBuyUlkgzvlYVrKjfQsynn44721690 = qcAiISZDtBuyUlkgzvlYVrKjfQsynn49880555;     qcAiISZDtBuyUlkgzvlYVrKjfQsynn49880555 = qcAiISZDtBuyUlkgzvlYVrKjfQsynn33315387;     qcAiISZDtBuyUlkgzvlYVrKjfQsynn33315387 = qcAiISZDtBuyUlkgzvlYVrKjfQsynn32718184;     qcAiISZDtBuyUlkgzvlYVrKjfQsynn32718184 = qcAiISZDtBuyUlkgzvlYVrKjfQsynn87491362;     qcAiISZDtBuyUlkgzvlYVrKjfQsynn87491362 = qcAiISZDtBuyUlkgzvlYVrKjfQsynn56409328;     qcAiISZDtBuyUlkgzvlYVrKjfQsynn56409328 = qcAiISZDtBuyUlkgzvlYVrKjfQsynn27562816;     qcAiISZDtBuyUlkgzvlYVrKjfQsynn27562816 = qcAiISZDtBuyUlkgzvlYVrKjfQsynn27566978;     qcAiISZDtBuyUlkgzvlYVrKjfQsynn27566978 = qcAiISZDtBuyUlkgzvlYVrKjfQsynn56810148;     qcAiISZDtBuyUlkgzvlYVrKjfQsynn56810148 = qcAiISZDtBuyUlkgzvlYVrKjfQsynn20514146;     qcAiISZDtBuyUlkgzvlYVrKjfQsynn20514146 = qcAiISZDtBuyUlkgzvlYVrKjfQsynn22448748;     qcAiISZDtBuyUlkgzvlYVrKjfQsynn22448748 = qcAiISZDtBuyUlkgzvlYVrKjfQsynn83782790;     qcAiISZDtBuyUlkgzvlYVrKjfQsynn83782790 = qcAiISZDtBuyUlkgzvlYVrKjfQsynn59176171;     qcAiISZDtBuyUlkgzvlYVrKjfQsynn59176171 = qcAiISZDtBuyUlkgzvlYVrKjfQsynn32122521;     qcAiISZDtBuyUlkgzvlYVrKjfQsynn32122521 = qcAiISZDtBuyUlkgzvlYVrKjfQsynn37642872;     qcAiISZDtBuyUlkgzvlYVrKjfQsynn37642872 = qcAiISZDtBuyUlkgzvlYVrKjfQsynn1204087;     qcAiISZDtBuyUlkgzvlYVrKjfQsynn1204087 = qcAiISZDtBuyUlkgzvlYVrKjfQsynn10244633;     qcAiISZDtBuyUlkgzvlYVrKjfQsynn10244633 = qcAiISZDtBuyUlkgzvlYVrKjfQsynn7261973;     qcAiISZDtBuyUlkgzvlYVrKjfQsynn7261973 = qcAiISZDtBuyUlkgzvlYVrKjfQsynn26867301;     qcAiISZDtBuyUlkgzvlYVrKjfQsynn26867301 = qcAiISZDtBuyUlkgzvlYVrKjfQsynn35867442;     qcAiISZDtBuyUlkgzvlYVrKjfQsynn35867442 = qcAiISZDtBuyUlkgzvlYVrKjfQsynn69524507;     qcAiISZDtBuyUlkgzvlYVrKjfQsynn69524507 = qcAiISZDtBuyUlkgzvlYVrKjfQsynn86692440;     qcAiISZDtBuyUlkgzvlYVrKjfQsynn86692440 = qcAiISZDtBuyUlkgzvlYVrKjfQsynn68210614;     qcAiISZDtBuyUlkgzvlYVrKjfQsynn68210614 = qcAiISZDtBuyUlkgzvlYVrKjfQsynn38517485;     qcAiISZDtBuyUlkgzvlYVrKjfQsynn38517485 = qcAiISZDtBuyUlkgzvlYVrKjfQsynn96153699;     qcAiISZDtBuyUlkgzvlYVrKjfQsynn96153699 = qcAiISZDtBuyUlkgzvlYVrKjfQsynn5839792;     qcAiISZDtBuyUlkgzvlYVrKjfQsynn5839792 = qcAiISZDtBuyUlkgzvlYVrKjfQsynn73079214;     qcAiISZDtBuyUlkgzvlYVrKjfQsynn73079214 = qcAiISZDtBuyUlkgzvlYVrKjfQsynn53163614;     qcAiISZDtBuyUlkgzvlYVrKjfQsynn53163614 = qcAiISZDtBuyUlkgzvlYVrKjfQsynn71693213;     qcAiISZDtBuyUlkgzvlYVrKjfQsynn71693213 = qcAiISZDtBuyUlkgzvlYVrKjfQsynn74249573;     qcAiISZDtBuyUlkgzvlYVrKjfQsynn74249573 = qcAiISZDtBuyUlkgzvlYVrKjfQsynn21328780;     qcAiISZDtBuyUlkgzvlYVrKjfQsynn21328780 = qcAiISZDtBuyUlkgzvlYVrKjfQsynn59336085;     qcAiISZDtBuyUlkgzvlYVrKjfQsynn59336085 = qcAiISZDtBuyUlkgzvlYVrKjfQsynn53812646;     qcAiISZDtBuyUlkgzvlYVrKjfQsynn53812646 = qcAiISZDtBuyUlkgzvlYVrKjfQsynn92543596;     qcAiISZDtBuyUlkgzvlYVrKjfQsynn92543596 = qcAiISZDtBuyUlkgzvlYVrKjfQsynn11009426;     qcAiISZDtBuyUlkgzvlYVrKjfQsynn11009426 = qcAiISZDtBuyUlkgzvlYVrKjfQsynn31677806;     qcAiISZDtBuyUlkgzvlYVrKjfQsynn31677806 = qcAiISZDtBuyUlkgzvlYVrKjfQsynn21212898;     qcAiISZDtBuyUlkgzvlYVrKjfQsynn21212898 = qcAiISZDtBuyUlkgzvlYVrKjfQsynn42725501;     qcAiISZDtBuyUlkgzvlYVrKjfQsynn42725501 = qcAiISZDtBuyUlkgzvlYVrKjfQsynn19471555;     qcAiISZDtBuyUlkgzvlYVrKjfQsynn19471555 = qcAiISZDtBuyUlkgzvlYVrKjfQsynn99254713;     qcAiISZDtBuyUlkgzvlYVrKjfQsynn99254713 = qcAiISZDtBuyUlkgzvlYVrKjfQsynn20890742;     qcAiISZDtBuyUlkgzvlYVrKjfQsynn20890742 = qcAiISZDtBuyUlkgzvlYVrKjfQsynn16187763;     qcAiISZDtBuyUlkgzvlYVrKjfQsynn16187763 = qcAiISZDtBuyUlkgzvlYVrKjfQsynn88359229;     qcAiISZDtBuyUlkgzvlYVrKjfQsynn88359229 = qcAiISZDtBuyUlkgzvlYVrKjfQsynn3584339;     qcAiISZDtBuyUlkgzvlYVrKjfQsynn3584339 = qcAiISZDtBuyUlkgzvlYVrKjfQsynn84168106;     qcAiISZDtBuyUlkgzvlYVrKjfQsynn84168106 = qcAiISZDtBuyUlkgzvlYVrKjfQsynn60322322;     qcAiISZDtBuyUlkgzvlYVrKjfQsynn60322322 = qcAiISZDtBuyUlkgzvlYVrKjfQsynn16899930;     qcAiISZDtBuyUlkgzvlYVrKjfQsynn16899930 = qcAiISZDtBuyUlkgzvlYVrKjfQsynn23212877;     qcAiISZDtBuyUlkgzvlYVrKjfQsynn23212877 = qcAiISZDtBuyUlkgzvlYVrKjfQsynn33534922;     qcAiISZDtBuyUlkgzvlYVrKjfQsynn33534922 = qcAiISZDtBuyUlkgzvlYVrKjfQsynn4423900;     qcAiISZDtBuyUlkgzvlYVrKjfQsynn4423900 = qcAiISZDtBuyUlkgzvlYVrKjfQsynn3654239;     qcAiISZDtBuyUlkgzvlYVrKjfQsynn3654239 = qcAiISZDtBuyUlkgzvlYVrKjfQsynn94084020;     qcAiISZDtBuyUlkgzvlYVrKjfQsynn94084020 = qcAiISZDtBuyUlkgzvlYVrKjfQsynn29226119;     qcAiISZDtBuyUlkgzvlYVrKjfQsynn29226119 = qcAiISZDtBuyUlkgzvlYVrKjfQsynn82382886;     qcAiISZDtBuyUlkgzvlYVrKjfQsynn82382886 = qcAiISZDtBuyUlkgzvlYVrKjfQsynn66166656;     qcAiISZDtBuyUlkgzvlYVrKjfQsynn66166656 = qcAiISZDtBuyUlkgzvlYVrKjfQsynn58029250;     qcAiISZDtBuyUlkgzvlYVrKjfQsynn58029250 = qcAiISZDtBuyUlkgzvlYVrKjfQsynn81669940;     qcAiISZDtBuyUlkgzvlYVrKjfQsynn81669940 = qcAiISZDtBuyUlkgzvlYVrKjfQsynn94797901;     qcAiISZDtBuyUlkgzvlYVrKjfQsynn94797901 = qcAiISZDtBuyUlkgzvlYVrKjfQsynn36564484;     qcAiISZDtBuyUlkgzvlYVrKjfQsynn36564484 = qcAiISZDtBuyUlkgzvlYVrKjfQsynn81651571;     qcAiISZDtBuyUlkgzvlYVrKjfQsynn81651571 = qcAiISZDtBuyUlkgzvlYVrKjfQsynn83330114;     qcAiISZDtBuyUlkgzvlYVrKjfQsynn83330114 = qcAiISZDtBuyUlkgzvlYVrKjfQsynn74399201;     qcAiISZDtBuyUlkgzvlYVrKjfQsynn74399201 = qcAiISZDtBuyUlkgzvlYVrKjfQsynn55873765;     qcAiISZDtBuyUlkgzvlYVrKjfQsynn55873765 = qcAiISZDtBuyUlkgzvlYVrKjfQsynn82560574;     qcAiISZDtBuyUlkgzvlYVrKjfQsynn82560574 = qcAiISZDtBuyUlkgzvlYVrKjfQsynn99185365;     qcAiISZDtBuyUlkgzvlYVrKjfQsynn99185365 = qcAiISZDtBuyUlkgzvlYVrKjfQsynn63112662;     qcAiISZDtBuyUlkgzvlYVrKjfQsynn63112662 = qcAiISZDtBuyUlkgzvlYVrKjfQsynn29970145;     qcAiISZDtBuyUlkgzvlYVrKjfQsynn29970145 = qcAiISZDtBuyUlkgzvlYVrKjfQsynn66632575;     qcAiISZDtBuyUlkgzvlYVrKjfQsynn66632575 = qcAiISZDtBuyUlkgzvlYVrKjfQsynn21113095;     qcAiISZDtBuyUlkgzvlYVrKjfQsynn21113095 = qcAiISZDtBuyUlkgzvlYVrKjfQsynn5965067;     qcAiISZDtBuyUlkgzvlYVrKjfQsynn5965067 = qcAiISZDtBuyUlkgzvlYVrKjfQsynn79991188;     qcAiISZDtBuyUlkgzvlYVrKjfQsynn79991188 = qcAiISZDtBuyUlkgzvlYVrKjfQsynn67519132;     qcAiISZDtBuyUlkgzvlYVrKjfQsynn67519132 = qcAiISZDtBuyUlkgzvlYVrKjfQsynn87790418;     qcAiISZDtBuyUlkgzvlYVrKjfQsynn87790418 = qcAiISZDtBuyUlkgzvlYVrKjfQsynn27612587;     qcAiISZDtBuyUlkgzvlYVrKjfQsynn27612587 = qcAiISZDtBuyUlkgzvlYVrKjfQsynn14976701;     qcAiISZDtBuyUlkgzvlYVrKjfQsynn14976701 = qcAiISZDtBuyUlkgzvlYVrKjfQsynn53336744;     qcAiISZDtBuyUlkgzvlYVrKjfQsynn53336744 = qcAiISZDtBuyUlkgzvlYVrKjfQsynn98333210;     qcAiISZDtBuyUlkgzvlYVrKjfQsynn98333210 = qcAiISZDtBuyUlkgzvlYVrKjfQsynn64626275;     qcAiISZDtBuyUlkgzvlYVrKjfQsynn64626275 = qcAiISZDtBuyUlkgzvlYVrKjfQsynn54349379;     qcAiISZDtBuyUlkgzvlYVrKjfQsynn54349379 = qcAiISZDtBuyUlkgzvlYVrKjfQsynn35831378;     qcAiISZDtBuyUlkgzvlYVrKjfQsynn35831378 = qcAiISZDtBuyUlkgzvlYVrKjfQsynn88939861;     qcAiISZDtBuyUlkgzvlYVrKjfQsynn88939861 = qcAiISZDtBuyUlkgzvlYVrKjfQsynn49866337;     qcAiISZDtBuyUlkgzvlYVrKjfQsynn49866337 = qcAiISZDtBuyUlkgzvlYVrKjfQsynn19628692;     qcAiISZDtBuyUlkgzvlYVrKjfQsynn19628692 = qcAiISZDtBuyUlkgzvlYVrKjfQsynn67269313;     qcAiISZDtBuyUlkgzvlYVrKjfQsynn67269313 = qcAiISZDtBuyUlkgzvlYVrKjfQsynn70595335;     qcAiISZDtBuyUlkgzvlYVrKjfQsynn70595335 = qcAiISZDtBuyUlkgzvlYVrKjfQsynn27244759;     qcAiISZDtBuyUlkgzvlYVrKjfQsynn27244759 = qcAiISZDtBuyUlkgzvlYVrKjfQsynn30109967;     qcAiISZDtBuyUlkgzvlYVrKjfQsynn30109967 = qcAiISZDtBuyUlkgzvlYVrKjfQsynn71429760;     qcAiISZDtBuyUlkgzvlYVrKjfQsynn71429760 = qcAiISZDtBuyUlkgzvlYVrKjfQsynn26376940;     qcAiISZDtBuyUlkgzvlYVrKjfQsynn26376940 = qcAiISZDtBuyUlkgzvlYVrKjfQsynn52980176;     qcAiISZDtBuyUlkgzvlYVrKjfQsynn52980176 = qcAiISZDtBuyUlkgzvlYVrKjfQsynn50007865;     qcAiISZDtBuyUlkgzvlYVrKjfQsynn50007865 = qcAiISZDtBuyUlkgzvlYVrKjfQsynn26414996;     qcAiISZDtBuyUlkgzvlYVrKjfQsynn26414996 = qcAiISZDtBuyUlkgzvlYVrKjfQsynn6161017;     qcAiISZDtBuyUlkgzvlYVrKjfQsynn6161017 = qcAiISZDtBuyUlkgzvlYVrKjfQsynn37819983;     qcAiISZDtBuyUlkgzvlYVrKjfQsynn37819983 = qcAiISZDtBuyUlkgzvlYVrKjfQsynn15924600;     qcAiISZDtBuyUlkgzvlYVrKjfQsynn15924600 = qcAiISZDtBuyUlkgzvlYVrKjfQsynn46491540;     qcAiISZDtBuyUlkgzvlYVrKjfQsynn46491540 = qcAiISZDtBuyUlkgzvlYVrKjfQsynn60313997;     qcAiISZDtBuyUlkgzvlYVrKjfQsynn60313997 = qcAiISZDtBuyUlkgzvlYVrKjfQsynn5798656;     qcAiISZDtBuyUlkgzvlYVrKjfQsynn5798656 = qcAiISZDtBuyUlkgzvlYVrKjfQsynn18250328;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void qqPHQVKEVojNsAdawJkeRIYDt65698145() {     double nOJEAXgQQBMUYGSraKsHsDglGRpAob40072549 = -419826633;    double nOJEAXgQQBMUYGSraKsHsDglGRpAob97158967 = -50988967;    double nOJEAXgQQBMUYGSraKsHsDglGRpAob90448960 = -713343582;    double nOJEAXgQQBMUYGSraKsHsDglGRpAob81255700 = -651843276;    double nOJEAXgQQBMUYGSraKsHsDglGRpAob93449718 = -854153322;    double nOJEAXgQQBMUYGSraKsHsDglGRpAob56736499 = -708274748;    double nOJEAXgQQBMUYGSraKsHsDglGRpAob16511948 = -794558299;    double nOJEAXgQQBMUYGSraKsHsDglGRpAob43271957 = -610694677;    double nOJEAXgQQBMUYGSraKsHsDglGRpAob24086455 = -916565792;    double nOJEAXgQQBMUYGSraKsHsDglGRpAob88850204 = -852469550;    double nOJEAXgQQBMUYGSraKsHsDglGRpAob27726417 = -914289666;    double nOJEAXgQQBMUYGSraKsHsDglGRpAob36696029 = -962052573;    double nOJEAXgQQBMUYGSraKsHsDglGRpAob55437690 = -881377351;    double nOJEAXgQQBMUYGSraKsHsDglGRpAob50749258 = -562596483;    double nOJEAXgQQBMUYGSraKsHsDglGRpAob54433967 = -481908166;    double nOJEAXgQQBMUYGSraKsHsDglGRpAob80093246 = -334302372;    double nOJEAXgQQBMUYGSraKsHsDglGRpAob31091932 = -365995914;    double nOJEAXgQQBMUYGSraKsHsDglGRpAob63729389 = -553619374;    double nOJEAXgQQBMUYGSraKsHsDglGRpAob14881857 = -470660049;    double nOJEAXgQQBMUYGSraKsHsDglGRpAob88371615 = -516596091;    double nOJEAXgQQBMUYGSraKsHsDglGRpAob84021585 = -600461066;    double nOJEAXgQQBMUYGSraKsHsDglGRpAob269421 = -279404491;    double nOJEAXgQQBMUYGSraKsHsDglGRpAob78995911 = -192997709;    double nOJEAXgQQBMUYGSraKsHsDglGRpAob23970062 = -766154634;    double nOJEAXgQQBMUYGSraKsHsDglGRpAob42141281 = -468084988;    double nOJEAXgQQBMUYGSraKsHsDglGRpAob28093339 = -577723419;    double nOJEAXgQQBMUYGSraKsHsDglGRpAob69190303 = 88725172;    double nOJEAXgQQBMUYGSraKsHsDglGRpAob41419617 = -275110122;    double nOJEAXgQQBMUYGSraKsHsDglGRpAob20976127 = 7993353;    double nOJEAXgQQBMUYGSraKsHsDglGRpAob98980691 = -826539405;    double nOJEAXgQQBMUYGSraKsHsDglGRpAob22858479 = -177159887;    double nOJEAXgQQBMUYGSraKsHsDglGRpAob93140899 = -22552062;    double nOJEAXgQQBMUYGSraKsHsDglGRpAob46648245 = -819353669;    double nOJEAXgQQBMUYGSraKsHsDglGRpAob31875203 = -757939521;    double nOJEAXgQQBMUYGSraKsHsDglGRpAob34646858 = -487318271;    double nOJEAXgQQBMUYGSraKsHsDglGRpAob62120556 = -648182699;    double nOJEAXgQQBMUYGSraKsHsDglGRpAob54091682 = -989345894;    double nOJEAXgQQBMUYGSraKsHsDglGRpAob35615668 = -56145178;    double nOJEAXgQQBMUYGSraKsHsDglGRpAob81593344 = -246973173;    double nOJEAXgQQBMUYGSraKsHsDglGRpAob55396146 = -444901803;    double nOJEAXgQQBMUYGSraKsHsDglGRpAob73847400 = -962936634;    double nOJEAXgQQBMUYGSraKsHsDglGRpAob15756885 = -308403567;    double nOJEAXgQQBMUYGSraKsHsDglGRpAob68258140 = -813504092;    double nOJEAXgQQBMUYGSraKsHsDglGRpAob64282621 = -595345382;    double nOJEAXgQQBMUYGSraKsHsDglGRpAob68275040 = -42429308;    double nOJEAXgQQBMUYGSraKsHsDglGRpAob42790818 = -554414925;    double nOJEAXgQQBMUYGSraKsHsDglGRpAob9836218 = -154882026;    double nOJEAXgQQBMUYGSraKsHsDglGRpAob42162074 = -375889787;    double nOJEAXgQQBMUYGSraKsHsDglGRpAob23964022 = -239485217;    double nOJEAXgQQBMUYGSraKsHsDglGRpAob39260353 = -919348173;    double nOJEAXgQQBMUYGSraKsHsDglGRpAob21996742 = -547698317;    double nOJEAXgQQBMUYGSraKsHsDglGRpAob812564 = -418309030;    double nOJEAXgQQBMUYGSraKsHsDglGRpAob94877103 = 45336189;    double nOJEAXgQQBMUYGSraKsHsDglGRpAob22109143 = -402204052;    double nOJEAXgQQBMUYGSraKsHsDglGRpAob81676560 = 71045820;    double nOJEAXgQQBMUYGSraKsHsDglGRpAob39803129 = -40422142;    double nOJEAXgQQBMUYGSraKsHsDglGRpAob18163056 = -857991259;    double nOJEAXgQQBMUYGSraKsHsDglGRpAob66478898 = -947188949;    double nOJEAXgQQBMUYGSraKsHsDglGRpAob39114420 = -83758289;    double nOJEAXgQQBMUYGSraKsHsDglGRpAob65356379 = -176429903;    double nOJEAXgQQBMUYGSraKsHsDglGRpAob87546195 = -696999921;    double nOJEAXgQQBMUYGSraKsHsDglGRpAob75092330 = -419448178;    double nOJEAXgQQBMUYGSraKsHsDglGRpAob22295831 = -518688030;    double nOJEAXgQQBMUYGSraKsHsDglGRpAob25105764 = 9973612;    double nOJEAXgQQBMUYGSraKsHsDglGRpAob65991725 = -575309663;    double nOJEAXgQQBMUYGSraKsHsDglGRpAob34585518 = -791737604;    double nOJEAXgQQBMUYGSraKsHsDglGRpAob90047784 = -42698904;    double nOJEAXgQQBMUYGSraKsHsDglGRpAob23562488 = -23437831;    double nOJEAXgQQBMUYGSraKsHsDglGRpAob16102400 = 24721788;    double nOJEAXgQQBMUYGSraKsHsDglGRpAob92313410 = -833725468;    double nOJEAXgQQBMUYGSraKsHsDglGRpAob26001564 = -344956479;    double nOJEAXgQQBMUYGSraKsHsDglGRpAob95476263 = -209850736;    double nOJEAXgQQBMUYGSraKsHsDglGRpAob82136045 = -206646202;    double nOJEAXgQQBMUYGSraKsHsDglGRpAob59485710 = 74241753;    double nOJEAXgQQBMUYGSraKsHsDglGRpAob14524215 = -553659457;    double nOJEAXgQQBMUYGSraKsHsDglGRpAob68264701 = -192057499;    double nOJEAXgQQBMUYGSraKsHsDglGRpAob32011280 = -465900399;    double nOJEAXgQQBMUYGSraKsHsDglGRpAob14713290 = -597652327;    double nOJEAXgQQBMUYGSraKsHsDglGRpAob55695021 = -623725327;    double nOJEAXgQQBMUYGSraKsHsDglGRpAob99350463 = -913670063;    double nOJEAXgQQBMUYGSraKsHsDglGRpAob18257122 = -322841394;    double nOJEAXgQQBMUYGSraKsHsDglGRpAob27028230 = -535385041;    double nOJEAXgQQBMUYGSraKsHsDglGRpAob17455595 = 64375095;    double nOJEAXgQQBMUYGSraKsHsDglGRpAob81715773 = -72658474;    double nOJEAXgQQBMUYGSraKsHsDglGRpAob76983950 = -178841088;    double nOJEAXgQQBMUYGSraKsHsDglGRpAob22045916 = -758850858;    double nOJEAXgQQBMUYGSraKsHsDglGRpAob98263796 = 32111749;    double nOJEAXgQQBMUYGSraKsHsDglGRpAob24539102 = -317149618;    double nOJEAXgQQBMUYGSraKsHsDglGRpAob50198643 = -728985342;    double nOJEAXgQQBMUYGSraKsHsDglGRpAob94843729 = -346896130;    double nOJEAXgQQBMUYGSraKsHsDglGRpAob43957500 = -790191440;    double nOJEAXgQQBMUYGSraKsHsDglGRpAob87612784 = 57843055;    double nOJEAXgQQBMUYGSraKsHsDglGRpAob96501248 = -972386890;    double nOJEAXgQQBMUYGSraKsHsDglGRpAob16236966 = 29456730;    double nOJEAXgQQBMUYGSraKsHsDglGRpAob67849950 = -747901882;    double nOJEAXgQQBMUYGSraKsHsDglGRpAob98755070 = -443488457;    double nOJEAXgQQBMUYGSraKsHsDglGRpAob93461054 = -789715537;    double nOJEAXgQQBMUYGSraKsHsDglGRpAob43152376 = -723477705;    double nOJEAXgQQBMUYGSraKsHsDglGRpAob98290896 = 79964281;    double nOJEAXgQQBMUYGSraKsHsDglGRpAob33689523 = -419826633;     nOJEAXgQQBMUYGSraKsHsDglGRpAob40072549 = nOJEAXgQQBMUYGSraKsHsDglGRpAob97158967;     nOJEAXgQQBMUYGSraKsHsDglGRpAob97158967 = nOJEAXgQQBMUYGSraKsHsDglGRpAob90448960;     nOJEAXgQQBMUYGSraKsHsDglGRpAob90448960 = nOJEAXgQQBMUYGSraKsHsDglGRpAob81255700;     nOJEAXgQQBMUYGSraKsHsDglGRpAob81255700 = nOJEAXgQQBMUYGSraKsHsDglGRpAob93449718;     nOJEAXgQQBMUYGSraKsHsDglGRpAob93449718 = nOJEAXgQQBMUYGSraKsHsDglGRpAob56736499;     nOJEAXgQQBMUYGSraKsHsDglGRpAob56736499 = nOJEAXgQQBMUYGSraKsHsDglGRpAob16511948;     nOJEAXgQQBMUYGSraKsHsDglGRpAob16511948 = nOJEAXgQQBMUYGSraKsHsDglGRpAob43271957;     nOJEAXgQQBMUYGSraKsHsDglGRpAob43271957 = nOJEAXgQQBMUYGSraKsHsDglGRpAob24086455;     nOJEAXgQQBMUYGSraKsHsDglGRpAob24086455 = nOJEAXgQQBMUYGSraKsHsDglGRpAob88850204;     nOJEAXgQQBMUYGSraKsHsDglGRpAob88850204 = nOJEAXgQQBMUYGSraKsHsDglGRpAob27726417;     nOJEAXgQQBMUYGSraKsHsDglGRpAob27726417 = nOJEAXgQQBMUYGSraKsHsDglGRpAob36696029;     nOJEAXgQQBMUYGSraKsHsDglGRpAob36696029 = nOJEAXgQQBMUYGSraKsHsDglGRpAob55437690;     nOJEAXgQQBMUYGSraKsHsDglGRpAob55437690 = nOJEAXgQQBMUYGSraKsHsDglGRpAob50749258;     nOJEAXgQQBMUYGSraKsHsDglGRpAob50749258 = nOJEAXgQQBMUYGSraKsHsDglGRpAob54433967;     nOJEAXgQQBMUYGSraKsHsDglGRpAob54433967 = nOJEAXgQQBMUYGSraKsHsDglGRpAob80093246;     nOJEAXgQQBMUYGSraKsHsDglGRpAob80093246 = nOJEAXgQQBMUYGSraKsHsDglGRpAob31091932;     nOJEAXgQQBMUYGSraKsHsDglGRpAob31091932 = nOJEAXgQQBMUYGSraKsHsDglGRpAob63729389;     nOJEAXgQQBMUYGSraKsHsDglGRpAob63729389 = nOJEAXgQQBMUYGSraKsHsDglGRpAob14881857;     nOJEAXgQQBMUYGSraKsHsDglGRpAob14881857 = nOJEAXgQQBMUYGSraKsHsDglGRpAob88371615;     nOJEAXgQQBMUYGSraKsHsDglGRpAob88371615 = nOJEAXgQQBMUYGSraKsHsDglGRpAob84021585;     nOJEAXgQQBMUYGSraKsHsDglGRpAob84021585 = nOJEAXgQQBMUYGSraKsHsDglGRpAob269421;     nOJEAXgQQBMUYGSraKsHsDglGRpAob269421 = nOJEAXgQQBMUYGSraKsHsDglGRpAob78995911;     nOJEAXgQQBMUYGSraKsHsDglGRpAob78995911 = nOJEAXgQQBMUYGSraKsHsDglGRpAob23970062;     nOJEAXgQQBMUYGSraKsHsDglGRpAob23970062 = nOJEAXgQQBMUYGSraKsHsDglGRpAob42141281;     nOJEAXgQQBMUYGSraKsHsDglGRpAob42141281 = nOJEAXgQQBMUYGSraKsHsDglGRpAob28093339;     nOJEAXgQQBMUYGSraKsHsDglGRpAob28093339 = nOJEAXgQQBMUYGSraKsHsDglGRpAob69190303;     nOJEAXgQQBMUYGSraKsHsDglGRpAob69190303 = nOJEAXgQQBMUYGSraKsHsDglGRpAob41419617;     nOJEAXgQQBMUYGSraKsHsDglGRpAob41419617 = nOJEAXgQQBMUYGSraKsHsDglGRpAob20976127;     nOJEAXgQQBMUYGSraKsHsDglGRpAob20976127 = nOJEAXgQQBMUYGSraKsHsDglGRpAob98980691;     nOJEAXgQQBMUYGSraKsHsDglGRpAob98980691 = nOJEAXgQQBMUYGSraKsHsDglGRpAob22858479;     nOJEAXgQQBMUYGSraKsHsDglGRpAob22858479 = nOJEAXgQQBMUYGSraKsHsDglGRpAob93140899;     nOJEAXgQQBMUYGSraKsHsDglGRpAob93140899 = nOJEAXgQQBMUYGSraKsHsDglGRpAob46648245;     nOJEAXgQQBMUYGSraKsHsDglGRpAob46648245 = nOJEAXgQQBMUYGSraKsHsDglGRpAob31875203;     nOJEAXgQQBMUYGSraKsHsDglGRpAob31875203 = nOJEAXgQQBMUYGSraKsHsDglGRpAob34646858;     nOJEAXgQQBMUYGSraKsHsDglGRpAob34646858 = nOJEAXgQQBMUYGSraKsHsDglGRpAob62120556;     nOJEAXgQQBMUYGSraKsHsDglGRpAob62120556 = nOJEAXgQQBMUYGSraKsHsDglGRpAob54091682;     nOJEAXgQQBMUYGSraKsHsDglGRpAob54091682 = nOJEAXgQQBMUYGSraKsHsDglGRpAob35615668;     nOJEAXgQQBMUYGSraKsHsDglGRpAob35615668 = nOJEAXgQQBMUYGSraKsHsDglGRpAob81593344;     nOJEAXgQQBMUYGSraKsHsDglGRpAob81593344 = nOJEAXgQQBMUYGSraKsHsDglGRpAob55396146;     nOJEAXgQQBMUYGSraKsHsDglGRpAob55396146 = nOJEAXgQQBMUYGSraKsHsDglGRpAob73847400;     nOJEAXgQQBMUYGSraKsHsDglGRpAob73847400 = nOJEAXgQQBMUYGSraKsHsDglGRpAob15756885;     nOJEAXgQQBMUYGSraKsHsDglGRpAob15756885 = nOJEAXgQQBMUYGSraKsHsDglGRpAob68258140;     nOJEAXgQQBMUYGSraKsHsDglGRpAob68258140 = nOJEAXgQQBMUYGSraKsHsDglGRpAob64282621;     nOJEAXgQQBMUYGSraKsHsDglGRpAob64282621 = nOJEAXgQQBMUYGSraKsHsDglGRpAob68275040;     nOJEAXgQQBMUYGSraKsHsDglGRpAob68275040 = nOJEAXgQQBMUYGSraKsHsDglGRpAob42790818;     nOJEAXgQQBMUYGSraKsHsDglGRpAob42790818 = nOJEAXgQQBMUYGSraKsHsDglGRpAob9836218;     nOJEAXgQQBMUYGSraKsHsDglGRpAob9836218 = nOJEAXgQQBMUYGSraKsHsDglGRpAob42162074;     nOJEAXgQQBMUYGSraKsHsDglGRpAob42162074 = nOJEAXgQQBMUYGSraKsHsDglGRpAob23964022;     nOJEAXgQQBMUYGSraKsHsDglGRpAob23964022 = nOJEAXgQQBMUYGSraKsHsDglGRpAob39260353;     nOJEAXgQQBMUYGSraKsHsDglGRpAob39260353 = nOJEAXgQQBMUYGSraKsHsDglGRpAob21996742;     nOJEAXgQQBMUYGSraKsHsDglGRpAob21996742 = nOJEAXgQQBMUYGSraKsHsDglGRpAob812564;     nOJEAXgQQBMUYGSraKsHsDglGRpAob812564 = nOJEAXgQQBMUYGSraKsHsDglGRpAob94877103;     nOJEAXgQQBMUYGSraKsHsDglGRpAob94877103 = nOJEAXgQQBMUYGSraKsHsDglGRpAob22109143;     nOJEAXgQQBMUYGSraKsHsDglGRpAob22109143 = nOJEAXgQQBMUYGSraKsHsDglGRpAob81676560;     nOJEAXgQQBMUYGSraKsHsDglGRpAob81676560 = nOJEAXgQQBMUYGSraKsHsDglGRpAob39803129;     nOJEAXgQQBMUYGSraKsHsDglGRpAob39803129 = nOJEAXgQQBMUYGSraKsHsDglGRpAob18163056;     nOJEAXgQQBMUYGSraKsHsDglGRpAob18163056 = nOJEAXgQQBMUYGSraKsHsDglGRpAob66478898;     nOJEAXgQQBMUYGSraKsHsDglGRpAob66478898 = nOJEAXgQQBMUYGSraKsHsDglGRpAob39114420;     nOJEAXgQQBMUYGSraKsHsDglGRpAob39114420 = nOJEAXgQQBMUYGSraKsHsDglGRpAob65356379;     nOJEAXgQQBMUYGSraKsHsDglGRpAob65356379 = nOJEAXgQQBMUYGSraKsHsDglGRpAob87546195;     nOJEAXgQQBMUYGSraKsHsDglGRpAob87546195 = nOJEAXgQQBMUYGSraKsHsDglGRpAob75092330;     nOJEAXgQQBMUYGSraKsHsDglGRpAob75092330 = nOJEAXgQQBMUYGSraKsHsDglGRpAob22295831;     nOJEAXgQQBMUYGSraKsHsDglGRpAob22295831 = nOJEAXgQQBMUYGSraKsHsDglGRpAob25105764;     nOJEAXgQQBMUYGSraKsHsDglGRpAob25105764 = nOJEAXgQQBMUYGSraKsHsDglGRpAob65991725;     nOJEAXgQQBMUYGSraKsHsDglGRpAob65991725 = nOJEAXgQQBMUYGSraKsHsDglGRpAob34585518;     nOJEAXgQQBMUYGSraKsHsDglGRpAob34585518 = nOJEAXgQQBMUYGSraKsHsDglGRpAob90047784;     nOJEAXgQQBMUYGSraKsHsDglGRpAob90047784 = nOJEAXgQQBMUYGSraKsHsDglGRpAob23562488;     nOJEAXgQQBMUYGSraKsHsDglGRpAob23562488 = nOJEAXgQQBMUYGSraKsHsDglGRpAob16102400;     nOJEAXgQQBMUYGSraKsHsDglGRpAob16102400 = nOJEAXgQQBMUYGSraKsHsDglGRpAob92313410;     nOJEAXgQQBMUYGSraKsHsDglGRpAob92313410 = nOJEAXgQQBMUYGSraKsHsDglGRpAob26001564;     nOJEAXgQQBMUYGSraKsHsDglGRpAob26001564 = nOJEAXgQQBMUYGSraKsHsDglGRpAob95476263;     nOJEAXgQQBMUYGSraKsHsDglGRpAob95476263 = nOJEAXgQQBMUYGSraKsHsDglGRpAob82136045;     nOJEAXgQQBMUYGSraKsHsDglGRpAob82136045 = nOJEAXgQQBMUYGSraKsHsDglGRpAob59485710;     nOJEAXgQQBMUYGSraKsHsDglGRpAob59485710 = nOJEAXgQQBMUYGSraKsHsDglGRpAob14524215;     nOJEAXgQQBMUYGSraKsHsDglGRpAob14524215 = nOJEAXgQQBMUYGSraKsHsDglGRpAob68264701;     nOJEAXgQQBMUYGSraKsHsDglGRpAob68264701 = nOJEAXgQQBMUYGSraKsHsDglGRpAob32011280;     nOJEAXgQQBMUYGSraKsHsDglGRpAob32011280 = nOJEAXgQQBMUYGSraKsHsDglGRpAob14713290;     nOJEAXgQQBMUYGSraKsHsDglGRpAob14713290 = nOJEAXgQQBMUYGSraKsHsDglGRpAob55695021;     nOJEAXgQQBMUYGSraKsHsDglGRpAob55695021 = nOJEAXgQQBMUYGSraKsHsDglGRpAob99350463;     nOJEAXgQQBMUYGSraKsHsDglGRpAob99350463 = nOJEAXgQQBMUYGSraKsHsDglGRpAob18257122;     nOJEAXgQQBMUYGSraKsHsDglGRpAob18257122 = nOJEAXgQQBMUYGSraKsHsDglGRpAob27028230;     nOJEAXgQQBMUYGSraKsHsDglGRpAob27028230 = nOJEAXgQQBMUYGSraKsHsDglGRpAob17455595;     nOJEAXgQQBMUYGSraKsHsDglGRpAob17455595 = nOJEAXgQQBMUYGSraKsHsDglGRpAob81715773;     nOJEAXgQQBMUYGSraKsHsDglGRpAob81715773 = nOJEAXgQQBMUYGSraKsHsDglGRpAob76983950;     nOJEAXgQQBMUYGSraKsHsDglGRpAob76983950 = nOJEAXgQQBMUYGSraKsHsDglGRpAob22045916;     nOJEAXgQQBMUYGSraKsHsDglGRpAob22045916 = nOJEAXgQQBMUYGSraKsHsDglGRpAob98263796;     nOJEAXgQQBMUYGSraKsHsDglGRpAob98263796 = nOJEAXgQQBMUYGSraKsHsDglGRpAob24539102;     nOJEAXgQQBMUYGSraKsHsDglGRpAob24539102 = nOJEAXgQQBMUYGSraKsHsDglGRpAob50198643;     nOJEAXgQQBMUYGSraKsHsDglGRpAob50198643 = nOJEAXgQQBMUYGSraKsHsDglGRpAob94843729;     nOJEAXgQQBMUYGSraKsHsDglGRpAob94843729 = nOJEAXgQQBMUYGSraKsHsDglGRpAob43957500;     nOJEAXgQQBMUYGSraKsHsDglGRpAob43957500 = nOJEAXgQQBMUYGSraKsHsDglGRpAob87612784;     nOJEAXgQQBMUYGSraKsHsDglGRpAob87612784 = nOJEAXgQQBMUYGSraKsHsDglGRpAob96501248;     nOJEAXgQQBMUYGSraKsHsDglGRpAob96501248 = nOJEAXgQQBMUYGSraKsHsDglGRpAob16236966;     nOJEAXgQQBMUYGSraKsHsDglGRpAob16236966 = nOJEAXgQQBMUYGSraKsHsDglGRpAob67849950;     nOJEAXgQQBMUYGSraKsHsDglGRpAob67849950 = nOJEAXgQQBMUYGSraKsHsDglGRpAob98755070;     nOJEAXgQQBMUYGSraKsHsDglGRpAob98755070 = nOJEAXgQQBMUYGSraKsHsDglGRpAob93461054;     nOJEAXgQQBMUYGSraKsHsDglGRpAob93461054 = nOJEAXgQQBMUYGSraKsHsDglGRpAob43152376;     nOJEAXgQQBMUYGSraKsHsDglGRpAob43152376 = nOJEAXgQQBMUYGSraKsHsDglGRpAob98290896;     nOJEAXgQQBMUYGSraKsHsDglGRpAob98290896 = nOJEAXgQQBMUYGSraKsHsDglGRpAob33689523;     nOJEAXgQQBMUYGSraKsHsDglGRpAob33689523 = nOJEAXgQQBMUYGSraKsHsDglGRpAob40072549;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void qOBCYXKjoksNZeXnfzWOOFfOt27545404() {     double kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM91236631 = -242416975;    double kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM28525571 = -604539646;    double kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM57520524 = -275395268;    double kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM57779420 = -487029893;    double kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM40973830 = -316353218;    double kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM25560485 = -717669567;    double kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM95700972 = -563637180;    double kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM42506256 = 23764248;    double kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM57485205 = -522659951;    double kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM23806483 = -58399468;    double kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM76714129 = -394617511;    double kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM21623018 = -484948749;    double kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM40452160 = -431532557;    double kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM87712911 = -856798122;    double kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM12143852 = -221712934;    double kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM70099879 = -439480977;    double kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM86540923 = -662250072;    double kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM28961731 = -883245717;    double kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM58239568 = -454590031;    double kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM82768311 = 22500706;    double kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM65709540 = -134327002;    double kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM81571899 = -528862233;    double kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM23401904 = -740139761;    double kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM71048255 = -364773116;    double kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM80390249 = -29771126;    double kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM3645690 = -714830431;    double kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM4187704 = -443700810;    double kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM4620743 = -243401575;    double kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM49408998 = -10664662;    double kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM81715543 = -319789902;    double kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM364427 = -121547184;    double kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM52244622 = -961965491;    double kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM74474771 = -816940159;    double kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM39332182 = -746911197;    double kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM19814873 = 50495981;    double kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM14532447 = -663137877;    double kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM65323821 = -950023161;    double kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM56678721 = -848837508;    double kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM98754098 = -776331233;    double kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM44836387 = -994274127;    double kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM56005630 = -1000912;    double kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM89473725 = -420272658;    double kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM26941939 = -329847109;    double kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM65101078 = 10858977;    double kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM36254845 = -393730944;    double kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM16019431 = -311554671;    double kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM37070919 = -701100369;    double kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM33771197 = -271016837;    double kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM44245051 = -2601532;    double kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM66925766 = -202419365;    double kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM55528606 = -623570529;    double kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM69876980 = -56613137;    double kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM6472659 = -982514917;    double kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM70157231 = -464251466;    double kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM61835863 = -636034292;    double kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM9664732 = -713554743;    double kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM5123667 = -864399885;    double kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM86472268 = -910622153;    double kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM77389171 = -357258768;    double kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM37328141 = -601522787;    double kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM21372782 = -173968757;    double kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM91080230 = -220235605;    double kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM93097257 = -965571090;    double kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM75769661 = -102870050;    double kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM23442056 = -936852285;    double kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM24469508 = -432652020;    double kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM47148246 = -668008590;    double kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM1119978 = -684621361;    double kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM67898039 = -807294104;    double kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM97611405 = -558575057;    double kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM4776059 = -489457817;    double kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM29862203 = -813412565;    double kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM30207633 = -6914485;    double kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM13403182 = -460315904;    double kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM26762682 = -976498382;    double kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM76235815 = -714054345;    double kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM54629960 = -99015124;    double kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM58300826 = -650998739;    double kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM34793410 = -971042172;    double kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM64370819 = -718216455;    double kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM66574771 = 86269937;    double kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM70416506 = -72683974;    double kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM60375691 = -140800044;    double kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM82483232 = -808245298;    double kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM26186937 = -696219374;    double kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM30487446 = 35065953;    double kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM45771963 = -979450575;    double kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM4317540 = -252688694;    double kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM77496319 = -10876905;    double kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM10150141 = -235949277;    double kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM9408780 = -798737992;    double kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM78851552 = 60598991;    double kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM79289549 = -391578740;    double kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM61425958 = -74808446;    double kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM23463606 = -720305371;    double kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM64925400 = -780765308;    double kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM96376467 = -454701568;    double kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM51172278 = -126977060;    double kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM41659022 = -52288739;    double kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM11785337 = -242416975;     kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM91236631 = kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM28525571;     kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM28525571 = kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM57520524;     kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM57520524 = kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM57779420;     kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM57779420 = kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM40973830;     kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM40973830 = kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM25560485;     kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM25560485 = kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM95700972;     kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM95700972 = kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM42506256;     kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM42506256 = kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM57485205;     kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM57485205 = kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM23806483;     kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM23806483 = kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM76714129;     kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM76714129 = kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM21623018;     kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM21623018 = kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM40452160;     kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM40452160 = kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM87712911;     kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM87712911 = kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM12143852;     kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM12143852 = kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM70099879;     kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM70099879 = kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM86540923;     kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM86540923 = kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM28961731;     kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM28961731 = kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM58239568;     kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM58239568 = kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM82768311;     kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM82768311 = kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM65709540;     kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM65709540 = kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM81571899;     kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM81571899 = kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM23401904;     kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM23401904 = kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM71048255;     kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM71048255 = kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM80390249;     kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM80390249 = kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM3645690;     kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM3645690 = kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM4187704;     kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM4187704 = kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM4620743;     kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM4620743 = kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM49408998;     kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM49408998 = kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM81715543;     kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM81715543 = kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM364427;     kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM364427 = kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM52244622;     kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM52244622 = kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM74474771;     kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM74474771 = kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM39332182;     kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM39332182 = kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM19814873;     kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM19814873 = kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM14532447;     kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM14532447 = kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM65323821;     kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM65323821 = kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM56678721;     kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM56678721 = kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM98754098;     kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM98754098 = kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM44836387;     kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM44836387 = kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM56005630;     kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM56005630 = kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM89473725;     kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM89473725 = kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM26941939;     kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM26941939 = kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM65101078;     kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM65101078 = kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM36254845;     kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM36254845 = kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM16019431;     kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM16019431 = kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM37070919;     kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM37070919 = kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM33771197;     kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM33771197 = kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM44245051;     kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM44245051 = kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM66925766;     kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM66925766 = kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM55528606;     kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM55528606 = kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM69876980;     kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM69876980 = kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM6472659;     kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM6472659 = kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM70157231;     kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM70157231 = kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM61835863;     kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM61835863 = kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM9664732;     kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM9664732 = kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM5123667;     kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM5123667 = kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM86472268;     kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM86472268 = kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM77389171;     kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM77389171 = kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM37328141;     kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM37328141 = kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM21372782;     kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM21372782 = kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM91080230;     kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM91080230 = kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM93097257;     kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM93097257 = kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM75769661;     kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM75769661 = kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM23442056;     kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM23442056 = kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM24469508;     kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM24469508 = kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM47148246;     kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM47148246 = kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM1119978;     kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM1119978 = kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM67898039;     kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM67898039 = kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM97611405;     kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM97611405 = kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM4776059;     kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM4776059 = kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM29862203;     kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM29862203 = kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM30207633;     kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM30207633 = kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM13403182;     kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM13403182 = kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM26762682;     kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM26762682 = kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM76235815;     kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM76235815 = kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM54629960;     kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM54629960 = kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM58300826;     kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM58300826 = kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM34793410;     kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM34793410 = kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM64370819;     kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM64370819 = kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM66574771;     kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM66574771 = kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM70416506;     kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM70416506 = kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM60375691;     kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM60375691 = kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM82483232;     kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM82483232 = kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM26186937;     kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM26186937 = kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM30487446;     kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM30487446 = kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM45771963;     kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM45771963 = kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM4317540;     kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM4317540 = kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM77496319;     kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM77496319 = kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM10150141;     kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM10150141 = kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM9408780;     kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM9408780 = kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM78851552;     kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM78851552 = kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM79289549;     kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM79289549 = kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM61425958;     kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM61425958 = kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM23463606;     kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM23463606 = kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM64925400;     kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM64925400 = kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM96376467;     kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM96376467 = kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM51172278;     kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM51172278 = kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM41659022;     kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM41659022 = kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM11785337;     kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM11785337 = kMxmTZCUiQHLdxhhWCVrTOwYlAtmAM91236631;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void UoXvsuMHoekfWgAgTRuSYiuoN37150130() {     double HJHPcyEWkFcdNoYDJHyqZtmptwOhCq13058853 = -810632307;    double HJHPcyEWkFcdNoYDJHyqZtmptwOhCq89993374 = -987138499;    double HJHPcyEWkFcdNoYDJHyqZtmptwOhCq3247795 = -322612800;    double HJHPcyEWkFcdNoYDJHyqZtmptwOhCq89154566 = -691814069;    double HJHPcyEWkFcdNoYDJHyqZtmptwOhCq1108161 = -193604139;    double HJHPcyEWkFcdNoYDJHyqZtmptwOhCq49578800 = -729212725;    double HJHPcyEWkFcdNoYDJHyqZtmptwOhCq24721557 = -626955304;    double HJHPcyEWkFcdNoYDJHyqZtmptwOhCq29368885 = 15583400;    double HJHPcyEWkFcdNoYDJHyqZtmptwOhCq54008844 = -508455369;    double HJHPcyEWkFcdNoYDJHyqZtmptwOhCq85089708 = 71382134;    double HJHPcyEWkFcdNoYDJHyqZtmptwOhCq47630398 = 49624786;    double HJHPcyEWkFcdNoYDJHyqZtmptwOhCq37804901 = -588130356;    double HJHPcyEWkFcdNoYDJHyqZtmptwOhCq73441102 = -969566346;    double HJHPcyEWkFcdNoYDJHyqZtmptwOhCq54679379 = -606874919;    double HJHPcyEWkFcdNoYDJHyqZtmptwOhCq7401648 = -148554853;    double HJHPcyEWkFcdNoYDJHyqZtmptwOhCq18070606 = -881847518;    double HJHPcyEWkFcdNoYDJHyqZtmptwOhCq79989983 = 51925210;    double HJHPcyEWkFcdNoYDJHyqZtmptwOhCq91487034 = -804966635;    double HJHPcyEWkFcdNoYDJHyqZtmptwOhCq62876792 = -527725688;    double HJHPcyEWkFcdNoYDJHyqZtmptwOhCq63877954 = -468744349;    double HJHPcyEWkFcdNoYDJHyqZtmptwOhCq22863826 = -966405705;    double HJHPcyEWkFcdNoYDJHyqZtmptwOhCq45973878 = -599613398;    double HJHPcyEWkFcdNoYDJHyqZtmptwOhCq32873308 = -296167116;    double HJHPcyEWkFcdNoYDJHyqZtmptwOhCq8325878 = -774871981;    double HJHPcyEWkFcdNoYDJHyqZtmptwOhCq54320916 = 59331902;    double HJHPcyEWkFcdNoYDJHyqZtmptwOhCq93221543 = 57984041;    double HJHPcyEWkFcdNoYDJHyqZtmptwOhCq77224307 = 29495146;    double HJHPcyEWkFcdNoYDJHyqZtmptwOhCq40200568 = -107849808;    double HJHPcyEWkFcdNoYDJHyqZtmptwOhCq97305910 = -777610580;    double HJHPcyEWkFcdNoYDJHyqZtmptwOhCq27532621 = -696004096;    double HJHPcyEWkFcdNoYDJHyqZtmptwOhCq51529692 = -527274931;    double HJHPcyEWkFcdNoYDJHyqZtmptwOhCq71135947 = -737854322;    double HJHPcyEWkFcdNoYDJHyqZtmptwOhCq99794236 = -559544042;    double HJHPcyEWkFcdNoYDJHyqZtmptwOhCq11871300 = -422730824;    double HJHPcyEWkFcdNoYDJHyqZtmptwOhCq649086 = -99322621;    double HJHPcyEWkFcdNoYDJHyqZtmptwOhCq84109406 = -677553857;    double HJHPcyEWkFcdNoYDJHyqZtmptwOhCq8406078 = -999640258;    double HJHPcyEWkFcdNoYDJHyqZtmptwOhCq60616583 = -330380265;    double HJHPcyEWkFcdNoYDJHyqZtmptwOhCq59134544 = -548736513;    double HJHPcyEWkFcdNoYDJHyqZtmptwOhCq57507033 = -351823128;    double HJHPcyEWkFcdNoYDJHyqZtmptwOhCq10381476 = -435140170;    double HJHPcyEWkFcdNoYDJHyqZtmptwOhCq5975897 = -107738735;    double HJHPcyEWkFcdNoYDJHyqZtmptwOhCq74309338 = -373813924;    double HJHPcyEWkFcdNoYDJHyqZtmptwOhCq13195937 = -997947192;    double HJHPcyEWkFcdNoYDJHyqZtmptwOhCq16170656 = -580419573;    double HJHPcyEWkFcdNoYDJHyqZtmptwOhCq55225909 = -14986901;    double HJHPcyEWkFcdNoYDJHyqZtmptwOhCq62739030 = -882107889;    double HJHPcyEWkFcdNoYDJHyqZtmptwOhCq15610949 = -9512825;    double HJHPcyEWkFcdNoYDJHyqZtmptwOhCq51309143 = -187717954;    double HJHPcyEWkFcdNoYDJHyqZtmptwOhCq82973242 = -181474550;    double HJHPcyEWkFcdNoYDJHyqZtmptwOhCq43990425 = -667459855;    double HJHPcyEWkFcdNoYDJHyqZtmptwOhCq66265644 = -381991218;    double HJHPcyEWkFcdNoYDJHyqZtmptwOhCq97695523 = -946110056;    double HJHPcyEWkFcdNoYDJHyqZtmptwOhCq98182353 = -655260526;    double HJHPcyEWkFcdNoYDJHyqZtmptwOhCq14286305 = -597156041;    double HJHPcyEWkFcdNoYDJHyqZtmptwOhCq67084975 = -111018910;    double HJHPcyEWkFcdNoYDJHyqZtmptwOhCq57120066 = -590971383;    double HJHPcyEWkFcdNoYDJHyqZtmptwOhCq94921917 = -547740819;    double HJHPcyEWkFcdNoYDJHyqZtmptwOhCq34833651 = -651145971;    double HJHPcyEWkFcdNoYDJHyqZtmptwOhCq7886618 = -151588181;    double HJHPcyEWkFcdNoYDJHyqZtmptwOhCq72354493 = -658707871;    double HJHPcyEWkFcdNoYDJHyqZtmptwOhCq84520989 = -419105496;    double HJHPcyEWkFcdNoYDJHyqZtmptwOhCq32062974 = -206806020;    double HJHPcyEWkFcdNoYDJHyqZtmptwOhCq26476224 = -812451274;    double HJHPcyEWkFcdNoYDJHyqZtmptwOhCq33560016 = -401342935;    double HJHPcyEWkFcdNoYDJHyqZtmptwOhCq76494451 = -212520892;    double HJHPcyEWkFcdNoYDJHyqZtmptwOhCq38010665 = 71413686;    double HJHPcyEWkFcdNoYDJHyqZtmptwOhCq61569802 = -446835522;    double HJHPcyEWkFcdNoYDJHyqZtmptwOhCq54030294 = -407552299;    double HJHPcyEWkFcdNoYDJHyqZtmptwOhCq23292241 = -471000996;    double HJHPcyEWkFcdNoYDJHyqZtmptwOhCq9664528 = -882207261;    double HJHPcyEWkFcdNoYDJHyqZtmptwOhCq19373401 = -617694525;    double HJHPcyEWkFcdNoYDJHyqZtmptwOhCq32352490 = -156230122;    double HJHPcyEWkFcdNoYDJHyqZtmptwOhCq5369760 = -75902560;    double HJHPcyEWkFcdNoYDJHyqZtmptwOhCq53496478 = 66395820;    double HJHPcyEWkFcdNoYDJHyqZtmptwOhCq16887929 = -758666970;    double HJHPcyEWkFcdNoYDJHyqZtmptwOhCq71664539 = -125799474;    double HJHPcyEWkFcdNoYDJHyqZtmptwOhCq19677372 = -298219925;    double HJHPcyEWkFcdNoYDJHyqZtmptwOhCq92155221 = -94452408;    double HJHPcyEWkFcdNoYDJHyqZtmptwOhCq99095006 = -925681197;    double HJHPcyEWkFcdNoYDJHyqZtmptwOhCq30482513 = -59908071;    double HJHPcyEWkFcdNoYDJHyqZtmptwOhCq61613358 = -960992030;    double HJHPcyEWkFcdNoYDJHyqZtmptwOhCq88891424 = -920131854;    double HJHPcyEWkFcdNoYDJHyqZtmptwOhCq14332668 = -496136031;    double HJHPcyEWkFcdNoYDJHyqZtmptwOhCq83542195 = 71455758;    double HJHPcyEWkFcdNoYDJHyqZtmptwOhCq85264048 = -45283714;    double HJHPcyEWkFcdNoYDJHyqZtmptwOhCq73440424 = -791744266;    double HJHPcyEWkFcdNoYDJHyqZtmptwOhCq1611883 = -904283517;    double HJHPcyEWkFcdNoYDJHyqZtmptwOhCq97584994 = -825574783;    double HJHPcyEWkFcdNoYDJHyqZtmptwOhCq33564111 = -988303712;    double HJHPcyEWkFcdNoYDJHyqZtmptwOhCq26989341 = 13417526;    double HJHPcyEWkFcdNoYDJHyqZtmptwOhCq13484161 = -351899439;    double HJHPcyEWkFcdNoYDJHyqZtmptwOhCq25782933 = -679234295;    double HJHPcyEWkFcdNoYDJHyqZtmptwOhCq51247927 = -297148333;    double HJHPcyEWkFcdNoYDJHyqZtmptwOhCq85152539 = -693115258;    double HJHPcyEWkFcdNoYDJHyqZtmptwOhCq25860487 = 83965325;    double HJHPcyEWkFcdNoYDJHyqZtmptwOhCq73912922 = -900932715;    double HJHPcyEWkFcdNoYDJHyqZtmptwOhCq47833114 = -561362651;    double HJHPcyEWkFcdNoYDJHyqZtmptwOhCq79635920 = -496604258;    double HJHPcyEWkFcdNoYDJHyqZtmptwOhCq39676205 = -810632307;     HJHPcyEWkFcdNoYDJHyqZtmptwOhCq13058853 = HJHPcyEWkFcdNoYDJHyqZtmptwOhCq89993374;     HJHPcyEWkFcdNoYDJHyqZtmptwOhCq89993374 = HJHPcyEWkFcdNoYDJHyqZtmptwOhCq3247795;     HJHPcyEWkFcdNoYDJHyqZtmptwOhCq3247795 = HJHPcyEWkFcdNoYDJHyqZtmptwOhCq89154566;     HJHPcyEWkFcdNoYDJHyqZtmptwOhCq89154566 = HJHPcyEWkFcdNoYDJHyqZtmptwOhCq1108161;     HJHPcyEWkFcdNoYDJHyqZtmptwOhCq1108161 = HJHPcyEWkFcdNoYDJHyqZtmptwOhCq49578800;     HJHPcyEWkFcdNoYDJHyqZtmptwOhCq49578800 = HJHPcyEWkFcdNoYDJHyqZtmptwOhCq24721557;     HJHPcyEWkFcdNoYDJHyqZtmptwOhCq24721557 = HJHPcyEWkFcdNoYDJHyqZtmptwOhCq29368885;     HJHPcyEWkFcdNoYDJHyqZtmptwOhCq29368885 = HJHPcyEWkFcdNoYDJHyqZtmptwOhCq54008844;     HJHPcyEWkFcdNoYDJHyqZtmptwOhCq54008844 = HJHPcyEWkFcdNoYDJHyqZtmptwOhCq85089708;     HJHPcyEWkFcdNoYDJHyqZtmptwOhCq85089708 = HJHPcyEWkFcdNoYDJHyqZtmptwOhCq47630398;     HJHPcyEWkFcdNoYDJHyqZtmptwOhCq47630398 = HJHPcyEWkFcdNoYDJHyqZtmptwOhCq37804901;     HJHPcyEWkFcdNoYDJHyqZtmptwOhCq37804901 = HJHPcyEWkFcdNoYDJHyqZtmptwOhCq73441102;     HJHPcyEWkFcdNoYDJHyqZtmptwOhCq73441102 = HJHPcyEWkFcdNoYDJHyqZtmptwOhCq54679379;     HJHPcyEWkFcdNoYDJHyqZtmptwOhCq54679379 = HJHPcyEWkFcdNoYDJHyqZtmptwOhCq7401648;     HJHPcyEWkFcdNoYDJHyqZtmptwOhCq7401648 = HJHPcyEWkFcdNoYDJHyqZtmptwOhCq18070606;     HJHPcyEWkFcdNoYDJHyqZtmptwOhCq18070606 = HJHPcyEWkFcdNoYDJHyqZtmptwOhCq79989983;     HJHPcyEWkFcdNoYDJHyqZtmptwOhCq79989983 = HJHPcyEWkFcdNoYDJHyqZtmptwOhCq91487034;     HJHPcyEWkFcdNoYDJHyqZtmptwOhCq91487034 = HJHPcyEWkFcdNoYDJHyqZtmptwOhCq62876792;     HJHPcyEWkFcdNoYDJHyqZtmptwOhCq62876792 = HJHPcyEWkFcdNoYDJHyqZtmptwOhCq63877954;     HJHPcyEWkFcdNoYDJHyqZtmptwOhCq63877954 = HJHPcyEWkFcdNoYDJHyqZtmptwOhCq22863826;     HJHPcyEWkFcdNoYDJHyqZtmptwOhCq22863826 = HJHPcyEWkFcdNoYDJHyqZtmptwOhCq45973878;     HJHPcyEWkFcdNoYDJHyqZtmptwOhCq45973878 = HJHPcyEWkFcdNoYDJHyqZtmptwOhCq32873308;     HJHPcyEWkFcdNoYDJHyqZtmptwOhCq32873308 = HJHPcyEWkFcdNoYDJHyqZtmptwOhCq8325878;     HJHPcyEWkFcdNoYDJHyqZtmptwOhCq8325878 = HJHPcyEWkFcdNoYDJHyqZtmptwOhCq54320916;     HJHPcyEWkFcdNoYDJHyqZtmptwOhCq54320916 = HJHPcyEWkFcdNoYDJHyqZtmptwOhCq93221543;     HJHPcyEWkFcdNoYDJHyqZtmptwOhCq93221543 = HJHPcyEWkFcdNoYDJHyqZtmptwOhCq77224307;     HJHPcyEWkFcdNoYDJHyqZtmptwOhCq77224307 = HJHPcyEWkFcdNoYDJHyqZtmptwOhCq40200568;     HJHPcyEWkFcdNoYDJHyqZtmptwOhCq40200568 = HJHPcyEWkFcdNoYDJHyqZtmptwOhCq97305910;     HJHPcyEWkFcdNoYDJHyqZtmptwOhCq97305910 = HJHPcyEWkFcdNoYDJHyqZtmptwOhCq27532621;     HJHPcyEWkFcdNoYDJHyqZtmptwOhCq27532621 = HJHPcyEWkFcdNoYDJHyqZtmptwOhCq51529692;     HJHPcyEWkFcdNoYDJHyqZtmptwOhCq51529692 = HJHPcyEWkFcdNoYDJHyqZtmptwOhCq71135947;     HJHPcyEWkFcdNoYDJHyqZtmptwOhCq71135947 = HJHPcyEWkFcdNoYDJHyqZtmptwOhCq99794236;     HJHPcyEWkFcdNoYDJHyqZtmptwOhCq99794236 = HJHPcyEWkFcdNoYDJHyqZtmptwOhCq11871300;     HJHPcyEWkFcdNoYDJHyqZtmptwOhCq11871300 = HJHPcyEWkFcdNoYDJHyqZtmptwOhCq649086;     HJHPcyEWkFcdNoYDJHyqZtmptwOhCq649086 = HJHPcyEWkFcdNoYDJHyqZtmptwOhCq84109406;     HJHPcyEWkFcdNoYDJHyqZtmptwOhCq84109406 = HJHPcyEWkFcdNoYDJHyqZtmptwOhCq8406078;     HJHPcyEWkFcdNoYDJHyqZtmptwOhCq8406078 = HJHPcyEWkFcdNoYDJHyqZtmptwOhCq60616583;     HJHPcyEWkFcdNoYDJHyqZtmptwOhCq60616583 = HJHPcyEWkFcdNoYDJHyqZtmptwOhCq59134544;     HJHPcyEWkFcdNoYDJHyqZtmptwOhCq59134544 = HJHPcyEWkFcdNoYDJHyqZtmptwOhCq57507033;     HJHPcyEWkFcdNoYDJHyqZtmptwOhCq57507033 = HJHPcyEWkFcdNoYDJHyqZtmptwOhCq10381476;     HJHPcyEWkFcdNoYDJHyqZtmptwOhCq10381476 = HJHPcyEWkFcdNoYDJHyqZtmptwOhCq5975897;     HJHPcyEWkFcdNoYDJHyqZtmptwOhCq5975897 = HJHPcyEWkFcdNoYDJHyqZtmptwOhCq74309338;     HJHPcyEWkFcdNoYDJHyqZtmptwOhCq74309338 = HJHPcyEWkFcdNoYDJHyqZtmptwOhCq13195937;     HJHPcyEWkFcdNoYDJHyqZtmptwOhCq13195937 = HJHPcyEWkFcdNoYDJHyqZtmptwOhCq16170656;     HJHPcyEWkFcdNoYDJHyqZtmptwOhCq16170656 = HJHPcyEWkFcdNoYDJHyqZtmptwOhCq55225909;     HJHPcyEWkFcdNoYDJHyqZtmptwOhCq55225909 = HJHPcyEWkFcdNoYDJHyqZtmptwOhCq62739030;     HJHPcyEWkFcdNoYDJHyqZtmptwOhCq62739030 = HJHPcyEWkFcdNoYDJHyqZtmptwOhCq15610949;     HJHPcyEWkFcdNoYDJHyqZtmptwOhCq15610949 = HJHPcyEWkFcdNoYDJHyqZtmptwOhCq51309143;     HJHPcyEWkFcdNoYDJHyqZtmptwOhCq51309143 = HJHPcyEWkFcdNoYDJHyqZtmptwOhCq82973242;     HJHPcyEWkFcdNoYDJHyqZtmptwOhCq82973242 = HJHPcyEWkFcdNoYDJHyqZtmptwOhCq43990425;     HJHPcyEWkFcdNoYDJHyqZtmptwOhCq43990425 = HJHPcyEWkFcdNoYDJHyqZtmptwOhCq66265644;     HJHPcyEWkFcdNoYDJHyqZtmptwOhCq66265644 = HJHPcyEWkFcdNoYDJHyqZtmptwOhCq97695523;     HJHPcyEWkFcdNoYDJHyqZtmptwOhCq97695523 = HJHPcyEWkFcdNoYDJHyqZtmptwOhCq98182353;     HJHPcyEWkFcdNoYDJHyqZtmptwOhCq98182353 = HJHPcyEWkFcdNoYDJHyqZtmptwOhCq14286305;     HJHPcyEWkFcdNoYDJHyqZtmptwOhCq14286305 = HJHPcyEWkFcdNoYDJHyqZtmptwOhCq67084975;     HJHPcyEWkFcdNoYDJHyqZtmptwOhCq67084975 = HJHPcyEWkFcdNoYDJHyqZtmptwOhCq57120066;     HJHPcyEWkFcdNoYDJHyqZtmptwOhCq57120066 = HJHPcyEWkFcdNoYDJHyqZtmptwOhCq94921917;     HJHPcyEWkFcdNoYDJHyqZtmptwOhCq94921917 = HJHPcyEWkFcdNoYDJHyqZtmptwOhCq34833651;     HJHPcyEWkFcdNoYDJHyqZtmptwOhCq34833651 = HJHPcyEWkFcdNoYDJHyqZtmptwOhCq7886618;     HJHPcyEWkFcdNoYDJHyqZtmptwOhCq7886618 = HJHPcyEWkFcdNoYDJHyqZtmptwOhCq72354493;     HJHPcyEWkFcdNoYDJHyqZtmptwOhCq72354493 = HJHPcyEWkFcdNoYDJHyqZtmptwOhCq84520989;     HJHPcyEWkFcdNoYDJHyqZtmptwOhCq84520989 = HJHPcyEWkFcdNoYDJHyqZtmptwOhCq32062974;     HJHPcyEWkFcdNoYDJHyqZtmptwOhCq32062974 = HJHPcyEWkFcdNoYDJHyqZtmptwOhCq26476224;     HJHPcyEWkFcdNoYDJHyqZtmptwOhCq26476224 = HJHPcyEWkFcdNoYDJHyqZtmptwOhCq33560016;     HJHPcyEWkFcdNoYDJHyqZtmptwOhCq33560016 = HJHPcyEWkFcdNoYDJHyqZtmptwOhCq76494451;     HJHPcyEWkFcdNoYDJHyqZtmptwOhCq76494451 = HJHPcyEWkFcdNoYDJHyqZtmptwOhCq38010665;     HJHPcyEWkFcdNoYDJHyqZtmptwOhCq38010665 = HJHPcyEWkFcdNoYDJHyqZtmptwOhCq61569802;     HJHPcyEWkFcdNoYDJHyqZtmptwOhCq61569802 = HJHPcyEWkFcdNoYDJHyqZtmptwOhCq54030294;     HJHPcyEWkFcdNoYDJHyqZtmptwOhCq54030294 = HJHPcyEWkFcdNoYDJHyqZtmptwOhCq23292241;     HJHPcyEWkFcdNoYDJHyqZtmptwOhCq23292241 = HJHPcyEWkFcdNoYDJHyqZtmptwOhCq9664528;     HJHPcyEWkFcdNoYDJHyqZtmptwOhCq9664528 = HJHPcyEWkFcdNoYDJHyqZtmptwOhCq19373401;     HJHPcyEWkFcdNoYDJHyqZtmptwOhCq19373401 = HJHPcyEWkFcdNoYDJHyqZtmptwOhCq32352490;     HJHPcyEWkFcdNoYDJHyqZtmptwOhCq32352490 = HJHPcyEWkFcdNoYDJHyqZtmptwOhCq5369760;     HJHPcyEWkFcdNoYDJHyqZtmptwOhCq5369760 = HJHPcyEWkFcdNoYDJHyqZtmptwOhCq53496478;     HJHPcyEWkFcdNoYDJHyqZtmptwOhCq53496478 = HJHPcyEWkFcdNoYDJHyqZtmptwOhCq16887929;     HJHPcyEWkFcdNoYDJHyqZtmptwOhCq16887929 = HJHPcyEWkFcdNoYDJHyqZtmptwOhCq71664539;     HJHPcyEWkFcdNoYDJHyqZtmptwOhCq71664539 = HJHPcyEWkFcdNoYDJHyqZtmptwOhCq19677372;     HJHPcyEWkFcdNoYDJHyqZtmptwOhCq19677372 = HJHPcyEWkFcdNoYDJHyqZtmptwOhCq92155221;     HJHPcyEWkFcdNoYDJHyqZtmptwOhCq92155221 = HJHPcyEWkFcdNoYDJHyqZtmptwOhCq99095006;     HJHPcyEWkFcdNoYDJHyqZtmptwOhCq99095006 = HJHPcyEWkFcdNoYDJHyqZtmptwOhCq30482513;     HJHPcyEWkFcdNoYDJHyqZtmptwOhCq30482513 = HJHPcyEWkFcdNoYDJHyqZtmptwOhCq61613358;     HJHPcyEWkFcdNoYDJHyqZtmptwOhCq61613358 = HJHPcyEWkFcdNoYDJHyqZtmptwOhCq88891424;     HJHPcyEWkFcdNoYDJHyqZtmptwOhCq88891424 = HJHPcyEWkFcdNoYDJHyqZtmptwOhCq14332668;     HJHPcyEWkFcdNoYDJHyqZtmptwOhCq14332668 = HJHPcyEWkFcdNoYDJHyqZtmptwOhCq83542195;     HJHPcyEWkFcdNoYDJHyqZtmptwOhCq83542195 = HJHPcyEWkFcdNoYDJHyqZtmptwOhCq85264048;     HJHPcyEWkFcdNoYDJHyqZtmptwOhCq85264048 = HJHPcyEWkFcdNoYDJHyqZtmptwOhCq73440424;     HJHPcyEWkFcdNoYDJHyqZtmptwOhCq73440424 = HJHPcyEWkFcdNoYDJHyqZtmptwOhCq1611883;     HJHPcyEWkFcdNoYDJHyqZtmptwOhCq1611883 = HJHPcyEWkFcdNoYDJHyqZtmptwOhCq97584994;     HJHPcyEWkFcdNoYDJHyqZtmptwOhCq97584994 = HJHPcyEWkFcdNoYDJHyqZtmptwOhCq33564111;     HJHPcyEWkFcdNoYDJHyqZtmptwOhCq33564111 = HJHPcyEWkFcdNoYDJHyqZtmptwOhCq26989341;     HJHPcyEWkFcdNoYDJHyqZtmptwOhCq26989341 = HJHPcyEWkFcdNoYDJHyqZtmptwOhCq13484161;     HJHPcyEWkFcdNoYDJHyqZtmptwOhCq13484161 = HJHPcyEWkFcdNoYDJHyqZtmptwOhCq25782933;     HJHPcyEWkFcdNoYDJHyqZtmptwOhCq25782933 = HJHPcyEWkFcdNoYDJHyqZtmptwOhCq51247927;     HJHPcyEWkFcdNoYDJHyqZtmptwOhCq51247927 = HJHPcyEWkFcdNoYDJHyqZtmptwOhCq85152539;     HJHPcyEWkFcdNoYDJHyqZtmptwOhCq85152539 = HJHPcyEWkFcdNoYDJHyqZtmptwOhCq25860487;     HJHPcyEWkFcdNoYDJHyqZtmptwOhCq25860487 = HJHPcyEWkFcdNoYDJHyqZtmptwOhCq73912922;     HJHPcyEWkFcdNoYDJHyqZtmptwOhCq73912922 = HJHPcyEWkFcdNoYDJHyqZtmptwOhCq47833114;     HJHPcyEWkFcdNoYDJHyqZtmptwOhCq47833114 = HJHPcyEWkFcdNoYDJHyqZtmptwOhCq79635920;     HJHPcyEWkFcdNoYDJHyqZtmptwOhCq79635920 = HJHPcyEWkFcdNoYDJHyqZtmptwOhCq39676205;     HJHPcyEWkFcdNoYDJHyqZtmptwOhCq39676205 = HJHPcyEWkFcdNoYDJHyqZtmptwOhCq13058853;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void yjRGEFAkPxWUMHySUJwoIuSjg98997388() {     double ctABOeryKCeDiAzlAlAKsdByuhcLor64222935 = -633222650;    double ctABOeryKCeDiAzlAlAKsdByuhcLor21359978 = -440689177;    double ctABOeryKCeDiAzlAlAKsdByuhcLor70319357 = -984664486;    double ctABOeryKCeDiAzlAlAKsdByuhcLor65678286 = -527000685;    double ctABOeryKCeDiAzlAlAKsdByuhcLor48632272 = -755804035;    double ctABOeryKCeDiAzlAlAKsdByuhcLor18402786 = -738607543;    double ctABOeryKCeDiAzlAlAKsdByuhcLor3910582 = -396034185;    double ctABOeryKCeDiAzlAlAKsdByuhcLor28603184 = -449957675;    double ctABOeryKCeDiAzlAlAKsdByuhcLor87407593 = -114549529;    double ctABOeryKCeDiAzlAlAKsdByuhcLor20045987 = -234547783;    double ctABOeryKCeDiAzlAlAKsdByuhcLor96618111 = -530703059;    double ctABOeryKCeDiAzlAlAKsdByuhcLor22731890 = -111026531;    double ctABOeryKCeDiAzlAlAKsdByuhcLor58455572 = -519721551;    double ctABOeryKCeDiAzlAlAKsdByuhcLor91643033 = -901076558;    double ctABOeryKCeDiAzlAlAKsdByuhcLor65111532 = -988359620;    double ctABOeryKCeDiAzlAlAKsdByuhcLor8077239 = -987026123;    double ctABOeryKCeDiAzlAlAKsdByuhcLor35438975 = -244328948;    double ctABOeryKCeDiAzlAlAKsdByuhcLor56719376 = -34592978;    double ctABOeryKCeDiAzlAlAKsdByuhcLor6234504 = -511655669;    double ctABOeryKCeDiAzlAlAKsdByuhcLor58274650 = 70352448;    double ctABOeryKCeDiAzlAlAKsdByuhcLor4551781 = -500271641;    double ctABOeryKCeDiAzlAlAKsdByuhcLor27276357 = -849071140;    double ctABOeryKCeDiAzlAlAKsdByuhcLor77279300 = -843309169;    double ctABOeryKCeDiAzlAlAKsdByuhcLor55404070 = -373490463;    double ctABOeryKCeDiAzlAlAKsdByuhcLor92569884 = -602354236;    double ctABOeryKCeDiAzlAlAKsdByuhcLor68773893 = -79122970;    double ctABOeryKCeDiAzlAlAKsdByuhcLor12221707 = -502930836;    double ctABOeryKCeDiAzlAlAKsdByuhcLor3401693 = -76141262;    double ctABOeryKCeDiAzlAlAKsdByuhcLor25738783 = -796268596;    double ctABOeryKCeDiAzlAlAKsdByuhcLor10267473 = -189254594;    double ctABOeryKCeDiAzlAlAKsdByuhcLor29035640 = -471662227;    double ctABOeryKCeDiAzlAlAKsdByuhcLor30239670 = -577267751;    double ctABOeryKCeDiAzlAlAKsdByuhcLor27620764 = -557130532;    double ctABOeryKCeDiAzlAlAKsdByuhcLor19328280 = -411702499;    double ctABOeryKCeDiAzlAlAKsdByuhcLor85817099 = -661508369;    double ctABOeryKCeDiAzlAlAKsdByuhcLor36521297 = -692509035;    double ctABOeryKCeDiAzlAlAKsdByuhcLor19638216 = -960317525;    double ctABOeryKCeDiAzlAlAKsdByuhcLor81679635 = -23072594;    double ctABOeryKCeDiAzlAlAKsdByuhcLor76295298 = 21905427;    double ctABOeryKCeDiAzlAlAKsdByuhcLor46947273 = -901195453;    double ctABOeryKCeDiAzlAlAKsdByuhcLor92539705 = -573204448;    double ctABOeryKCeDiAzlAlAKsdByuhcLor79692737 = -219607826;    double ctABOeryKCeDiAzlAlAKsdByuhcLor32993137 = -990156941;    double ctABOeryKCeDiAzlAlAKsdByuhcLor14014394 = -391742833;    double ctABOeryKCeDiAzlAlAKsdByuhcLor84150460 = -931721210;    double ctABOeryKCeDiAzlAlAKsdByuhcLor28454522 = -872126647;    double ctABOeryKCeDiAzlAlAKsdByuhcLor89973730 = -328326232;    double ctABOeryKCeDiAzlAlAKsdByuhcLor7220072 = 95360125;    double ctABOeryKCeDiAzlAlAKsdByuhcLor71590173 = 49165731;    double ctABOeryKCeDiAzlAlAKsdByuhcLor10638656 = -564545743;    double ctABOeryKCeDiAzlAlAKsdByuhcLor77522290 = -743332066;    double ctABOeryKCeDiAzlAlAKsdByuhcLor35330061 = -20295325;    double ctABOeryKCeDiAzlAlAKsdByuhcLor9291079 = -873961162;    double ctABOeryKCeDiAzlAlAKsdByuhcLor46230442 = -717307940;    double ctABOeryKCeDiAzlAlAKsdByuhcLor94445608 = -204236154;    double ctABOeryKCeDiAzlAlAKsdByuhcLor36946578 = -784151511;    double ctABOeryKCeDiAzlAlAKsdByuhcLor44080677 = -597380009;    double ctABOeryKCeDiAzlAlAKsdByuhcLor14915287 = -511174023;    double ctABOeryKCeDiAzlAlAKsdByuhcLor73108402 = -924646450;    double ctABOeryKCeDiAzlAlAKsdByuhcLor79858379 = -576681065;    double ctABOeryKCeDiAzlAlAKsdByuhcLor6181079 = -135676707;    double ctABOeryKCeDiAzlAlAKsdByuhcLor508889 = -219892923;    double ctABOeryKCeDiAzlAlAKsdByuhcLor2864402 = -653689080;    double ctABOeryKCeDiAzlAlAKsdByuhcLor77140121 = -925294936;    double ctABOeryKCeDiAzlAlAKsdByuhcLor91010347 = -762885557;    double ctABOeryKCeDiAzlAlAKsdByuhcLor66378442 = -953435308;    double ctABOeryKCeDiAzlAlAKsdByuhcLor95111126 = -553896000;    double ctABOeryKCeDiAzlAlAKsdByuhcLor39127292 = -8019052;    double ctABOeryKCeDiAzlAlAKsdByuhcLor5825934 = -139568190;    double ctABOeryKCeDiAzlAlAKsdByuhcLor28590235 = -195850586;    double ctABOeryKCeDiAzlAlAKsdByuhcLor88439022 = 73291402;    double ctABOeryKCeDiAzlAlAKsdByuhcLor53759339 = -121256354;    double ctABOeryKCeDiAzlAlAKsdByuhcLor80424077 = 43501595;    double ctABOeryKCeDiAzlAlAKsdByuhcLor59287231 = -610460217;    double ctABOeryKCeDiAzlAlAKsdByuhcLor65734945 = -356443104;    double ctABOeryKCeDiAzlAlAKsdByuhcLor24859043 = -180663815;    double ctABOeryKCeDiAzlAlAKsdByuhcLor94283219 = -858914199;    double ctABOeryKCeDiAzlAlAKsdByuhcLor63264907 = -351566336;    double ctABOeryKCeDiAzlAlAKsdByuhcLor71253610 = -441769254;    double ctABOeryKCeDiAzlAlAKsdByuhcLor64115362 = -730227589;    double ctABOeryKCeDiAzlAlAKsdByuhcLor78800162 = -750796739;    double ctABOeryKCeDiAzlAlAKsdByuhcLor5001636 = -498290962;    double ctABOeryKCeDiAzlAlAKsdByuhcLor31811520 = -25306993;    double ctABOeryKCeDiAzlAlAKsdByuhcLor15100127 = -131722854;    double ctABOeryKCeDiAzlAlAKsdByuhcLor32745182 = -445922528;    double ctABOeryKCeDiAzlAlAKsdByuhcLor93705579 = -351366903;    double ctABOeryKCeDiAzlAlAKsdByuhcLor20948591 = -703306589;    double ctABOeryKCeDiAzlAlAKsdByuhcLor81390321 = -839822593;    double ctABOeryKCeDiAzlAlAKsdByuhcLor24882672 = -107466346;    double ctABOeryKCeDiAzlAlAKsdByuhcLor48870521 = -877356859;    double ctABOeryKCeDiAzlAlAKsdByuhcLor92440620 = 4870974;    double ctABOeryKCeDiAzlAlAKsdByuhcLor4722929 = -349143502;    double ctABOeryKCeDiAzlAlAKsdByuhcLor8571234 = -98426145;    double ctABOeryKCeDiAzlAlAKsdByuhcLor96436919 = -401413509;    double ctABOeryKCeDiAzlAlAKsdByuhcLor40766194 = -665518746;    double ctABOeryKCeDiAzlAlAKsdByuhcLor92030817 = -253311525;    double ctABOeryKCeDiAzlAlAKsdByuhcLor76828336 = -565918746;    double ctABOeryKCeDiAzlAlAKsdByuhcLor55853015 = 35137994;    double ctABOeryKCeDiAzlAlAKsdByuhcLor23004047 = -628857277;    double ctABOeryKCeDiAzlAlAKsdByuhcLor17772019 = -633222650;     ctABOeryKCeDiAzlAlAKsdByuhcLor64222935 = ctABOeryKCeDiAzlAlAKsdByuhcLor21359978;     ctABOeryKCeDiAzlAlAKsdByuhcLor21359978 = ctABOeryKCeDiAzlAlAKsdByuhcLor70319357;     ctABOeryKCeDiAzlAlAKsdByuhcLor70319357 = ctABOeryKCeDiAzlAlAKsdByuhcLor65678286;     ctABOeryKCeDiAzlAlAKsdByuhcLor65678286 = ctABOeryKCeDiAzlAlAKsdByuhcLor48632272;     ctABOeryKCeDiAzlAlAKsdByuhcLor48632272 = ctABOeryKCeDiAzlAlAKsdByuhcLor18402786;     ctABOeryKCeDiAzlAlAKsdByuhcLor18402786 = ctABOeryKCeDiAzlAlAKsdByuhcLor3910582;     ctABOeryKCeDiAzlAlAKsdByuhcLor3910582 = ctABOeryKCeDiAzlAlAKsdByuhcLor28603184;     ctABOeryKCeDiAzlAlAKsdByuhcLor28603184 = ctABOeryKCeDiAzlAlAKsdByuhcLor87407593;     ctABOeryKCeDiAzlAlAKsdByuhcLor87407593 = ctABOeryKCeDiAzlAlAKsdByuhcLor20045987;     ctABOeryKCeDiAzlAlAKsdByuhcLor20045987 = ctABOeryKCeDiAzlAlAKsdByuhcLor96618111;     ctABOeryKCeDiAzlAlAKsdByuhcLor96618111 = ctABOeryKCeDiAzlAlAKsdByuhcLor22731890;     ctABOeryKCeDiAzlAlAKsdByuhcLor22731890 = ctABOeryKCeDiAzlAlAKsdByuhcLor58455572;     ctABOeryKCeDiAzlAlAKsdByuhcLor58455572 = ctABOeryKCeDiAzlAlAKsdByuhcLor91643033;     ctABOeryKCeDiAzlAlAKsdByuhcLor91643033 = ctABOeryKCeDiAzlAlAKsdByuhcLor65111532;     ctABOeryKCeDiAzlAlAKsdByuhcLor65111532 = ctABOeryKCeDiAzlAlAKsdByuhcLor8077239;     ctABOeryKCeDiAzlAlAKsdByuhcLor8077239 = ctABOeryKCeDiAzlAlAKsdByuhcLor35438975;     ctABOeryKCeDiAzlAlAKsdByuhcLor35438975 = ctABOeryKCeDiAzlAlAKsdByuhcLor56719376;     ctABOeryKCeDiAzlAlAKsdByuhcLor56719376 = ctABOeryKCeDiAzlAlAKsdByuhcLor6234504;     ctABOeryKCeDiAzlAlAKsdByuhcLor6234504 = ctABOeryKCeDiAzlAlAKsdByuhcLor58274650;     ctABOeryKCeDiAzlAlAKsdByuhcLor58274650 = ctABOeryKCeDiAzlAlAKsdByuhcLor4551781;     ctABOeryKCeDiAzlAlAKsdByuhcLor4551781 = ctABOeryKCeDiAzlAlAKsdByuhcLor27276357;     ctABOeryKCeDiAzlAlAKsdByuhcLor27276357 = ctABOeryKCeDiAzlAlAKsdByuhcLor77279300;     ctABOeryKCeDiAzlAlAKsdByuhcLor77279300 = ctABOeryKCeDiAzlAlAKsdByuhcLor55404070;     ctABOeryKCeDiAzlAlAKsdByuhcLor55404070 = ctABOeryKCeDiAzlAlAKsdByuhcLor92569884;     ctABOeryKCeDiAzlAlAKsdByuhcLor92569884 = ctABOeryKCeDiAzlAlAKsdByuhcLor68773893;     ctABOeryKCeDiAzlAlAKsdByuhcLor68773893 = ctABOeryKCeDiAzlAlAKsdByuhcLor12221707;     ctABOeryKCeDiAzlAlAKsdByuhcLor12221707 = ctABOeryKCeDiAzlAlAKsdByuhcLor3401693;     ctABOeryKCeDiAzlAlAKsdByuhcLor3401693 = ctABOeryKCeDiAzlAlAKsdByuhcLor25738783;     ctABOeryKCeDiAzlAlAKsdByuhcLor25738783 = ctABOeryKCeDiAzlAlAKsdByuhcLor10267473;     ctABOeryKCeDiAzlAlAKsdByuhcLor10267473 = ctABOeryKCeDiAzlAlAKsdByuhcLor29035640;     ctABOeryKCeDiAzlAlAKsdByuhcLor29035640 = ctABOeryKCeDiAzlAlAKsdByuhcLor30239670;     ctABOeryKCeDiAzlAlAKsdByuhcLor30239670 = ctABOeryKCeDiAzlAlAKsdByuhcLor27620764;     ctABOeryKCeDiAzlAlAKsdByuhcLor27620764 = ctABOeryKCeDiAzlAlAKsdByuhcLor19328280;     ctABOeryKCeDiAzlAlAKsdByuhcLor19328280 = ctABOeryKCeDiAzlAlAKsdByuhcLor85817099;     ctABOeryKCeDiAzlAlAKsdByuhcLor85817099 = ctABOeryKCeDiAzlAlAKsdByuhcLor36521297;     ctABOeryKCeDiAzlAlAKsdByuhcLor36521297 = ctABOeryKCeDiAzlAlAKsdByuhcLor19638216;     ctABOeryKCeDiAzlAlAKsdByuhcLor19638216 = ctABOeryKCeDiAzlAlAKsdByuhcLor81679635;     ctABOeryKCeDiAzlAlAKsdByuhcLor81679635 = ctABOeryKCeDiAzlAlAKsdByuhcLor76295298;     ctABOeryKCeDiAzlAlAKsdByuhcLor76295298 = ctABOeryKCeDiAzlAlAKsdByuhcLor46947273;     ctABOeryKCeDiAzlAlAKsdByuhcLor46947273 = ctABOeryKCeDiAzlAlAKsdByuhcLor92539705;     ctABOeryKCeDiAzlAlAKsdByuhcLor92539705 = ctABOeryKCeDiAzlAlAKsdByuhcLor79692737;     ctABOeryKCeDiAzlAlAKsdByuhcLor79692737 = ctABOeryKCeDiAzlAlAKsdByuhcLor32993137;     ctABOeryKCeDiAzlAlAKsdByuhcLor32993137 = ctABOeryKCeDiAzlAlAKsdByuhcLor14014394;     ctABOeryKCeDiAzlAlAKsdByuhcLor14014394 = ctABOeryKCeDiAzlAlAKsdByuhcLor84150460;     ctABOeryKCeDiAzlAlAKsdByuhcLor84150460 = ctABOeryKCeDiAzlAlAKsdByuhcLor28454522;     ctABOeryKCeDiAzlAlAKsdByuhcLor28454522 = ctABOeryKCeDiAzlAlAKsdByuhcLor89973730;     ctABOeryKCeDiAzlAlAKsdByuhcLor89973730 = ctABOeryKCeDiAzlAlAKsdByuhcLor7220072;     ctABOeryKCeDiAzlAlAKsdByuhcLor7220072 = ctABOeryKCeDiAzlAlAKsdByuhcLor71590173;     ctABOeryKCeDiAzlAlAKsdByuhcLor71590173 = ctABOeryKCeDiAzlAlAKsdByuhcLor10638656;     ctABOeryKCeDiAzlAlAKsdByuhcLor10638656 = ctABOeryKCeDiAzlAlAKsdByuhcLor77522290;     ctABOeryKCeDiAzlAlAKsdByuhcLor77522290 = ctABOeryKCeDiAzlAlAKsdByuhcLor35330061;     ctABOeryKCeDiAzlAlAKsdByuhcLor35330061 = ctABOeryKCeDiAzlAlAKsdByuhcLor9291079;     ctABOeryKCeDiAzlAlAKsdByuhcLor9291079 = ctABOeryKCeDiAzlAlAKsdByuhcLor46230442;     ctABOeryKCeDiAzlAlAKsdByuhcLor46230442 = ctABOeryKCeDiAzlAlAKsdByuhcLor94445608;     ctABOeryKCeDiAzlAlAKsdByuhcLor94445608 = ctABOeryKCeDiAzlAlAKsdByuhcLor36946578;     ctABOeryKCeDiAzlAlAKsdByuhcLor36946578 = ctABOeryKCeDiAzlAlAKsdByuhcLor44080677;     ctABOeryKCeDiAzlAlAKsdByuhcLor44080677 = ctABOeryKCeDiAzlAlAKsdByuhcLor14915287;     ctABOeryKCeDiAzlAlAKsdByuhcLor14915287 = ctABOeryKCeDiAzlAlAKsdByuhcLor73108402;     ctABOeryKCeDiAzlAlAKsdByuhcLor73108402 = ctABOeryKCeDiAzlAlAKsdByuhcLor79858379;     ctABOeryKCeDiAzlAlAKsdByuhcLor79858379 = ctABOeryKCeDiAzlAlAKsdByuhcLor6181079;     ctABOeryKCeDiAzlAlAKsdByuhcLor6181079 = ctABOeryKCeDiAzlAlAKsdByuhcLor508889;     ctABOeryKCeDiAzlAlAKsdByuhcLor508889 = ctABOeryKCeDiAzlAlAKsdByuhcLor2864402;     ctABOeryKCeDiAzlAlAKsdByuhcLor2864402 = ctABOeryKCeDiAzlAlAKsdByuhcLor77140121;     ctABOeryKCeDiAzlAlAKsdByuhcLor77140121 = ctABOeryKCeDiAzlAlAKsdByuhcLor91010347;     ctABOeryKCeDiAzlAlAKsdByuhcLor91010347 = ctABOeryKCeDiAzlAlAKsdByuhcLor66378442;     ctABOeryKCeDiAzlAlAKsdByuhcLor66378442 = ctABOeryKCeDiAzlAlAKsdByuhcLor95111126;     ctABOeryKCeDiAzlAlAKsdByuhcLor95111126 = ctABOeryKCeDiAzlAlAKsdByuhcLor39127292;     ctABOeryKCeDiAzlAlAKsdByuhcLor39127292 = ctABOeryKCeDiAzlAlAKsdByuhcLor5825934;     ctABOeryKCeDiAzlAlAKsdByuhcLor5825934 = ctABOeryKCeDiAzlAlAKsdByuhcLor28590235;     ctABOeryKCeDiAzlAlAKsdByuhcLor28590235 = ctABOeryKCeDiAzlAlAKsdByuhcLor88439022;     ctABOeryKCeDiAzlAlAKsdByuhcLor88439022 = ctABOeryKCeDiAzlAlAKsdByuhcLor53759339;     ctABOeryKCeDiAzlAlAKsdByuhcLor53759339 = ctABOeryKCeDiAzlAlAKsdByuhcLor80424077;     ctABOeryKCeDiAzlAlAKsdByuhcLor80424077 = ctABOeryKCeDiAzlAlAKsdByuhcLor59287231;     ctABOeryKCeDiAzlAlAKsdByuhcLor59287231 = ctABOeryKCeDiAzlAlAKsdByuhcLor65734945;     ctABOeryKCeDiAzlAlAKsdByuhcLor65734945 = ctABOeryKCeDiAzlAlAKsdByuhcLor24859043;     ctABOeryKCeDiAzlAlAKsdByuhcLor24859043 = ctABOeryKCeDiAzlAlAKsdByuhcLor94283219;     ctABOeryKCeDiAzlAlAKsdByuhcLor94283219 = ctABOeryKCeDiAzlAlAKsdByuhcLor63264907;     ctABOeryKCeDiAzlAlAKsdByuhcLor63264907 = ctABOeryKCeDiAzlAlAKsdByuhcLor71253610;     ctABOeryKCeDiAzlAlAKsdByuhcLor71253610 = ctABOeryKCeDiAzlAlAKsdByuhcLor64115362;     ctABOeryKCeDiAzlAlAKsdByuhcLor64115362 = ctABOeryKCeDiAzlAlAKsdByuhcLor78800162;     ctABOeryKCeDiAzlAlAKsdByuhcLor78800162 = ctABOeryKCeDiAzlAlAKsdByuhcLor5001636;     ctABOeryKCeDiAzlAlAKsdByuhcLor5001636 = ctABOeryKCeDiAzlAlAKsdByuhcLor31811520;     ctABOeryKCeDiAzlAlAKsdByuhcLor31811520 = ctABOeryKCeDiAzlAlAKsdByuhcLor15100127;     ctABOeryKCeDiAzlAlAKsdByuhcLor15100127 = ctABOeryKCeDiAzlAlAKsdByuhcLor32745182;     ctABOeryKCeDiAzlAlAKsdByuhcLor32745182 = ctABOeryKCeDiAzlAlAKsdByuhcLor93705579;     ctABOeryKCeDiAzlAlAKsdByuhcLor93705579 = ctABOeryKCeDiAzlAlAKsdByuhcLor20948591;     ctABOeryKCeDiAzlAlAKsdByuhcLor20948591 = ctABOeryKCeDiAzlAlAKsdByuhcLor81390321;     ctABOeryKCeDiAzlAlAKsdByuhcLor81390321 = ctABOeryKCeDiAzlAlAKsdByuhcLor24882672;     ctABOeryKCeDiAzlAlAKsdByuhcLor24882672 = ctABOeryKCeDiAzlAlAKsdByuhcLor48870521;     ctABOeryKCeDiAzlAlAKsdByuhcLor48870521 = ctABOeryKCeDiAzlAlAKsdByuhcLor92440620;     ctABOeryKCeDiAzlAlAKsdByuhcLor92440620 = ctABOeryKCeDiAzlAlAKsdByuhcLor4722929;     ctABOeryKCeDiAzlAlAKsdByuhcLor4722929 = ctABOeryKCeDiAzlAlAKsdByuhcLor8571234;     ctABOeryKCeDiAzlAlAKsdByuhcLor8571234 = ctABOeryKCeDiAzlAlAKsdByuhcLor96436919;     ctABOeryKCeDiAzlAlAKsdByuhcLor96436919 = ctABOeryKCeDiAzlAlAKsdByuhcLor40766194;     ctABOeryKCeDiAzlAlAKsdByuhcLor40766194 = ctABOeryKCeDiAzlAlAKsdByuhcLor92030817;     ctABOeryKCeDiAzlAlAKsdByuhcLor92030817 = ctABOeryKCeDiAzlAlAKsdByuhcLor76828336;     ctABOeryKCeDiAzlAlAKsdByuhcLor76828336 = ctABOeryKCeDiAzlAlAKsdByuhcLor55853015;     ctABOeryKCeDiAzlAlAKsdByuhcLor55853015 = ctABOeryKCeDiAzlAlAKsdByuhcLor23004047;     ctABOeryKCeDiAzlAlAKsdByuhcLor23004047 = ctABOeryKCeDiAzlAlAKsdByuhcLor17772019;     ctABOeryKCeDiAzlAlAKsdByuhcLor17772019 = ctABOeryKCeDiAzlAlAKsdByuhcLor64222935;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void EjDAMAbZavjAhpwkvepOVzAyK8602115() {     double JzouRDiHGxgcpZTxAvgOEKaNEGLZLg86045156 = -101437982;    double JzouRDiHGxgcpZTxAvgOEKaNEGLZLg82827781 = -823288030;    double JzouRDiHGxgcpZTxAvgOEKaNEGLZLg16046628 = 68117982;    double JzouRDiHGxgcpZTxAvgOEKaNEGLZLg97053432 = -731784861;    double JzouRDiHGxgcpZTxAvgOEKaNEGLZLg8766604 = -633054957;    double JzouRDiHGxgcpZTxAvgOEKaNEGLZLg42421101 = -750150701;    double JzouRDiHGxgcpZTxAvgOEKaNEGLZLg32931166 = -459352308;    double JzouRDiHGxgcpZTxAvgOEKaNEGLZLg15465813 = -458138523;    double JzouRDiHGxgcpZTxAvgOEKaNEGLZLg83931233 = -100344947;    double JzouRDiHGxgcpZTxAvgOEKaNEGLZLg81329212 = -104766181;    double JzouRDiHGxgcpZTxAvgOEKaNEGLZLg67534380 = -86460762;    double JzouRDiHGxgcpZTxAvgOEKaNEGLZLg38913773 = -214208138;    double JzouRDiHGxgcpZTxAvgOEKaNEGLZLg91444514 = 42244660;    double JzouRDiHGxgcpZTxAvgOEKaNEGLZLg58609500 = -651153355;    double JzouRDiHGxgcpZTxAvgOEKaNEGLZLg60369328 = -915201539;    double JzouRDiHGxgcpZTxAvgOEKaNEGLZLg56047965 = -329392664;    double JzouRDiHGxgcpZTxAvgOEKaNEGLZLg28888035 = -630153666;    double JzouRDiHGxgcpZTxAvgOEKaNEGLZLg19244679 = 43686104;    double JzouRDiHGxgcpZTxAvgOEKaNEGLZLg10871728 = -584791326;    double JzouRDiHGxgcpZTxAvgOEKaNEGLZLg39384293 = -420892608;    double JzouRDiHGxgcpZTxAvgOEKaNEGLZLg61706065 = -232350343;    double JzouRDiHGxgcpZTxAvgOEKaNEGLZLg91678335 = -919822304;    double JzouRDiHGxgcpZTxAvgOEKaNEGLZLg86750704 = -399336524;    double JzouRDiHGxgcpZTxAvgOEKaNEGLZLg92681692 = -783589329;    double JzouRDiHGxgcpZTxAvgOEKaNEGLZLg66500551 = -513251208;    double JzouRDiHGxgcpZTxAvgOEKaNEGLZLg58349747 = -406308498;    double JzouRDiHGxgcpZTxAvgOEKaNEGLZLg85258310 = -29734881;    double JzouRDiHGxgcpZTxAvgOEKaNEGLZLg38981519 = 59410505;    double JzouRDiHGxgcpZTxAvgOEKaNEGLZLg73635695 = -463214514;    double JzouRDiHGxgcpZTxAvgOEKaNEGLZLg56084550 = -565468788;    double JzouRDiHGxgcpZTxAvgOEKaNEGLZLg80200905 = -877389975;    double JzouRDiHGxgcpZTxAvgOEKaNEGLZLg49130995 = -353156582;    double JzouRDiHGxgcpZTxAvgOEKaNEGLZLg52940228 = -299734415;    double JzouRDiHGxgcpZTxAvgOEKaNEGLZLg91867396 = -87522127;    double JzouRDiHGxgcpZTxAvgOEKaNEGLZLg66651312 = -811326971;    double JzouRDiHGxgcpZTxAvgOEKaNEGLZLg6098258 = -706925015;    double JzouRDiHGxgcpZTxAvgOEKaNEGLZLg62720473 = 90065378;    double JzouRDiHGxgcpZTxAvgOEKaNEGLZLg85617497 = -604615352;    double JzouRDiHGxgcpZTxAvgOEKaNEGLZLg36675745 = -850499854;    double JzouRDiHGxgcpZTxAvgOEKaNEGLZLg59617919 = -258744454;    double JzouRDiHGxgcpZTxAvgOEKaNEGLZLg46915551 = 92656294;    double JzouRDiHGxgcpZTxAvgOEKaNEGLZLg96194908 = 92926097;    double JzouRDiHGxgcpZTxAvgOEKaNEGLZLg80360536 = 65876244;    double JzouRDiHGxgcpZTxAvgOEKaNEGLZLg62109252 = -300549003;    double JzouRDiHGxgcpZTxAvgOEKaNEGLZLg64066271 = -18409839;    double JzouRDiHGxgcpZTxAvgOEKaNEGLZLg67661001 = -575558877;    double JzouRDiHGxgcpZTxAvgOEKaNEGLZLg15641843 = -509333752;    double JzouRDiHGxgcpZTxAvgOEKaNEGLZLg89059823 = -743135863;    double JzouRDiHGxgcpZTxAvgOEKaNEGLZLg78654265 = -135950691;    double JzouRDiHGxgcpZTxAvgOEKaNEGLZLg26686133 = -543600927;    double JzouRDiHGxgcpZTxAvgOEKaNEGLZLg65984109 = -787221392;    double JzouRDiHGxgcpZTxAvgOEKaNEGLZLg31718725 = -345673406;    double JzouRDiHGxgcpZTxAvgOEKaNEGLZLg513944 = -837556302;    double JzouRDiHGxgcpZTxAvgOEKaNEGLZLg74255564 = -908316999;    double JzouRDiHGxgcpZTxAvgOEKaNEGLZLg46896050 = -165357903;    double JzouRDiHGxgcpZTxAvgOEKaNEGLZLg94366821 = -181615678;    double JzouRDiHGxgcpZTxAvgOEKaNEGLZLg96077076 = -323951507;    double JzouRDiHGxgcpZTxAvgOEKaNEGLZLg23364936 = -148292690;    double JzouRDiHGxgcpZTxAvgOEKaNEGLZLg30552881 = -118533654;    double JzouRDiHGxgcpZTxAvgOEKaNEGLZLg50416856 = -126746459;    double JzouRDiHGxgcpZTxAvgOEKaNEGLZLg57162791 = -620415821;    double JzouRDiHGxgcpZTxAvgOEKaNEGLZLg93949647 = -418762814;    double JzouRDiHGxgcpZTxAvgOEKaNEGLZLg41830118 = -994924010;    double JzouRDiHGxgcpZTxAvgOEKaNEGLZLg27846684 = -534876159;    double JzouRDiHGxgcpZTxAvgOEKaNEGLZLg1128308 = -227376207;    double JzouRDiHGxgcpZTxAvgOEKaNEGLZLg18403385 = -733304181;    double JzouRDiHGxgcpZTxAvgOEKaNEGLZLg85973545 = -914473723;    double JzouRDiHGxgcpZTxAvgOEKaNEGLZLg99577117 = -870233214;    double JzouRDiHGxgcpZTxAvgOEKaNEGLZLg91958188 = -839826385;    double JzouRDiHGxgcpZTxAvgOEKaNEGLZLg54271071 = -108276525;    double JzouRDiHGxgcpZTxAvgOEKaNEGLZLg93327492 = -319458043;    double JzouRDiHGxgcpZTxAvgOEKaNEGLZLg43270537 = 74461685;    double JzouRDiHGxgcpZTxAvgOEKaNEGLZLg82568934 = -105814042;    double JzouRDiHGxgcpZTxAvgOEKaNEGLZLg51253809 = -226046873;    double JzouRDiHGxgcpZTxAvgOEKaNEGLZLg92468741 = -413548902;    double JzouRDiHGxgcpZTxAvgOEKaNEGLZLg65511157 = -225276441;    double JzouRDiHGxgcpZTxAvgOEKaNEGLZLg11317800 = -885698549;    double JzouRDiHGxgcpZTxAvgOEKaNEGLZLg24641453 = 1212478;    double JzouRDiHGxgcpZTxAvgOEKaNEGLZLg28615421 = -665179490;    double JzouRDiHGxgcpZTxAvgOEKaNEGLZLg98839549 = -937692331;    double JzouRDiHGxgcpZTxAvgOEKaNEGLZLg42707905 = -896974747;    double JzouRDiHGxgcpZTxAvgOEKaNEGLZLg96198487 = -286599018;    double JzouRDiHGxgcpZTxAvgOEKaNEGLZLg60327253 = -804638804;    double JzouRDiHGxgcpZTxAvgOEKaNEGLZLg46949563 = -919613587;    double JzouRDiHGxgcpZTxAvgOEKaNEGLZLg90100440 = -778247396;    double JzouRDiHGxgcpZTxAvgOEKaNEGLZLg48482181 = -431716569;    double JzouRDiHGxgcpZTxAvgOEKaNEGLZLg48617052 = -515600281;    double JzouRDiHGxgcpZTxAvgOEKaNEGLZLg78684663 = -391417416;    double JzouRDiHGxgcpZTxAvgOEKaNEGLZLg44971347 = -922164224;    double JzouRDiHGxgcpZTxAvgOEKaNEGLZLg72284491 = -529711294;    double JzouRDiHGxgcpZTxAvgOEKaNEGLZLg10021181 = -282973508;    double JzouRDiHGxgcpZTxAvgOEKaNEGLZLg39355537 = -761641932;    double JzouRDiHGxgcpZTxAvgOEKaNEGLZLg55064617 = -386081699;    double JzouRDiHGxgcpZTxAvgOEKaNEGLZLg86258888 = -623753396;    double JzouRDiHGxgcpZTxAvgOEKaNEGLZLg2455129 = -638328634;    double JzouRDiHGxgcpZTxAvgOEKaNEGLZLg52965904 = -488580892;    double JzouRDiHGxgcpZTxAvgOEKaNEGLZLg54364791 = 87850107;    double JzouRDiHGxgcpZTxAvgOEKaNEGLZLg52513852 = -399247597;    double JzouRDiHGxgcpZTxAvgOEKaNEGLZLg60980945 = 26827204;    double JzouRDiHGxgcpZTxAvgOEKaNEGLZLg45662887 = -101437982;     JzouRDiHGxgcpZTxAvgOEKaNEGLZLg86045156 = JzouRDiHGxgcpZTxAvgOEKaNEGLZLg82827781;     JzouRDiHGxgcpZTxAvgOEKaNEGLZLg82827781 = JzouRDiHGxgcpZTxAvgOEKaNEGLZLg16046628;     JzouRDiHGxgcpZTxAvgOEKaNEGLZLg16046628 = JzouRDiHGxgcpZTxAvgOEKaNEGLZLg97053432;     JzouRDiHGxgcpZTxAvgOEKaNEGLZLg97053432 = JzouRDiHGxgcpZTxAvgOEKaNEGLZLg8766604;     JzouRDiHGxgcpZTxAvgOEKaNEGLZLg8766604 = JzouRDiHGxgcpZTxAvgOEKaNEGLZLg42421101;     JzouRDiHGxgcpZTxAvgOEKaNEGLZLg42421101 = JzouRDiHGxgcpZTxAvgOEKaNEGLZLg32931166;     JzouRDiHGxgcpZTxAvgOEKaNEGLZLg32931166 = JzouRDiHGxgcpZTxAvgOEKaNEGLZLg15465813;     JzouRDiHGxgcpZTxAvgOEKaNEGLZLg15465813 = JzouRDiHGxgcpZTxAvgOEKaNEGLZLg83931233;     JzouRDiHGxgcpZTxAvgOEKaNEGLZLg83931233 = JzouRDiHGxgcpZTxAvgOEKaNEGLZLg81329212;     JzouRDiHGxgcpZTxAvgOEKaNEGLZLg81329212 = JzouRDiHGxgcpZTxAvgOEKaNEGLZLg67534380;     JzouRDiHGxgcpZTxAvgOEKaNEGLZLg67534380 = JzouRDiHGxgcpZTxAvgOEKaNEGLZLg38913773;     JzouRDiHGxgcpZTxAvgOEKaNEGLZLg38913773 = JzouRDiHGxgcpZTxAvgOEKaNEGLZLg91444514;     JzouRDiHGxgcpZTxAvgOEKaNEGLZLg91444514 = JzouRDiHGxgcpZTxAvgOEKaNEGLZLg58609500;     JzouRDiHGxgcpZTxAvgOEKaNEGLZLg58609500 = JzouRDiHGxgcpZTxAvgOEKaNEGLZLg60369328;     JzouRDiHGxgcpZTxAvgOEKaNEGLZLg60369328 = JzouRDiHGxgcpZTxAvgOEKaNEGLZLg56047965;     JzouRDiHGxgcpZTxAvgOEKaNEGLZLg56047965 = JzouRDiHGxgcpZTxAvgOEKaNEGLZLg28888035;     JzouRDiHGxgcpZTxAvgOEKaNEGLZLg28888035 = JzouRDiHGxgcpZTxAvgOEKaNEGLZLg19244679;     JzouRDiHGxgcpZTxAvgOEKaNEGLZLg19244679 = JzouRDiHGxgcpZTxAvgOEKaNEGLZLg10871728;     JzouRDiHGxgcpZTxAvgOEKaNEGLZLg10871728 = JzouRDiHGxgcpZTxAvgOEKaNEGLZLg39384293;     JzouRDiHGxgcpZTxAvgOEKaNEGLZLg39384293 = JzouRDiHGxgcpZTxAvgOEKaNEGLZLg61706065;     JzouRDiHGxgcpZTxAvgOEKaNEGLZLg61706065 = JzouRDiHGxgcpZTxAvgOEKaNEGLZLg91678335;     JzouRDiHGxgcpZTxAvgOEKaNEGLZLg91678335 = JzouRDiHGxgcpZTxAvgOEKaNEGLZLg86750704;     JzouRDiHGxgcpZTxAvgOEKaNEGLZLg86750704 = JzouRDiHGxgcpZTxAvgOEKaNEGLZLg92681692;     JzouRDiHGxgcpZTxAvgOEKaNEGLZLg92681692 = JzouRDiHGxgcpZTxAvgOEKaNEGLZLg66500551;     JzouRDiHGxgcpZTxAvgOEKaNEGLZLg66500551 = JzouRDiHGxgcpZTxAvgOEKaNEGLZLg58349747;     JzouRDiHGxgcpZTxAvgOEKaNEGLZLg58349747 = JzouRDiHGxgcpZTxAvgOEKaNEGLZLg85258310;     JzouRDiHGxgcpZTxAvgOEKaNEGLZLg85258310 = JzouRDiHGxgcpZTxAvgOEKaNEGLZLg38981519;     JzouRDiHGxgcpZTxAvgOEKaNEGLZLg38981519 = JzouRDiHGxgcpZTxAvgOEKaNEGLZLg73635695;     JzouRDiHGxgcpZTxAvgOEKaNEGLZLg73635695 = JzouRDiHGxgcpZTxAvgOEKaNEGLZLg56084550;     JzouRDiHGxgcpZTxAvgOEKaNEGLZLg56084550 = JzouRDiHGxgcpZTxAvgOEKaNEGLZLg80200905;     JzouRDiHGxgcpZTxAvgOEKaNEGLZLg80200905 = JzouRDiHGxgcpZTxAvgOEKaNEGLZLg49130995;     JzouRDiHGxgcpZTxAvgOEKaNEGLZLg49130995 = JzouRDiHGxgcpZTxAvgOEKaNEGLZLg52940228;     JzouRDiHGxgcpZTxAvgOEKaNEGLZLg52940228 = JzouRDiHGxgcpZTxAvgOEKaNEGLZLg91867396;     JzouRDiHGxgcpZTxAvgOEKaNEGLZLg91867396 = JzouRDiHGxgcpZTxAvgOEKaNEGLZLg66651312;     JzouRDiHGxgcpZTxAvgOEKaNEGLZLg66651312 = JzouRDiHGxgcpZTxAvgOEKaNEGLZLg6098258;     JzouRDiHGxgcpZTxAvgOEKaNEGLZLg6098258 = JzouRDiHGxgcpZTxAvgOEKaNEGLZLg62720473;     JzouRDiHGxgcpZTxAvgOEKaNEGLZLg62720473 = JzouRDiHGxgcpZTxAvgOEKaNEGLZLg85617497;     JzouRDiHGxgcpZTxAvgOEKaNEGLZLg85617497 = JzouRDiHGxgcpZTxAvgOEKaNEGLZLg36675745;     JzouRDiHGxgcpZTxAvgOEKaNEGLZLg36675745 = JzouRDiHGxgcpZTxAvgOEKaNEGLZLg59617919;     JzouRDiHGxgcpZTxAvgOEKaNEGLZLg59617919 = JzouRDiHGxgcpZTxAvgOEKaNEGLZLg46915551;     JzouRDiHGxgcpZTxAvgOEKaNEGLZLg46915551 = JzouRDiHGxgcpZTxAvgOEKaNEGLZLg96194908;     JzouRDiHGxgcpZTxAvgOEKaNEGLZLg96194908 = JzouRDiHGxgcpZTxAvgOEKaNEGLZLg80360536;     JzouRDiHGxgcpZTxAvgOEKaNEGLZLg80360536 = JzouRDiHGxgcpZTxAvgOEKaNEGLZLg62109252;     JzouRDiHGxgcpZTxAvgOEKaNEGLZLg62109252 = JzouRDiHGxgcpZTxAvgOEKaNEGLZLg64066271;     JzouRDiHGxgcpZTxAvgOEKaNEGLZLg64066271 = JzouRDiHGxgcpZTxAvgOEKaNEGLZLg67661001;     JzouRDiHGxgcpZTxAvgOEKaNEGLZLg67661001 = JzouRDiHGxgcpZTxAvgOEKaNEGLZLg15641843;     JzouRDiHGxgcpZTxAvgOEKaNEGLZLg15641843 = JzouRDiHGxgcpZTxAvgOEKaNEGLZLg89059823;     JzouRDiHGxgcpZTxAvgOEKaNEGLZLg89059823 = JzouRDiHGxgcpZTxAvgOEKaNEGLZLg78654265;     JzouRDiHGxgcpZTxAvgOEKaNEGLZLg78654265 = JzouRDiHGxgcpZTxAvgOEKaNEGLZLg26686133;     JzouRDiHGxgcpZTxAvgOEKaNEGLZLg26686133 = JzouRDiHGxgcpZTxAvgOEKaNEGLZLg65984109;     JzouRDiHGxgcpZTxAvgOEKaNEGLZLg65984109 = JzouRDiHGxgcpZTxAvgOEKaNEGLZLg31718725;     JzouRDiHGxgcpZTxAvgOEKaNEGLZLg31718725 = JzouRDiHGxgcpZTxAvgOEKaNEGLZLg513944;     JzouRDiHGxgcpZTxAvgOEKaNEGLZLg513944 = JzouRDiHGxgcpZTxAvgOEKaNEGLZLg74255564;     JzouRDiHGxgcpZTxAvgOEKaNEGLZLg74255564 = JzouRDiHGxgcpZTxAvgOEKaNEGLZLg46896050;     JzouRDiHGxgcpZTxAvgOEKaNEGLZLg46896050 = JzouRDiHGxgcpZTxAvgOEKaNEGLZLg94366821;     JzouRDiHGxgcpZTxAvgOEKaNEGLZLg94366821 = JzouRDiHGxgcpZTxAvgOEKaNEGLZLg96077076;     JzouRDiHGxgcpZTxAvgOEKaNEGLZLg96077076 = JzouRDiHGxgcpZTxAvgOEKaNEGLZLg23364936;     JzouRDiHGxgcpZTxAvgOEKaNEGLZLg23364936 = JzouRDiHGxgcpZTxAvgOEKaNEGLZLg30552881;     JzouRDiHGxgcpZTxAvgOEKaNEGLZLg30552881 = JzouRDiHGxgcpZTxAvgOEKaNEGLZLg50416856;     JzouRDiHGxgcpZTxAvgOEKaNEGLZLg50416856 = JzouRDiHGxgcpZTxAvgOEKaNEGLZLg57162791;     JzouRDiHGxgcpZTxAvgOEKaNEGLZLg57162791 = JzouRDiHGxgcpZTxAvgOEKaNEGLZLg93949647;     JzouRDiHGxgcpZTxAvgOEKaNEGLZLg93949647 = JzouRDiHGxgcpZTxAvgOEKaNEGLZLg41830118;     JzouRDiHGxgcpZTxAvgOEKaNEGLZLg41830118 = JzouRDiHGxgcpZTxAvgOEKaNEGLZLg27846684;     JzouRDiHGxgcpZTxAvgOEKaNEGLZLg27846684 = JzouRDiHGxgcpZTxAvgOEKaNEGLZLg1128308;     JzouRDiHGxgcpZTxAvgOEKaNEGLZLg1128308 = JzouRDiHGxgcpZTxAvgOEKaNEGLZLg18403385;     JzouRDiHGxgcpZTxAvgOEKaNEGLZLg18403385 = JzouRDiHGxgcpZTxAvgOEKaNEGLZLg85973545;     JzouRDiHGxgcpZTxAvgOEKaNEGLZLg85973545 = JzouRDiHGxgcpZTxAvgOEKaNEGLZLg99577117;     JzouRDiHGxgcpZTxAvgOEKaNEGLZLg99577117 = JzouRDiHGxgcpZTxAvgOEKaNEGLZLg91958188;     JzouRDiHGxgcpZTxAvgOEKaNEGLZLg91958188 = JzouRDiHGxgcpZTxAvgOEKaNEGLZLg54271071;     JzouRDiHGxgcpZTxAvgOEKaNEGLZLg54271071 = JzouRDiHGxgcpZTxAvgOEKaNEGLZLg93327492;     JzouRDiHGxgcpZTxAvgOEKaNEGLZLg93327492 = JzouRDiHGxgcpZTxAvgOEKaNEGLZLg43270537;     JzouRDiHGxgcpZTxAvgOEKaNEGLZLg43270537 = JzouRDiHGxgcpZTxAvgOEKaNEGLZLg82568934;     JzouRDiHGxgcpZTxAvgOEKaNEGLZLg82568934 = JzouRDiHGxgcpZTxAvgOEKaNEGLZLg51253809;     JzouRDiHGxgcpZTxAvgOEKaNEGLZLg51253809 = JzouRDiHGxgcpZTxAvgOEKaNEGLZLg92468741;     JzouRDiHGxgcpZTxAvgOEKaNEGLZLg92468741 = JzouRDiHGxgcpZTxAvgOEKaNEGLZLg65511157;     JzouRDiHGxgcpZTxAvgOEKaNEGLZLg65511157 = JzouRDiHGxgcpZTxAvgOEKaNEGLZLg11317800;     JzouRDiHGxgcpZTxAvgOEKaNEGLZLg11317800 = JzouRDiHGxgcpZTxAvgOEKaNEGLZLg24641453;     JzouRDiHGxgcpZTxAvgOEKaNEGLZLg24641453 = JzouRDiHGxgcpZTxAvgOEKaNEGLZLg28615421;     JzouRDiHGxgcpZTxAvgOEKaNEGLZLg28615421 = JzouRDiHGxgcpZTxAvgOEKaNEGLZLg98839549;     JzouRDiHGxgcpZTxAvgOEKaNEGLZLg98839549 = JzouRDiHGxgcpZTxAvgOEKaNEGLZLg42707905;     JzouRDiHGxgcpZTxAvgOEKaNEGLZLg42707905 = JzouRDiHGxgcpZTxAvgOEKaNEGLZLg96198487;     JzouRDiHGxgcpZTxAvgOEKaNEGLZLg96198487 = JzouRDiHGxgcpZTxAvgOEKaNEGLZLg60327253;     JzouRDiHGxgcpZTxAvgOEKaNEGLZLg60327253 = JzouRDiHGxgcpZTxAvgOEKaNEGLZLg46949563;     JzouRDiHGxgcpZTxAvgOEKaNEGLZLg46949563 = JzouRDiHGxgcpZTxAvgOEKaNEGLZLg90100440;     JzouRDiHGxgcpZTxAvgOEKaNEGLZLg90100440 = JzouRDiHGxgcpZTxAvgOEKaNEGLZLg48482181;     JzouRDiHGxgcpZTxAvgOEKaNEGLZLg48482181 = JzouRDiHGxgcpZTxAvgOEKaNEGLZLg48617052;     JzouRDiHGxgcpZTxAvgOEKaNEGLZLg48617052 = JzouRDiHGxgcpZTxAvgOEKaNEGLZLg78684663;     JzouRDiHGxgcpZTxAvgOEKaNEGLZLg78684663 = JzouRDiHGxgcpZTxAvgOEKaNEGLZLg44971347;     JzouRDiHGxgcpZTxAvgOEKaNEGLZLg44971347 = JzouRDiHGxgcpZTxAvgOEKaNEGLZLg72284491;     JzouRDiHGxgcpZTxAvgOEKaNEGLZLg72284491 = JzouRDiHGxgcpZTxAvgOEKaNEGLZLg10021181;     JzouRDiHGxgcpZTxAvgOEKaNEGLZLg10021181 = JzouRDiHGxgcpZTxAvgOEKaNEGLZLg39355537;     JzouRDiHGxgcpZTxAvgOEKaNEGLZLg39355537 = JzouRDiHGxgcpZTxAvgOEKaNEGLZLg55064617;     JzouRDiHGxgcpZTxAvgOEKaNEGLZLg55064617 = JzouRDiHGxgcpZTxAvgOEKaNEGLZLg86258888;     JzouRDiHGxgcpZTxAvgOEKaNEGLZLg86258888 = JzouRDiHGxgcpZTxAvgOEKaNEGLZLg2455129;     JzouRDiHGxgcpZTxAvgOEKaNEGLZLg2455129 = JzouRDiHGxgcpZTxAvgOEKaNEGLZLg52965904;     JzouRDiHGxgcpZTxAvgOEKaNEGLZLg52965904 = JzouRDiHGxgcpZTxAvgOEKaNEGLZLg54364791;     JzouRDiHGxgcpZTxAvgOEKaNEGLZLg54364791 = JzouRDiHGxgcpZTxAvgOEKaNEGLZLg52513852;     JzouRDiHGxgcpZTxAvgOEKaNEGLZLg52513852 = JzouRDiHGxgcpZTxAvgOEKaNEGLZLg60980945;     JzouRDiHGxgcpZTxAvgOEKaNEGLZLg60980945 = JzouRDiHGxgcpZTxAvgOEKaNEGLZLg45662887;     JzouRDiHGxgcpZTxAvgOEKaNEGLZLg45662887 = JzouRDiHGxgcpZTxAvgOEKaNEGLZLg86045156;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void CtSULOmdbZfqSkjeirFilqyDu70449373() {     double uyRgasxdiarIPATmfHlxkdKqHpLlFZ37209239 = 75971676;    double uyRgasxdiarIPATmfHlxkdKqHpLlFZ14194385 = -276838709;    double uyRgasxdiarIPATmfHlxkdKqHpLlFZ83118191 = -593933704;    double uyRgasxdiarIPATmfHlxkdKqHpLlFZ73577152 = -566971478;    double uyRgasxdiarIPATmfHlxkdKqHpLlFZ56290715 = -95254853;    double uyRgasxdiarIPATmfHlxkdKqHpLlFZ11245087 = -759545519;    double uyRgasxdiarIPATmfHlxkdKqHpLlFZ12120191 = -228431189;    double uyRgasxdiarIPATmfHlxkdKqHpLlFZ14700112 = -923679599;    double uyRgasxdiarIPATmfHlxkdKqHpLlFZ17329983 = -806439106;    double uyRgasxdiarIPATmfHlxkdKqHpLlFZ16285491 = -410696099;    double uyRgasxdiarIPATmfHlxkdKqHpLlFZ16522093 = -666788607;    double uyRgasxdiarIPATmfHlxkdKqHpLlFZ23840762 = -837104314;    double uyRgasxdiarIPATmfHlxkdKqHpLlFZ76458984 = -607910545;    double uyRgasxdiarIPATmfHlxkdKqHpLlFZ95573154 = -945354994;    double uyRgasxdiarIPATmfHlxkdKqHpLlFZ18079213 = -655006307;    double uyRgasxdiarIPATmfHlxkdKqHpLlFZ46054598 = -434571268;    double uyRgasxdiarIPATmfHlxkdKqHpLlFZ84337026 = -926407825;    double uyRgasxdiarIPATmfHlxkdKqHpLlFZ84477020 = -285940239;    double uyRgasxdiarIPATmfHlxkdKqHpLlFZ54229440 = -568721307;    double uyRgasxdiarIPATmfHlxkdKqHpLlFZ33780989 = -981795810;    double uyRgasxdiarIPATmfHlxkdKqHpLlFZ43394020 = -866216279;    double uyRgasxdiarIPATmfHlxkdKqHpLlFZ72980814 = -69280046;    double uyRgasxdiarIPATmfHlxkdKqHpLlFZ31156697 = -946478576;    double uyRgasxdiarIPATmfHlxkdKqHpLlFZ39759886 = -382207811;    double uyRgasxdiarIPATmfHlxkdKqHpLlFZ4749520 = -74937346;    double uyRgasxdiarIPATmfHlxkdKqHpLlFZ33902098 = -543415510;    double uyRgasxdiarIPATmfHlxkdKqHpLlFZ20255711 = -562160863;    double uyRgasxdiarIPATmfHlxkdKqHpLlFZ2182644 = 91119052;    double uyRgasxdiarIPATmfHlxkdKqHpLlFZ2068567 = -481872530;    double uyRgasxdiarIPATmfHlxkdKqHpLlFZ38819402 = -58719285;    double uyRgasxdiarIPATmfHlxkdKqHpLlFZ57706853 = -821777271;    double uyRgasxdiarIPATmfHlxkdKqHpLlFZ8234718 = -192570011;    double uyRgasxdiarIPATmfHlxkdKqHpLlFZ80766755 = -297320905;    double uyRgasxdiarIPATmfHlxkdKqHpLlFZ99324376 = -76493802;    double uyRgasxdiarIPATmfHlxkdKqHpLlFZ51819326 = -273512719;    double uyRgasxdiarIPATmfHlxkdKqHpLlFZ58510148 = -721880193;    double uyRgasxdiarIPATmfHlxkdKqHpLlFZ73952611 = -970611889;    double uyRgasxdiarIPATmfHlxkdKqHpLlFZ6680551 = -297307681;    double uyRgasxdiarIPATmfHlxkdKqHpLlFZ53836498 = -279857914;    double uyRgasxdiarIPATmfHlxkdKqHpLlFZ49058159 = -808116778;    double uyRgasxdiarIPATmfHlxkdKqHpLlFZ29073781 = -45407984;    double uyRgasxdiarIPATmfHlxkdKqHpLlFZ69911749 = -18942993;    double uyRgasxdiarIPATmfHlxkdKqHpLlFZ39044335 = -550466773;    double uyRgasxdiarIPATmfHlxkdKqHpLlFZ62927709 = -794344644;    double uyRgasxdiarIPATmfHlxkdKqHpLlFZ32046076 = -369711475;    double uyRgasxdiarIPATmfHlxkdKqHpLlFZ40889614 = -332698623;    double uyRgasxdiarIPATmfHlxkdKqHpLlFZ42876543 = 44447905;    double uyRgasxdiarIPATmfHlxkdKqHpLlFZ80668946 = -638262913;    double uyRgasxdiarIPATmfHlxkdKqHpLlFZ98935294 = -999067006;    double uyRgasxdiarIPATmfHlxkdKqHpLlFZ54351545 = -926672120;    double uyRgasxdiarIPATmfHlxkdKqHpLlFZ99515973 = -863093604;    double uyRgasxdiarIPATmfHlxkdKqHpLlFZ783142 = 16022487;    double uyRgasxdiarIPATmfHlxkdKqHpLlFZ12109499 = -765407407;    double uyRgasxdiarIPATmfHlxkdKqHpLlFZ22303653 = -970364413;    double uyRgasxdiarIPATmfHlxkdKqHpLlFZ27055353 = -872438015;    double uyRgasxdiarIPATmfHlxkdKqHpLlFZ64228424 = -854748279;    double uyRgasxdiarIPATmfHlxkdKqHpLlFZ83037687 = -330360133;    double uyRgasxdiarIPATmfHlxkdKqHpLlFZ43358306 = -111725894;    double uyRgasxdiarIPATmfHlxkdKqHpLlFZ68827633 = -392034132;    double uyRgasxdiarIPATmfHlxkdKqHpLlFZ22388618 = -551839343;    double uyRgasxdiarIPATmfHlxkdKqHpLlFZ90989376 = -97384657;    double uyRgasxdiarIPATmfHlxkdKqHpLlFZ9937547 = -219550242;    double uyRgasxdiarIPATmfHlxkdKqHpLlFZ12631545 = -341807070;    double uyRgasxdiarIPATmfHlxkdKqHpLlFZ78510581 = -647719821;    double uyRgasxdiarIPATmfHlxkdKqHpLlFZ58578638 = -588918828;    double uyRgasxdiarIPATmfHlxkdKqHpLlFZ8287376 = -374218597;    double uyRgasxdiarIPATmfHlxkdKqHpLlFZ43074007 = -439783409;    double uyRgasxdiarIPATmfHlxkdKqHpLlFZ77134607 = -431416743;    double uyRgasxdiarIPATmfHlxkdKqHpLlFZ43753828 = -571842276;    double uyRgasxdiarIPATmfHlxkdKqHpLlFZ59569065 = -933126114;    double uyRgasxdiarIPATmfHlxkdKqHpLlFZ72101986 = -463959380;    double uyRgasxdiarIPATmfHlxkdKqHpLlFZ77656475 = -529100144;    double uyRgasxdiarIPATmfHlxkdKqHpLlFZ30640522 = 93917674;    double uyRgasxdiarIPATmfHlxkdKqHpLlFZ5171281 = -760604530;    double uyRgasxdiarIPATmfHlxkdKqHpLlFZ4707208 = -836387826;    double uyRgasxdiarIPATmfHlxkdKqHpLlFZ73482271 = -747273286;    double uyRgasxdiarIPATmfHlxkdKqHpLlFZ33936480 = -518813274;    double uyRgasxdiarIPATmfHlxkdKqHpLlFZ68228988 = -52133933;    double uyRgasxdiarIPATmfHlxkdKqHpLlFZ7713810 = 87503664;    double uyRgasxdiarIPATmfHlxkdKqHpLlFZ63859905 = -742238723;    double uyRgasxdiarIPATmfHlxkdKqHpLlFZ91025554 = -487863415;    double uyRgasxdiarIPATmfHlxkdKqHpLlFZ39586765 = -923897951;    double uyRgasxdiarIPATmfHlxkdKqHpLlFZ3247350 = 90186057;    double uyRgasxdiarIPATmfHlxkdKqHpLlFZ47717021 = -555200410;    double uyRgasxdiarIPATmfHlxkdKqHpLlFZ39303428 = -195625682;    double uyRgasxdiarIPATmfHlxkdKqHpLlFZ56923712 = -737799758;    double uyRgasxdiarIPATmfHlxkdKqHpLlFZ96125219 = -427162604;    double uyRgasxdiarIPATmfHlxkdKqHpLlFZ58463102 = -326956492;    double uyRgasxdiarIPATmfHlxkdKqHpLlFZ72269023 = -204055787;    double uyRgasxdiarIPATmfHlxkdKqHpLlFZ87590901 = -418764441;    double uyRgasxdiarIPATmfHlxkdKqHpLlFZ75472460 = -291520060;    double uyRgasxdiarIPATmfHlxkdKqHpLlFZ30594306 = -758885996;    double uyRgasxdiarIPATmfHlxkdKqHpLlFZ37852918 = -905273549;    double uyRgasxdiarIPATmfHlxkdKqHpLlFZ31447881 = -728018571;    double uyRgasxdiarIPATmfHlxkdKqHpLlFZ58068783 = -610732122;    double uyRgasxdiarIPATmfHlxkdKqHpLlFZ19136234 = -825857743;    double uyRgasxdiarIPATmfHlxkdKqHpLlFZ57280204 = -677135924;    double uyRgasxdiarIPATmfHlxkdKqHpLlFZ60533753 = -902746952;    double uyRgasxdiarIPATmfHlxkdKqHpLlFZ4349071 = -105425816;    double uyRgasxdiarIPATmfHlxkdKqHpLlFZ23758701 = 75971676;     uyRgasxdiarIPATmfHlxkdKqHpLlFZ37209239 = uyRgasxdiarIPATmfHlxkdKqHpLlFZ14194385;     uyRgasxdiarIPATmfHlxkdKqHpLlFZ14194385 = uyRgasxdiarIPATmfHlxkdKqHpLlFZ83118191;     uyRgasxdiarIPATmfHlxkdKqHpLlFZ83118191 = uyRgasxdiarIPATmfHlxkdKqHpLlFZ73577152;     uyRgasxdiarIPATmfHlxkdKqHpLlFZ73577152 = uyRgasxdiarIPATmfHlxkdKqHpLlFZ56290715;     uyRgasxdiarIPATmfHlxkdKqHpLlFZ56290715 = uyRgasxdiarIPATmfHlxkdKqHpLlFZ11245087;     uyRgasxdiarIPATmfHlxkdKqHpLlFZ11245087 = uyRgasxdiarIPATmfHlxkdKqHpLlFZ12120191;     uyRgasxdiarIPATmfHlxkdKqHpLlFZ12120191 = uyRgasxdiarIPATmfHlxkdKqHpLlFZ14700112;     uyRgasxdiarIPATmfHlxkdKqHpLlFZ14700112 = uyRgasxdiarIPATmfHlxkdKqHpLlFZ17329983;     uyRgasxdiarIPATmfHlxkdKqHpLlFZ17329983 = uyRgasxdiarIPATmfHlxkdKqHpLlFZ16285491;     uyRgasxdiarIPATmfHlxkdKqHpLlFZ16285491 = uyRgasxdiarIPATmfHlxkdKqHpLlFZ16522093;     uyRgasxdiarIPATmfHlxkdKqHpLlFZ16522093 = uyRgasxdiarIPATmfHlxkdKqHpLlFZ23840762;     uyRgasxdiarIPATmfHlxkdKqHpLlFZ23840762 = uyRgasxdiarIPATmfHlxkdKqHpLlFZ76458984;     uyRgasxdiarIPATmfHlxkdKqHpLlFZ76458984 = uyRgasxdiarIPATmfHlxkdKqHpLlFZ95573154;     uyRgasxdiarIPATmfHlxkdKqHpLlFZ95573154 = uyRgasxdiarIPATmfHlxkdKqHpLlFZ18079213;     uyRgasxdiarIPATmfHlxkdKqHpLlFZ18079213 = uyRgasxdiarIPATmfHlxkdKqHpLlFZ46054598;     uyRgasxdiarIPATmfHlxkdKqHpLlFZ46054598 = uyRgasxdiarIPATmfHlxkdKqHpLlFZ84337026;     uyRgasxdiarIPATmfHlxkdKqHpLlFZ84337026 = uyRgasxdiarIPATmfHlxkdKqHpLlFZ84477020;     uyRgasxdiarIPATmfHlxkdKqHpLlFZ84477020 = uyRgasxdiarIPATmfHlxkdKqHpLlFZ54229440;     uyRgasxdiarIPATmfHlxkdKqHpLlFZ54229440 = uyRgasxdiarIPATmfHlxkdKqHpLlFZ33780989;     uyRgasxdiarIPATmfHlxkdKqHpLlFZ33780989 = uyRgasxdiarIPATmfHlxkdKqHpLlFZ43394020;     uyRgasxdiarIPATmfHlxkdKqHpLlFZ43394020 = uyRgasxdiarIPATmfHlxkdKqHpLlFZ72980814;     uyRgasxdiarIPATmfHlxkdKqHpLlFZ72980814 = uyRgasxdiarIPATmfHlxkdKqHpLlFZ31156697;     uyRgasxdiarIPATmfHlxkdKqHpLlFZ31156697 = uyRgasxdiarIPATmfHlxkdKqHpLlFZ39759886;     uyRgasxdiarIPATmfHlxkdKqHpLlFZ39759886 = uyRgasxdiarIPATmfHlxkdKqHpLlFZ4749520;     uyRgasxdiarIPATmfHlxkdKqHpLlFZ4749520 = uyRgasxdiarIPATmfHlxkdKqHpLlFZ33902098;     uyRgasxdiarIPATmfHlxkdKqHpLlFZ33902098 = uyRgasxdiarIPATmfHlxkdKqHpLlFZ20255711;     uyRgasxdiarIPATmfHlxkdKqHpLlFZ20255711 = uyRgasxdiarIPATmfHlxkdKqHpLlFZ2182644;     uyRgasxdiarIPATmfHlxkdKqHpLlFZ2182644 = uyRgasxdiarIPATmfHlxkdKqHpLlFZ2068567;     uyRgasxdiarIPATmfHlxkdKqHpLlFZ2068567 = uyRgasxdiarIPATmfHlxkdKqHpLlFZ38819402;     uyRgasxdiarIPATmfHlxkdKqHpLlFZ38819402 = uyRgasxdiarIPATmfHlxkdKqHpLlFZ57706853;     uyRgasxdiarIPATmfHlxkdKqHpLlFZ57706853 = uyRgasxdiarIPATmfHlxkdKqHpLlFZ8234718;     uyRgasxdiarIPATmfHlxkdKqHpLlFZ8234718 = uyRgasxdiarIPATmfHlxkdKqHpLlFZ80766755;     uyRgasxdiarIPATmfHlxkdKqHpLlFZ80766755 = uyRgasxdiarIPATmfHlxkdKqHpLlFZ99324376;     uyRgasxdiarIPATmfHlxkdKqHpLlFZ99324376 = uyRgasxdiarIPATmfHlxkdKqHpLlFZ51819326;     uyRgasxdiarIPATmfHlxkdKqHpLlFZ51819326 = uyRgasxdiarIPATmfHlxkdKqHpLlFZ58510148;     uyRgasxdiarIPATmfHlxkdKqHpLlFZ58510148 = uyRgasxdiarIPATmfHlxkdKqHpLlFZ73952611;     uyRgasxdiarIPATmfHlxkdKqHpLlFZ73952611 = uyRgasxdiarIPATmfHlxkdKqHpLlFZ6680551;     uyRgasxdiarIPATmfHlxkdKqHpLlFZ6680551 = uyRgasxdiarIPATmfHlxkdKqHpLlFZ53836498;     uyRgasxdiarIPATmfHlxkdKqHpLlFZ53836498 = uyRgasxdiarIPATmfHlxkdKqHpLlFZ49058159;     uyRgasxdiarIPATmfHlxkdKqHpLlFZ49058159 = uyRgasxdiarIPATmfHlxkdKqHpLlFZ29073781;     uyRgasxdiarIPATmfHlxkdKqHpLlFZ29073781 = uyRgasxdiarIPATmfHlxkdKqHpLlFZ69911749;     uyRgasxdiarIPATmfHlxkdKqHpLlFZ69911749 = uyRgasxdiarIPATmfHlxkdKqHpLlFZ39044335;     uyRgasxdiarIPATmfHlxkdKqHpLlFZ39044335 = uyRgasxdiarIPATmfHlxkdKqHpLlFZ62927709;     uyRgasxdiarIPATmfHlxkdKqHpLlFZ62927709 = uyRgasxdiarIPATmfHlxkdKqHpLlFZ32046076;     uyRgasxdiarIPATmfHlxkdKqHpLlFZ32046076 = uyRgasxdiarIPATmfHlxkdKqHpLlFZ40889614;     uyRgasxdiarIPATmfHlxkdKqHpLlFZ40889614 = uyRgasxdiarIPATmfHlxkdKqHpLlFZ42876543;     uyRgasxdiarIPATmfHlxkdKqHpLlFZ42876543 = uyRgasxdiarIPATmfHlxkdKqHpLlFZ80668946;     uyRgasxdiarIPATmfHlxkdKqHpLlFZ80668946 = uyRgasxdiarIPATmfHlxkdKqHpLlFZ98935294;     uyRgasxdiarIPATmfHlxkdKqHpLlFZ98935294 = uyRgasxdiarIPATmfHlxkdKqHpLlFZ54351545;     uyRgasxdiarIPATmfHlxkdKqHpLlFZ54351545 = uyRgasxdiarIPATmfHlxkdKqHpLlFZ99515973;     uyRgasxdiarIPATmfHlxkdKqHpLlFZ99515973 = uyRgasxdiarIPATmfHlxkdKqHpLlFZ783142;     uyRgasxdiarIPATmfHlxkdKqHpLlFZ783142 = uyRgasxdiarIPATmfHlxkdKqHpLlFZ12109499;     uyRgasxdiarIPATmfHlxkdKqHpLlFZ12109499 = uyRgasxdiarIPATmfHlxkdKqHpLlFZ22303653;     uyRgasxdiarIPATmfHlxkdKqHpLlFZ22303653 = uyRgasxdiarIPATmfHlxkdKqHpLlFZ27055353;     uyRgasxdiarIPATmfHlxkdKqHpLlFZ27055353 = uyRgasxdiarIPATmfHlxkdKqHpLlFZ64228424;     uyRgasxdiarIPATmfHlxkdKqHpLlFZ64228424 = uyRgasxdiarIPATmfHlxkdKqHpLlFZ83037687;     uyRgasxdiarIPATmfHlxkdKqHpLlFZ83037687 = uyRgasxdiarIPATmfHlxkdKqHpLlFZ43358306;     uyRgasxdiarIPATmfHlxkdKqHpLlFZ43358306 = uyRgasxdiarIPATmfHlxkdKqHpLlFZ68827633;     uyRgasxdiarIPATmfHlxkdKqHpLlFZ68827633 = uyRgasxdiarIPATmfHlxkdKqHpLlFZ22388618;     uyRgasxdiarIPATmfHlxkdKqHpLlFZ22388618 = uyRgasxdiarIPATmfHlxkdKqHpLlFZ90989376;     uyRgasxdiarIPATmfHlxkdKqHpLlFZ90989376 = uyRgasxdiarIPATmfHlxkdKqHpLlFZ9937547;     uyRgasxdiarIPATmfHlxkdKqHpLlFZ9937547 = uyRgasxdiarIPATmfHlxkdKqHpLlFZ12631545;     uyRgasxdiarIPATmfHlxkdKqHpLlFZ12631545 = uyRgasxdiarIPATmfHlxkdKqHpLlFZ78510581;     uyRgasxdiarIPATmfHlxkdKqHpLlFZ78510581 = uyRgasxdiarIPATmfHlxkdKqHpLlFZ58578638;     uyRgasxdiarIPATmfHlxkdKqHpLlFZ58578638 = uyRgasxdiarIPATmfHlxkdKqHpLlFZ8287376;     uyRgasxdiarIPATmfHlxkdKqHpLlFZ8287376 = uyRgasxdiarIPATmfHlxkdKqHpLlFZ43074007;     uyRgasxdiarIPATmfHlxkdKqHpLlFZ43074007 = uyRgasxdiarIPATmfHlxkdKqHpLlFZ77134607;     uyRgasxdiarIPATmfHlxkdKqHpLlFZ77134607 = uyRgasxdiarIPATmfHlxkdKqHpLlFZ43753828;     uyRgasxdiarIPATmfHlxkdKqHpLlFZ43753828 = uyRgasxdiarIPATmfHlxkdKqHpLlFZ59569065;     uyRgasxdiarIPATmfHlxkdKqHpLlFZ59569065 = uyRgasxdiarIPATmfHlxkdKqHpLlFZ72101986;     uyRgasxdiarIPATmfHlxkdKqHpLlFZ72101986 = uyRgasxdiarIPATmfHlxkdKqHpLlFZ77656475;     uyRgasxdiarIPATmfHlxkdKqHpLlFZ77656475 = uyRgasxdiarIPATmfHlxkdKqHpLlFZ30640522;     uyRgasxdiarIPATmfHlxkdKqHpLlFZ30640522 = uyRgasxdiarIPATmfHlxkdKqHpLlFZ5171281;     uyRgasxdiarIPATmfHlxkdKqHpLlFZ5171281 = uyRgasxdiarIPATmfHlxkdKqHpLlFZ4707208;     uyRgasxdiarIPATmfHlxkdKqHpLlFZ4707208 = uyRgasxdiarIPATmfHlxkdKqHpLlFZ73482271;     uyRgasxdiarIPATmfHlxkdKqHpLlFZ73482271 = uyRgasxdiarIPATmfHlxkdKqHpLlFZ33936480;     uyRgasxdiarIPATmfHlxkdKqHpLlFZ33936480 = uyRgasxdiarIPATmfHlxkdKqHpLlFZ68228988;     uyRgasxdiarIPATmfHlxkdKqHpLlFZ68228988 = uyRgasxdiarIPATmfHlxkdKqHpLlFZ7713810;     uyRgasxdiarIPATmfHlxkdKqHpLlFZ7713810 = uyRgasxdiarIPATmfHlxkdKqHpLlFZ63859905;     uyRgasxdiarIPATmfHlxkdKqHpLlFZ63859905 = uyRgasxdiarIPATmfHlxkdKqHpLlFZ91025554;     uyRgasxdiarIPATmfHlxkdKqHpLlFZ91025554 = uyRgasxdiarIPATmfHlxkdKqHpLlFZ39586765;     uyRgasxdiarIPATmfHlxkdKqHpLlFZ39586765 = uyRgasxdiarIPATmfHlxkdKqHpLlFZ3247350;     uyRgasxdiarIPATmfHlxkdKqHpLlFZ3247350 = uyRgasxdiarIPATmfHlxkdKqHpLlFZ47717021;     uyRgasxdiarIPATmfHlxkdKqHpLlFZ47717021 = uyRgasxdiarIPATmfHlxkdKqHpLlFZ39303428;     uyRgasxdiarIPATmfHlxkdKqHpLlFZ39303428 = uyRgasxdiarIPATmfHlxkdKqHpLlFZ56923712;     uyRgasxdiarIPATmfHlxkdKqHpLlFZ56923712 = uyRgasxdiarIPATmfHlxkdKqHpLlFZ96125219;     uyRgasxdiarIPATmfHlxkdKqHpLlFZ96125219 = uyRgasxdiarIPATmfHlxkdKqHpLlFZ58463102;     uyRgasxdiarIPATmfHlxkdKqHpLlFZ58463102 = uyRgasxdiarIPATmfHlxkdKqHpLlFZ72269023;     uyRgasxdiarIPATmfHlxkdKqHpLlFZ72269023 = uyRgasxdiarIPATmfHlxkdKqHpLlFZ87590901;     uyRgasxdiarIPATmfHlxkdKqHpLlFZ87590901 = uyRgasxdiarIPATmfHlxkdKqHpLlFZ75472460;     uyRgasxdiarIPATmfHlxkdKqHpLlFZ75472460 = uyRgasxdiarIPATmfHlxkdKqHpLlFZ30594306;     uyRgasxdiarIPATmfHlxkdKqHpLlFZ30594306 = uyRgasxdiarIPATmfHlxkdKqHpLlFZ37852918;     uyRgasxdiarIPATmfHlxkdKqHpLlFZ37852918 = uyRgasxdiarIPATmfHlxkdKqHpLlFZ31447881;     uyRgasxdiarIPATmfHlxkdKqHpLlFZ31447881 = uyRgasxdiarIPATmfHlxkdKqHpLlFZ58068783;     uyRgasxdiarIPATmfHlxkdKqHpLlFZ58068783 = uyRgasxdiarIPATmfHlxkdKqHpLlFZ19136234;     uyRgasxdiarIPATmfHlxkdKqHpLlFZ19136234 = uyRgasxdiarIPATmfHlxkdKqHpLlFZ57280204;     uyRgasxdiarIPATmfHlxkdKqHpLlFZ57280204 = uyRgasxdiarIPATmfHlxkdKqHpLlFZ60533753;     uyRgasxdiarIPATmfHlxkdKqHpLlFZ60533753 = uyRgasxdiarIPATmfHlxkdKqHpLlFZ4349071;     uyRgasxdiarIPATmfHlxkdKqHpLlFZ4349071 = uyRgasxdiarIPATmfHlxkdKqHpLlFZ23758701;     uyRgasxdiarIPATmfHlxkdKqHpLlFZ23758701 = uyRgasxdiarIPATmfHlxkdKqHpLlFZ37209239;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void xjlqAcGNMvXBTPvZxHvzUGAwi80054099() {     double eACizdIPrlhCTCHWyGZWUFgfiVCdSU59031460 = -492243656;    double eACizdIPrlhCTCHWyGZWUFgfiVCdSU75662188 = -659437562;    double eACizdIPrlhCTCHWyGZWUFgfiVCdSU28845462 = -641151236;    double eACizdIPrlhCTCHWyGZWUFgfiVCdSU4952299 = -771755654;    double eACizdIPrlhCTCHWyGZWUFgfiVCdSU16425047 = 27494226;    double eACizdIPrlhCTCHWyGZWUFgfiVCdSU35263403 = -771088677;    double eACizdIPrlhCTCHWyGZWUFgfiVCdSU41140776 = -291749313;    double eACizdIPrlhCTCHWyGZWUFgfiVCdSU1562741 = -931860447;    double eACizdIPrlhCTCHWyGZWUFgfiVCdSU13853623 = -792234524;    double eACizdIPrlhCTCHWyGZWUFgfiVCdSU77568716 = -280914496;    double eACizdIPrlhCTCHWyGZWUFgfiVCdSU87438361 = -222546310;    double eACizdIPrlhCTCHWyGZWUFgfiVCdSU40022645 = -940285920;    double eACizdIPrlhCTCHWyGZWUFgfiVCdSU9447927 = -45944334;    double eACizdIPrlhCTCHWyGZWUFgfiVCdSU62539621 = -695431792;    double eACizdIPrlhCTCHWyGZWUFgfiVCdSU13337009 = -581848225;    double eACizdIPrlhCTCHWyGZWUFgfiVCdSU94025323 = -876937809;    double eACizdIPrlhCTCHWyGZWUFgfiVCdSU77786085 = -212232543;    double eACizdIPrlhCTCHWyGZWUFgfiVCdSU47002323 = -207661157;    double eACizdIPrlhCTCHWyGZWUFgfiVCdSU58866663 = -641856964;    double eACizdIPrlhCTCHWyGZWUFgfiVCdSU14890632 = -373040866;    double eACizdIPrlhCTCHWyGZWUFgfiVCdSU548306 = -598294982;    double eACizdIPrlhCTCHWyGZWUFgfiVCdSU37382793 = -140031211;    double eACizdIPrlhCTCHWyGZWUFgfiVCdSU40628102 = -502505931;    double eACizdIPrlhCTCHWyGZWUFgfiVCdSU77037507 = -792306676;    double eACizdIPrlhCTCHWyGZWUFgfiVCdSU78680186 = 14165682;    double eACizdIPrlhCTCHWyGZWUFgfiVCdSU23477952 = -870601038;    double eACizdIPrlhCTCHWyGZWUFgfiVCdSU93292314 = -88964907;    double eACizdIPrlhCTCHWyGZWUFgfiVCdSU37762470 = -873329181;    double eACizdIPrlhCTCHWyGZWUFgfiVCdSU49965479 = -148818447;    double eACizdIPrlhCTCHWyGZWUFgfiVCdSU84636479 = -434933479;    double eACizdIPrlhCTCHWyGZWUFgfiVCdSU8872119 = -127505018;    double eACizdIPrlhCTCHWyGZWUFgfiVCdSU27126044 = 31541158;    double eACizdIPrlhCTCHWyGZWUFgfiVCdSU6086220 = -39924788;    double eACizdIPrlhCTCHWyGZWUFgfiVCdSU71863493 = -852313430;    double eACizdIPrlhCTCHWyGZWUFgfiVCdSU32653539 = -423331321;    double eACizdIPrlhCTCHWyGZWUFgfiVCdSU28087108 = -736296173;    double eACizdIPrlhCTCHWyGZWUFgfiVCdSU17034868 = 79771014;    double eACizdIPrlhCTCHWyGZWUFgfiVCdSU10618413 = -878850439;    double eACizdIPrlhCTCHWyGZWUFgfiVCdSU14216945 = -52263195;    double eACizdIPrlhCTCHWyGZWUFgfiVCdSU61728805 = -165665779;    double eACizdIPrlhCTCHWyGZWUFgfiVCdSU83449626 = -479547242;    double eACizdIPrlhCTCHWyGZWUFgfiVCdSU86413920 = -806409071;    double eACizdIPrlhCTCHWyGZWUFgfiVCdSU86411733 = -594433588;    double eACizdIPrlhCTCHWyGZWUFgfiVCdSU11022568 = -703150813;    double eACizdIPrlhCTCHWyGZWUFgfiVCdSU11961887 = -556400105;    double eACizdIPrlhCTCHWyGZWUFgfiVCdSU80096093 = -36130854;    double eACizdIPrlhCTCHWyGZWUFgfiVCdSU68544654 = -136559615;    double eACizdIPrlhCTCHWyGZWUFgfiVCdSU62508698 = -376758901;    double eACizdIPrlhCTCHWyGZWUFgfiVCdSU5999387 = -84183428;    double eACizdIPrlhCTCHWyGZWUFgfiVCdSU70399022 = -905727305;    double eACizdIPrlhCTCHWyGZWUFgfiVCdSU87977793 = -906982930;    double eACizdIPrlhCTCHWyGZWUFgfiVCdSU97171804 = -309355594;    double eACizdIPrlhCTCHWyGZWUFgfiVCdSU3332363 = -729002547;    double eACizdIPrlhCTCHWyGZWUFgfiVCdSU50328775 = -61373473;    double eACizdIPrlhCTCHWyGZWUFgfiVCdSU79505794 = -833559765;    double eACizdIPrlhCTCHWyGZWUFgfiVCdSU21648667 = -252212446;    double eACizdIPrlhCTCHWyGZWUFgfiVCdSU35034087 = -56931631;    double eACizdIPrlhCTCHWyGZWUFgfiVCdSU51807954 = -848844560;    double eACizdIPrlhCTCHWyGZWUFgfiVCdSU26272112 = -685921336;    double eACizdIPrlhCTCHWyGZWUFgfiVCdSU92947094 = -101904737;    double eACizdIPrlhCTCHWyGZWUFgfiVCdSU41971088 = -582123770;    double eACizdIPrlhCTCHWyGZWUFgfiVCdSU3378306 = -418420133;    double eACizdIPrlhCTCHWyGZWUFgfiVCdSU51597261 = -683042000;    double eACizdIPrlhCTCHWyGZWUFgfiVCdSU29217144 = -257301045;    double eACizdIPrlhCTCHWyGZWUFgfiVCdSU68696598 = -53409478;    double eACizdIPrlhCTCHWyGZWUFgfiVCdSU60312318 = -154087469;    double eACizdIPrlhCTCHWyGZWUFgfiVCdSU33936426 = -800361133;    double eACizdIPrlhCTCHWyGZWUFgfiVCdSU37584433 = -193630905;    double eACizdIPrlhCTCHWyGZWUFgfiVCdSU29886083 = -172100471;    double eACizdIPrlhCTCHWyGZWUFgfiVCdSU85249901 = -845552053;    double eACizdIPrlhCTCHWyGZWUFgfiVCdSU76990456 = -856708824;    double eACizdIPrlhCTCHWyGZWUFgfiVCdSU67167673 = -333382104;    double eACizdIPrlhCTCHWyGZWUFgfiVCdSU32785379 = -55397963;    double eACizdIPrlhCTCHWyGZWUFgfiVCdSU97137858 = -376191185;    double eACizdIPrlhCTCHWyGZWUFgfiVCdSU31441005 = -893493624;    double eACizdIPrlhCTCHWyGZWUFgfiVCdSU14134385 = -791885911;    double eACizdIPrlhCTCHWyGZWUFgfiVCdSU50971059 = -545597623;    double eACizdIPrlhCTCHWyGZWUFgfiVCdSU29605534 = -799355119;    double eACizdIPrlhCTCHWyGZWUFgfiVCdSU65075620 = -135906572;    double eACizdIPrlhCTCHWyGZWUFgfiVCdSU98584093 = -949703465;    double eACizdIPrlhCTCHWyGZWUFgfiVCdSU54933297 = -634041423;    double eACizdIPrlhCTCHWyGZWUFgfiVCdSU30783617 = -712206007;    double eACizdIPrlhCTCHWyGZWUFgfiVCdSU31763083 = -689145753;    double eACizdIPrlhCTCHWyGZWUFgfiVCdSU79566457 = -243091143;    double eACizdIPrlhCTCHWyGZWUFgfiVCdSU96658685 = -527950550;    double eACizdIPrlhCTCHWyGZWUFgfiVCdSU11700314 = -818149425;    double eACizdIPrlhCTCHWyGZWUFgfiVCdSU23793681 = -239456295;    double eACizdIPrlhCTCHWyGZWUFgfiVCdSU55757444 = -978551315;    double eACizdIPrlhCTCHWyGZWUFgfiVCdSU92357699 = 81246334;    double eACizdIPrlhCTCHWyGZWUFgfiVCdSU11004872 = -71118876;    double eACizdIPrlhCTCHWyGZWUFgfiVCdSU93053020 = -579364542;    double eACizdIPrlhCTCHWyGZWUFgfiVCdSU65226914 = -71384426;    double eACizdIPrlhCTCHWyGZWUFgfiVCdSU84346300 = -92929104;    double eACizdIPrlhCTCHWyGZWUFgfiVCdSU21269850 = -950358458;    double eACizdIPrlhCTCHWyGZWUFgfiVCdSU19757717 = -583542009;    double eACizdIPrlhCTCHWyGZWUFgfiVCdSU80071320 = 38872890;    double eACizdIPrlhCTCHWyGZWUFgfiVCdSU34816659 = -23367071;    double eACizdIPrlhCTCHWyGZWUFgfiVCdSU57194590 = -237132543;    double eACizdIPrlhCTCHWyGZWUFgfiVCdSU42325969 = -549741335;    double eACizdIPrlhCTCHWyGZWUFgfiVCdSU51649569 = -492243656;     eACizdIPrlhCTCHWyGZWUFgfiVCdSU59031460 = eACizdIPrlhCTCHWyGZWUFgfiVCdSU75662188;     eACizdIPrlhCTCHWyGZWUFgfiVCdSU75662188 = eACizdIPrlhCTCHWyGZWUFgfiVCdSU28845462;     eACizdIPrlhCTCHWyGZWUFgfiVCdSU28845462 = eACizdIPrlhCTCHWyGZWUFgfiVCdSU4952299;     eACizdIPrlhCTCHWyGZWUFgfiVCdSU4952299 = eACizdIPrlhCTCHWyGZWUFgfiVCdSU16425047;     eACizdIPrlhCTCHWyGZWUFgfiVCdSU16425047 = eACizdIPrlhCTCHWyGZWUFgfiVCdSU35263403;     eACizdIPrlhCTCHWyGZWUFgfiVCdSU35263403 = eACizdIPrlhCTCHWyGZWUFgfiVCdSU41140776;     eACizdIPrlhCTCHWyGZWUFgfiVCdSU41140776 = eACizdIPrlhCTCHWyGZWUFgfiVCdSU1562741;     eACizdIPrlhCTCHWyGZWUFgfiVCdSU1562741 = eACizdIPrlhCTCHWyGZWUFgfiVCdSU13853623;     eACizdIPrlhCTCHWyGZWUFgfiVCdSU13853623 = eACizdIPrlhCTCHWyGZWUFgfiVCdSU77568716;     eACizdIPrlhCTCHWyGZWUFgfiVCdSU77568716 = eACizdIPrlhCTCHWyGZWUFgfiVCdSU87438361;     eACizdIPrlhCTCHWyGZWUFgfiVCdSU87438361 = eACizdIPrlhCTCHWyGZWUFgfiVCdSU40022645;     eACizdIPrlhCTCHWyGZWUFgfiVCdSU40022645 = eACizdIPrlhCTCHWyGZWUFgfiVCdSU9447927;     eACizdIPrlhCTCHWyGZWUFgfiVCdSU9447927 = eACizdIPrlhCTCHWyGZWUFgfiVCdSU62539621;     eACizdIPrlhCTCHWyGZWUFgfiVCdSU62539621 = eACizdIPrlhCTCHWyGZWUFgfiVCdSU13337009;     eACizdIPrlhCTCHWyGZWUFgfiVCdSU13337009 = eACizdIPrlhCTCHWyGZWUFgfiVCdSU94025323;     eACizdIPrlhCTCHWyGZWUFgfiVCdSU94025323 = eACizdIPrlhCTCHWyGZWUFgfiVCdSU77786085;     eACizdIPrlhCTCHWyGZWUFgfiVCdSU77786085 = eACizdIPrlhCTCHWyGZWUFgfiVCdSU47002323;     eACizdIPrlhCTCHWyGZWUFgfiVCdSU47002323 = eACizdIPrlhCTCHWyGZWUFgfiVCdSU58866663;     eACizdIPrlhCTCHWyGZWUFgfiVCdSU58866663 = eACizdIPrlhCTCHWyGZWUFgfiVCdSU14890632;     eACizdIPrlhCTCHWyGZWUFgfiVCdSU14890632 = eACizdIPrlhCTCHWyGZWUFgfiVCdSU548306;     eACizdIPrlhCTCHWyGZWUFgfiVCdSU548306 = eACizdIPrlhCTCHWyGZWUFgfiVCdSU37382793;     eACizdIPrlhCTCHWyGZWUFgfiVCdSU37382793 = eACizdIPrlhCTCHWyGZWUFgfiVCdSU40628102;     eACizdIPrlhCTCHWyGZWUFgfiVCdSU40628102 = eACizdIPrlhCTCHWyGZWUFgfiVCdSU77037507;     eACizdIPrlhCTCHWyGZWUFgfiVCdSU77037507 = eACizdIPrlhCTCHWyGZWUFgfiVCdSU78680186;     eACizdIPrlhCTCHWyGZWUFgfiVCdSU78680186 = eACizdIPrlhCTCHWyGZWUFgfiVCdSU23477952;     eACizdIPrlhCTCHWyGZWUFgfiVCdSU23477952 = eACizdIPrlhCTCHWyGZWUFgfiVCdSU93292314;     eACizdIPrlhCTCHWyGZWUFgfiVCdSU93292314 = eACizdIPrlhCTCHWyGZWUFgfiVCdSU37762470;     eACizdIPrlhCTCHWyGZWUFgfiVCdSU37762470 = eACizdIPrlhCTCHWyGZWUFgfiVCdSU49965479;     eACizdIPrlhCTCHWyGZWUFgfiVCdSU49965479 = eACizdIPrlhCTCHWyGZWUFgfiVCdSU84636479;     eACizdIPrlhCTCHWyGZWUFgfiVCdSU84636479 = eACizdIPrlhCTCHWyGZWUFgfiVCdSU8872119;     eACizdIPrlhCTCHWyGZWUFgfiVCdSU8872119 = eACizdIPrlhCTCHWyGZWUFgfiVCdSU27126044;     eACizdIPrlhCTCHWyGZWUFgfiVCdSU27126044 = eACizdIPrlhCTCHWyGZWUFgfiVCdSU6086220;     eACizdIPrlhCTCHWyGZWUFgfiVCdSU6086220 = eACizdIPrlhCTCHWyGZWUFgfiVCdSU71863493;     eACizdIPrlhCTCHWyGZWUFgfiVCdSU71863493 = eACizdIPrlhCTCHWyGZWUFgfiVCdSU32653539;     eACizdIPrlhCTCHWyGZWUFgfiVCdSU32653539 = eACizdIPrlhCTCHWyGZWUFgfiVCdSU28087108;     eACizdIPrlhCTCHWyGZWUFgfiVCdSU28087108 = eACizdIPrlhCTCHWyGZWUFgfiVCdSU17034868;     eACizdIPrlhCTCHWyGZWUFgfiVCdSU17034868 = eACizdIPrlhCTCHWyGZWUFgfiVCdSU10618413;     eACizdIPrlhCTCHWyGZWUFgfiVCdSU10618413 = eACizdIPrlhCTCHWyGZWUFgfiVCdSU14216945;     eACizdIPrlhCTCHWyGZWUFgfiVCdSU14216945 = eACizdIPrlhCTCHWyGZWUFgfiVCdSU61728805;     eACizdIPrlhCTCHWyGZWUFgfiVCdSU61728805 = eACizdIPrlhCTCHWyGZWUFgfiVCdSU83449626;     eACizdIPrlhCTCHWyGZWUFgfiVCdSU83449626 = eACizdIPrlhCTCHWyGZWUFgfiVCdSU86413920;     eACizdIPrlhCTCHWyGZWUFgfiVCdSU86413920 = eACizdIPrlhCTCHWyGZWUFgfiVCdSU86411733;     eACizdIPrlhCTCHWyGZWUFgfiVCdSU86411733 = eACizdIPrlhCTCHWyGZWUFgfiVCdSU11022568;     eACizdIPrlhCTCHWyGZWUFgfiVCdSU11022568 = eACizdIPrlhCTCHWyGZWUFgfiVCdSU11961887;     eACizdIPrlhCTCHWyGZWUFgfiVCdSU11961887 = eACizdIPrlhCTCHWyGZWUFgfiVCdSU80096093;     eACizdIPrlhCTCHWyGZWUFgfiVCdSU80096093 = eACizdIPrlhCTCHWyGZWUFgfiVCdSU68544654;     eACizdIPrlhCTCHWyGZWUFgfiVCdSU68544654 = eACizdIPrlhCTCHWyGZWUFgfiVCdSU62508698;     eACizdIPrlhCTCHWyGZWUFgfiVCdSU62508698 = eACizdIPrlhCTCHWyGZWUFgfiVCdSU5999387;     eACizdIPrlhCTCHWyGZWUFgfiVCdSU5999387 = eACizdIPrlhCTCHWyGZWUFgfiVCdSU70399022;     eACizdIPrlhCTCHWyGZWUFgfiVCdSU70399022 = eACizdIPrlhCTCHWyGZWUFgfiVCdSU87977793;     eACizdIPrlhCTCHWyGZWUFgfiVCdSU87977793 = eACizdIPrlhCTCHWyGZWUFgfiVCdSU97171804;     eACizdIPrlhCTCHWyGZWUFgfiVCdSU97171804 = eACizdIPrlhCTCHWyGZWUFgfiVCdSU3332363;     eACizdIPrlhCTCHWyGZWUFgfiVCdSU3332363 = eACizdIPrlhCTCHWyGZWUFgfiVCdSU50328775;     eACizdIPrlhCTCHWyGZWUFgfiVCdSU50328775 = eACizdIPrlhCTCHWyGZWUFgfiVCdSU79505794;     eACizdIPrlhCTCHWyGZWUFgfiVCdSU79505794 = eACizdIPrlhCTCHWyGZWUFgfiVCdSU21648667;     eACizdIPrlhCTCHWyGZWUFgfiVCdSU21648667 = eACizdIPrlhCTCHWyGZWUFgfiVCdSU35034087;     eACizdIPrlhCTCHWyGZWUFgfiVCdSU35034087 = eACizdIPrlhCTCHWyGZWUFgfiVCdSU51807954;     eACizdIPrlhCTCHWyGZWUFgfiVCdSU51807954 = eACizdIPrlhCTCHWyGZWUFgfiVCdSU26272112;     eACizdIPrlhCTCHWyGZWUFgfiVCdSU26272112 = eACizdIPrlhCTCHWyGZWUFgfiVCdSU92947094;     eACizdIPrlhCTCHWyGZWUFgfiVCdSU92947094 = eACizdIPrlhCTCHWyGZWUFgfiVCdSU41971088;     eACizdIPrlhCTCHWyGZWUFgfiVCdSU41971088 = eACizdIPrlhCTCHWyGZWUFgfiVCdSU3378306;     eACizdIPrlhCTCHWyGZWUFgfiVCdSU3378306 = eACizdIPrlhCTCHWyGZWUFgfiVCdSU51597261;     eACizdIPrlhCTCHWyGZWUFgfiVCdSU51597261 = eACizdIPrlhCTCHWyGZWUFgfiVCdSU29217144;     eACizdIPrlhCTCHWyGZWUFgfiVCdSU29217144 = eACizdIPrlhCTCHWyGZWUFgfiVCdSU68696598;     eACizdIPrlhCTCHWyGZWUFgfiVCdSU68696598 = eACizdIPrlhCTCHWyGZWUFgfiVCdSU60312318;     eACizdIPrlhCTCHWyGZWUFgfiVCdSU60312318 = eACizdIPrlhCTCHWyGZWUFgfiVCdSU33936426;     eACizdIPrlhCTCHWyGZWUFgfiVCdSU33936426 = eACizdIPrlhCTCHWyGZWUFgfiVCdSU37584433;     eACizdIPrlhCTCHWyGZWUFgfiVCdSU37584433 = eACizdIPrlhCTCHWyGZWUFgfiVCdSU29886083;     eACizdIPrlhCTCHWyGZWUFgfiVCdSU29886083 = eACizdIPrlhCTCHWyGZWUFgfiVCdSU85249901;     eACizdIPrlhCTCHWyGZWUFgfiVCdSU85249901 = eACizdIPrlhCTCHWyGZWUFgfiVCdSU76990456;     eACizdIPrlhCTCHWyGZWUFgfiVCdSU76990456 = eACizdIPrlhCTCHWyGZWUFgfiVCdSU67167673;     eACizdIPrlhCTCHWyGZWUFgfiVCdSU67167673 = eACizdIPrlhCTCHWyGZWUFgfiVCdSU32785379;     eACizdIPrlhCTCHWyGZWUFgfiVCdSU32785379 = eACizdIPrlhCTCHWyGZWUFgfiVCdSU97137858;     eACizdIPrlhCTCHWyGZWUFgfiVCdSU97137858 = eACizdIPrlhCTCHWyGZWUFgfiVCdSU31441005;     eACizdIPrlhCTCHWyGZWUFgfiVCdSU31441005 = eACizdIPrlhCTCHWyGZWUFgfiVCdSU14134385;     eACizdIPrlhCTCHWyGZWUFgfiVCdSU14134385 = eACizdIPrlhCTCHWyGZWUFgfiVCdSU50971059;     eACizdIPrlhCTCHWyGZWUFgfiVCdSU50971059 = eACizdIPrlhCTCHWyGZWUFgfiVCdSU29605534;     eACizdIPrlhCTCHWyGZWUFgfiVCdSU29605534 = eACizdIPrlhCTCHWyGZWUFgfiVCdSU65075620;     eACizdIPrlhCTCHWyGZWUFgfiVCdSU65075620 = eACizdIPrlhCTCHWyGZWUFgfiVCdSU98584093;     eACizdIPrlhCTCHWyGZWUFgfiVCdSU98584093 = eACizdIPrlhCTCHWyGZWUFgfiVCdSU54933297;     eACizdIPrlhCTCHWyGZWUFgfiVCdSU54933297 = eACizdIPrlhCTCHWyGZWUFgfiVCdSU30783617;     eACizdIPrlhCTCHWyGZWUFgfiVCdSU30783617 = eACizdIPrlhCTCHWyGZWUFgfiVCdSU31763083;     eACizdIPrlhCTCHWyGZWUFgfiVCdSU31763083 = eACizdIPrlhCTCHWyGZWUFgfiVCdSU79566457;     eACizdIPrlhCTCHWyGZWUFgfiVCdSU79566457 = eACizdIPrlhCTCHWyGZWUFgfiVCdSU96658685;     eACizdIPrlhCTCHWyGZWUFgfiVCdSU96658685 = eACizdIPrlhCTCHWyGZWUFgfiVCdSU11700314;     eACizdIPrlhCTCHWyGZWUFgfiVCdSU11700314 = eACizdIPrlhCTCHWyGZWUFgfiVCdSU23793681;     eACizdIPrlhCTCHWyGZWUFgfiVCdSU23793681 = eACizdIPrlhCTCHWyGZWUFgfiVCdSU55757444;     eACizdIPrlhCTCHWyGZWUFgfiVCdSU55757444 = eACizdIPrlhCTCHWyGZWUFgfiVCdSU92357699;     eACizdIPrlhCTCHWyGZWUFgfiVCdSU92357699 = eACizdIPrlhCTCHWyGZWUFgfiVCdSU11004872;     eACizdIPrlhCTCHWyGZWUFgfiVCdSU11004872 = eACizdIPrlhCTCHWyGZWUFgfiVCdSU93053020;     eACizdIPrlhCTCHWyGZWUFgfiVCdSU93053020 = eACizdIPrlhCTCHWyGZWUFgfiVCdSU65226914;     eACizdIPrlhCTCHWyGZWUFgfiVCdSU65226914 = eACizdIPrlhCTCHWyGZWUFgfiVCdSU84346300;     eACizdIPrlhCTCHWyGZWUFgfiVCdSU84346300 = eACizdIPrlhCTCHWyGZWUFgfiVCdSU21269850;     eACizdIPrlhCTCHWyGZWUFgfiVCdSU21269850 = eACizdIPrlhCTCHWyGZWUFgfiVCdSU19757717;     eACizdIPrlhCTCHWyGZWUFgfiVCdSU19757717 = eACizdIPrlhCTCHWyGZWUFgfiVCdSU80071320;     eACizdIPrlhCTCHWyGZWUFgfiVCdSU80071320 = eACizdIPrlhCTCHWyGZWUFgfiVCdSU34816659;     eACizdIPrlhCTCHWyGZWUFgfiVCdSU34816659 = eACizdIPrlhCTCHWyGZWUFgfiVCdSU57194590;     eACizdIPrlhCTCHWyGZWUFgfiVCdSU57194590 = eACizdIPrlhCTCHWyGZWUFgfiVCdSU42325969;     eACizdIPrlhCTCHWyGZWUFgfiVCdSU42325969 = eACizdIPrlhCTCHWyGZWUFgfiVCdSU51649569;     eACizdIPrlhCTCHWyGZWUFgfiVCdSU51649569 = eACizdIPrlhCTCHWyGZWUFgfiVCdSU59031460;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void QpJvExnsTtbOUZdKdezDLvIVu41901358() {     double XUsQllsTUrJHDPDTiLkymSVkSVMqQy10195543 = -314833999;    double XUsQllsTUrJHDPDTiLkymSVkSVMqQy7028792 = -112988241;    double XUsQllsTUrJHDPDTiLkymSVkSVMqQy95917024 = -203202922;    double XUsQllsTUrJHDPDTiLkymSVkSVMqQy81476018 = -606942271;    double XUsQllsTUrJHDPDTiLkymSVkSVMqQy63949158 = -534705670;    double XUsQllsTUrJHDPDTiLkymSVkSVMqQy4087388 = -780483496;    double XUsQllsTUrJHDPDTiLkymSVkSVMqQy20329801 = -60828194;    double XUsQllsTUrJHDPDTiLkymSVkSVMqQy797040 = -297401522;    double XUsQllsTUrJHDPDTiLkymSVkSVMqQy47252372 = -398328683;    double XUsQllsTUrJHDPDTiLkymSVkSVMqQy12524995 = -586844414;    double XUsQllsTUrJHDPDTiLkymSVkSVMqQy36426075 = -802874155;    double XUsQllsTUrJHDPDTiLkymSVkSVMqQy24949634 = -463182096;    double XUsQllsTUrJHDPDTiLkymSVkSVMqQy94462396 = -696099539;    double XUsQllsTUrJHDPDTiLkymSVkSVMqQy99503275 = -989633430;    double XUsQllsTUrJHDPDTiLkymSVkSVMqQy71046893 = -321652993;    double XUsQllsTUrJHDPDTiLkymSVkSVMqQy84031956 = -982116414;    double XUsQllsTUrJHDPDTiLkymSVkSVMqQy33235078 = -508486701;    double XUsQllsTUrJHDPDTiLkymSVkSVMqQy12234665 = -537287500;    double XUsQllsTUrJHDPDTiLkymSVkSVMqQy2224376 = -625786946;    double XUsQllsTUrJHDPDTiLkymSVkSVMqQy9287328 = -933944068;    double XUsQllsTUrJHDPDTiLkymSVkSVMqQy82236260 = -132160917;    double XUsQllsTUrJHDPDTiLkymSVkSVMqQy18685272 = -389488953;    double XUsQllsTUrJHDPDTiLkymSVkSVMqQy85034094 = 50352016;    double XUsQllsTUrJHDPDTiLkymSVkSVMqQy24115701 = -390925158;    double XUsQllsTUrJHDPDTiLkymSVkSVMqQy16929155 = -647520456;    double XUsQllsTUrJHDPDTiLkymSVkSVMqQy99030301 = 92291951;    double XUsQllsTUrJHDPDTiLkymSVkSVMqQy28289714 = -621390890;    double XUsQllsTUrJHDPDTiLkymSVkSVMqQy963595 = -841620635;    double XUsQllsTUrJHDPDTiLkymSVkSVMqQy78398351 = -167476463;    double XUsQllsTUrJHDPDTiLkymSVkSVMqQy67371330 = 71816023;    double XUsQllsTUrJHDPDTiLkymSVkSVMqQy86378065 = -71892314;    double XUsQllsTUrJHDPDTiLkymSVkSVMqQy86229765 = -907872271;    double XUsQllsTUrJHDPDTiLkymSVkSVMqQy33912747 = -37511278;    double XUsQllsTUrJHDPDTiLkymSVkSVMqQy79320473 = -841285105;    double XUsQllsTUrJHDPDTiLkymSVkSVMqQy17821553 = -985517068;    double XUsQllsTUrJHDPDTiLkymSVkSVMqQy80498998 = -751251351;    double XUsQllsTUrJHDPDTiLkymSVkSVMqQy28267006 = -980906253;    double XUsQllsTUrJHDPDTiLkymSVkSVMqQy31681466 = -571542768;    double XUsQllsTUrJHDPDTiLkymSVkSVMqQy31377699 = -581621255;    double XUsQllsTUrJHDPDTiLkymSVkSVMqQy51169046 = -715038104;    double XUsQllsTUrJHDPDTiLkymSVkSVMqQy65607856 = -617611520;    double XUsQllsTUrJHDPDTiLkymSVkSVMqQy60130761 = -918278161;    double XUsQllsTUrJHDPDTiLkymSVkSVMqQy45095533 = -110776605;    double XUsQllsTUrJHDPDTiLkymSVkSVMqQy11841024 = -96946454;    double XUsQllsTUrJHDPDTiLkymSVkSVMqQy79941691 = -907701741;    double XUsQllsTUrJHDPDTiLkymSVkSVMqQy53324706 = -893270600;    double XUsQllsTUrJHDPDTiLkymSVkSVMqQy95779355 = -682777958;    double XUsQllsTUrJHDPDTiLkymSVkSVMqQy54117821 = -271885951;    double XUsQllsTUrJHDPDTiLkymSVkSVMqQy26280417 = -947299743;    double XUsQllsTUrJHDPDTiLkymSVkSVMqQy98064435 = -188798498;    double XUsQllsTUrJHDPDTiLkymSVkSVMqQy21509658 = -982855141;    double XUsQllsTUrJHDPDTiLkymSVkSVMqQy66236221 = 52340299;    double XUsQllsTUrJHDPDTiLkymSVkSVMqQy14927919 = -656853653;    double XUsQllsTUrJHDPDTiLkymSVkSVMqQy98376863 = -123420887;    double XUsQllsTUrJHDPDTiLkymSVkSVMqQy59665097 = -440639877;    double XUsQllsTUrJHDPDTiLkymSVkSVMqQy91510270 = -925345046;    double XUsQllsTUrJHDPDTiLkymSVkSVMqQy21994698 = -63340257;    double XUsQllsTUrJHDPDTiLkymSVkSVMqQy71801324 = -812277764;    double XUsQllsTUrJHDPDTiLkymSVkSVMqQy64546864 = -959421815;    double XUsQllsTUrJHDPDTiLkymSVkSVMqQy64918856 = -526997621;    double XUsQllsTUrJHDPDTiLkymSVkSVMqQy75797674 = -59092607;    double XUsQllsTUrJHDPDTiLkymSVkSVMqQy19366206 = -219207560;    double XUsQllsTUrJHDPDTiLkymSVkSVMqQy22398689 = -29925060;    double XUsQllsTUrJHDPDTiLkymSVkSVMqQy79881041 = -370144707;    double XUsQllsTUrJHDPDTiLkymSVkSVMqQy26146929 = -414952100;    double XUsQllsTUrJHDPDTiLkymSVkSVMqQy50196309 = -895001885;    double XUsQllsTUrJHDPDTiLkymSVkSVMqQy91036887 = -325670819;    double XUsQllsTUrJHDPDTiLkymSVkSVMqQy15141923 = -854814434;    double XUsQllsTUrJHDPDTiLkymSVkSVMqQy81681722 = 95883638;    double XUsQllsTUrJHDPDTiLkymSVkSVMqQy90547895 = -570401643;    double XUsQllsTUrJHDPDTiLkymSVkSVMqQy55764950 = 98789838;    double XUsQllsTUrJHDPDTiLkymSVkSVMqQy1553612 = -936943933;    double XUsQllsTUrJHDPDTiLkymSVkSVMqQy80856966 = -955666246;    double XUsQllsTUrJHDPDTiLkymSVkSVMqQy51055330 = -910748842;    double XUsQllsTUrJHDPDTiLkymSVkSVMqQy43679471 = -216332549;    double XUsQllsTUrJHDPDTiLkymSVkSVMqQy22105499 = -213882757;    double XUsQllsTUrJHDPDTiLkymSVkSVMqQy73589739 = -178712348;    double XUsQllsTUrJHDPDTiLkymSVkSVMqQy73193070 = -852701530;    double XUsQllsTUrJHDPDTiLkymSVkSVMqQy44174009 = -483223418;    double XUsQllsTUrJHDPDTiLkymSVkSVMqQy63604448 = -754249857;    double XUsQllsTUrJHDPDTiLkymSVkSVMqQy3250947 = -224930092;    double XUsQllsTUrJHDPDTiLkymSVkSVMqQy74171893 = -249504939;    double XUsQllsTUrJHDPDTiLkymSVkSVMqQy74683178 = -894320892;    double XUsQllsTUrJHDPDTiLkymSVkSVMqQy80333916 = -978677966;    double XUsQllsTUrJHDPDTiLkymSVkSVMqQy45861673 = 54671164;    double XUsQllsTUrJHDPDTiLkymSVkSVMqQy20141845 = -24232614;    double XUsQllsTUrJHDPDTiLkymSVkSVMqQy71301847 = -151018619;    double XUsQllsTUrJHDPDTiLkymSVkSVMqQy35535883 = -914090391;    double XUsQllsTUrJHDPDTiLkymSVkSVMqQy19655376 = -300645229;    double XUsQllsTUrJHDPDTiLkymSVkSVMqQy26311283 = 39827977;    double XUsQllsTUrJHDPDTiLkymSVkSVMqQy58504300 = -587911094;    double XUsQllsTUrJHDPDTiLkymSVkSVMqQy56465682 = -68628489;    double XUsQllsTUrJHDPDTiLkymSVkSVMqQy67134602 = -612120954;    double XUsQllsTUrJHDPDTiLkymSVkSVMqQy66458842 = 45376366;    double XUsQllsTUrJHDPDTiLkymSVkSVMqQy75371372 = -555945498;    double XUsQllsTUrJHDPDTiLkymSVkSVMqQy46241651 = -298403961;    double XUsQllsTUrJHDPDTiLkymSVkSVMqQy37732073 = -788353102;    double XUsQllsTUrJHDPDTiLkymSVkSVMqQy65214491 = -740631898;    double XUsQllsTUrJHDPDTiLkymSVkSVMqQy85694095 = -681994355;    double XUsQllsTUrJHDPDTiLkymSVkSVMqQy29745383 = -314833999;     XUsQllsTUrJHDPDTiLkymSVkSVMqQy10195543 = XUsQllsTUrJHDPDTiLkymSVkSVMqQy7028792;     XUsQllsTUrJHDPDTiLkymSVkSVMqQy7028792 = XUsQllsTUrJHDPDTiLkymSVkSVMqQy95917024;     XUsQllsTUrJHDPDTiLkymSVkSVMqQy95917024 = XUsQllsTUrJHDPDTiLkymSVkSVMqQy81476018;     XUsQllsTUrJHDPDTiLkymSVkSVMqQy81476018 = XUsQllsTUrJHDPDTiLkymSVkSVMqQy63949158;     XUsQllsTUrJHDPDTiLkymSVkSVMqQy63949158 = XUsQllsTUrJHDPDTiLkymSVkSVMqQy4087388;     XUsQllsTUrJHDPDTiLkymSVkSVMqQy4087388 = XUsQllsTUrJHDPDTiLkymSVkSVMqQy20329801;     XUsQllsTUrJHDPDTiLkymSVkSVMqQy20329801 = XUsQllsTUrJHDPDTiLkymSVkSVMqQy797040;     XUsQllsTUrJHDPDTiLkymSVkSVMqQy797040 = XUsQllsTUrJHDPDTiLkymSVkSVMqQy47252372;     XUsQllsTUrJHDPDTiLkymSVkSVMqQy47252372 = XUsQllsTUrJHDPDTiLkymSVkSVMqQy12524995;     XUsQllsTUrJHDPDTiLkymSVkSVMqQy12524995 = XUsQllsTUrJHDPDTiLkymSVkSVMqQy36426075;     XUsQllsTUrJHDPDTiLkymSVkSVMqQy36426075 = XUsQllsTUrJHDPDTiLkymSVkSVMqQy24949634;     XUsQllsTUrJHDPDTiLkymSVkSVMqQy24949634 = XUsQllsTUrJHDPDTiLkymSVkSVMqQy94462396;     XUsQllsTUrJHDPDTiLkymSVkSVMqQy94462396 = XUsQllsTUrJHDPDTiLkymSVkSVMqQy99503275;     XUsQllsTUrJHDPDTiLkymSVkSVMqQy99503275 = XUsQllsTUrJHDPDTiLkymSVkSVMqQy71046893;     XUsQllsTUrJHDPDTiLkymSVkSVMqQy71046893 = XUsQllsTUrJHDPDTiLkymSVkSVMqQy84031956;     XUsQllsTUrJHDPDTiLkymSVkSVMqQy84031956 = XUsQllsTUrJHDPDTiLkymSVkSVMqQy33235078;     XUsQllsTUrJHDPDTiLkymSVkSVMqQy33235078 = XUsQllsTUrJHDPDTiLkymSVkSVMqQy12234665;     XUsQllsTUrJHDPDTiLkymSVkSVMqQy12234665 = XUsQllsTUrJHDPDTiLkymSVkSVMqQy2224376;     XUsQllsTUrJHDPDTiLkymSVkSVMqQy2224376 = XUsQllsTUrJHDPDTiLkymSVkSVMqQy9287328;     XUsQllsTUrJHDPDTiLkymSVkSVMqQy9287328 = XUsQllsTUrJHDPDTiLkymSVkSVMqQy82236260;     XUsQllsTUrJHDPDTiLkymSVkSVMqQy82236260 = XUsQllsTUrJHDPDTiLkymSVkSVMqQy18685272;     XUsQllsTUrJHDPDTiLkymSVkSVMqQy18685272 = XUsQllsTUrJHDPDTiLkymSVkSVMqQy85034094;     XUsQllsTUrJHDPDTiLkymSVkSVMqQy85034094 = XUsQllsTUrJHDPDTiLkymSVkSVMqQy24115701;     XUsQllsTUrJHDPDTiLkymSVkSVMqQy24115701 = XUsQllsTUrJHDPDTiLkymSVkSVMqQy16929155;     XUsQllsTUrJHDPDTiLkymSVkSVMqQy16929155 = XUsQllsTUrJHDPDTiLkymSVkSVMqQy99030301;     XUsQllsTUrJHDPDTiLkymSVkSVMqQy99030301 = XUsQllsTUrJHDPDTiLkymSVkSVMqQy28289714;     XUsQllsTUrJHDPDTiLkymSVkSVMqQy28289714 = XUsQllsTUrJHDPDTiLkymSVkSVMqQy963595;     XUsQllsTUrJHDPDTiLkymSVkSVMqQy963595 = XUsQllsTUrJHDPDTiLkymSVkSVMqQy78398351;     XUsQllsTUrJHDPDTiLkymSVkSVMqQy78398351 = XUsQllsTUrJHDPDTiLkymSVkSVMqQy67371330;     XUsQllsTUrJHDPDTiLkymSVkSVMqQy67371330 = XUsQllsTUrJHDPDTiLkymSVkSVMqQy86378065;     XUsQllsTUrJHDPDTiLkymSVkSVMqQy86378065 = XUsQllsTUrJHDPDTiLkymSVkSVMqQy86229765;     XUsQllsTUrJHDPDTiLkymSVkSVMqQy86229765 = XUsQllsTUrJHDPDTiLkymSVkSVMqQy33912747;     XUsQllsTUrJHDPDTiLkymSVkSVMqQy33912747 = XUsQllsTUrJHDPDTiLkymSVkSVMqQy79320473;     XUsQllsTUrJHDPDTiLkymSVkSVMqQy79320473 = XUsQllsTUrJHDPDTiLkymSVkSVMqQy17821553;     XUsQllsTUrJHDPDTiLkymSVkSVMqQy17821553 = XUsQllsTUrJHDPDTiLkymSVkSVMqQy80498998;     XUsQllsTUrJHDPDTiLkymSVkSVMqQy80498998 = XUsQllsTUrJHDPDTiLkymSVkSVMqQy28267006;     XUsQllsTUrJHDPDTiLkymSVkSVMqQy28267006 = XUsQllsTUrJHDPDTiLkymSVkSVMqQy31681466;     XUsQllsTUrJHDPDTiLkymSVkSVMqQy31681466 = XUsQllsTUrJHDPDTiLkymSVkSVMqQy31377699;     XUsQllsTUrJHDPDTiLkymSVkSVMqQy31377699 = XUsQllsTUrJHDPDTiLkymSVkSVMqQy51169046;     XUsQllsTUrJHDPDTiLkymSVkSVMqQy51169046 = XUsQllsTUrJHDPDTiLkymSVkSVMqQy65607856;     XUsQllsTUrJHDPDTiLkymSVkSVMqQy65607856 = XUsQllsTUrJHDPDTiLkymSVkSVMqQy60130761;     XUsQllsTUrJHDPDTiLkymSVkSVMqQy60130761 = XUsQllsTUrJHDPDTiLkymSVkSVMqQy45095533;     XUsQllsTUrJHDPDTiLkymSVkSVMqQy45095533 = XUsQllsTUrJHDPDTiLkymSVkSVMqQy11841024;     XUsQllsTUrJHDPDTiLkymSVkSVMqQy11841024 = XUsQllsTUrJHDPDTiLkymSVkSVMqQy79941691;     XUsQllsTUrJHDPDTiLkymSVkSVMqQy79941691 = XUsQllsTUrJHDPDTiLkymSVkSVMqQy53324706;     XUsQllsTUrJHDPDTiLkymSVkSVMqQy53324706 = XUsQllsTUrJHDPDTiLkymSVkSVMqQy95779355;     XUsQllsTUrJHDPDTiLkymSVkSVMqQy95779355 = XUsQllsTUrJHDPDTiLkymSVkSVMqQy54117821;     XUsQllsTUrJHDPDTiLkymSVkSVMqQy54117821 = XUsQllsTUrJHDPDTiLkymSVkSVMqQy26280417;     XUsQllsTUrJHDPDTiLkymSVkSVMqQy26280417 = XUsQllsTUrJHDPDTiLkymSVkSVMqQy98064435;     XUsQllsTUrJHDPDTiLkymSVkSVMqQy98064435 = XUsQllsTUrJHDPDTiLkymSVkSVMqQy21509658;     XUsQllsTUrJHDPDTiLkymSVkSVMqQy21509658 = XUsQllsTUrJHDPDTiLkymSVkSVMqQy66236221;     XUsQllsTUrJHDPDTiLkymSVkSVMqQy66236221 = XUsQllsTUrJHDPDTiLkymSVkSVMqQy14927919;     XUsQllsTUrJHDPDTiLkymSVkSVMqQy14927919 = XUsQllsTUrJHDPDTiLkymSVkSVMqQy98376863;     XUsQllsTUrJHDPDTiLkymSVkSVMqQy98376863 = XUsQllsTUrJHDPDTiLkymSVkSVMqQy59665097;     XUsQllsTUrJHDPDTiLkymSVkSVMqQy59665097 = XUsQllsTUrJHDPDTiLkymSVkSVMqQy91510270;     XUsQllsTUrJHDPDTiLkymSVkSVMqQy91510270 = XUsQllsTUrJHDPDTiLkymSVkSVMqQy21994698;     XUsQllsTUrJHDPDTiLkymSVkSVMqQy21994698 = XUsQllsTUrJHDPDTiLkymSVkSVMqQy71801324;     XUsQllsTUrJHDPDTiLkymSVkSVMqQy71801324 = XUsQllsTUrJHDPDTiLkymSVkSVMqQy64546864;     XUsQllsTUrJHDPDTiLkymSVkSVMqQy64546864 = XUsQllsTUrJHDPDTiLkymSVkSVMqQy64918856;     XUsQllsTUrJHDPDTiLkymSVkSVMqQy64918856 = XUsQllsTUrJHDPDTiLkymSVkSVMqQy75797674;     XUsQllsTUrJHDPDTiLkymSVkSVMqQy75797674 = XUsQllsTUrJHDPDTiLkymSVkSVMqQy19366206;     XUsQllsTUrJHDPDTiLkymSVkSVMqQy19366206 = XUsQllsTUrJHDPDTiLkymSVkSVMqQy22398689;     XUsQllsTUrJHDPDTiLkymSVkSVMqQy22398689 = XUsQllsTUrJHDPDTiLkymSVkSVMqQy79881041;     XUsQllsTUrJHDPDTiLkymSVkSVMqQy79881041 = XUsQllsTUrJHDPDTiLkymSVkSVMqQy26146929;     XUsQllsTUrJHDPDTiLkymSVkSVMqQy26146929 = XUsQllsTUrJHDPDTiLkymSVkSVMqQy50196309;     XUsQllsTUrJHDPDTiLkymSVkSVMqQy50196309 = XUsQllsTUrJHDPDTiLkymSVkSVMqQy91036887;     XUsQllsTUrJHDPDTiLkymSVkSVMqQy91036887 = XUsQllsTUrJHDPDTiLkymSVkSVMqQy15141923;     XUsQllsTUrJHDPDTiLkymSVkSVMqQy15141923 = XUsQllsTUrJHDPDTiLkymSVkSVMqQy81681722;     XUsQllsTUrJHDPDTiLkymSVkSVMqQy81681722 = XUsQllsTUrJHDPDTiLkymSVkSVMqQy90547895;     XUsQllsTUrJHDPDTiLkymSVkSVMqQy90547895 = XUsQllsTUrJHDPDTiLkymSVkSVMqQy55764950;     XUsQllsTUrJHDPDTiLkymSVkSVMqQy55764950 = XUsQllsTUrJHDPDTiLkymSVkSVMqQy1553612;     XUsQllsTUrJHDPDTiLkymSVkSVMqQy1553612 = XUsQllsTUrJHDPDTiLkymSVkSVMqQy80856966;     XUsQllsTUrJHDPDTiLkymSVkSVMqQy80856966 = XUsQllsTUrJHDPDTiLkymSVkSVMqQy51055330;     XUsQllsTUrJHDPDTiLkymSVkSVMqQy51055330 = XUsQllsTUrJHDPDTiLkymSVkSVMqQy43679471;     XUsQllsTUrJHDPDTiLkymSVkSVMqQy43679471 = XUsQllsTUrJHDPDTiLkymSVkSVMqQy22105499;     XUsQllsTUrJHDPDTiLkymSVkSVMqQy22105499 = XUsQllsTUrJHDPDTiLkymSVkSVMqQy73589739;     XUsQllsTUrJHDPDTiLkymSVkSVMqQy73589739 = XUsQllsTUrJHDPDTiLkymSVkSVMqQy73193070;     XUsQllsTUrJHDPDTiLkymSVkSVMqQy73193070 = XUsQllsTUrJHDPDTiLkymSVkSVMqQy44174009;     XUsQllsTUrJHDPDTiLkymSVkSVMqQy44174009 = XUsQllsTUrJHDPDTiLkymSVkSVMqQy63604448;     XUsQllsTUrJHDPDTiLkymSVkSVMqQy63604448 = XUsQllsTUrJHDPDTiLkymSVkSVMqQy3250947;     XUsQllsTUrJHDPDTiLkymSVkSVMqQy3250947 = XUsQllsTUrJHDPDTiLkymSVkSVMqQy74171893;     XUsQllsTUrJHDPDTiLkymSVkSVMqQy74171893 = XUsQllsTUrJHDPDTiLkymSVkSVMqQy74683178;     XUsQllsTUrJHDPDTiLkymSVkSVMqQy74683178 = XUsQllsTUrJHDPDTiLkymSVkSVMqQy80333916;     XUsQllsTUrJHDPDTiLkymSVkSVMqQy80333916 = XUsQllsTUrJHDPDTiLkymSVkSVMqQy45861673;     XUsQllsTUrJHDPDTiLkymSVkSVMqQy45861673 = XUsQllsTUrJHDPDTiLkymSVkSVMqQy20141845;     XUsQllsTUrJHDPDTiLkymSVkSVMqQy20141845 = XUsQllsTUrJHDPDTiLkymSVkSVMqQy71301847;     XUsQllsTUrJHDPDTiLkymSVkSVMqQy71301847 = XUsQllsTUrJHDPDTiLkymSVkSVMqQy35535883;     XUsQllsTUrJHDPDTiLkymSVkSVMqQy35535883 = XUsQllsTUrJHDPDTiLkymSVkSVMqQy19655376;     XUsQllsTUrJHDPDTiLkymSVkSVMqQy19655376 = XUsQllsTUrJHDPDTiLkymSVkSVMqQy26311283;     XUsQllsTUrJHDPDTiLkymSVkSVMqQy26311283 = XUsQllsTUrJHDPDTiLkymSVkSVMqQy58504300;     XUsQllsTUrJHDPDTiLkymSVkSVMqQy58504300 = XUsQllsTUrJHDPDTiLkymSVkSVMqQy56465682;     XUsQllsTUrJHDPDTiLkymSVkSVMqQy56465682 = XUsQllsTUrJHDPDTiLkymSVkSVMqQy67134602;     XUsQllsTUrJHDPDTiLkymSVkSVMqQy67134602 = XUsQllsTUrJHDPDTiLkymSVkSVMqQy66458842;     XUsQllsTUrJHDPDTiLkymSVkSVMqQy66458842 = XUsQllsTUrJHDPDTiLkymSVkSVMqQy75371372;     XUsQllsTUrJHDPDTiLkymSVkSVMqQy75371372 = XUsQllsTUrJHDPDTiLkymSVkSVMqQy46241651;     XUsQllsTUrJHDPDTiLkymSVkSVMqQy46241651 = XUsQllsTUrJHDPDTiLkymSVkSVMqQy37732073;     XUsQllsTUrJHDPDTiLkymSVkSVMqQy37732073 = XUsQllsTUrJHDPDTiLkymSVkSVMqQy65214491;     XUsQllsTUrJHDPDTiLkymSVkSVMqQy65214491 = XUsQllsTUrJHDPDTiLkymSVkSVMqQy85694095;     XUsQllsTUrJHDPDTiLkymSVkSVMqQy85694095 = XUsQllsTUrJHDPDTiLkymSVkSVMqQy29745383;     XUsQllsTUrJHDPDTiLkymSVkSVMqQy29745383 = XUsQllsTUrJHDPDTiLkymSVkSVMqQy10195543;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void SvtaiHdZNNPaYcpOzjpQkKHrS51506084() {     double yfBQFwvOyycvAWJrflqcQEWIrpdGAa32017764 = -883049330;    double yfBQFwvOyycvAWJrflqcQEWIrpdGAa68496595 = -495587093;    double yfBQFwvOyycvAWJrflqcQEWIrpdGAa41644295 = -250420454;    double yfBQFwvOyycvAWJrflqcQEWIrpdGAa12851165 = -811726446;    double yfBQFwvOyycvAWJrflqcQEWIrpdGAa24083489 = -411956592;    double yfBQFwvOyycvAWJrflqcQEWIrpdGAa28105704 = -792026654;    double yfBQFwvOyycvAWJrflqcQEWIrpdGAa49350385 = -124146318;    double yfBQFwvOyycvAWJrflqcQEWIrpdGAa87659668 = -305582370;    double yfBQFwvOyycvAWJrflqcQEWIrpdGAa43776012 = -384124101;    double yfBQFwvOyycvAWJrflqcQEWIrpdGAa73808220 = -457062811;    double yfBQFwvOyycvAWJrflqcQEWIrpdGAa7342344 = -358631858;    double yfBQFwvOyycvAWJrflqcQEWIrpdGAa41131517 = -566363702;    double yfBQFwvOyycvAWJrflqcQEWIrpdGAa27451339 = -134133328;    double yfBQFwvOyycvAWJrflqcQEWIrpdGAa66469743 = -739710228;    double yfBQFwvOyycvAWJrflqcQEWIrpdGAa66304689 = -248494912;    double yfBQFwvOyycvAWJrflqcQEWIrpdGAa32002683 = -324482955;    double yfBQFwvOyycvAWJrflqcQEWIrpdGAa26684137 = -894311419;    double yfBQFwvOyycvAWJrflqcQEWIrpdGAa74759968 = -459008418;    double yfBQFwvOyycvAWJrflqcQEWIrpdGAa6861600 = -698922602;    double yfBQFwvOyycvAWJrflqcQEWIrpdGAa90396970 = -325189124;    double yfBQFwvOyycvAWJrflqcQEWIrpdGAa39390545 = -964239620;    double yfBQFwvOyycvAWJrflqcQEWIrpdGAa83087250 = -460240117;    double yfBQFwvOyycvAWJrflqcQEWIrpdGAa94505498 = -605675339;    double yfBQFwvOyycvAWJrflqcQEWIrpdGAa61393323 = -801024024;    double yfBQFwvOyycvAWJrflqcQEWIrpdGAa90859821 = -558417429;    double yfBQFwvOyycvAWJrflqcQEWIrpdGAa88606155 = -234893577;    double yfBQFwvOyycvAWJrflqcQEWIrpdGAa1326318 = -148194934;    double yfBQFwvOyycvAWJrflqcQEWIrpdGAa36543420 = -706068867;    double yfBQFwvOyycvAWJrflqcQEWIrpdGAa26295264 = -934422381;    double yfBQFwvOyycvAWJrflqcQEWIrpdGAa13188409 = -304398171;    double yfBQFwvOyycvAWJrflqcQEWIrpdGAa37543331 = -477620062;    double yfBQFwvOyycvAWJrflqcQEWIrpdGAa5121092 = -683761102;    double yfBQFwvOyycvAWJrflqcQEWIrpdGAa59232211 = -880115161;    double yfBQFwvOyycvAWJrflqcQEWIrpdGAa51859591 = -517104732;    double yfBQFwvOyycvAWJrflqcQEWIrpdGAa98655765 = -35335671;    double yfBQFwvOyycvAWJrflqcQEWIrpdGAa50075958 = -765667331;    double yfBQFwvOyycvAWJrflqcQEWIrpdGAa71349263 = 69476651;    double yfBQFwvOyycvAWJrflqcQEWIrpdGAa35619328 = -53085526;    double yfBQFwvOyycvAWJrflqcQEWIrpdGAa91758144 = -354026535;    double yfBQFwvOyycvAWJrflqcQEWIrpdGAa63839691 = -72587105;    double yfBQFwvOyycvAWJrflqcQEWIrpdGAa19983703 = 48249222;    double yfBQFwvOyycvAWJrflqcQEWIrpdGAa76632932 = -605744239;    double yfBQFwvOyycvAWJrflqcQEWIrpdGAa92462931 = -154743420;    double yfBQFwvOyycvAWJrflqcQEWIrpdGAa59935883 = -5752623;    double yfBQFwvOyycvAWJrflqcQEWIrpdGAa59857502 = 5609630;    double yfBQFwvOyycvAWJrflqcQEWIrpdGAa92531184 = -596702830;    double yfBQFwvOyycvAWJrflqcQEWIrpdGAa21447467 = -863785478;    double yfBQFwvOyycvAWJrflqcQEWIrpdGAa35957573 = -10381939;    double yfBQFwvOyycvAWJrflqcQEWIrpdGAa33344509 = -32416165;    double yfBQFwvOyycvAWJrflqcQEWIrpdGAa14111912 = -167853682;    double yfBQFwvOyycvAWJrflqcQEWIrpdGAa9971477 = 73255533;    double yfBQFwvOyycvAWJrflqcQEWIrpdGAa62624885 = -273037782;    double yfBQFwvOyycvAWJrflqcQEWIrpdGAa6150783 = -620448792;    double yfBQFwvOyycvAWJrflqcQEWIrpdGAa26401986 = -314429947;    double yfBQFwvOyycvAWJrflqcQEWIrpdGAa12115539 = -401761626;    double yfBQFwvOyycvAWJrflqcQEWIrpdGAa48930513 = -322809214;    double yfBQFwvOyycvAWJrflqcQEWIrpdGAa73991097 = -889911755;    double yfBQFwvOyycvAWJrflqcQEWIrpdGAa80250972 = -449396430;    double yfBQFwvOyycvAWJrflqcQEWIrpdGAa21991343 = -153309018;    double yfBQFwvOyycvAWJrflqcQEWIrpdGAa35477333 = -77063015;    double yfBQFwvOyycvAWJrflqcQEWIrpdGAa26779386 = -543831720;    double yfBQFwvOyycvAWJrflqcQEWIrpdGAa12806965 = -418077451;    double yfBQFwvOyycvAWJrflqcQEWIrpdGAa61364405 = -371159990;    double yfBQFwvOyycvAWJrflqcQEWIrpdGAa30587604 = 20274069;    double yfBQFwvOyycvAWJrflqcQEWIrpdGAa36264889 = -979442750;    double yfBQFwvOyycvAWJrflqcQEWIrpdGAa2221253 = -674870757;    double yfBQFwvOyycvAWJrflqcQEWIrpdGAa81899305 = -686248542;    double yfBQFwvOyycvAWJrflqcQEWIrpdGAa75591748 = -617028596;    double yfBQFwvOyycvAWJrflqcQEWIrpdGAa67813977 = -604374558;    double yfBQFwvOyycvAWJrflqcQEWIrpdGAa16228731 = -482827582;    double yfBQFwvOyycvAWJrflqcQEWIrpdGAa60653420 = -293959606;    double yfBQFwvOyycvAWJrflqcQEWIrpdGAa91064809 = -741225894;    double yfBQFwvOyycvAWJrflqcQEWIrpdGAa83001823 = -4981883;    double yfBQFwvOyycvAWJrflqcQEWIrpdGAa43021908 = -526335498;    double yfBQFwvOyycvAWJrflqcQEWIrpdGAa70413267 = -273438347;    double yfBQFwvOyycvAWJrflqcQEWIrpdGAa62757613 = -258495382;    double yfBQFwvOyycvAWJrflqcQEWIrpdGAa90624318 = -205496698;    double yfBQFwvOyycvAWJrflqcQEWIrpdGAa34569616 = -499922716;    double yfBQFwvOyycvAWJrflqcQEWIrpdGAa1535821 = -706633654;    double yfBQFwvOyycvAWJrflqcQEWIrpdGAa98328636 = -961714600;    double yfBQFwvOyycvAWJrflqcQEWIrpdGAa67158689 = -371108100;    double yfBQFwvOyycvAWJrflqcQEWIrpdGAa65368745 = -37812995;    double yfBQFwvOyycvAWJrflqcQEWIrpdGAa3198912 = -573652702;    double yfBQFwvOyycvAWJrflqcQEWIrpdGAa12183353 = -666568699;    double yfBQFwvOyycvAWJrflqcQEWIrpdGAa3216932 = -277653704;    double yfBQFwvOyycvAWJrflqcQEWIrpdGAa74918446 = -104582280;    double yfBQFwvOyycvAWJrflqcQEWIrpdGAa98970308 = 36687690;    double yfBQFwvOyycvAWJrflqcQEWIrpdGAa32830226 = -465685215;    double yfBQFwvOyycvAWJrflqcQEWIrpdGAa39744052 = -15343107;    double yfBQFwvOyycvAWJrflqcQEWIrpdGAa49725252 = -712526458;    double yfBQFwvOyycvAWJrflqcQEWIrpdGAa76084861 = -875755576;    double yfBQFwvOyycvAWJrflqcQEWIrpdGAa91098290 = -481126920;    double yfBQFwvOyycvAWJrflqcQEWIrpdGAa13627985 = -899776508;    double yfBQFwvOyycvAWJrflqcQEWIrpdGAa56280811 = -176963521;    double yfBQFwvOyycvAWJrflqcQEWIrpdGAa37060306 = -528755385;    double yfBQFwvOyycvAWJrflqcQEWIrpdGAa7176738 = -533673328;    double yfBQFwvOyycvAWJrflqcQEWIrpdGAa15268528 = -134584249;    double yfBQFwvOyycvAWJrflqcQEWIrpdGAa61875328 = -75017490;    double yfBQFwvOyycvAWJrflqcQEWIrpdGAa23670994 = -26309874;    double yfBQFwvOyycvAWJrflqcQEWIrpdGAa57636250 = -883049330;     yfBQFwvOyycvAWJrflqcQEWIrpdGAa32017764 = yfBQFwvOyycvAWJrflqcQEWIrpdGAa68496595;     yfBQFwvOyycvAWJrflqcQEWIrpdGAa68496595 = yfBQFwvOyycvAWJrflqcQEWIrpdGAa41644295;     yfBQFwvOyycvAWJrflqcQEWIrpdGAa41644295 = yfBQFwvOyycvAWJrflqcQEWIrpdGAa12851165;     yfBQFwvOyycvAWJrflqcQEWIrpdGAa12851165 = yfBQFwvOyycvAWJrflqcQEWIrpdGAa24083489;     yfBQFwvOyycvAWJrflqcQEWIrpdGAa24083489 = yfBQFwvOyycvAWJrflqcQEWIrpdGAa28105704;     yfBQFwvOyycvAWJrflqcQEWIrpdGAa28105704 = yfBQFwvOyycvAWJrflqcQEWIrpdGAa49350385;     yfBQFwvOyycvAWJrflqcQEWIrpdGAa49350385 = yfBQFwvOyycvAWJrflqcQEWIrpdGAa87659668;     yfBQFwvOyycvAWJrflqcQEWIrpdGAa87659668 = yfBQFwvOyycvAWJrflqcQEWIrpdGAa43776012;     yfBQFwvOyycvAWJrflqcQEWIrpdGAa43776012 = yfBQFwvOyycvAWJrflqcQEWIrpdGAa73808220;     yfBQFwvOyycvAWJrflqcQEWIrpdGAa73808220 = yfBQFwvOyycvAWJrflqcQEWIrpdGAa7342344;     yfBQFwvOyycvAWJrflqcQEWIrpdGAa7342344 = yfBQFwvOyycvAWJrflqcQEWIrpdGAa41131517;     yfBQFwvOyycvAWJrflqcQEWIrpdGAa41131517 = yfBQFwvOyycvAWJrflqcQEWIrpdGAa27451339;     yfBQFwvOyycvAWJrflqcQEWIrpdGAa27451339 = yfBQFwvOyycvAWJrflqcQEWIrpdGAa66469743;     yfBQFwvOyycvAWJrflqcQEWIrpdGAa66469743 = yfBQFwvOyycvAWJrflqcQEWIrpdGAa66304689;     yfBQFwvOyycvAWJrflqcQEWIrpdGAa66304689 = yfBQFwvOyycvAWJrflqcQEWIrpdGAa32002683;     yfBQFwvOyycvAWJrflqcQEWIrpdGAa32002683 = yfBQFwvOyycvAWJrflqcQEWIrpdGAa26684137;     yfBQFwvOyycvAWJrflqcQEWIrpdGAa26684137 = yfBQFwvOyycvAWJrflqcQEWIrpdGAa74759968;     yfBQFwvOyycvAWJrflqcQEWIrpdGAa74759968 = yfBQFwvOyycvAWJrflqcQEWIrpdGAa6861600;     yfBQFwvOyycvAWJrflqcQEWIrpdGAa6861600 = yfBQFwvOyycvAWJrflqcQEWIrpdGAa90396970;     yfBQFwvOyycvAWJrflqcQEWIrpdGAa90396970 = yfBQFwvOyycvAWJrflqcQEWIrpdGAa39390545;     yfBQFwvOyycvAWJrflqcQEWIrpdGAa39390545 = yfBQFwvOyycvAWJrflqcQEWIrpdGAa83087250;     yfBQFwvOyycvAWJrflqcQEWIrpdGAa83087250 = yfBQFwvOyycvAWJrflqcQEWIrpdGAa94505498;     yfBQFwvOyycvAWJrflqcQEWIrpdGAa94505498 = yfBQFwvOyycvAWJrflqcQEWIrpdGAa61393323;     yfBQFwvOyycvAWJrflqcQEWIrpdGAa61393323 = yfBQFwvOyycvAWJrflqcQEWIrpdGAa90859821;     yfBQFwvOyycvAWJrflqcQEWIrpdGAa90859821 = yfBQFwvOyycvAWJrflqcQEWIrpdGAa88606155;     yfBQFwvOyycvAWJrflqcQEWIrpdGAa88606155 = yfBQFwvOyycvAWJrflqcQEWIrpdGAa1326318;     yfBQFwvOyycvAWJrflqcQEWIrpdGAa1326318 = yfBQFwvOyycvAWJrflqcQEWIrpdGAa36543420;     yfBQFwvOyycvAWJrflqcQEWIrpdGAa36543420 = yfBQFwvOyycvAWJrflqcQEWIrpdGAa26295264;     yfBQFwvOyycvAWJrflqcQEWIrpdGAa26295264 = yfBQFwvOyycvAWJrflqcQEWIrpdGAa13188409;     yfBQFwvOyycvAWJrflqcQEWIrpdGAa13188409 = yfBQFwvOyycvAWJrflqcQEWIrpdGAa37543331;     yfBQFwvOyycvAWJrflqcQEWIrpdGAa37543331 = yfBQFwvOyycvAWJrflqcQEWIrpdGAa5121092;     yfBQFwvOyycvAWJrflqcQEWIrpdGAa5121092 = yfBQFwvOyycvAWJrflqcQEWIrpdGAa59232211;     yfBQFwvOyycvAWJrflqcQEWIrpdGAa59232211 = yfBQFwvOyycvAWJrflqcQEWIrpdGAa51859591;     yfBQFwvOyycvAWJrflqcQEWIrpdGAa51859591 = yfBQFwvOyycvAWJrflqcQEWIrpdGAa98655765;     yfBQFwvOyycvAWJrflqcQEWIrpdGAa98655765 = yfBQFwvOyycvAWJrflqcQEWIrpdGAa50075958;     yfBQFwvOyycvAWJrflqcQEWIrpdGAa50075958 = yfBQFwvOyycvAWJrflqcQEWIrpdGAa71349263;     yfBQFwvOyycvAWJrflqcQEWIrpdGAa71349263 = yfBQFwvOyycvAWJrflqcQEWIrpdGAa35619328;     yfBQFwvOyycvAWJrflqcQEWIrpdGAa35619328 = yfBQFwvOyycvAWJrflqcQEWIrpdGAa91758144;     yfBQFwvOyycvAWJrflqcQEWIrpdGAa91758144 = yfBQFwvOyycvAWJrflqcQEWIrpdGAa63839691;     yfBQFwvOyycvAWJrflqcQEWIrpdGAa63839691 = yfBQFwvOyycvAWJrflqcQEWIrpdGAa19983703;     yfBQFwvOyycvAWJrflqcQEWIrpdGAa19983703 = yfBQFwvOyycvAWJrflqcQEWIrpdGAa76632932;     yfBQFwvOyycvAWJrflqcQEWIrpdGAa76632932 = yfBQFwvOyycvAWJrflqcQEWIrpdGAa92462931;     yfBQFwvOyycvAWJrflqcQEWIrpdGAa92462931 = yfBQFwvOyycvAWJrflqcQEWIrpdGAa59935883;     yfBQFwvOyycvAWJrflqcQEWIrpdGAa59935883 = yfBQFwvOyycvAWJrflqcQEWIrpdGAa59857502;     yfBQFwvOyycvAWJrflqcQEWIrpdGAa59857502 = yfBQFwvOyycvAWJrflqcQEWIrpdGAa92531184;     yfBQFwvOyycvAWJrflqcQEWIrpdGAa92531184 = yfBQFwvOyycvAWJrflqcQEWIrpdGAa21447467;     yfBQFwvOyycvAWJrflqcQEWIrpdGAa21447467 = yfBQFwvOyycvAWJrflqcQEWIrpdGAa35957573;     yfBQFwvOyycvAWJrflqcQEWIrpdGAa35957573 = yfBQFwvOyycvAWJrflqcQEWIrpdGAa33344509;     yfBQFwvOyycvAWJrflqcQEWIrpdGAa33344509 = yfBQFwvOyycvAWJrflqcQEWIrpdGAa14111912;     yfBQFwvOyycvAWJrflqcQEWIrpdGAa14111912 = yfBQFwvOyycvAWJrflqcQEWIrpdGAa9971477;     yfBQFwvOyycvAWJrflqcQEWIrpdGAa9971477 = yfBQFwvOyycvAWJrflqcQEWIrpdGAa62624885;     yfBQFwvOyycvAWJrflqcQEWIrpdGAa62624885 = yfBQFwvOyycvAWJrflqcQEWIrpdGAa6150783;     yfBQFwvOyycvAWJrflqcQEWIrpdGAa6150783 = yfBQFwvOyycvAWJrflqcQEWIrpdGAa26401986;     yfBQFwvOyycvAWJrflqcQEWIrpdGAa26401986 = yfBQFwvOyycvAWJrflqcQEWIrpdGAa12115539;     yfBQFwvOyycvAWJrflqcQEWIrpdGAa12115539 = yfBQFwvOyycvAWJrflqcQEWIrpdGAa48930513;     yfBQFwvOyycvAWJrflqcQEWIrpdGAa48930513 = yfBQFwvOyycvAWJrflqcQEWIrpdGAa73991097;     yfBQFwvOyycvAWJrflqcQEWIrpdGAa73991097 = yfBQFwvOyycvAWJrflqcQEWIrpdGAa80250972;     yfBQFwvOyycvAWJrflqcQEWIrpdGAa80250972 = yfBQFwvOyycvAWJrflqcQEWIrpdGAa21991343;     yfBQFwvOyycvAWJrflqcQEWIrpdGAa21991343 = yfBQFwvOyycvAWJrflqcQEWIrpdGAa35477333;     yfBQFwvOyycvAWJrflqcQEWIrpdGAa35477333 = yfBQFwvOyycvAWJrflqcQEWIrpdGAa26779386;     yfBQFwvOyycvAWJrflqcQEWIrpdGAa26779386 = yfBQFwvOyycvAWJrflqcQEWIrpdGAa12806965;     yfBQFwvOyycvAWJrflqcQEWIrpdGAa12806965 = yfBQFwvOyycvAWJrflqcQEWIrpdGAa61364405;     yfBQFwvOyycvAWJrflqcQEWIrpdGAa61364405 = yfBQFwvOyycvAWJrflqcQEWIrpdGAa30587604;     yfBQFwvOyycvAWJrflqcQEWIrpdGAa30587604 = yfBQFwvOyycvAWJrflqcQEWIrpdGAa36264889;     yfBQFwvOyycvAWJrflqcQEWIrpdGAa36264889 = yfBQFwvOyycvAWJrflqcQEWIrpdGAa2221253;     yfBQFwvOyycvAWJrflqcQEWIrpdGAa2221253 = yfBQFwvOyycvAWJrflqcQEWIrpdGAa81899305;     yfBQFwvOyycvAWJrflqcQEWIrpdGAa81899305 = yfBQFwvOyycvAWJrflqcQEWIrpdGAa75591748;     yfBQFwvOyycvAWJrflqcQEWIrpdGAa75591748 = yfBQFwvOyycvAWJrflqcQEWIrpdGAa67813977;     yfBQFwvOyycvAWJrflqcQEWIrpdGAa67813977 = yfBQFwvOyycvAWJrflqcQEWIrpdGAa16228731;     yfBQFwvOyycvAWJrflqcQEWIrpdGAa16228731 = yfBQFwvOyycvAWJrflqcQEWIrpdGAa60653420;     yfBQFwvOyycvAWJrflqcQEWIrpdGAa60653420 = yfBQFwvOyycvAWJrflqcQEWIrpdGAa91064809;     yfBQFwvOyycvAWJrflqcQEWIrpdGAa91064809 = yfBQFwvOyycvAWJrflqcQEWIrpdGAa83001823;     yfBQFwvOyycvAWJrflqcQEWIrpdGAa83001823 = yfBQFwvOyycvAWJrflqcQEWIrpdGAa43021908;     yfBQFwvOyycvAWJrflqcQEWIrpdGAa43021908 = yfBQFwvOyycvAWJrflqcQEWIrpdGAa70413267;     yfBQFwvOyycvAWJrflqcQEWIrpdGAa70413267 = yfBQFwvOyycvAWJrflqcQEWIrpdGAa62757613;     yfBQFwvOyycvAWJrflqcQEWIrpdGAa62757613 = yfBQFwvOyycvAWJrflqcQEWIrpdGAa90624318;     yfBQFwvOyycvAWJrflqcQEWIrpdGAa90624318 = yfBQFwvOyycvAWJrflqcQEWIrpdGAa34569616;     yfBQFwvOyycvAWJrflqcQEWIrpdGAa34569616 = yfBQFwvOyycvAWJrflqcQEWIrpdGAa1535821;     yfBQFwvOyycvAWJrflqcQEWIrpdGAa1535821 = yfBQFwvOyycvAWJrflqcQEWIrpdGAa98328636;     yfBQFwvOyycvAWJrflqcQEWIrpdGAa98328636 = yfBQFwvOyycvAWJrflqcQEWIrpdGAa67158689;     yfBQFwvOyycvAWJrflqcQEWIrpdGAa67158689 = yfBQFwvOyycvAWJrflqcQEWIrpdGAa65368745;     yfBQFwvOyycvAWJrflqcQEWIrpdGAa65368745 = yfBQFwvOyycvAWJrflqcQEWIrpdGAa3198912;     yfBQFwvOyycvAWJrflqcQEWIrpdGAa3198912 = yfBQFwvOyycvAWJrflqcQEWIrpdGAa12183353;     yfBQFwvOyycvAWJrflqcQEWIrpdGAa12183353 = yfBQFwvOyycvAWJrflqcQEWIrpdGAa3216932;     yfBQFwvOyycvAWJrflqcQEWIrpdGAa3216932 = yfBQFwvOyycvAWJrflqcQEWIrpdGAa74918446;     yfBQFwvOyycvAWJrflqcQEWIrpdGAa74918446 = yfBQFwvOyycvAWJrflqcQEWIrpdGAa98970308;     yfBQFwvOyycvAWJrflqcQEWIrpdGAa98970308 = yfBQFwvOyycvAWJrflqcQEWIrpdGAa32830226;     yfBQFwvOyycvAWJrflqcQEWIrpdGAa32830226 = yfBQFwvOyycvAWJrflqcQEWIrpdGAa39744052;     yfBQFwvOyycvAWJrflqcQEWIrpdGAa39744052 = yfBQFwvOyycvAWJrflqcQEWIrpdGAa49725252;     yfBQFwvOyycvAWJrflqcQEWIrpdGAa49725252 = yfBQFwvOyycvAWJrflqcQEWIrpdGAa76084861;     yfBQFwvOyycvAWJrflqcQEWIrpdGAa76084861 = yfBQFwvOyycvAWJrflqcQEWIrpdGAa91098290;     yfBQFwvOyycvAWJrflqcQEWIrpdGAa91098290 = yfBQFwvOyycvAWJrflqcQEWIrpdGAa13627985;     yfBQFwvOyycvAWJrflqcQEWIrpdGAa13627985 = yfBQFwvOyycvAWJrflqcQEWIrpdGAa56280811;     yfBQFwvOyycvAWJrflqcQEWIrpdGAa56280811 = yfBQFwvOyycvAWJrflqcQEWIrpdGAa37060306;     yfBQFwvOyycvAWJrflqcQEWIrpdGAa37060306 = yfBQFwvOyycvAWJrflqcQEWIrpdGAa7176738;     yfBQFwvOyycvAWJrflqcQEWIrpdGAa7176738 = yfBQFwvOyycvAWJrflqcQEWIrpdGAa15268528;     yfBQFwvOyycvAWJrflqcQEWIrpdGAa15268528 = yfBQFwvOyycvAWJrflqcQEWIrpdGAa61875328;     yfBQFwvOyycvAWJrflqcQEWIrpdGAa61875328 = yfBQFwvOyycvAWJrflqcQEWIrpdGAa23670994;     yfBQFwvOyycvAWJrflqcQEWIrpdGAa23670994 = yfBQFwvOyycvAWJrflqcQEWIrpdGAa57636250;     yfBQFwvOyycvAWJrflqcQEWIrpdGAa57636250 = yfBQFwvOyycvAWJrflqcQEWIrpdGAa32017764;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void JxVvZXsiSpoQruMlufIjFKHKg13353343() {     double lFpqiiPUDoekLouXtNNjlPrhPPVpmT83181846 = -705639673;    double lFpqiiPUDoekLouXtNNjlPrhPPVpmT99863198 = 50862228;    double lFpqiiPUDoekLouXtNNjlPrhPPVpmT8715859 = -912472139;    double lFpqiiPUDoekLouXtNNjlPrhPPVpmT89374884 = -646913063;    double lFpqiiPUDoekLouXtNNjlPrhPPVpmT71607600 = -974156488;    double lFpqiiPUDoekLouXtNNjlPrhPPVpmT96929688 = -801421472;    double lFpqiiPUDoekLouXtNNjlPrhPPVpmT28539410 = -993225199;    double lFpqiiPUDoekLouXtNNjlPrhPPVpmT86893967 = -771123446;    double lFpqiiPUDoekLouXtNNjlPrhPPVpmT77174761 = 9781740;    double lFpqiiPUDoekLouXtNNjlPrhPPVpmT8764499 = -762992729;    double lFpqiiPUDoekLouXtNNjlPrhPPVpmT56330056 = -938959703;    double lFpqiiPUDoekLouXtNNjlPrhPPVpmT26058506 = -89259878;    double lFpqiiPUDoekLouXtNNjlPrhPPVpmT12465809 = -784288533;    double lFpqiiPUDoekLouXtNNjlPrhPPVpmT3433397 = 66088133;    double lFpqiiPUDoekLouXtNNjlPrhPPVpmT24014574 = 11700321;    double lFpqiiPUDoekLouXtNNjlPrhPPVpmT22009316 = -429661560;    double lFpqiiPUDoekLouXtNNjlPrhPPVpmT82133129 = -90565577;    double lFpqiiPUDoekLouXtNNjlPrhPPVpmT39992310 = -788634761;    double lFpqiiPUDoekLouXtNNjlPrhPPVpmT50219311 = -682852584;    double lFpqiiPUDoekLouXtNNjlPrhPPVpmT84793666 = -886092326;    double lFpqiiPUDoekLouXtNNjlPrhPPVpmT21078500 = -498105556;    double lFpqiiPUDoekLouXtNNjlPrhPPVpmT64389729 = -709697859;    double lFpqiiPUDoekLouXtNNjlPrhPPVpmT38911491 = -52817392;    double lFpqiiPUDoekLouXtNNjlPrhPPVpmT8471516 = -399642505;    double lFpqiiPUDoekLouXtNNjlPrhPPVpmT29108789 = -120103567;    double lFpqiiPUDoekLouXtNNjlPrhPPVpmT64158506 = -372000589;    double lFpqiiPUDoekLouXtNNjlPrhPPVpmT36323718 = -680620916;    double lFpqiiPUDoekLouXtNNjlPrhPPVpmT99744545 = -674360321;    double lFpqiiPUDoekLouXtNNjlPrhPPVpmT54728135 = -953080397;    double lFpqiiPUDoekLouXtNNjlPrhPPVpmT95923259 = -897648668;    double lFpqiiPUDoekLouXtNNjlPrhPPVpmT15049279 = -422007358;    double lFpqiiPUDoekLouXtNNjlPrhPPVpmT64224814 = -523174531;    double lFpqiiPUDoekLouXtNNjlPrhPPVpmT87058738 = -877701651;    double lFpqiiPUDoekLouXtNNjlPrhPPVpmT59316570 = -506076408;    double lFpqiiPUDoekLouXtNNjlPrhPPVpmT83823779 = -597521418;    double lFpqiiPUDoekLouXtNNjlPrhPPVpmT2487849 = -780622509;    double lFpqiiPUDoekLouXtNNjlPrhPPVpmT82581401 = -991200617;    double lFpqiiPUDoekLouXtNNjlPrhPPVpmT56682381 = -845777855;    double lFpqiiPUDoekLouXtNNjlPrhPPVpmT8918899 = -883384596;    double lFpqiiPUDoekLouXtNNjlPrhPPVpmT53279932 = -621959429;    double lFpqiiPUDoekLouXtNNjlPrhPPVpmT2141932 = -89815056;    double lFpqiiPUDoekLouXtNNjlPrhPPVpmT50349773 = -717613329;    double lFpqiiPUDoekLouXtNNjlPrhPPVpmT51146730 = -771086437;    double lFpqiiPUDoekLouXtNNjlPrhPPVpmT60754339 = -499548264;    double lFpqiiPUDoekLouXtNNjlPrhPPVpmT27837307 = -345692006;    double lFpqiiPUDoekLouXtNNjlPrhPPVpmT65759797 = -353842576;    double lFpqiiPUDoekLouXtNNjlPrhPPVpmT48682168 = -310003821;    double lFpqiiPUDoekLouXtNNjlPrhPPVpmT27566695 = 94491011;    double lFpqiiPUDoekLouXtNNjlPrhPPVpmT53625538 = -895532480;    double lFpqiiPUDoekLouXtNNjlPrhPPVpmT41777325 = -550924875;    double lFpqiiPUDoekLouXtNNjlPrhPPVpmT43503342 = -2616679;    double lFpqiiPUDoekLouXtNNjlPrhPPVpmT31689302 = 88658111;    double lFpqiiPUDoekLouXtNNjlPrhPPVpmT17746339 = -548299898;    double lFpqiiPUDoekLouXtNNjlPrhPPVpmT74450074 = -376477361;    double lFpqiiPUDoekLouXtNNjlPrhPPVpmT92274842 = -8841739;    double lFpqiiPUDoekLouXtNNjlPrhPPVpmT18792117 = -995941814;    double lFpqiiPUDoekLouXtNNjlPrhPPVpmT60951708 = -896320381;    double lFpqiiPUDoekLouXtNNjlPrhPPVpmT244343 = -412829634;    double lFpqiiPUDoekLouXtNNjlPrhPPVpmT60266095 = -426809497;    double lFpqiiPUDoekLouXtNNjlPrhPPVpmT7449095 = -502155899;    double lFpqiiPUDoekLouXtNNjlPrhPPVpmT60605971 = -20800556;    double lFpqiiPUDoekLouXtNNjlPrhPPVpmT28794864 = -218864878;    double lFpqiiPUDoekLouXtNNjlPrhPPVpmT32165833 = -818043049;    double lFpqiiPUDoekLouXtNNjlPrhPPVpmT81251501 = -92569593;    double lFpqiiPUDoekLouXtNNjlPrhPPVpmT93715220 = -240985372;    double lFpqiiPUDoekLouXtNNjlPrhPPVpmT92105242 = -315785173;    double lFpqiiPUDoekLouXtNNjlPrhPPVpmT38999768 = -211558228;    double lFpqiiPUDoekLouXtNNjlPrhPPVpmT53149238 = -178212125;    double lFpqiiPUDoekLouXtNNjlPrhPPVpmT19609617 = -336390449;    double lFpqiiPUDoekLouXtNNjlPrhPPVpmT21526726 = -207677171;    double lFpqiiPUDoekLouXtNNjlPrhPPVpmT39427915 = -438460944;    double lFpqiiPUDoekLouXtNNjlPrhPPVpmT25450748 = -244787723;    double lFpqiiPUDoekLouXtNNjlPrhPPVpmT31073411 = -905250166;    double lFpqiiPUDoekLouXtNNjlPrhPPVpmT96939379 = 39106845;    double lFpqiiPUDoekLouXtNNjlPrhPPVpmT82651734 = -696277271;    double lFpqiiPUDoekLouXtNNjlPrhPPVpmT70728726 = -780492227;    double lFpqiiPUDoekLouXtNNjlPrhPPVpmT13242999 = -938611423;    double lFpqiiPUDoekLouXtNNjlPrhPPVpmT78157151 = -553269128;    double lFpqiiPUDoekLouXtNNjlPrhPPVpmT80634209 = 46049500;    double lFpqiiPUDoekLouXtNNjlPrhPPVpmT63348992 = -766260991;    double lFpqiiPUDoekLouXtNNjlPrhPPVpmT15476339 = 38003232;    double lFpqiiPUDoekLouXtNNjlPrhPPVpmT8757023 = -675111928;    double lFpqiiPUDoekLouXtNNjlPrhPPVpmT46119008 = -778827842;    double lFpqiiPUDoekLouXtNNjlPrhPPVpmT12950811 = -302155522;    double lFpqiiPUDoekLouXtNNjlPrhPPVpmT52419918 = -795031990;    double lFpqiiPUDoekLouXtNNjlPrhPPVpmT83359977 = -410665469;    double lFpqiiPUDoekLouXtNNjlPrhPPVpmT46478475 = -974874634;    double lFpqiiPUDoekLouXtNNjlPrhPPVpmT12608664 = -401224290;    double lFpqiiPUDoekLouXtNNjlPrhPPVpmT67041728 = -397234670;    double lFpqiiPUDoekLouXtNNjlPrhPPVpmT65031663 = -601579605;    double lFpqiiPUDoekLouXtNNjlPrhPPVpmT41536141 = -884302128;    double lFpqiiPUDoekLouXtNNjlPrhPPVpmT82337058 = -478370983;    double lFpqiiPUDoekLouXtNNjlPrhPPVpmT96416285 = -318968358;    double lFpqiiPUDoekLouXtNNjlPrhPPVpmT1469804 = -281228697;    double lFpqiiPUDoekLouXtNNjlPrhPPVpmT92673960 = -501158873;    double lFpqiiPUDoekLouXtNNjlPrhPPVpmT73347067 = -870950178;    double lFpqiiPUDoekLouXtNNjlPrhPPVpmT18183941 = -899570280;    double lFpqiiPUDoekLouXtNNjlPrhPPVpmT69895229 = -578516845;    double lFpqiiPUDoekLouXtNNjlPrhPPVpmT67039119 = -158562893;    double lFpqiiPUDoekLouXtNNjlPrhPPVpmT35732064 = -705639673;     lFpqiiPUDoekLouXtNNjlPrhPPVpmT83181846 = lFpqiiPUDoekLouXtNNjlPrhPPVpmT99863198;     lFpqiiPUDoekLouXtNNjlPrhPPVpmT99863198 = lFpqiiPUDoekLouXtNNjlPrhPPVpmT8715859;     lFpqiiPUDoekLouXtNNjlPrhPPVpmT8715859 = lFpqiiPUDoekLouXtNNjlPrhPPVpmT89374884;     lFpqiiPUDoekLouXtNNjlPrhPPVpmT89374884 = lFpqiiPUDoekLouXtNNjlPrhPPVpmT71607600;     lFpqiiPUDoekLouXtNNjlPrhPPVpmT71607600 = lFpqiiPUDoekLouXtNNjlPrhPPVpmT96929688;     lFpqiiPUDoekLouXtNNjlPrhPPVpmT96929688 = lFpqiiPUDoekLouXtNNjlPrhPPVpmT28539410;     lFpqiiPUDoekLouXtNNjlPrhPPVpmT28539410 = lFpqiiPUDoekLouXtNNjlPrhPPVpmT86893967;     lFpqiiPUDoekLouXtNNjlPrhPPVpmT86893967 = lFpqiiPUDoekLouXtNNjlPrhPPVpmT77174761;     lFpqiiPUDoekLouXtNNjlPrhPPVpmT77174761 = lFpqiiPUDoekLouXtNNjlPrhPPVpmT8764499;     lFpqiiPUDoekLouXtNNjlPrhPPVpmT8764499 = lFpqiiPUDoekLouXtNNjlPrhPPVpmT56330056;     lFpqiiPUDoekLouXtNNjlPrhPPVpmT56330056 = lFpqiiPUDoekLouXtNNjlPrhPPVpmT26058506;     lFpqiiPUDoekLouXtNNjlPrhPPVpmT26058506 = lFpqiiPUDoekLouXtNNjlPrhPPVpmT12465809;     lFpqiiPUDoekLouXtNNjlPrhPPVpmT12465809 = lFpqiiPUDoekLouXtNNjlPrhPPVpmT3433397;     lFpqiiPUDoekLouXtNNjlPrhPPVpmT3433397 = lFpqiiPUDoekLouXtNNjlPrhPPVpmT24014574;     lFpqiiPUDoekLouXtNNjlPrhPPVpmT24014574 = lFpqiiPUDoekLouXtNNjlPrhPPVpmT22009316;     lFpqiiPUDoekLouXtNNjlPrhPPVpmT22009316 = lFpqiiPUDoekLouXtNNjlPrhPPVpmT82133129;     lFpqiiPUDoekLouXtNNjlPrhPPVpmT82133129 = lFpqiiPUDoekLouXtNNjlPrhPPVpmT39992310;     lFpqiiPUDoekLouXtNNjlPrhPPVpmT39992310 = lFpqiiPUDoekLouXtNNjlPrhPPVpmT50219311;     lFpqiiPUDoekLouXtNNjlPrhPPVpmT50219311 = lFpqiiPUDoekLouXtNNjlPrhPPVpmT84793666;     lFpqiiPUDoekLouXtNNjlPrhPPVpmT84793666 = lFpqiiPUDoekLouXtNNjlPrhPPVpmT21078500;     lFpqiiPUDoekLouXtNNjlPrhPPVpmT21078500 = lFpqiiPUDoekLouXtNNjlPrhPPVpmT64389729;     lFpqiiPUDoekLouXtNNjlPrhPPVpmT64389729 = lFpqiiPUDoekLouXtNNjlPrhPPVpmT38911491;     lFpqiiPUDoekLouXtNNjlPrhPPVpmT38911491 = lFpqiiPUDoekLouXtNNjlPrhPPVpmT8471516;     lFpqiiPUDoekLouXtNNjlPrhPPVpmT8471516 = lFpqiiPUDoekLouXtNNjlPrhPPVpmT29108789;     lFpqiiPUDoekLouXtNNjlPrhPPVpmT29108789 = lFpqiiPUDoekLouXtNNjlPrhPPVpmT64158506;     lFpqiiPUDoekLouXtNNjlPrhPPVpmT64158506 = lFpqiiPUDoekLouXtNNjlPrhPPVpmT36323718;     lFpqiiPUDoekLouXtNNjlPrhPPVpmT36323718 = lFpqiiPUDoekLouXtNNjlPrhPPVpmT99744545;     lFpqiiPUDoekLouXtNNjlPrhPPVpmT99744545 = lFpqiiPUDoekLouXtNNjlPrhPPVpmT54728135;     lFpqiiPUDoekLouXtNNjlPrhPPVpmT54728135 = lFpqiiPUDoekLouXtNNjlPrhPPVpmT95923259;     lFpqiiPUDoekLouXtNNjlPrhPPVpmT95923259 = lFpqiiPUDoekLouXtNNjlPrhPPVpmT15049279;     lFpqiiPUDoekLouXtNNjlPrhPPVpmT15049279 = lFpqiiPUDoekLouXtNNjlPrhPPVpmT64224814;     lFpqiiPUDoekLouXtNNjlPrhPPVpmT64224814 = lFpqiiPUDoekLouXtNNjlPrhPPVpmT87058738;     lFpqiiPUDoekLouXtNNjlPrhPPVpmT87058738 = lFpqiiPUDoekLouXtNNjlPrhPPVpmT59316570;     lFpqiiPUDoekLouXtNNjlPrhPPVpmT59316570 = lFpqiiPUDoekLouXtNNjlPrhPPVpmT83823779;     lFpqiiPUDoekLouXtNNjlPrhPPVpmT83823779 = lFpqiiPUDoekLouXtNNjlPrhPPVpmT2487849;     lFpqiiPUDoekLouXtNNjlPrhPPVpmT2487849 = lFpqiiPUDoekLouXtNNjlPrhPPVpmT82581401;     lFpqiiPUDoekLouXtNNjlPrhPPVpmT82581401 = lFpqiiPUDoekLouXtNNjlPrhPPVpmT56682381;     lFpqiiPUDoekLouXtNNjlPrhPPVpmT56682381 = lFpqiiPUDoekLouXtNNjlPrhPPVpmT8918899;     lFpqiiPUDoekLouXtNNjlPrhPPVpmT8918899 = lFpqiiPUDoekLouXtNNjlPrhPPVpmT53279932;     lFpqiiPUDoekLouXtNNjlPrhPPVpmT53279932 = lFpqiiPUDoekLouXtNNjlPrhPPVpmT2141932;     lFpqiiPUDoekLouXtNNjlPrhPPVpmT2141932 = lFpqiiPUDoekLouXtNNjlPrhPPVpmT50349773;     lFpqiiPUDoekLouXtNNjlPrhPPVpmT50349773 = lFpqiiPUDoekLouXtNNjlPrhPPVpmT51146730;     lFpqiiPUDoekLouXtNNjlPrhPPVpmT51146730 = lFpqiiPUDoekLouXtNNjlPrhPPVpmT60754339;     lFpqiiPUDoekLouXtNNjlPrhPPVpmT60754339 = lFpqiiPUDoekLouXtNNjlPrhPPVpmT27837307;     lFpqiiPUDoekLouXtNNjlPrhPPVpmT27837307 = lFpqiiPUDoekLouXtNNjlPrhPPVpmT65759797;     lFpqiiPUDoekLouXtNNjlPrhPPVpmT65759797 = lFpqiiPUDoekLouXtNNjlPrhPPVpmT48682168;     lFpqiiPUDoekLouXtNNjlPrhPPVpmT48682168 = lFpqiiPUDoekLouXtNNjlPrhPPVpmT27566695;     lFpqiiPUDoekLouXtNNjlPrhPPVpmT27566695 = lFpqiiPUDoekLouXtNNjlPrhPPVpmT53625538;     lFpqiiPUDoekLouXtNNjlPrhPPVpmT53625538 = lFpqiiPUDoekLouXtNNjlPrhPPVpmT41777325;     lFpqiiPUDoekLouXtNNjlPrhPPVpmT41777325 = lFpqiiPUDoekLouXtNNjlPrhPPVpmT43503342;     lFpqiiPUDoekLouXtNNjlPrhPPVpmT43503342 = lFpqiiPUDoekLouXtNNjlPrhPPVpmT31689302;     lFpqiiPUDoekLouXtNNjlPrhPPVpmT31689302 = lFpqiiPUDoekLouXtNNjlPrhPPVpmT17746339;     lFpqiiPUDoekLouXtNNjlPrhPPVpmT17746339 = lFpqiiPUDoekLouXtNNjlPrhPPVpmT74450074;     lFpqiiPUDoekLouXtNNjlPrhPPVpmT74450074 = lFpqiiPUDoekLouXtNNjlPrhPPVpmT92274842;     lFpqiiPUDoekLouXtNNjlPrhPPVpmT92274842 = lFpqiiPUDoekLouXtNNjlPrhPPVpmT18792117;     lFpqiiPUDoekLouXtNNjlPrhPPVpmT18792117 = lFpqiiPUDoekLouXtNNjlPrhPPVpmT60951708;     lFpqiiPUDoekLouXtNNjlPrhPPVpmT60951708 = lFpqiiPUDoekLouXtNNjlPrhPPVpmT244343;     lFpqiiPUDoekLouXtNNjlPrhPPVpmT244343 = lFpqiiPUDoekLouXtNNjlPrhPPVpmT60266095;     lFpqiiPUDoekLouXtNNjlPrhPPVpmT60266095 = lFpqiiPUDoekLouXtNNjlPrhPPVpmT7449095;     lFpqiiPUDoekLouXtNNjlPrhPPVpmT7449095 = lFpqiiPUDoekLouXtNNjlPrhPPVpmT60605971;     lFpqiiPUDoekLouXtNNjlPrhPPVpmT60605971 = lFpqiiPUDoekLouXtNNjlPrhPPVpmT28794864;     lFpqiiPUDoekLouXtNNjlPrhPPVpmT28794864 = lFpqiiPUDoekLouXtNNjlPrhPPVpmT32165833;     lFpqiiPUDoekLouXtNNjlPrhPPVpmT32165833 = lFpqiiPUDoekLouXtNNjlPrhPPVpmT81251501;     lFpqiiPUDoekLouXtNNjlPrhPPVpmT81251501 = lFpqiiPUDoekLouXtNNjlPrhPPVpmT93715220;     lFpqiiPUDoekLouXtNNjlPrhPPVpmT93715220 = lFpqiiPUDoekLouXtNNjlPrhPPVpmT92105242;     lFpqiiPUDoekLouXtNNjlPrhPPVpmT92105242 = lFpqiiPUDoekLouXtNNjlPrhPPVpmT38999768;     lFpqiiPUDoekLouXtNNjlPrhPPVpmT38999768 = lFpqiiPUDoekLouXtNNjlPrhPPVpmT53149238;     lFpqiiPUDoekLouXtNNjlPrhPPVpmT53149238 = lFpqiiPUDoekLouXtNNjlPrhPPVpmT19609617;     lFpqiiPUDoekLouXtNNjlPrhPPVpmT19609617 = lFpqiiPUDoekLouXtNNjlPrhPPVpmT21526726;     lFpqiiPUDoekLouXtNNjlPrhPPVpmT21526726 = lFpqiiPUDoekLouXtNNjlPrhPPVpmT39427915;     lFpqiiPUDoekLouXtNNjlPrhPPVpmT39427915 = lFpqiiPUDoekLouXtNNjlPrhPPVpmT25450748;     lFpqiiPUDoekLouXtNNjlPrhPPVpmT25450748 = lFpqiiPUDoekLouXtNNjlPrhPPVpmT31073411;     lFpqiiPUDoekLouXtNNjlPrhPPVpmT31073411 = lFpqiiPUDoekLouXtNNjlPrhPPVpmT96939379;     lFpqiiPUDoekLouXtNNjlPrhPPVpmT96939379 = lFpqiiPUDoekLouXtNNjlPrhPPVpmT82651734;     lFpqiiPUDoekLouXtNNjlPrhPPVpmT82651734 = lFpqiiPUDoekLouXtNNjlPrhPPVpmT70728726;     lFpqiiPUDoekLouXtNNjlPrhPPVpmT70728726 = lFpqiiPUDoekLouXtNNjlPrhPPVpmT13242999;     lFpqiiPUDoekLouXtNNjlPrhPPVpmT13242999 = lFpqiiPUDoekLouXtNNjlPrhPPVpmT78157151;     lFpqiiPUDoekLouXtNNjlPrhPPVpmT78157151 = lFpqiiPUDoekLouXtNNjlPrhPPVpmT80634209;     lFpqiiPUDoekLouXtNNjlPrhPPVpmT80634209 = lFpqiiPUDoekLouXtNNjlPrhPPVpmT63348992;     lFpqiiPUDoekLouXtNNjlPrhPPVpmT63348992 = lFpqiiPUDoekLouXtNNjlPrhPPVpmT15476339;     lFpqiiPUDoekLouXtNNjlPrhPPVpmT15476339 = lFpqiiPUDoekLouXtNNjlPrhPPVpmT8757023;     lFpqiiPUDoekLouXtNNjlPrhPPVpmT8757023 = lFpqiiPUDoekLouXtNNjlPrhPPVpmT46119008;     lFpqiiPUDoekLouXtNNjlPrhPPVpmT46119008 = lFpqiiPUDoekLouXtNNjlPrhPPVpmT12950811;     lFpqiiPUDoekLouXtNNjlPrhPPVpmT12950811 = lFpqiiPUDoekLouXtNNjlPrhPPVpmT52419918;     lFpqiiPUDoekLouXtNNjlPrhPPVpmT52419918 = lFpqiiPUDoekLouXtNNjlPrhPPVpmT83359977;     lFpqiiPUDoekLouXtNNjlPrhPPVpmT83359977 = lFpqiiPUDoekLouXtNNjlPrhPPVpmT46478475;     lFpqiiPUDoekLouXtNNjlPrhPPVpmT46478475 = lFpqiiPUDoekLouXtNNjlPrhPPVpmT12608664;     lFpqiiPUDoekLouXtNNjlPrhPPVpmT12608664 = lFpqiiPUDoekLouXtNNjlPrhPPVpmT67041728;     lFpqiiPUDoekLouXtNNjlPrhPPVpmT67041728 = lFpqiiPUDoekLouXtNNjlPrhPPVpmT65031663;     lFpqiiPUDoekLouXtNNjlPrhPPVpmT65031663 = lFpqiiPUDoekLouXtNNjlPrhPPVpmT41536141;     lFpqiiPUDoekLouXtNNjlPrhPPVpmT41536141 = lFpqiiPUDoekLouXtNNjlPrhPPVpmT82337058;     lFpqiiPUDoekLouXtNNjlPrhPPVpmT82337058 = lFpqiiPUDoekLouXtNNjlPrhPPVpmT96416285;     lFpqiiPUDoekLouXtNNjlPrhPPVpmT96416285 = lFpqiiPUDoekLouXtNNjlPrhPPVpmT1469804;     lFpqiiPUDoekLouXtNNjlPrhPPVpmT1469804 = lFpqiiPUDoekLouXtNNjlPrhPPVpmT92673960;     lFpqiiPUDoekLouXtNNjlPrhPPVpmT92673960 = lFpqiiPUDoekLouXtNNjlPrhPPVpmT73347067;     lFpqiiPUDoekLouXtNNjlPrhPPVpmT73347067 = lFpqiiPUDoekLouXtNNjlPrhPPVpmT18183941;     lFpqiiPUDoekLouXtNNjlPrhPPVpmT18183941 = lFpqiiPUDoekLouXtNNjlPrhPPVpmT69895229;     lFpqiiPUDoekLouXtNNjlPrhPPVpmT69895229 = lFpqiiPUDoekLouXtNNjlPrhPPVpmT67039119;     lFpqiiPUDoekLouXtNNjlPrhPPVpmT67039119 = lFpqiiPUDoekLouXtNNjlPrhPPVpmT35732064;     lFpqiiPUDoekLouXtNNjlPrhPPVpmT35732064 = lFpqiiPUDoekLouXtNNjlPrhPPVpmT83181846;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void qwgxfMeceJjueRtZyiNLkBJUG22958069() {     double IvzCWuDBRfhCxoatyQiFSqrucLhXVG5004068 = -173855005;    double IvzCWuDBRfhCxoatyQiFSqrucLhXVG61331002 = -331736625;    double IvzCWuDBRfhCxoatyQiFSqrucLhXVG54443129 = -959689671;    double IvzCWuDBRfhCxoatyQiFSqrucLhXVG20750030 = -851697239;    double IvzCWuDBRfhCxoatyQiFSqrucLhXVG31741932 = -851407409;    double IvzCWuDBRfhCxoatyQiFSqrucLhXVG20948005 = -812964630;    double IvzCWuDBRfhCxoatyQiFSqrucLhXVG57559994 = 43456677;    double IvzCWuDBRfhCxoatyQiFSqrucLhXVG73756597 = -779304294;    double IvzCWuDBRfhCxoatyQiFSqrucLhXVG73698401 = 23986322;    double IvzCWuDBRfhCxoatyQiFSqrucLhXVG70047725 = -633211126;    double IvzCWuDBRfhCxoatyQiFSqrucLhXVG27246325 = -494717406;    double IvzCWuDBRfhCxoatyQiFSqrucLhXVG42240389 = -192441485;    double IvzCWuDBRfhCxoatyQiFSqrucLhXVG45454751 = -222322322;    double IvzCWuDBRfhCxoatyQiFSqrucLhXVG70399864 = -783988664;    double IvzCWuDBRfhCxoatyQiFSqrucLhXVG19272370 = 84858402;    double IvzCWuDBRfhCxoatyQiFSqrucLhXVG69980041 = -872028101;    double IvzCWuDBRfhCxoatyQiFSqrucLhXVG75582188 = -476390295;    double IvzCWuDBRfhCxoatyQiFSqrucLhXVG2517613 = -710355679;    double IvzCWuDBRfhCxoatyQiFSqrucLhXVG54856535 = -755988241;    double IvzCWuDBRfhCxoatyQiFSqrucLhXVG65903308 = -277337382;    double IvzCWuDBRfhCxoatyQiFSqrucLhXVG78232785 = -230184258;    double IvzCWuDBRfhCxoatyQiFSqrucLhXVG28791708 = -780449024;    double IvzCWuDBRfhCxoatyQiFSqrucLhXVG48382895 = -708844747;    double IvzCWuDBRfhCxoatyQiFSqrucLhXVG45749138 = -809741371;    double IvzCWuDBRfhCxoatyQiFSqrucLhXVG3039457 = -31000539;    double IvzCWuDBRfhCxoatyQiFSqrucLhXVG53734360 = -699186117;    double IvzCWuDBRfhCxoatyQiFSqrucLhXVG9360322 = -207424961;    double IvzCWuDBRfhCxoatyQiFSqrucLhXVG35324371 = -538808554;    double IvzCWuDBRfhCxoatyQiFSqrucLhXVG2625048 = -620026315;    double IvzCWuDBRfhCxoatyQiFSqrucLhXVG41740337 = -173862862;    double IvzCWuDBRfhCxoatyQiFSqrucLhXVG66214544 = -827735105;    double IvzCWuDBRfhCxoatyQiFSqrucLhXVG83116139 = -299063362;    double IvzCWuDBRfhCxoatyQiFSqrucLhXVG12378203 = -620305533;    double IvzCWuDBRfhCxoatyQiFSqrucLhXVG31855688 = -181896035;    double IvzCWuDBRfhCxoatyQiFSqrucLhXVG64657992 = -747340021;    double IvzCWuDBRfhCxoatyQiFSqrucLhXVG72064808 = -795038488;    double IvzCWuDBRfhCxoatyQiFSqrucLhXVG25663658 = 59182287;    double IvzCWuDBRfhCxoatyQiFSqrucLhXVG60620243 = -327320613;    double IvzCWuDBRfhCxoatyQiFSqrucLhXVG69299344 = -655789876;    double IvzCWuDBRfhCxoatyQiFSqrucLhXVG65950578 = 20491570;    double IvzCWuDBRfhCxoatyQiFSqrucLhXVG56517778 = -523954314;    double IvzCWuDBRfhCxoatyQiFSqrucLhXVG66851944 = -405079407;    double IvzCWuDBRfhCxoatyQiFSqrucLhXVG98514129 = -815053252;    double IvzCWuDBRfhCxoatyQiFSqrucLhXVG8849199 = -408354434;    double IvzCWuDBRfhCxoatyQiFSqrucLhXVG7753118 = -532380636;    double IvzCWuDBRfhCxoatyQiFSqrucLhXVG4966277 = -57274806;    double IvzCWuDBRfhCxoatyQiFSqrucLhXVG74350279 = -491011341;    double IvzCWuDBRfhCxoatyQiFSqrucLhXVG9406447 = -744004978;    double IvzCWuDBRfhCxoatyQiFSqrucLhXVG60689630 = 19351097;    double IvzCWuDBRfhCxoatyQiFSqrucLhXVG57824801 = -529980060;    double IvzCWuDBRfhCxoatyQiFSqrucLhXVG31965161 = -46506005;    double IvzCWuDBRfhCxoatyQiFSqrucLhXVG28077966 = -236719970;    double IvzCWuDBRfhCxoatyQiFSqrucLhXVG8969203 = -511895037;    double IvzCWuDBRfhCxoatyQiFSqrucLhXVG2475197 = -567486420;    double IvzCWuDBRfhCxoatyQiFSqrucLhXVG44725284 = 30036512;    double IvzCWuDBRfhCxoatyQiFSqrucLhXVG76212359 = -393405981;    double IvzCWuDBRfhCxoatyQiFSqrucLhXVG12948108 = -622891879;    double IvzCWuDBRfhCxoatyQiFSqrucLhXVG8693991 = -49948301;    double IvzCWuDBRfhCxoatyQiFSqrucLhXVG17710574 = -720696701;    double IvzCWuDBRfhCxoatyQiFSqrucLhXVG78007572 = -52221293;    double IvzCWuDBRfhCxoatyQiFSqrucLhXVG11587684 = -505539670;    double IvzCWuDBRfhCxoatyQiFSqrucLhXVG22235623 = -417734769;    double IvzCWuDBRfhCxoatyQiFSqrucLhXVG71131549 = -59277980;    double IvzCWuDBRfhCxoatyQiFSqrucLhXVG31958064 = -802150816;    double IvzCWuDBRfhCxoatyQiFSqrucLhXVG3833181 = -805476022;    double IvzCWuDBRfhCxoatyQiFSqrucLhXVG44130186 = -95654045;    double IvzCWuDBRfhCxoatyQiFSqrucLhXVG29862186 = -572135952;    double IvzCWuDBRfhCxoatyQiFSqrucLhXVG13599064 = 59573713;    double IvzCWuDBRfhCxoatyQiFSqrucLhXVG5741872 = 63351356;    double IvzCWuDBRfhCxoatyQiFSqrucLhXVG47207561 = -120103110;    double IvzCWuDBRfhCxoatyQiFSqrucLhXVG44316384 = -831210388;    double IvzCWuDBRfhCxoatyQiFSqrucLhXVG14961946 = -49069683;    double IvzCWuDBRfhCxoatyQiFSqrucLhXVG33218268 = 45434197;    double IvzCWuDBRfhCxoatyQiFSqrucLhXVG88905957 = -676479811;    double IvzCWuDBRfhCxoatyQiFSqrucLhXVG9385531 = -753383069;    double IvzCWuDBRfhCxoatyQiFSqrucLhXVG11380841 = -825104852;    double IvzCWuDBRfhCxoatyQiFSqrucLhXVG30277579 = -965395773;    double IvzCWuDBRfhCxoatyQiFSqrucLhXVG39533697 = -200490314;    double IvzCWuDBRfhCxoatyQiFSqrucLhXVG37996020 = -177360736;    double IvzCWuDBRfhCxoatyQiFSqrucLhXVG98073179 = -973725734;    double IvzCWuDBRfhCxoatyQiFSqrucLhXVG79384080 = -108174776;    double IvzCWuDBRfhCxoatyQiFSqrucLhXVG99953874 = -463419984;    double IvzCWuDBRfhCxoatyQiFSqrucLhXVG74634741 = -458159652;    double IvzCWuDBRfhCxoatyQiFSqrucLhXVG44800247 = 9953745;    double IvzCWuDBRfhCxoatyQiFSqrucLhXVG9775177 = -27356858;    double IvzCWuDBRfhCxoatyQiFSqrucLhXVG38136579 = -491015136;    double IvzCWuDBRfhCxoatyQiFSqrucLhXVG74146936 = -787168325;    double IvzCWuDBRfhCxoatyQiFSqrucLhXVG9903007 = 47180886;    double IvzCWuDBRfhCxoatyQiFSqrucLhXVG87130403 = -111932548;    double IvzCWuDBRfhCxoatyQiFSqrucLhXVG88445632 = -253934040;    double IvzCWuDBRfhCxoatyQiFSqrucLhXVG59116701 = -72146610;    double IvzCWuDBRfhCxoatyQiFSqrucLhXVG16969667 = -890869413;    double IvzCWuDBRfhCxoatyQiFSqrucLhXVG42909669 = -606623913;    double IvzCWuDBRfhCxoatyQiFSqrucLhXVG91291772 = -503568584;    double IvzCWuDBRfhCxoatyQiFSqrucLhXVG54362895 = -473968761;    double IvzCWuDBRfhCxoatyQiFSqrucLhXVG34282155 = -6219545;    double IvzCWuDBRfhCxoatyQiFSqrucLhXVG95720395 = -245801427;    double IvzCWuDBRfhCxoatyQiFSqrucLhXVG66556066 = 87097564;    double IvzCWuDBRfhCxoatyQiFSqrucLhXVG5016018 = -602878412;    double IvzCWuDBRfhCxoatyQiFSqrucLhXVG63622932 = -173855005;     IvzCWuDBRfhCxoatyQiFSqrucLhXVG5004068 = IvzCWuDBRfhCxoatyQiFSqrucLhXVG61331002;     IvzCWuDBRfhCxoatyQiFSqrucLhXVG61331002 = IvzCWuDBRfhCxoatyQiFSqrucLhXVG54443129;     IvzCWuDBRfhCxoatyQiFSqrucLhXVG54443129 = IvzCWuDBRfhCxoatyQiFSqrucLhXVG20750030;     IvzCWuDBRfhCxoatyQiFSqrucLhXVG20750030 = IvzCWuDBRfhCxoatyQiFSqrucLhXVG31741932;     IvzCWuDBRfhCxoatyQiFSqrucLhXVG31741932 = IvzCWuDBRfhCxoatyQiFSqrucLhXVG20948005;     IvzCWuDBRfhCxoatyQiFSqrucLhXVG20948005 = IvzCWuDBRfhCxoatyQiFSqrucLhXVG57559994;     IvzCWuDBRfhCxoatyQiFSqrucLhXVG57559994 = IvzCWuDBRfhCxoatyQiFSqrucLhXVG73756597;     IvzCWuDBRfhCxoatyQiFSqrucLhXVG73756597 = IvzCWuDBRfhCxoatyQiFSqrucLhXVG73698401;     IvzCWuDBRfhCxoatyQiFSqrucLhXVG73698401 = IvzCWuDBRfhCxoatyQiFSqrucLhXVG70047725;     IvzCWuDBRfhCxoatyQiFSqrucLhXVG70047725 = IvzCWuDBRfhCxoatyQiFSqrucLhXVG27246325;     IvzCWuDBRfhCxoatyQiFSqrucLhXVG27246325 = IvzCWuDBRfhCxoatyQiFSqrucLhXVG42240389;     IvzCWuDBRfhCxoatyQiFSqrucLhXVG42240389 = IvzCWuDBRfhCxoatyQiFSqrucLhXVG45454751;     IvzCWuDBRfhCxoatyQiFSqrucLhXVG45454751 = IvzCWuDBRfhCxoatyQiFSqrucLhXVG70399864;     IvzCWuDBRfhCxoatyQiFSqrucLhXVG70399864 = IvzCWuDBRfhCxoatyQiFSqrucLhXVG19272370;     IvzCWuDBRfhCxoatyQiFSqrucLhXVG19272370 = IvzCWuDBRfhCxoatyQiFSqrucLhXVG69980041;     IvzCWuDBRfhCxoatyQiFSqrucLhXVG69980041 = IvzCWuDBRfhCxoatyQiFSqrucLhXVG75582188;     IvzCWuDBRfhCxoatyQiFSqrucLhXVG75582188 = IvzCWuDBRfhCxoatyQiFSqrucLhXVG2517613;     IvzCWuDBRfhCxoatyQiFSqrucLhXVG2517613 = IvzCWuDBRfhCxoatyQiFSqrucLhXVG54856535;     IvzCWuDBRfhCxoatyQiFSqrucLhXVG54856535 = IvzCWuDBRfhCxoatyQiFSqrucLhXVG65903308;     IvzCWuDBRfhCxoatyQiFSqrucLhXVG65903308 = IvzCWuDBRfhCxoatyQiFSqrucLhXVG78232785;     IvzCWuDBRfhCxoatyQiFSqrucLhXVG78232785 = IvzCWuDBRfhCxoatyQiFSqrucLhXVG28791708;     IvzCWuDBRfhCxoatyQiFSqrucLhXVG28791708 = IvzCWuDBRfhCxoatyQiFSqrucLhXVG48382895;     IvzCWuDBRfhCxoatyQiFSqrucLhXVG48382895 = IvzCWuDBRfhCxoatyQiFSqrucLhXVG45749138;     IvzCWuDBRfhCxoatyQiFSqrucLhXVG45749138 = IvzCWuDBRfhCxoatyQiFSqrucLhXVG3039457;     IvzCWuDBRfhCxoatyQiFSqrucLhXVG3039457 = IvzCWuDBRfhCxoatyQiFSqrucLhXVG53734360;     IvzCWuDBRfhCxoatyQiFSqrucLhXVG53734360 = IvzCWuDBRfhCxoatyQiFSqrucLhXVG9360322;     IvzCWuDBRfhCxoatyQiFSqrucLhXVG9360322 = IvzCWuDBRfhCxoatyQiFSqrucLhXVG35324371;     IvzCWuDBRfhCxoatyQiFSqrucLhXVG35324371 = IvzCWuDBRfhCxoatyQiFSqrucLhXVG2625048;     IvzCWuDBRfhCxoatyQiFSqrucLhXVG2625048 = IvzCWuDBRfhCxoatyQiFSqrucLhXVG41740337;     IvzCWuDBRfhCxoatyQiFSqrucLhXVG41740337 = IvzCWuDBRfhCxoatyQiFSqrucLhXVG66214544;     IvzCWuDBRfhCxoatyQiFSqrucLhXVG66214544 = IvzCWuDBRfhCxoatyQiFSqrucLhXVG83116139;     IvzCWuDBRfhCxoatyQiFSqrucLhXVG83116139 = IvzCWuDBRfhCxoatyQiFSqrucLhXVG12378203;     IvzCWuDBRfhCxoatyQiFSqrucLhXVG12378203 = IvzCWuDBRfhCxoatyQiFSqrucLhXVG31855688;     IvzCWuDBRfhCxoatyQiFSqrucLhXVG31855688 = IvzCWuDBRfhCxoatyQiFSqrucLhXVG64657992;     IvzCWuDBRfhCxoatyQiFSqrucLhXVG64657992 = IvzCWuDBRfhCxoatyQiFSqrucLhXVG72064808;     IvzCWuDBRfhCxoatyQiFSqrucLhXVG72064808 = IvzCWuDBRfhCxoatyQiFSqrucLhXVG25663658;     IvzCWuDBRfhCxoatyQiFSqrucLhXVG25663658 = IvzCWuDBRfhCxoatyQiFSqrucLhXVG60620243;     IvzCWuDBRfhCxoatyQiFSqrucLhXVG60620243 = IvzCWuDBRfhCxoatyQiFSqrucLhXVG69299344;     IvzCWuDBRfhCxoatyQiFSqrucLhXVG69299344 = IvzCWuDBRfhCxoatyQiFSqrucLhXVG65950578;     IvzCWuDBRfhCxoatyQiFSqrucLhXVG65950578 = IvzCWuDBRfhCxoatyQiFSqrucLhXVG56517778;     IvzCWuDBRfhCxoatyQiFSqrucLhXVG56517778 = IvzCWuDBRfhCxoatyQiFSqrucLhXVG66851944;     IvzCWuDBRfhCxoatyQiFSqrucLhXVG66851944 = IvzCWuDBRfhCxoatyQiFSqrucLhXVG98514129;     IvzCWuDBRfhCxoatyQiFSqrucLhXVG98514129 = IvzCWuDBRfhCxoatyQiFSqrucLhXVG8849199;     IvzCWuDBRfhCxoatyQiFSqrucLhXVG8849199 = IvzCWuDBRfhCxoatyQiFSqrucLhXVG7753118;     IvzCWuDBRfhCxoatyQiFSqrucLhXVG7753118 = IvzCWuDBRfhCxoatyQiFSqrucLhXVG4966277;     IvzCWuDBRfhCxoatyQiFSqrucLhXVG4966277 = IvzCWuDBRfhCxoatyQiFSqrucLhXVG74350279;     IvzCWuDBRfhCxoatyQiFSqrucLhXVG74350279 = IvzCWuDBRfhCxoatyQiFSqrucLhXVG9406447;     IvzCWuDBRfhCxoatyQiFSqrucLhXVG9406447 = IvzCWuDBRfhCxoatyQiFSqrucLhXVG60689630;     IvzCWuDBRfhCxoatyQiFSqrucLhXVG60689630 = IvzCWuDBRfhCxoatyQiFSqrucLhXVG57824801;     IvzCWuDBRfhCxoatyQiFSqrucLhXVG57824801 = IvzCWuDBRfhCxoatyQiFSqrucLhXVG31965161;     IvzCWuDBRfhCxoatyQiFSqrucLhXVG31965161 = IvzCWuDBRfhCxoatyQiFSqrucLhXVG28077966;     IvzCWuDBRfhCxoatyQiFSqrucLhXVG28077966 = IvzCWuDBRfhCxoatyQiFSqrucLhXVG8969203;     IvzCWuDBRfhCxoatyQiFSqrucLhXVG8969203 = IvzCWuDBRfhCxoatyQiFSqrucLhXVG2475197;     IvzCWuDBRfhCxoatyQiFSqrucLhXVG2475197 = IvzCWuDBRfhCxoatyQiFSqrucLhXVG44725284;     IvzCWuDBRfhCxoatyQiFSqrucLhXVG44725284 = IvzCWuDBRfhCxoatyQiFSqrucLhXVG76212359;     IvzCWuDBRfhCxoatyQiFSqrucLhXVG76212359 = IvzCWuDBRfhCxoatyQiFSqrucLhXVG12948108;     IvzCWuDBRfhCxoatyQiFSqrucLhXVG12948108 = IvzCWuDBRfhCxoatyQiFSqrucLhXVG8693991;     IvzCWuDBRfhCxoatyQiFSqrucLhXVG8693991 = IvzCWuDBRfhCxoatyQiFSqrucLhXVG17710574;     IvzCWuDBRfhCxoatyQiFSqrucLhXVG17710574 = IvzCWuDBRfhCxoatyQiFSqrucLhXVG78007572;     IvzCWuDBRfhCxoatyQiFSqrucLhXVG78007572 = IvzCWuDBRfhCxoatyQiFSqrucLhXVG11587684;     IvzCWuDBRfhCxoatyQiFSqrucLhXVG11587684 = IvzCWuDBRfhCxoatyQiFSqrucLhXVG22235623;     IvzCWuDBRfhCxoatyQiFSqrucLhXVG22235623 = IvzCWuDBRfhCxoatyQiFSqrucLhXVG71131549;     IvzCWuDBRfhCxoatyQiFSqrucLhXVG71131549 = IvzCWuDBRfhCxoatyQiFSqrucLhXVG31958064;     IvzCWuDBRfhCxoatyQiFSqrucLhXVG31958064 = IvzCWuDBRfhCxoatyQiFSqrucLhXVG3833181;     IvzCWuDBRfhCxoatyQiFSqrucLhXVG3833181 = IvzCWuDBRfhCxoatyQiFSqrucLhXVG44130186;     IvzCWuDBRfhCxoatyQiFSqrucLhXVG44130186 = IvzCWuDBRfhCxoatyQiFSqrucLhXVG29862186;     IvzCWuDBRfhCxoatyQiFSqrucLhXVG29862186 = IvzCWuDBRfhCxoatyQiFSqrucLhXVG13599064;     IvzCWuDBRfhCxoatyQiFSqrucLhXVG13599064 = IvzCWuDBRfhCxoatyQiFSqrucLhXVG5741872;     IvzCWuDBRfhCxoatyQiFSqrucLhXVG5741872 = IvzCWuDBRfhCxoatyQiFSqrucLhXVG47207561;     IvzCWuDBRfhCxoatyQiFSqrucLhXVG47207561 = IvzCWuDBRfhCxoatyQiFSqrucLhXVG44316384;     IvzCWuDBRfhCxoatyQiFSqrucLhXVG44316384 = IvzCWuDBRfhCxoatyQiFSqrucLhXVG14961946;     IvzCWuDBRfhCxoatyQiFSqrucLhXVG14961946 = IvzCWuDBRfhCxoatyQiFSqrucLhXVG33218268;     IvzCWuDBRfhCxoatyQiFSqrucLhXVG33218268 = IvzCWuDBRfhCxoatyQiFSqrucLhXVG88905957;     IvzCWuDBRfhCxoatyQiFSqrucLhXVG88905957 = IvzCWuDBRfhCxoatyQiFSqrucLhXVG9385531;     IvzCWuDBRfhCxoatyQiFSqrucLhXVG9385531 = IvzCWuDBRfhCxoatyQiFSqrucLhXVG11380841;     IvzCWuDBRfhCxoatyQiFSqrucLhXVG11380841 = IvzCWuDBRfhCxoatyQiFSqrucLhXVG30277579;     IvzCWuDBRfhCxoatyQiFSqrucLhXVG30277579 = IvzCWuDBRfhCxoatyQiFSqrucLhXVG39533697;     IvzCWuDBRfhCxoatyQiFSqrucLhXVG39533697 = IvzCWuDBRfhCxoatyQiFSqrucLhXVG37996020;     IvzCWuDBRfhCxoatyQiFSqrucLhXVG37996020 = IvzCWuDBRfhCxoatyQiFSqrucLhXVG98073179;     IvzCWuDBRfhCxoatyQiFSqrucLhXVG98073179 = IvzCWuDBRfhCxoatyQiFSqrucLhXVG79384080;     IvzCWuDBRfhCxoatyQiFSqrucLhXVG79384080 = IvzCWuDBRfhCxoatyQiFSqrucLhXVG99953874;     IvzCWuDBRfhCxoatyQiFSqrucLhXVG99953874 = IvzCWuDBRfhCxoatyQiFSqrucLhXVG74634741;     IvzCWuDBRfhCxoatyQiFSqrucLhXVG74634741 = IvzCWuDBRfhCxoatyQiFSqrucLhXVG44800247;     IvzCWuDBRfhCxoatyQiFSqrucLhXVG44800247 = IvzCWuDBRfhCxoatyQiFSqrucLhXVG9775177;     IvzCWuDBRfhCxoatyQiFSqrucLhXVG9775177 = IvzCWuDBRfhCxoatyQiFSqrucLhXVG38136579;     IvzCWuDBRfhCxoatyQiFSqrucLhXVG38136579 = IvzCWuDBRfhCxoatyQiFSqrucLhXVG74146936;     IvzCWuDBRfhCxoatyQiFSqrucLhXVG74146936 = IvzCWuDBRfhCxoatyQiFSqrucLhXVG9903007;     IvzCWuDBRfhCxoatyQiFSqrucLhXVG9903007 = IvzCWuDBRfhCxoatyQiFSqrucLhXVG87130403;     IvzCWuDBRfhCxoatyQiFSqrucLhXVG87130403 = IvzCWuDBRfhCxoatyQiFSqrucLhXVG88445632;     IvzCWuDBRfhCxoatyQiFSqrucLhXVG88445632 = IvzCWuDBRfhCxoatyQiFSqrucLhXVG59116701;     IvzCWuDBRfhCxoatyQiFSqrucLhXVG59116701 = IvzCWuDBRfhCxoatyQiFSqrucLhXVG16969667;     IvzCWuDBRfhCxoatyQiFSqrucLhXVG16969667 = IvzCWuDBRfhCxoatyQiFSqrucLhXVG42909669;     IvzCWuDBRfhCxoatyQiFSqrucLhXVG42909669 = IvzCWuDBRfhCxoatyQiFSqrucLhXVG91291772;     IvzCWuDBRfhCxoatyQiFSqrucLhXVG91291772 = IvzCWuDBRfhCxoatyQiFSqrucLhXVG54362895;     IvzCWuDBRfhCxoatyQiFSqrucLhXVG54362895 = IvzCWuDBRfhCxoatyQiFSqrucLhXVG34282155;     IvzCWuDBRfhCxoatyQiFSqrucLhXVG34282155 = IvzCWuDBRfhCxoatyQiFSqrucLhXVG95720395;     IvzCWuDBRfhCxoatyQiFSqrucLhXVG95720395 = IvzCWuDBRfhCxoatyQiFSqrucLhXVG66556066;     IvzCWuDBRfhCxoatyQiFSqrucLhXVG66556066 = IvzCWuDBRfhCxoatyQiFSqrucLhXVG5016018;     IvzCWuDBRfhCxoatyQiFSqrucLhXVG5016018 = IvzCWuDBRfhCxoatyQiFSqrucLhXVG63622932;     IvzCWuDBRfhCxoatyQiFSqrucLhXVG63622932 = IvzCWuDBRfhCxoatyQiFSqrucLhXVG5004068;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void QvkQOLimqahXsolztiBKsjaBm84805327() {     double WuQxZXOhFVnqEVTBwXOAHXhInWKDFB56168150 = 3554652;    double WuQxZXOhFVnqEVTBwXOAHXhInWKDFB92697605 = -885287304;    double WuQxZXOhFVnqEVTBwXOAHXhInWKDFB21514692 = -521741357;    double WuQxZXOhFVnqEVTBwXOAHXhInWKDFB97273750 = -686883856;    double WuQxZXOhFVnqEVTBwXOAHXhInWKDFB79266043 = -313607305;    double WuQxZXOhFVnqEVTBwXOAHXhInWKDFB89771990 = -822359449;    double WuQxZXOhFVnqEVTBwXOAHXhInWKDFB36749019 = -825622203;    double WuQxZXOhFVnqEVTBwXOAHXhInWKDFB72990896 = -144845369;    double WuQxZXOhFVnqEVTBwXOAHXhInWKDFB7097151 = -682107838;    double WuQxZXOhFVnqEVTBwXOAHXhInWKDFB5004004 = -939141044;    double WuQxZXOhFVnqEVTBwXOAHXhInWKDFB76234038 = 24954749;    double WuQxZXOhFVnqEVTBwXOAHXhInWKDFB27167378 = -815337660;    double WuQxZXOhFVnqEVTBwXOAHXhInWKDFB30469220 = -872477527;    double WuQxZXOhFVnqEVTBwXOAHXhInWKDFB7363518 = 21809697;    double WuQxZXOhFVnqEVTBwXOAHXhInWKDFB76982254 = -754946366;    double WuQxZXOhFVnqEVTBwXOAHXhInWKDFB59986674 = -977206706;    double WuQxZXOhFVnqEVTBwXOAHXhInWKDFB31031181 = -772644453;    double WuQxZXOhFVnqEVTBwXOAHXhInWKDFB67749954 = 60017978;    double WuQxZXOhFVnqEVTBwXOAHXhInWKDFB98214246 = -739918222;    double WuQxZXOhFVnqEVTBwXOAHXhInWKDFB60300005 = -838240585;    double WuQxZXOhFVnqEVTBwXOAHXhInWKDFB59920740 = -864050194;    double WuQxZXOhFVnqEVTBwXOAHXhInWKDFB10094187 = 70093234;    double WuQxZXOhFVnqEVTBwXOAHXhInWKDFB92788887 = -155986799;    double WuQxZXOhFVnqEVTBwXOAHXhInWKDFB92827331 = -408359853;    double WuQxZXOhFVnqEVTBwXOAHXhInWKDFB41288424 = -692686677;    double WuQxZXOhFVnqEVTBwXOAHXhInWKDFB29286710 = -836293128;    double WuQxZXOhFVnqEVTBwXOAHXhInWKDFB44357721 = -739850943;    double WuQxZXOhFVnqEVTBwXOAHXhInWKDFB98525496 = -507100007;    double WuQxZXOhFVnqEVTBwXOAHXhInWKDFB31057920 = -638684331;    double WuQxZXOhFVnqEVTBwXOAHXhInWKDFB24475189 = -767113360;    double WuQxZXOhFVnqEVTBwXOAHXhInWKDFB43720492 = -772122401;    double WuQxZXOhFVnqEVTBwXOAHXhInWKDFB42219862 = -138476791;    double WuQxZXOhFVnqEVTBwXOAHXhInWKDFB40204730 = -617892023;    double WuQxZXOhFVnqEVTBwXOAHXhInWKDFB39312667 = -170867711;    double WuQxZXOhFVnqEVTBwXOAHXhInWKDFB49826007 = -209525768;    double WuQxZXOhFVnqEVTBwXOAHXhInWKDFB24476699 = -809993667;    double WuQxZXOhFVnqEVTBwXOAHXhInWKDFB36895796 = 98505019;    double WuQxZXOhFVnqEVTBwXOAHXhInWKDFB81683296 = -20012942;    double WuQxZXOhFVnqEVTBwXOAHXhInWKDFB86460098 = -85147936;    double WuQxZXOhFVnqEVTBwXOAHXhInWKDFB55390818 = -528880755;    double WuQxZXOhFVnqEVTBwXOAHXhInWKDFB38676008 = -662018592;    double WuQxZXOhFVnqEVTBwXOAHXhInWKDFB40568786 = -516948497;    double WuQxZXOhFVnqEVTBwXOAHXhInWKDFB57197928 = -331396269;    double WuQxZXOhFVnqEVTBwXOAHXhInWKDFB9667655 = -902150075;    double WuQxZXOhFVnqEVTBwXOAHXhInWKDFB75732922 = -883682272;    double WuQxZXOhFVnqEVTBwXOAHXhInWKDFB78194889 = -914414552;    double WuQxZXOhFVnqEVTBwXOAHXhInWKDFB1584981 = 62770316;    double WuQxZXOhFVnqEVTBwXOAHXhInWKDFB1015570 = -639132027;    double WuQxZXOhFVnqEVTBwXOAHXhInWKDFB80970659 = -843765217;    double WuQxZXOhFVnqEVTBwXOAHXhInWKDFB85490214 = -913051252;    double WuQxZXOhFVnqEVTBwXOAHXhInWKDFB65497025 = -122378216;    double WuQxZXOhFVnqEVTBwXOAHXhInWKDFB97142382 = -975024077;    double WuQxZXOhFVnqEVTBwXOAHXhInWKDFB20564759 = -439746143;    double WuQxZXOhFVnqEVTBwXOAHXhInWKDFB50523285 = -629533834;    double WuQxZXOhFVnqEVTBwXOAHXhInWKDFB24884587 = -677043600;    double WuQxZXOhFVnqEVTBwXOAHXhInWKDFB46073963 = 33461418;    double WuQxZXOhFVnqEVTBwXOAHXhInWKDFB99908718 = -629300505;    double WuQxZXOhFVnqEVTBwXOAHXhInWKDFB28687361 = -13381505;    double WuQxZXOhFVnqEVTBwXOAHXhInWKDFB55985326 = -994197179;    double WuQxZXOhFVnqEVTBwXOAHXhInWKDFB49979333 = -477314177;    double WuQxZXOhFVnqEVTBwXOAHXhInWKDFB45414269 = 17491494;    double WuQxZXOhFVnqEVTBwXOAHXhInWKDFB38223523 = -218522196;    double WuQxZXOhFVnqEVTBwXOAHXhInWKDFB41932976 = -506161039;    double WuQxZXOhFVnqEVTBwXOAHXhInWKDFB82621961 = -914994478;    double WuQxZXOhFVnqEVTBwXOAHXhInWKDFB61283511 = -67018643;    double WuQxZXOhFVnqEVTBwXOAHXhInWKDFB34014177 = -836568461;    double WuQxZXOhFVnqEVTBwXOAHXhInWKDFB86962648 = -97445638;    double WuQxZXOhFVnqEVTBwXOAHXhInWKDFB91156553 = -601609817;    double WuQxZXOhFVnqEVTBwXOAHXhInWKDFB57537511 = -768664535;    double WuQxZXOhFVnqEVTBwXOAHXhInWKDFB52505556 = -944952700;    double WuQxZXOhFVnqEVTBwXOAHXhInWKDFB23090879 = -975711725;    double WuQxZXOhFVnqEVTBwXOAHXhInWKDFB49347884 = -652631512;    double WuQxZXOhFVnqEVTBwXOAHXhInWKDFB81289855 = -854834086;    double WuQxZXOhFVnqEVTBwXOAHXhInWKDFB42823429 = -111037468;    double WuQxZXOhFVnqEVTBwXOAHXhInWKDFB21623998 = -76221993;    double WuQxZXOhFVnqEVTBwXOAHXhInWKDFB19351955 = -247101698;    double WuQxZXOhFVnqEVTBwXOAHXhInWKDFB52896259 = -598510498;    double WuQxZXOhFVnqEVTBwXOAHXhInWKDFB83121232 = -253836725;    double WuQxZXOhFVnqEVTBwXOAHXhInWKDFB17094409 = -524677581;    double WuQxZXOhFVnqEVTBwXOAHXhInWKDFB63093535 = -778272125;    double WuQxZXOhFVnqEVTBwXOAHXhInWKDFB27701730 = -799063444;    double WuQxZXOhFVnqEVTBwXOAHXhInWKDFB43342151 = -718916;    double WuQxZXOhFVnqEVTBwXOAHXhInWKDFB17554837 = -663334791;    double WuQxZXOhFVnqEVTBwXOAHXhInWKDFB45567705 = -725633079;    double WuQxZXOhFVnqEVTBwXOAHXhInWKDFB58978163 = -544735144;    double WuQxZXOhFVnqEVTBwXOAHXhInWKDFB46578110 = -797098325;    double WuQxZXOhFVnqEVTBwXOAHXhInWKDFB21655103 = -698730648;    double WuQxZXOhFVnqEVTBwXOAHXhInWKDFB89681445 = -988358190;    double WuQxZXOhFVnqEVTBwXOAHXhInWKDFB14428081 = -493824111;    double WuQxZXOhFVnqEVTBwXOAHXhInWKDFB3752044 = -142987187;    double WuQxZXOhFVnqEVTBwXOAHXhInWKDFB24567981 = -80693162;    double WuQxZXOhFVnqEVTBwXOAHXhInWKDFB8208436 = -888113477;    double WuQxZXOhFVnqEVTBwXOAHXhInWKDFB25697970 = -25815763;    double WuQxZXOhFVnqEVTBwXOAHXhInWKDFB36480765 = -607833759;    double WuQxZXOhFVnqEVTBwXOAHXhInWKDFB9976550 = -446372249;    double WuQxZXOhFVnqEVTBwXOAHXhInWKDFB452485 = -343496396;    double WuQxZXOhFVnqEVTBwXOAHXhInWKDFB98635809 = 89212542;    double WuQxZXOhFVnqEVTBwXOAHXhInWKDFB74575967 = -416401791;    double WuQxZXOhFVnqEVTBwXOAHXhInWKDFB48384144 = -735131432;    double WuQxZXOhFVnqEVTBwXOAHXhInWKDFB41718746 = 3554652;     WuQxZXOhFVnqEVTBwXOAHXhInWKDFB56168150 = WuQxZXOhFVnqEVTBwXOAHXhInWKDFB92697605;     WuQxZXOhFVnqEVTBwXOAHXhInWKDFB92697605 = WuQxZXOhFVnqEVTBwXOAHXhInWKDFB21514692;     WuQxZXOhFVnqEVTBwXOAHXhInWKDFB21514692 = WuQxZXOhFVnqEVTBwXOAHXhInWKDFB97273750;     WuQxZXOhFVnqEVTBwXOAHXhInWKDFB97273750 = WuQxZXOhFVnqEVTBwXOAHXhInWKDFB79266043;     WuQxZXOhFVnqEVTBwXOAHXhInWKDFB79266043 = WuQxZXOhFVnqEVTBwXOAHXhInWKDFB89771990;     WuQxZXOhFVnqEVTBwXOAHXhInWKDFB89771990 = WuQxZXOhFVnqEVTBwXOAHXhInWKDFB36749019;     WuQxZXOhFVnqEVTBwXOAHXhInWKDFB36749019 = WuQxZXOhFVnqEVTBwXOAHXhInWKDFB72990896;     WuQxZXOhFVnqEVTBwXOAHXhInWKDFB72990896 = WuQxZXOhFVnqEVTBwXOAHXhInWKDFB7097151;     WuQxZXOhFVnqEVTBwXOAHXhInWKDFB7097151 = WuQxZXOhFVnqEVTBwXOAHXhInWKDFB5004004;     WuQxZXOhFVnqEVTBwXOAHXhInWKDFB5004004 = WuQxZXOhFVnqEVTBwXOAHXhInWKDFB76234038;     WuQxZXOhFVnqEVTBwXOAHXhInWKDFB76234038 = WuQxZXOhFVnqEVTBwXOAHXhInWKDFB27167378;     WuQxZXOhFVnqEVTBwXOAHXhInWKDFB27167378 = WuQxZXOhFVnqEVTBwXOAHXhInWKDFB30469220;     WuQxZXOhFVnqEVTBwXOAHXhInWKDFB30469220 = WuQxZXOhFVnqEVTBwXOAHXhInWKDFB7363518;     WuQxZXOhFVnqEVTBwXOAHXhInWKDFB7363518 = WuQxZXOhFVnqEVTBwXOAHXhInWKDFB76982254;     WuQxZXOhFVnqEVTBwXOAHXhInWKDFB76982254 = WuQxZXOhFVnqEVTBwXOAHXhInWKDFB59986674;     WuQxZXOhFVnqEVTBwXOAHXhInWKDFB59986674 = WuQxZXOhFVnqEVTBwXOAHXhInWKDFB31031181;     WuQxZXOhFVnqEVTBwXOAHXhInWKDFB31031181 = WuQxZXOhFVnqEVTBwXOAHXhInWKDFB67749954;     WuQxZXOhFVnqEVTBwXOAHXhInWKDFB67749954 = WuQxZXOhFVnqEVTBwXOAHXhInWKDFB98214246;     WuQxZXOhFVnqEVTBwXOAHXhInWKDFB98214246 = WuQxZXOhFVnqEVTBwXOAHXhInWKDFB60300005;     WuQxZXOhFVnqEVTBwXOAHXhInWKDFB60300005 = WuQxZXOhFVnqEVTBwXOAHXhInWKDFB59920740;     WuQxZXOhFVnqEVTBwXOAHXhInWKDFB59920740 = WuQxZXOhFVnqEVTBwXOAHXhInWKDFB10094187;     WuQxZXOhFVnqEVTBwXOAHXhInWKDFB10094187 = WuQxZXOhFVnqEVTBwXOAHXhInWKDFB92788887;     WuQxZXOhFVnqEVTBwXOAHXhInWKDFB92788887 = WuQxZXOhFVnqEVTBwXOAHXhInWKDFB92827331;     WuQxZXOhFVnqEVTBwXOAHXhInWKDFB92827331 = WuQxZXOhFVnqEVTBwXOAHXhInWKDFB41288424;     WuQxZXOhFVnqEVTBwXOAHXhInWKDFB41288424 = WuQxZXOhFVnqEVTBwXOAHXhInWKDFB29286710;     WuQxZXOhFVnqEVTBwXOAHXhInWKDFB29286710 = WuQxZXOhFVnqEVTBwXOAHXhInWKDFB44357721;     WuQxZXOhFVnqEVTBwXOAHXhInWKDFB44357721 = WuQxZXOhFVnqEVTBwXOAHXhInWKDFB98525496;     WuQxZXOhFVnqEVTBwXOAHXhInWKDFB98525496 = WuQxZXOhFVnqEVTBwXOAHXhInWKDFB31057920;     WuQxZXOhFVnqEVTBwXOAHXhInWKDFB31057920 = WuQxZXOhFVnqEVTBwXOAHXhInWKDFB24475189;     WuQxZXOhFVnqEVTBwXOAHXhInWKDFB24475189 = WuQxZXOhFVnqEVTBwXOAHXhInWKDFB43720492;     WuQxZXOhFVnqEVTBwXOAHXhInWKDFB43720492 = WuQxZXOhFVnqEVTBwXOAHXhInWKDFB42219862;     WuQxZXOhFVnqEVTBwXOAHXhInWKDFB42219862 = WuQxZXOhFVnqEVTBwXOAHXhInWKDFB40204730;     WuQxZXOhFVnqEVTBwXOAHXhInWKDFB40204730 = WuQxZXOhFVnqEVTBwXOAHXhInWKDFB39312667;     WuQxZXOhFVnqEVTBwXOAHXhInWKDFB39312667 = WuQxZXOhFVnqEVTBwXOAHXhInWKDFB49826007;     WuQxZXOhFVnqEVTBwXOAHXhInWKDFB49826007 = WuQxZXOhFVnqEVTBwXOAHXhInWKDFB24476699;     WuQxZXOhFVnqEVTBwXOAHXhInWKDFB24476699 = WuQxZXOhFVnqEVTBwXOAHXhInWKDFB36895796;     WuQxZXOhFVnqEVTBwXOAHXhInWKDFB36895796 = WuQxZXOhFVnqEVTBwXOAHXhInWKDFB81683296;     WuQxZXOhFVnqEVTBwXOAHXhInWKDFB81683296 = WuQxZXOhFVnqEVTBwXOAHXhInWKDFB86460098;     WuQxZXOhFVnqEVTBwXOAHXhInWKDFB86460098 = WuQxZXOhFVnqEVTBwXOAHXhInWKDFB55390818;     WuQxZXOhFVnqEVTBwXOAHXhInWKDFB55390818 = WuQxZXOhFVnqEVTBwXOAHXhInWKDFB38676008;     WuQxZXOhFVnqEVTBwXOAHXhInWKDFB38676008 = WuQxZXOhFVnqEVTBwXOAHXhInWKDFB40568786;     WuQxZXOhFVnqEVTBwXOAHXhInWKDFB40568786 = WuQxZXOhFVnqEVTBwXOAHXhInWKDFB57197928;     WuQxZXOhFVnqEVTBwXOAHXhInWKDFB57197928 = WuQxZXOhFVnqEVTBwXOAHXhInWKDFB9667655;     WuQxZXOhFVnqEVTBwXOAHXhInWKDFB9667655 = WuQxZXOhFVnqEVTBwXOAHXhInWKDFB75732922;     WuQxZXOhFVnqEVTBwXOAHXhInWKDFB75732922 = WuQxZXOhFVnqEVTBwXOAHXhInWKDFB78194889;     WuQxZXOhFVnqEVTBwXOAHXhInWKDFB78194889 = WuQxZXOhFVnqEVTBwXOAHXhInWKDFB1584981;     WuQxZXOhFVnqEVTBwXOAHXhInWKDFB1584981 = WuQxZXOhFVnqEVTBwXOAHXhInWKDFB1015570;     WuQxZXOhFVnqEVTBwXOAHXhInWKDFB1015570 = WuQxZXOhFVnqEVTBwXOAHXhInWKDFB80970659;     WuQxZXOhFVnqEVTBwXOAHXhInWKDFB80970659 = WuQxZXOhFVnqEVTBwXOAHXhInWKDFB85490214;     WuQxZXOhFVnqEVTBwXOAHXhInWKDFB85490214 = WuQxZXOhFVnqEVTBwXOAHXhInWKDFB65497025;     WuQxZXOhFVnqEVTBwXOAHXhInWKDFB65497025 = WuQxZXOhFVnqEVTBwXOAHXhInWKDFB97142382;     WuQxZXOhFVnqEVTBwXOAHXhInWKDFB97142382 = WuQxZXOhFVnqEVTBwXOAHXhInWKDFB20564759;     WuQxZXOhFVnqEVTBwXOAHXhInWKDFB20564759 = WuQxZXOhFVnqEVTBwXOAHXhInWKDFB50523285;     WuQxZXOhFVnqEVTBwXOAHXhInWKDFB50523285 = WuQxZXOhFVnqEVTBwXOAHXhInWKDFB24884587;     WuQxZXOhFVnqEVTBwXOAHXhInWKDFB24884587 = WuQxZXOhFVnqEVTBwXOAHXhInWKDFB46073963;     WuQxZXOhFVnqEVTBwXOAHXhInWKDFB46073963 = WuQxZXOhFVnqEVTBwXOAHXhInWKDFB99908718;     WuQxZXOhFVnqEVTBwXOAHXhInWKDFB99908718 = WuQxZXOhFVnqEVTBwXOAHXhInWKDFB28687361;     WuQxZXOhFVnqEVTBwXOAHXhInWKDFB28687361 = WuQxZXOhFVnqEVTBwXOAHXhInWKDFB55985326;     WuQxZXOhFVnqEVTBwXOAHXhInWKDFB55985326 = WuQxZXOhFVnqEVTBwXOAHXhInWKDFB49979333;     WuQxZXOhFVnqEVTBwXOAHXhInWKDFB49979333 = WuQxZXOhFVnqEVTBwXOAHXhInWKDFB45414269;     WuQxZXOhFVnqEVTBwXOAHXhInWKDFB45414269 = WuQxZXOhFVnqEVTBwXOAHXhInWKDFB38223523;     WuQxZXOhFVnqEVTBwXOAHXhInWKDFB38223523 = WuQxZXOhFVnqEVTBwXOAHXhInWKDFB41932976;     WuQxZXOhFVnqEVTBwXOAHXhInWKDFB41932976 = WuQxZXOhFVnqEVTBwXOAHXhInWKDFB82621961;     WuQxZXOhFVnqEVTBwXOAHXhInWKDFB82621961 = WuQxZXOhFVnqEVTBwXOAHXhInWKDFB61283511;     WuQxZXOhFVnqEVTBwXOAHXhInWKDFB61283511 = WuQxZXOhFVnqEVTBwXOAHXhInWKDFB34014177;     WuQxZXOhFVnqEVTBwXOAHXhInWKDFB34014177 = WuQxZXOhFVnqEVTBwXOAHXhInWKDFB86962648;     WuQxZXOhFVnqEVTBwXOAHXhInWKDFB86962648 = WuQxZXOhFVnqEVTBwXOAHXhInWKDFB91156553;     WuQxZXOhFVnqEVTBwXOAHXhInWKDFB91156553 = WuQxZXOhFVnqEVTBwXOAHXhInWKDFB57537511;     WuQxZXOhFVnqEVTBwXOAHXhInWKDFB57537511 = WuQxZXOhFVnqEVTBwXOAHXhInWKDFB52505556;     WuQxZXOhFVnqEVTBwXOAHXhInWKDFB52505556 = WuQxZXOhFVnqEVTBwXOAHXhInWKDFB23090879;     WuQxZXOhFVnqEVTBwXOAHXhInWKDFB23090879 = WuQxZXOhFVnqEVTBwXOAHXhInWKDFB49347884;     WuQxZXOhFVnqEVTBwXOAHXhInWKDFB49347884 = WuQxZXOhFVnqEVTBwXOAHXhInWKDFB81289855;     WuQxZXOhFVnqEVTBwXOAHXhInWKDFB81289855 = WuQxZXOhFVnqEVTBwXOAHXhInWKDFB42823429;     WuQxZXOhFVnqEVTBwXOAHXhInWKDFB42823429 = WuQxZXOhFVnqEVTBwXOAHXhInWKDFB21623998;     WuQxZXOhFVnqEVTBwXOAHXhInWKDFB21623998 = WuQxZXOhFVnqEVTBwXOAHXhInWKDFB19351955;     WuQxZXOhFVnqEVTBwXOAHXhInWKDFB19351955 = WuQxZXOhFVnqEVTBwXOAHXhInWKDFB52896259;     WuQxZXOhFVnqEVTBwXOAHXhInWKDFB52896259 = WuQxZXOhFVnqEVTBwXOAHXhInWKDFB83121232;     WuQxZXOhFVnqEVTBwXOAHXhInWKDFB83121232 = WuQxZXOhFVnqEVTBwXOAHXhInWKDFB17094409;     WuQxZXOhFVnqEVTBwXOAHXhInWKDFB17094409 = WuQxZXOhFVnqEVTBwXOAHXhInWKDFB63093535;     WuQxZXOhFVnqEVTBwXOAHXhInWKDFB63093535 = WuQxZXOhFVnqEVTBwXOAHXhInWKDFB27701730;     WuQxZXOhFVnqEVTBwXOAHXhInWKDFB27701730 = WuQxZXOhFVnqEVTBwXOAHXhInWKDFB43342151;     WuQxZXOhFVnqEVTBwXOAHXhInWKDFB43342151 = WuQxZXOhFVnqEVTBwXOAHXhInWKDFB17554837;     WuQxZXOhFVnqEVTBwXOAHXhInWKDFB17554837 = WuQxZXOhFVnqEVTBwXOAHXhInWKDFB45567705;     WuQxZXOhFVnqEVTBwXOAHXhInWKDFB45567705 = WuQxZXOhFVnqEVTBwXOAHXhInWKDFB58978163;     WuQxZXOhFVnqEVTBwXOAHXhInWKDFB58978163 = WuQxZXOhFVnqEVTBwXOAHXhInWKDFB46578110;     WuQxZXOhFVnqEVTBwXOAHXhInWKDFB46578110 = WuQxZXOhFVnqEVTBwXOAHXhInWKDFB21655103;     WuQxZXOhFVnqEVTBwXOAHXhInWKDFB21655103 = WuQxZXOhFVnqEVTBwXOAHXhInWKDFB89681445;     WuQxZXOhFVnqEVTBwXOAHXhInWKDFB89681445 = WuQxZXOhFVnqEVTBwXOAHXhInWKDFB14428081;     WuQxZXOhFVnqEVTBwXOAHXhInWKDFB14428081 = WuQxZXOhFVnqEVTBwXOAHXhInWKDFB3752044;     WuQxZXOhFVnqEVTBwXOAHXhInWKDFB3752044 = WuQxZXOhFVnqEVTBwXOAHXhInWKDFB24567981;     WuQxZXOhFVnqEVTBwXOAHXhInWKDFB24567981 = WuQxZXOhFVnqEVTBwXOAHXhInWKDFB8208436;     WuQxZXOhFVnqEVTBwXOAHXhInWKDFB8208436 = WuQxZXOhFVnqEVTBwXOAHXhInWKDFB25697970;     WuQxZXOhFVnqEVTBwXOAHXhInWKDFB25697970 = WuQxZXOhFVnqEVTBwXOAHXhInWKDFB36480765;     WuQxZXOhFVnqEVTBwXOAHXhInWKDFB36480765 = WuQxZXOhFVnqEVTBwXOAHXhInWKDFB9976550;     WuQxZXOhFVnqEVTBwXOAHXhInWKDFB9976550 = WuQxZXOhFVnqEVTBwXOAHXhInWKDFB452485;     WuQxZXOhFVnqEVTBwXOAHXhInWKDFB452485 = WuQxZXOhFVnqEVTBwXOAHXhInWKDFB98635809;     WuQxZXOhFVnqEVTBwXOAHXhInWKDFB98635809 = WuQxZXOhFVnqEVTBwXOAHXhInWKDFB74575967;     WuQxZXOhFVnqEVTBwXOAHXhInWKDFB74575967 = WuQxZXOhFVnqEVTBwXOAHXhInWKDFB48384144;     WuQxZXOhFVnqEVTBwXOAHXhInWKDFB48384144 = WuQxZXOhFVnqEVTBwXOAHXhInWKDFB41718746;     WuQxZXOhFVnqEVTBwXOAHXhInWKDFB41718746 = WuQxZXOhFVnqEVTBwXOAHXhInWKDFB56168150;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void YTefNpIXpVAYXnZJajCmvgbEM94410053() {     double gGNDinVDskKNHhtSadYxogxxqGCDys77990371 = -564660679;    double gGNDinVDskKNHhtSadYxogxxqGCDys54165410 = -167886157;    double gGNDinVDskKNHhtSadYxogxxqGCDys67241962 = -568958889;    double gGNDinVDskKNHhtSadYxogxxqGCDys28648896 = -891668032;    double gGNDinVDskKNHhtSadYxogxxqGCDys39400374 = -190858227;    double gGNDinVDskKNHhtSadYxogxxqGCDys13790306 = -833902607;    double gGNDinVDskKNHhtSadYxogxxqGCDys65769604 = -888940327;    double gGNDinVDskKNHhtSadYxogxxqGCDys59853525 = -153026217;    double gGNDinVDskKNHhtSadYxogxxqGCDys3620791 = -667903256;    double gGNDinVDskKNHhtSadYxogxxqGCDys66287229 = -809359441;    double gGNDinVDskKNHhtSadYxogxxqGCDys47150307 = -630802954;    double gGNDinVDskKNHhtSadYxogxxqGCDys43349261 = -918519267;    double gGNDinVDskKNHhtSadYxogxxqGCDys63458163 = -310511316;    double gGNDinVDskKNHhtSadYxogxxqGCDys74329985 = -828267100;    double gGNDinVDskKNHhtSadYxogxxqGCDys72240050 = -681788284;    double gGNDinVDskKNHhtSadYxogxxqGCDys7957401 = -319573247;    double gGNDinVDskKNHhtSadYxogxxqGCDys24480240 = -58469172;    double gGNDinVDskKNHhtSadYxogxxqGCDys30275257 = -961702940;    double gGNDinVDskKNHhtSadYxogxxqGCDys2851471 = -813053879;    double gGNDinVDskKNHhtSadYxogxxqGCDys41409647 = -229485641;    double gGNDinVDskKNHhtSadYxogxxqGCDys17075025 = -596128897;    double gGNDinVDskKNHhtSadYxogxxqGCDys74496165 = -657930;    double gGNDinVDskKNHhtSadYxogxxqGCDys2260292 = -812014154;    double gGNDinVDskKNHhtSadYxogxxqGCDys30104953 = -818458718;    double gGNDinVDskKNHhtSadYxogxxqGCDys15219092 = -603583649;    double gGNDinVDskKNHhtSadYxogxxqGCDys18862564 = -63478656;    double gGNDinVDskKNHhtSadYxogxxqGCDys17394325 = -266654987;    double gGNDinVDskKNHhtSadYxogxxqGCDys34105322 = -371548240;    double gGNDinVDskKNHhtSadYxogxxqGCDys78954832 = -305630248;    double gGNDinVDskKNHhtSadYxogxxqGCDys70292266 = -43327554;    double gGNDinVDskKNHhtSadYxogxxqGCDys94885757 = -77850149;    double gGNDinVDskKNHhtSadYxogxxqGCDys61111187 = 85634378;    double gGNDinVDskKNHhtSadYxogxxqGCDys65524194 = -360495906;    double gGNDinVDskKNHhtSadYxogxxqGCDys11851785 = -946687338;    double gGNDinVDskKNHhtSadYxogxxqGCDys30660219 = -359344370;    double gGNDinVDskKNHhtSadYxogxxqGCDys94053658 = -824409646;    double gGNDinVDskKNHhtSadYxogxxqGCDys79978053 = 48887923;    double gGNDinVDskKNHhtSadYxogxxqGCDys85621158 = -601555699;    double gGNDinVDskKNHhtSadYxogxxqGCDys46840545 = -957553217;    double gGNDinVDskKNHhtSadYxogxxqGCDys68061464 = -986429756;    double gGNDinVDskKNHhtSadYxogxxqGCDys93051853 = 3842150;    double gGNDinVDskKNHhtSadYxogxxqGCDys57070956 = -204414574;    double gGNDinVDskKNHhtSadYxogxxqGCDys4565328 = -375363084;    double gGNDinVDskKNHhtSadYxogxxqGCDys57762514 = -810956244;    double gGNDinVDskKNHhtSadYxogxxqGCDys55648733 = 29629099;    double gGNDinVDskKNHhtSadYxogxxqGCDys17401369 = -617846782;    double gGNDinVDskKNHhtSadYxogxxqGCDys27253092 = -118237204;    double gGNDinVDskKNHhtSadYxogxxqGCDys82855321 = -377628016;    double gGNDinVDskKNHhtSadYxogxxqGCDys88034752 = 71118360;    double gGNDinVDskKNHhtSadYxogxxqGCDys1537691 = -892106437;    double gGNDinVDskKNHhtSadYxogxxqGCDys53958845 = -166267542;    double gGNDinVDskKNHhtSadYxogxxqGCDys93531046 = -200402158;    double gGNDinVDskKNHhtSadYxogxxqGCDys11787623 = -403341283;    double gGNDinVDskKNHhtSadYxogxxqGCDys78548407 = -820542894;    double gGNDinVDskKNHhtSadYxogxxqGCDys77335028 = -638165349;    double gGNDinVDskKNHhtSadYxogxxqGCDys3494206 = -464002749;    double gGNDinVDskKNHhtSadYxogxxqGCDys51905118 = -355872003;    double gGNDinVDskKNHhtSadYxogxxqGCDys37137009 = -750500171;    double gGNDinVDskKNHhtSadYxogxxqGCDys13429805 = -188084383;    double gGNDinVDskKNHhtSadYxogxxqGCDys20537811 = -27379571;    double gGNDinVDskKNHhtSadYxogxxqGCDys96395980 = -467247620;    double gGNDinVDskKNHhtSadYxogxxqGCDys31664282 = -417392087;    double gGNDinVDskKNHhtSadYxogxxqGCDys80898692 = -847395970;    double gGNDinVDskKNHhtSadYxogxxqGCDys33328524 = -524575702;    double gGNDinVDskKNHhtSadYxogxxqGCDys71401471 = -631509293;    double gGNDinVDskKNHhtSadYxogxxqGCDys86039119 = -616437333;    double gGNDinVDskKNHhtSadYxogxxqGCDys77825066 = -458023361;    double gGNDinVDskKNHhtSadYxogxxqGCDys51606378 = -363823978;    double gGNDinVDskKNHhtSadYxogxxqGCDys43669766 = -368922730;    double gGNDinVDskKNHhtSadYxogxxqGCDys78186391 = -857378639;    double gGNDinVDskKNHhtSadYxogxxqGCDys27979348 = -268461170;    double gGNDinVDskKNHhtSadYxogxxqGCDys38859082 = -456913473;    double gGNDinVDskKNHhtSadYxogxxqGCDys83434712 = 95850277;    double gGNDinVDskKNHhtSadYxogxxqGCDys34790006 = -826624124;    double gGNDinVDskKNHhtSadYxogxxqGCDys48357794 = -133327791;    double gGNDinVDskKNHhtSadYxogxxqGCDys60004069 = -291714323;    double gGNDinVDskKNHhtSadYxogxxqGCDys69930838 = -625294847;    double gGNDinVDskKNHhtSadYxogxxqGCDys44497778 = 98942089;    double gGNDinVDskKNHhtSadYxogxxqGCDys74456219 = -748087818;    double gGNDinVDskKNHhtSadYxogxxqGCDys97817722 = -985736868;    double gGNDinVDskKNHhtSadYxogxxqGCDys91609472 = -945241452;    double gGNDinVDskKNHhtSadYxogxxqGCDys34539003 = -889026972;    double gGNDinVDskKNHhtSadYxogxxqGCDys46070570 = -342666601;    double gGNDinVDskKNHhtSadYxogxxqGCDys77417141 = -413523812;    double gGNDinVDskKNHhtSadYxogxxqGCDys16333422 = -877060012;    double gGNDinVDskKNHhtSadYxogxxqGCDys1354712 = -877447991;    double gGNDinVDskKNHhtSadYxogxxqGCDys49323564 = -511024339;    double gGNDinVDskKNHhtSadYxogxxqGCDys86975787 = -539953013;    double gGNDinVDskKNHhtSadYxogxxqGCDys34516756 = -208521989;    double gGNDinVDskKNHhtSadYxogxxqGCDys27166013 = -895341622;    double gGNDinVDskKNHhtSadYxogxxqGCDys42148541 = -368537644;    double gGNDinVDskKNHhtSadYxogxxqGCDys42841044 = -200611907;    double gGNDinVDskKNHhtSadYxogxxqGCDys72191353 = -313471317;    double gGNDinVDskKNHhtSadYxogxxqGCDys26302734 = -830173646;    double gGNDinVDskKNHhtSadYxogxxqGCDys71665483 = -419182136;    double gGNDinVDskKNHhtSadYxogxxqGCDys61387571 = -578765763;    double gGNDinVDskKNHhtSadYxogxxqGCDys76172264 = -357018605;    double gGNDinVDskKNHhtSadYxogxxqGCDys71236803 = -850787382;    double gGNDinVDskKNHhtSadYxogxxqGCDys86361042 = -79446951;    double gGNDinVDskKNHhtSadYxogxxqGCDys69609614 = -564660679;     gGNDinVDskKNHhtSadYxogxxqGCDys77990371 = gGNDinVDskKNHhtSadYxogxxqGCDys54165410;     gGNDinVDskKNHhtSadYxogxxqGCDys54165410 = gGNDinVDskKNHhtSadYxogxxqGCDys67241962;     gGNDinVDskKNHhtSadYxogxxqGCDys67241962 = gGNDinVDskKNHhtSadYxogxxqGCDys28648896;     gGNDinVDskKNHhtSadYxogxxqGCDys28648896 = gGNDinVDskKNHhtSadYxogxxqGCDys39400374;     gGNDinVDskKNHhtSadYxogxxqGCDys39400374 = gGNDinVDskKNHhtSadYxogxxqGCDys13790306;     gGNDinVDskKNHhtSadYxogxxqGCDys13790306 = gGNDinVDskKNHhtSadYxogxxqGCDys65769604;     gGNDinVDskKNHhtSadYxogxxqGCDys65769604 = gGNDinVDskKNHhtSadYxogxxqGCDys59853525;     gGNDinVDskKNHhtSadYxogxxqGCDys59853525 = gGNDinVDskKNHhtSadYxogxxqGCDys3620791;     gGNDinVDskKNHhtSadYxogxxqGCDys3620791 = gGNDinVDskKNHhtSadYxogxxqGCDys66287229;     gGNDinVDskKNHhtSadYxogxxqGCDys66287229 = gGNDinVDskKNHhtSadYxogxxqGCDys47150307;     gGNDinVDskKNHhtSadYxogxxqGCDys47150307 = gGNDinVDskKNHhtSadYxogxxqGCDys43349261;     gGNDinVDskKNHhtSadYxogxxqGCDys43349261 = gGNDinVDskKNHhtSadYxogxxqGCDys63458163;     gGNDinVDskKNHhtSadYxogxxqGCDys63458163 = gGNDinVDskKNHhtSadYxogxxqGCDys74329985;     gGNDinVDskKNHhtSadYxogxxqGCDys74329985 = gGNDinVDskKNHhtSadYxogxxqGCDys72240050;     gGNDinVDskKNHhtSadYxogxxqGCDys72240050 = gGNDinVDskKNHhtSadYxogxxqGCDys7957401;     gGNDinVDskKNHhtSadYxogxxqGCDys7957401 = gGNDinVDskKNHhtSadYxogxxqGCDys24480240;     gGNDinVDskKNHhtSadYxogxxqGCDys24480240 = gGNDinVDskKNHhtSadYxogxxqGCDys30275257;     gGNDinVDskKNHhtSadYxogxxqGCDys30275257 = gGNDinVDskKNHhtSadYxogxxqGCDys2851471;     gGNDinVDskKNHhtSadYxogxxqGCDys2851471 = gGNDinVDskKNHhtSadYxogxxqGCDys41409647;     gGNDinVDskKNHhtSadYxogxxqGCDys41409647 = gGNDinVDskKNHhtSadYxogxxqGCDys17075025;     gGNDinVDskKNHhtSadYxogxxqGCDys17075025 = gGNDinVDskKNHhtSadYxogxxqGCDys74496165;     gGNDinVDskKNHhtSadYxogxxqGCDys74496165 = gGNDinVDskKNHhtSadYxogxxqGCDys2260292;     gGNDinVDskKNHhtSadYxogxxqGCDys2260292 = gGNDinVDskKNHhtSadYxogxxqGCDys30104953;     gGNDinVDskKNHhtSadYxogxxqGCDys30104953 = gGNDinVDskKNHhtSadYxogxxqGCDys15219092;     gGNDinVDskKNHhtSadYxogxxqGCDys15219092 = gGNDinVDskKNHhtSadYxogxxqGCDys18862564;     gGNDinVDskKNHhtSadYxogxxqGCDys18862564 = gGNDinVDskKNHhtSadYxogxxqGCDys17394325;     gGNDinVDskKNHhtSadYxogxxqGCDys17394325 = gGNDinVDskKNHhtSadYxogxxqGCDys34105322;     gGNDinVDskKNHhtSadYxogxxqGCDys34105322 = gGNDinVDskKNHhtSadYxogxxqGCDys78954832;     gGNDinVDskKNHhtSadYxogxxqGCDys78954832 = gGNDinVDskKNHhtSadYxogxxqGCDys70292266;     gGNDinVDskKNHhtSadYxogxxqGCDys70292266 = gGNDinVDskKNHhtSadYxogxxqGCDys94885757;     gGNDinVDskKNHhtSadYxogxxqGCDys94885757 = gGNDinVDskKNHhtSadYxogxxqGCDys61111187;     gGNDinVDskKNHhtSadYxogxxqGCDys61111187 = gGNDinVDskKNHhtSadYxogxxqGCDys65524194;     gGNDinVDskKNHhtSadYxogxxqGCDys65524194 = gGNDinVDskKNHhtSadYxogxxqGCDys11851785;     gGNDinVDskKNHhtSadYxogxxqGCDys11851785 = gGNDinVDskKNHhtSadYxogxxqGCDys30660219;     gGNDinVDskKNHhtSadYxogxxqGCDys30660219 = gGNDinVDskKNHhtSadYxogxxqGCDys94053658;     gGNDinVDskKNHhtSadYxogxxqGCDys94053658 = gGNDinVDskKNHhtSadYxogxxqGCDys79978053;     gGNDinVDskKNHhtSadYxogxxqGCDys79978053 = gGNDinVDskKNHhtSadYxogxxqGCDys85621158;     gGNDinVDskKNHhtSadYxogxxqGCDys85621158 = gGNDinVDskKNHhtSadYxogxxqGCDys46840545;     gGNDinVDskKNHhtSadYxogxxqGCDys46840545 = gGNDinVDskKNHhtSadYxogxxqGCDys68061464;     gGNDinVDskKNHhtSadYxogxxqGCDys68061464 = gGNDinVDskKNHhtSadYxogxxqGCDys93051853;     gGNDinVDskKNHhtSadYxogxxqGCDys93051853 = gGNDinVDskKNHhtSadYxogxxqGCDys57070956;     gGNDinVDskKNHhtSadYxogxxqGCDys57070956 = gGNDinVDskKNHhtSadYxogxxqGCDys4565328;     gGNDinVDskKNHhtSadYxogxxqGCDys4565328 = gGNDinVDskKNHhtSadYxogxxqGCDys57762514;     gGNDinVDskKNHhtSadYxogxxqGCDys57762514 = gGNDinVDskKNHhtSadYxogxxqGCDys55648733;     gGNDinVDskKNHhtSadYxogxxqGCDys55648733 = gGNDinVDskKNHhtSadYxogxxqGCDys17401369;     gGNDinVDskKNHhtSadYxogxxqGCDys17401369 = gGNDinVDskKNHhtSadYxogxxqGCDys27253092;     gGNDinVDskKNHhtSadYxogxxqGCDys27253092 = gGNDinVDskKNHhtSadYxogxxqGCDys82855321;     gGNDinVDskKNHhtSadYxogxxqGCDys82855321 = gGNDinVDskKNHhtSadYxogxxqGCDys88034752;     gGNDinVDskKNHhtSadYxogxxqGCDys88034752 = gGNDinVDskKNHhtSadYxogxxqGCDys1537691;     gGNDinVDskKNHhtSadYxogxxqGCDys1537691 = gGNDinVDskKNHhtSadYxogxxqGCDys53958845;     gGNDinVDskKNHhtSadYxogxxqGCDys53958845 = gGNDinVDskKNHhtSadYxogxxqGCDys93531046;     gGNDinVDskKNHhtSadYxogxxqGCDys93531046 = gGNDinVDskKNHhtSadYxogxxqGCDys11787623;     gGNDinVDskKNHhtSadYxogxxqGCDys11787623 = gGNDinVDskKNHhtSadYxogxxqGCDys78548407;     gGNDinVDskKNHhtSadYxogxxqGCDys78548407 = gGNDinVDskKNHhtSadYxogxxqGCDys77335028;     gGNDinVDskKNHhtSadYxogxxqGCDys77335028 = gGNDinVDskKNHhtSadYxogxxqGCDys3494206;     gGNDinVDskKNHhtSadYxogxxqGCDys3494206 = gGNDinVDskKNHhtSadYxogxxqGCDys51905118;     gGNDinVDskKNHhtSadYxogxxqGCDys51905118 = gGNDinVDskKNHhtSadYxogxxqGCDys37137009;     gGNDinVDskKNHhtSadYxogxxqGCDys37137009 = gGNDinVDskKNHhtSadYxogxxqGCDys13429805;     gGNDinVDskKNHhtSadYxogxxqGCDys13429805 = gGNDinVDskKNHhtSadYxogxxqGCDys20537811;     gGNDinVDskKNHhtSadYxogxxqGCDys20537811 = gGNDinVDskKNHhtSadYxogxxqGCDys96395980;     gGNDinVDskKNHhtSadYxogxxqGCDys96395980 = gGNDinVDskKNHhtSadYxogxxqGCDys31664282;     gGNDinVDskKNHhtSadYxogxxqGCDys31664282 = gGNDinVDskKNHhtSadYxogxxqGCDys80898692;     gGNDinVDskKNHhtSadYxogxxqGCDys80898692 = gGNDinVDskKNHhtSadYxogxxqGCDys33328524;     gGNDinVDskKNHhtSadYxogxxqGCDys33328524 = gGNDinVDskKNHhtSadYxogxxqGCDys71401471;     gGNDinVDskKNHhtSadYxogxxqGCDys71401471 = gGNDinVDskKNHhtSadYxogxxqGCDys86039119;     gGNDinVDskKNHhtSadYxogxxqGCDys86039119 = gGNDinVDskKNHhtSadYxogxxqGCDys77825066;     gGNDinVDskKNHhtSadYxogxxqGCDys77825066 = gGNDinVDskKNHhtSadYxogxxqGCDys51606378;     gGNDinVDskKNHhtSadYxogxxqGCDys51606378 = gGNDinVDskKNHhtSadYxogxxqGCDys43669766;     gGNDinVDskKNHhtSadYxogxxqGCDys43669766 = gGNDinVDskKNHhtSadYxogxxqGCDys78186391;     gGNDinVDskKNHhtSadYxogxxqGCDys78186391 = gGNDinVDskKNHhtSadYxogxxqGCDys27979348;     gGNDinVDskKNHhtSadYxogxxqGCDys27979348 = gGNDinVDskKNHhtSadYxogxxqGCDys38859082;     gGNDinVDskKNHhtSadYxogxxqGCDys38859082 = gGNDinVDskKNHhtSadYxogxxqGCDys83434712;     gGNDinVDskKNHhtSadYxogxxqGCDys83434712 = gGNDinVDskKNHhtSadYxogxxqGCDys34790006;     gGNDinVDskKNHhtSadYxogxxqGCDys34790006 = gGNDinVDskKNHhtSadYxogxxqGCDys48357794;     gGNDinVDskKNHhtSadYxogxxqGCDys48357794 = gGNDinVDskKNHhtSadYxogxxqGCDys60004069;     gGNDinVDskKNHhtSadYxogxxqGCDys60004069 = gGNDinVDskKNHhtSadYxogxxqGCDys69930838;     gGNDinVDskKNHhtSadYxogxxqGCDys69930838 = gGNDinVDskKNHhtSadYxogxxqGCDys44497778;     gGNDinVDskKNHhtSadYxogxxqGCDys44497778 = gGNDinVDskKNHhtSadYxogxxqGCDys74456219;     gGNDinVDskKNHhtSadYxogxxqGCDys74456219 = gGNDinVDskKNHhtSadYxogxxqGCDys97817722;     gGNDinVDskKNHhtSadYxogxxqGCDys97817722 = gGNDinVDskKNHhtSadYxogxxqGCDys91609472;     gGNDinVDskKNHhtSadYxogxxqGCDys91609472 = gGNDinVDskKNHhtSadYxogxxqGCDys34539003;     gGNDinVDskKNHhtSadYxogxxqGCDys34539003 = gGNDinVDskKNHhtSadYxogxxqGCDys46070570;     gGNDinVDskKNHhtSadYxogxxqGCDys46070570 = gGNDinVDskKNHhtSadYxogxxqGCDys77417141;     gGNDinVDskKNHhtSadYxogxxqGCDys77417141 = gGNDinVDskKNHhtSadYxogxxqGCDys16333422;     gGNDinVDskKNHhtSadYxogxxqGCDys16333422 = gGNDinVDskKNHhtSadYxogxxqGCDys1354712;     gGNDinVDskKNHhtSadYxogxxqGCDys1354712 = gGNDinVDskKNHhtSadYxogxxqGCDys49323564;     gGNDinVDskKNHhtSadYxogxxqGCDys49323564 = gGNDinVDskKNHhtSadYxogxxqGCDys86975787;     gGNDinVDskKNHhtSadYxogxxqGCDys86975787 = gGNDinVDskKNHhtSadYxogxxqGCDys34516756;     gGNDinVDskKNHhtSadYxogxxqGCDys34516756 = gGNDinVDskKNHhtSadYxogxxqGCDys27166013;     gGNDinVDskKNHhtSadYxogxxqGCDys27166013 = gGNDinVDskKNHhtSadYxogxxqGCDys42148541;     gGNDinVDskKNHhtSadYxogxxqGCDys42148541 = gGNDinVDskKNHhtSadYxogxxqGCDys42841044;     gGNDinVDskKNHhtSadYxogxxqGCDys42841044 = gGNDinVDskKNHhtSadYxogxxqGCDys72191353;     gGNDinVDskKNHhtSadYxogxxqGCDys72191353 = gGNDinVDskKNHhtSadYxogxxqGCDys26302734;     gGNDinVDskKNHhtSadYxogxxqGCDys26302734 = gGNDinVDskKNHhtSadYxogxxqGCDys71665483;     gGNDinVDskKNHhtSadYxogxxqGCDys71665483 = gGNDinVDskKNHhtSadYxogxxqGCDys61387571;     gGNDinVDskKNHhtSadYxogxxqGCDys61387571 = gGNDinVDskKNHhtSadYxogxxqGCDys76172264;     gGNDinVDskKNHhtSadYxogxxqGCDys76172264 = gGNDinVDskKNHhtSadYxogxxqGCDys71236803;     gGNDinVDskKNHhtSadYxogxxqGCDys71236803 = gGNDinVDskKNHhtSadYxogxxqGCDys86361042;     gGNDinVDskKNHhtSadYxogxxqGCDys86361042 = gGNDinVDskKNHhtSadYxogxxqGCDys69609614;     gGNDinVDskKNHhtSadYxogxxqGCDys69609614 = gGNDinVDskKNHhtSadYxogxxqGCDys77990371;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void UCxRXDzOZgFtarLdeZJdyOOzU56257312() {     double IxJLvTbtGrOouFWHqaCwwgqKFkfMxq29154454 = -387251022;    double IxJLvTbtGrOouFWHqaCwwgqKFkfMxq85532012 = -721436835;    double IxJLvTbtGrOouFWHqaCwwgqKFkfMxq34313526 = -131010575;    double IxJLvTbtGrOouFWHqaCwwgqKFkfMxq5172616 = -726854648;    double IxJLvTbtGrOouFWHqaCwwgqKFkfMxq86924486 = -753058123;    double IxJLvTbtGrOouFWHqaCwwgqKFkfMxq82614291 = -843297425;    double IxJLvTbtGrOouFWHqaCwwgqKFkfMxq44958629 = -658019208;    double IxJLvTbtGrOouFWHqaCwwgqKFkfMxq59087824 = -618567293;    double IxJLvTbtGrOouFWHqaCwwgqKFkfMxq37019540 = -273997415;    double IxJLvTbtGrOouFWHqaCwwgqKFkfMxq1243508 = -15289359;    double IxJLvTbtGrOouFWHqaCwwgqKFkfMxq96138019 = -111130799;    double IxJLvTbtGrOouFWHqaCwwgqKFkfMxq28276250 = -441415443;    double IxJLvTbtGrOouFWHqaCwwgqKFkfMxq48472632 = -960666521;    double IxJLvTbtGrOouFWHqaCwwgqKFkfMxq11293640 = -22468739;    double IxJLvTbtGrOouFWHqaCwwgqKFkfMxq29949935 = -421593052;    double IxJLvTbtGrOouFWHqaCwwgqKFkfMxq97964033 = -424751851;    double IxJLvTbtGrOouFWHqaCwwgqKFkfMxq79929231 = -354723330;    double IxJLvTbtGrOouFWHqaCwwgqKFkfMxq95507598 = -191329283;    double IxJLvTbtGrOouFWHqaCwwgqKFkfMxq46209182 = -796983861;    double IxJLvTbtGrOouFWHqaCwwgqKFkfMxq35806344 = -790388843;    double IxJLvTbtGrOouFWHqaCwwgqKFkfMxq98762980 = -129994833;    double IxJLvTbtGrOouFWHqaCwwgqKFkfMxq55798644 = -250115673;    double IxJLvTbtGrOouFWHqaCwwgqKFkfMxq46666284 = -259156207;    double IxJLvTbtGrOouFWHqaCwwgqKFkfMxq77183146 = -417077200;    double IxJLvTbtGrOouFWHqaCwwgqKFkfMxq53468059 = -165269787;    double IxJLvTbtGrOouFWHqaCwwgqKFkfMxq94414914 = -200585668;    double IxJLvTbtGrOouFWHqaCwwgqKFkfMxq52391725 = -799080969;    double IxJLvTbtGrOouFWHqaCwwgqKFkfMxq97306447 = -339839694;    double IxJLvTbtGrOouFWHqaCwwgqKFkfMxq7387704 = -324288264;    double IxJLvTbtGrOouFWHqaCwwgqKFkfMxq53027118 = -636578051;    double IxJLvTbtGrOouFWHqaCwwgqKFkfMxq72391705 = -22237445;    double IxJLvTbtGrOouFWHqaCwwgqKFkfMxq20214910 = -853779051;    double IxJLvTbtGrOouFWHqaCwwgqKFkfMxq93350721 = -358082396;    double IxJLvTbtGrOouFWHqaCwwgqKFkfMxq19308765 = -935659014;    double IxJLvTbtGrOouFWHqaCwwgqKFkfMxq15828234 = -921530118;    double IxJLvTbtGrOouFWHqaCwwgqKFkfMxq46465549 = -839364825;    double IxJLvTbtGrOouFWHqaCwwgqKFkfMxq91210191 = 88210655;    double IxJLvTbtGrOouFWHqaCwwgqKFkfMxq6684211 = -294248029;    double IxJLvTbtGrOouFWHqaCwwgqKFkfMxq64001298 = -386911277;    double IxJLvTbtGrOouFWHqaCwwgqKFkfMxq57501704 = -435802080;    double IxJLvTbtGrOouFWHqaCwwgqKFkfMxq75210083 = -134222128;    double IxJLvTbtGrOouFWHqaCwwgqKFkfMxq30787798 = -316283665;    double IxJLvTbtGrOouFWHqaCwwgqKFkfMxq63249126 = -991706101;    double IxJLvTbtGrOouFWHqaCwwgqKFkfMxq58580970 = -204751885;    double IxJLvTbtGrOouFWHqaCwwgqKFkfMxq23628538 = -321672537;    double IxJLvTbtGrOouFWHqaCwwgqKFkfMxq90629981 = -374986528;    double IxJLvTbtGrOouFWHqaCwwgqKFkfMxq54487792 = -664455548;    double IxJLvTbtGrOouFWHqaCwwgqKFkfMxq74464444 = -272755065;    double IxJLvTbtGrOouFWHqaCwwgqKFkfMxq8315782 = -791997954;    double IxJLvTbtGrOouFWHqaCwwgqKFkfMxq29203104 = -175177630;    double IxJLvTbtGrOouFWHqaCwwgqKFkfMxq87490709 = -242139754;    double IxJLvTbtGrOouFWHqaCwwgqKFkfMxq62595463 = -938706265;    double IxJLvTbtGrOouFWHqaCwwgqKFkfMxq23383179 = -331192388;    double IxJLvTbtGrOouFWHqaCwwgqKFkfMxq26596496 = -882590308;    double IxJLvTbtGrOouFWHqaCwwgqKFkfMxq57494332 = -245245462;    double IxJLvTbtGrOouFWHqaCwwgqKFkfMxq73355809 = -37135350;    double IxJLvTbtGrOouFWHqaCwwgqKFkfMxq38865728 = -362280629;    double IxJLvTbtGrOouFWHqaCwwgqKFkfMxq57130379 = -713933375;    double IxJLvTbtGrOouFWHqaCwwgqKFkfMxq51704557 = -461584862;    double IxJLvTbtGrOouFWHqaCwwgqKFkfMxq92509571 = -452472455;    double IxJLvTbtGrOouFWHqaCwwgqKFkfMxq30222567 = 55783544;    double IxJLvTbtGrOouFWHqaCwwgqKFkfMxq47652181 = -218179515;    double IxJLvTbtGrOouFWHqaCwwgqKFkfMxq51700120 = -194279029;    double IxJLvTbtGrOouFWHqaCwwgqKFkfMxq83992421 = -637419364;    double IxJLvTbtGrOouFWHqaCwwgqKFkfMxq28851802 = -993051915;    double IxJLvTbtGrOouFWHqaCwwgqKFkfMxq75923110 = -257351749;    double IxJLvTbtGrOouFWHqaCwwgqKFkfMxq34925529 = 16666953;    double IxJLvTbtGrOouFWHqaCwwgqKFkfMxq29163868 = 74992492;    double IxJLvTbtGrOouFWHqaCwwgqKFkfMxq95465405 = -100938621;    double IxJLvTbtGrOouFWHqaCwwgqKFkfMxq83484385 = -582228228;    double IxJLvTbtGrOouFWHqaCwwgqKFkfMxq6753843 = -412962507;    double IxJLvTbtGrOouFWHqaCwwgqKFkfMxq73245021 = 39524698;    double IxJLvTbtGrOouFWHqaCwwgqKFkfMxq31506300 = -804418007;    double IxJLvTbtGrOouFWHqaCwwgqKFkfMxq88707477 = -261181781;    double IxJLvTbtGrOouFWHqaCwwgqKFkfMxq60596260 = -556166716;    double IxJLvTbtGrOouFWHqaCwwgqKFkfMxq67975182 = -813711168;    double IxJLvTbtGrOouFWHqaCwwgqKFkfMxq92549518 = -258409572;    double IxJLvTbtGrOouFWHqaCwwgqKFkfMxq88085314 = 45595678;    double IxJLvTbtGrOouFWHqaCwwgqKFkfMxq53554608 = 4595337;    double IxJLvTbtGrOouFWHqaCwwgqKFkfMxq62838078 = -790283260;    double IxJLvTbtGrOouFWHqaCwwgqKFkfMxq39927122 = -536130121;    double IxJLvTbtGrOouFWHqaCwwgqKFkfMxq77927280 = -426325905;    double IxJLvTbtGrOouFWHqaCwwgqKFkfMxq88990665 = -547841740;    double IxJLvTbtGrOouFWHqaCwwgqKFkfMxq78184600 = -49110635;    double IxJLvTbtGrOouFWHqaCwwgqKFkfMxq65536409 = -294438298;    double IxJLvTbtGrOouFWHqaCwwgqKFkfMxq9796243 = -83531181;    double IxJLvTbtGrOouFWHqaCwwgqKFkfMxq96831731 = -422586663;    double IxJLvTbtGrOouFWHqaCwwgqKFkfMxq66754226 = -475492089;    double IxJLvTbtGrOouFWHqaCwwgqKFkfMxq61814432 = -590413552;    double IxJLvTbtGrOouFWHqaCwwgqKFkfMxq42472424 = -784394769;    double IxJLvTbtGrOouFWHqaCwwgqKFkfMxq7599821 = -377084196;    double IxJLvTbtGrOouFWHqaCwwgqKFkfMxq34079812 = -197855970;    double IxJLvTbtGrOouFWHqaCwwgqKFkfMxq54979654 = -832663167;    double IxJLvTbtGrOouFWHqaCwwgqKFkfMxq71491727 = -934438822;    double IxJLvTbtGrOouFWHqaCwwgqKFkfMxq27279138 = -391585625;    double IxJLvTbtGrOouFWHqaCwwgqKFkfMxq27557902 = -916042613;    double IxJLvTbtGrOouFWHqaCwwgqKFkfMxq79087677 = -22004636;    double IxJLvTbtGrOouFWHqaCwwgqKFkfMxq79256704 = -254286737;    double IxJLvTbtGrOouFWHqaCwwgqKFkfMxq29729168 = -211699971;    double IxJLvTbtGrOouFWHqaCwwgqKFkfMxq47705428 = -387251022;     IxJLvTbtGrOouFWHqaCwwgqKFkfMxq29154454 = IxJLvTbtGrOouFWHqaCwwgqKFkfMxq85532012;     IxJLvTbtGrOouFWHqaCwwgqKFkfMxq85532012 = IxJLvTbtGrOouFWHqaCwwgqKFkfMxq34313526;     IxJLvTbtGrOouFWHqaCwwgqKFkfMxq34313526 = IxJLvTbtGrOouFWHqaCwwgqKFkfMxq5172616;     IxJLvTbtGrOouFWHqaCwwgqKFkfMxq5172616 = IxJLvTbtGrOouFWHqaCwwgqKFkfMxq86924486;     IxJLvTbtGrOouFWHqaCwwgqKFkfMxq86924486 = IxJLvTbtGrOouFWHqaCwwgqKFkfMxq82614291;     IxJLvTbtGrOouFWHqaCwwgqKFkfMxq82614291 = IxJLvTbtGrOouFWHqaCwwgqKFkfMxq44958629;     IxJLvTbtGrOouFWHqaCwwgqKFkfMxq44958629 = IxJLvTbtGrOouFWHqaCwwgqKFkfMxq59087824;     IxJLvTbtGrOouFWHqaCwwgqKFkfMxq59087824 = IxJLvTbtGrOouFWHqaCwwgqKFkfMxq37019540;     IxJLvTbtGrOouFWHqaCwwgqKFkfMxq37019540 = IxJLvTbtGrOouFWHqaCwwgqKFkfMxq1243508;     IxJLvTbtGrOouFWHqaCwwgqKFkfMxq1243508 = IxJLvTbtGrOouFWHqaCwwgqKFkfMxq96138019;     IxJLvTbtGrOouFWHqaCwwgqKFkfMxq96138019 = IxJLvTbtGrOouFWHqaCwwgqKFkfMxq28276250;     IxJLvTbtGrOouFWHqaCwwgqKFkfMxq28276250 = IxJLvTbtGrOouFWHqaCwwgqKFkfMxq48472632;     IxJLvTbtGrOouFWHqaCwwgqKFkfMxq48472632 = IxJLvTbtGrOouFWHqaCwwgqKFkfMxq11293640;     IxJLvTbtGrOouFWHqaCwwgqKFkfMxq11293640 = IxJLvTbtGrOouFWHqaCwwgqKFkfMxq29949935;     IxJLvTbtGrOouFWHqaCwwgqKFkfMxq29949935 = IxJLvTbtGrOouFWHqaCwwgqKFkfMxq97964033;     IxJLvTbtGrOouFWHqaCwwgqKFkfMxq97964033 = IxJLvTbtGrOouFWHqaCwwgqKFkfMxq79929231;     IxJLvTbtGrOouFWHqaCwwgqKFkfMxq79929231 = IxJLvTbtGrOouFWHqaCwwgqKFkfMxq95507598;     IxJLvTbtGrOouFWHqaCwwgqKFkfMxq95507598 = IxJLvTbtGrOouFWHqaCwwgqKFkfMxq46209182;     IxJLvTbtGrOouFWHqaCwwgqKFkfMxq46209182 = IxJLvTbtGrOouFWHqaCwwgqKFkfMxq35806344;     IxJLvTbtGrOouFWHqaCwwgqKFkfMxq35806344 = IxJLvTbtGrOouFWHqaCwwgqKFkfMxq98762980;     IxJLvTbtGrOouFWHqaCwwgqKFkfMxq98762980 = IxJLvTbtGrOouFWHqaCwwgqKFkfMxq55798644;     IxJLvTbtGrOouFWHqaCwwgqKFkfMxq55798644 = IxJLvTbtGrOouFWHqaCwwgqKFkfMxq46666284;     IxJLvTbtGrOouFWHqaCwwgqKFkfMxq46666284 = IxJLvTbtGrOouFWHqaCwwgqKFkfMxq77183146;     IxJLvTbtGrOouFWHqaCwwgqKFkfMxq77183146 = IxJLvTbtGrOouFWHqaCwwgqKFkfMxq53468059;     IxJLvTbtGrOouFWHqaCwwgqKFkfMxq53468059 = IxJLvTbtGrOouFWHqaCwwgqKFkfMxq94414914;     IxJLvTbtGrOouFWHqaCwwgqKFkfMxq94414914 = IxJLvTbtGrOouFWHqaCwwgqKFkfMxq52391725;     IxJLvTbtGrOouFWHqaCwwgqKFkfMxq52391725 = IxJLvTbtGrOouFWHqaCwwgqKFkfMxq97306447;     IxJLvTbtGrOouFWHqaCwwgqKFkfMxq97306447 = IxJLvTbtGrOouFWHqaCwwgqKFkfMxq7387704;     IxJLvTbtGrOouFWHqaCwwgqKFkfMxq7387704 = IxJLvTbtGrOouFWHqaCwwgqKFkfMxq53027118;     IxJLvTbtGrOouFWHqaCwwgqKFkfMxq53027118 = IxJLvTbtGrOouFWHqaCwwgqKFkfMxq72391705;     IxJLvTbtGrOouFWHqaCwwgqKFkfMxq72391705 = IxJLvTbtGrOouFWHqaCwwgqKFkfMxq20214910;     IxJLvTbtGrOouFWHqaCwwgqKFkfMxq20214910 = IxJLvTbtGrOouFWHqaCwwgqKFkfMxq93350721;     IxJLvTbtGrOouFWHqaCwwgqKFkfMxq93350721 = IxJLvTbtGrOouFWHqaCwwgqKFkfMxq19308765;     IxJLvTbtGrOouFWHqaCwwgqKFkfMxq19308765 = IxJLvTbtGrOouFWHqaCwwgqKFkfMxq15828234;     IxJLvTbtGrOouFWHqaCwwgqKFkfMxq15828234 = IxJLvTbtGrOouFWHqaCwwgqKFkfMxq46465549;     IxJLvTbtGrOouFWHqaCwwgqKFkfMxq46465549 = IxJLvTbtGrOouFWHqaCwwgqKFkfMxq91210191;     IxJLvTbtGrOouFWHqaCwwgqKFkfMxq91210191 = IxJLvTbtGrOouFWHqaCwwgqKFkfMxq6684211;     IxJLvTbtGrOouFWHqaCwwgqKFkfMxq6684211 = IxJLvTbtGrOouFWHqaCwwgqKFkfMxq64001298;     IxJLvTbtGrOouFWHqaCwwgqKFkfMxq64001298 = IxJLvTbtGrOouFWHqaCwwgqKFkfMxq57501704;     IxJLvTbtGrOouFWHqaCwwgqKFkfMxq57501704 = IxJLvTbtGrOouFWHqaCwwgqKFkfMxq75210083;     IxJLvTbtGrOouFWHqaCwwgqKFkfMxq75210083 = IxJLvTbtGrOouFWHqaCwwgqKFkfMxq30787798;     IxJLvTbtGrOouFWHqaCwwgqKFkfMxq30787798 = IxJLvTbtGrOouFWHqaCwwgqKFkfMxq63249126;     IxJLvTbtGrOouFWHqaCwwgqKFkfMxq63249126 = IxJLvTbtGrOouFWHqaCwwgqKFkfMxq58580970;     IxJLvTbtGrOouFWHqaCwwgqKFkfMxq58580970 = IxJLvTbtGrOouFWHqaCwwgqKFkfMxq23628538;     IxJLvTbtGrOouFWHqaCwwgqKFkfMxq23628538 = IxJLvTbtGrOouFWHqaCwwgqKFkfMxq90629981;     IxJLvTbtGrOouFWHqaCwwgqKFkfMxq90629981 = IxJLvTbtGrOouFWHqaCwwgqKFkfMxq54487792;     IxJLvTbtGrOouFWHqaCwwgqKFkfMxq54487792 = IxJLvTbtGrOouFWHqaCwwgqKFkfMxq74464444;     IxJLvTbtGrOouFWHqaCwwgqKFkfMxq74464444 = IxJLvTbtGrOouFWHqaCwwgqKFkfMxq8315782;     IxJLvTbtGrOouFWHqaCwwgqKFkfMxq8315782 = IxJLvTbtGrOouFWHqaCwwgqKFkfMxq29203104;     IxJLvTbtGrOouFWHqaCwwgqKFkfMxq29203104 = IxJLvTbtGrOouFWHqaCwwgqKFkfMxq87490709;     IxJLvTbtGrOouFWHqaCwwgqKFkfMxq87490709 = IxJLvTbtGrOouFWHqaCwwgqKFkfMxq62595463;     IxJLvTbtGrOouFWHqaCwwgqKFkfMxq62595463 = IxJLvTbtGrOouFWHqaCwwgqKFkfMxq23383179;     IxJLvTbtGrOouFWHqaCwwgqKFkfMxq23383179 = IxJLvTbtGrOouFWHqaCwwgqKFkfMxq26596496;     IxJLvTbtGrOouFWHqaCwwgqKFkfMxq26596496 = IxJLvTbtGrOouFWHqaCwwgqKFkfMxq57494332;     IxJLvTbtGrOouFWHqaCwwgqKFkfMxq57494332 = IxJLvTbtGrOouFWHqaCwwgqKFkfMxq73355809;     IxJLvTbtGrOouFWHqaCwwgqKFkfMxq73355809 = IxJLvTbtGrOouFWHqaCwwgqKFkfMxq38865728;     IxJLvTbtGrOouFWHqaCwwgqKFkfMxq38865728 = IxJLvTbtGrOouFWHqaCwwgqKFkfMxq57130379;     IxJLvTbtGrOouFWHqaCwwgqKFkfMxq57130379 = IxJLvTbtGrOouFWHqaCwwgqKFkfMxq51704557;     IxJLvTbtGrOouFWHqaCwwgqKFkfMxq51704557 = IxJLvTbtGrOouFWHqaCwwgqKFkfMxq92509571;     IxJLvTbtGrOouFWHqaCwwgqKFkfMxq92509571 = IxJLvTbtGrOouFWHqaCwwgqKFkfMxq30222567;     IxJLvTbtGrOouFWHqaCwwgqKFkfMxq30222567 = IxJLvTbtGrOouFWHqaCwwgqKFkfMxq47652181;     IxJLvTbtGrOouFWHqaCwwgqKFkfMxq47652181 = IxJLvTbtGrOouFWHqaCwwgqKFkfMxq51700120;     IxJLvTbtGrOouFWHqaCwwgqKFkfMxq51700120 = IxJLvTbtGrOouFWHqaCwwgqKFkfMxq83992421;     IxJLvTbtGrOouFWHqaCwwgqKFkfMxq83992421 = IxJLvTbtGrOouFWHqaCwwgqKFkfMxq28851802;     IxJLvTbtGrOouFWHqaCwwgqKFkfMxq28851802 = IxJLvTbtGrOouFWHqaCwwgqKFkfMxq75923110;     IxJLvTbtGrOouFWHqaCwwgqKFkfMxq75923110 = IxJLvTbtGrOouFWHqaCwwgqKFkfMxq34925529;     IxJLvTbtGrOouFWHqaCwwgqKFkfMxq34925529 = IxJLvTbtGrOouFWHqaCwwgqKFkfMxq29163868;     IxJLvTbtGrOouFWHqaCwwgqKFkfMxq29163868 = IxJLvTbtGrOouFWHqaCwwgqKFkfMxq95465405;     IxJLvTbtGrOouFWHqaCwwgqKFkfMxq95465405 = IxJLvTbtGrOouFWHqaCwwgqKFkfMxq83484385;     IxJLvTbtGrOouFWHqaCwwgqKFkfMxq83484385 = IxJLvTbtGrOouFWHqaCwwgqKFkfMxq6753843;     IxJLvTbtGrOouFWHqaCwwgqKFkfMxq6753843 = IxJLvTbtGrOouFWHqaCwwgqKFkfMxq73245021;     IxJLvTbtGrOouFWHqaCwwgqKFkfMxq73245021 = IxJLvTbtGrOouFWHqaCwwgqKFkfMxq31506300;     IxJLvTbtGrOouFWHqaCwwgqKFkfMxq31506300 = IxJLvTbtGrOouFWHqaCwwgqKFkfMxq88707477;     IxJLvTbtGrOouFWHqaCwwgqKFkfMxq88707477 = IxJLvTbtGrOouFWHqaCwwgqKFkfMxq60596260;     IxJLvTbtGrOouFWHqaCwwgqKFkfMxq60596260 = IxJLvTbtGrOouFWHqaCwwgqKFkfMxq67975182;     IxJLvTbtGrOouFWHqaCwwgqKFkfMxq67975182 = IxJLvTbtGrOouFWHqaCwwgqKFkfMxq92549518;     IxJLvTbtGrOouFWHqaCwwgqKFkfMxq92549518 = IxJLvTbtGrOouFWHqaCwwgqKFkfMxq88085314;     IxJLvTbtGrOouFWHqaCwwgqKFkfMxq88085314 = IxJLvTbtGrOouFWHqaCwwgqKFkfMxq53554608;     IxJLvTbtGrOouFWHqaCwwgqKFkfMxq53554608 = IxJLvTbtGrOouFWHqaCwwgqKFkfMxq62838078;     IxJLvTbtGrOouFWHqaCwwgqKFkfMxq62838078 = IxJLvTbtGrOouFWHqaCwwgqKFkfMxq39927122;     IxJLvTbtGrOouFWHqaCwwgqKFkfMxq39927122 = IxJLvTbtGrOouFWHqaCwwgqKFkfMxq77927280;     IxJLvTbtGrOouFWHqaCwwgqKFkfMxq77927280 = IxJLvTbtGrOouFWHqaCwwgqKFkfMxq88990665;     IxJLvTbtGrOouFWHqaCwwgqKFkfMxq88990665 = IxJLvTbtGrOouFWHqaCwwgqKFkfMxq78184600;     IxJLvTbtGrOouFWHqaCwwgqKFkfMxq78184600 = IxJLvTbtGrOouFWHqaCwwgqKFkfMxq65536409;     IxJLvTbtGrOouFWHqaCwwgqKFkfMxq65536409 = IxJLvTbtGrOouFWHqaCwwgqKFkfMxq9796243;     IxJLvTbtGrOouFWHqaCwwgqKFkfMxq9796243 = IxJLvTbtGrOouFWHqaCwwgqKFkfMxq96831731;     IxJLvTbtGrOouFWHqaCwwgqKFkfMxq96831731 = IxJLvTbtGrOouFWHqaCwwgqKFkfMxq66754226;     IxJLvTbtGrOouFWHqaCwwgqKFkfMxq66754226 = IxJLvTbtGrOouFWHqaCwwgqKFkfMxq61814432;     IxJLvTbtGrOouFWHqaCwwgqKFkfMxq61814432 = IxJLvTbtGrOouFWHqaCwwgqKFkfMxq42472424;     IxJLvTbtGrOouFWHqaCwwgqKFkfMxq42472424 = IxJLvTbtGrOouFWHqaCwwgqKFkfMxq7599821;     IxJLvTbtGrOouFWHqaCwwgqKFkfMxq7599821 = IxJLvTbtGrOouFWHqaCwwgqKFkfMxq34079812;     IxJLvTbtGrOouFWHqaCwwgqKFkfMxq34079812 = IxJLvTbtGrOouFWHqaCwwgqKFkfMxq54979654;     IxJLvTbtGrOouFWHqaCwwgqKFkfMxq54979654 = IxJLvTbtGrOouFWHqaCwwgqKFkfMxq71491727;     IxJLvTbtGrOouFWHqaCwwgqKFkfMxq71491727 = IxJLvTbtGrOouFWHqaCwwgqKFkfMxq27279138;     IxJLvTbtGrOouFWHqaCwwgqKFkfMxq27279138 = IxJLvTbtGrOouFWHqaCwwgqKFkfMxq27557902;     IxJLvTbtGrOouFWHqaCwwgqKFkfMxq27557902 = IxJLvTbtGrOouFWHqaCwwgqKFkfMxq79087677;     IxJLvTbtGrOouFWHqaCwwgqKFkfMxq79087677 = IxJLvTbtGrOouFWHqaCwwgqKFkfMxq79256704;     IxJLvTbtGrOouFWHqaCwwgqKFkfMxq79256704 = IxJLvTbtGrOouFWHqaCwwgqKFkfMxq29729168;     IxJLvTbtGrOouFWHqaCwwgqKFkfMxq29729168 = IxJLvTbtGrOouFWHqaCwwgqKFkfMxq47705428;     IxJLvTbtGrOouFWHqaCwwgqKFkfMxq47705428 = IxJLvTbtGrOouFWHqaCwwgqKFkfMxq29154454;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void eYtAPAUWnjybXnRocsbnWozHK65862038() {     double CPCHkpOXozCprDjWEdrOmpezDyhbHc50976675 = -955466354;    double CPCHkpOXozCprDjWEdrOmpezDyhbHc46999817 = -4035688;    double CPCHkpOXozCprDjWEdrOmpezDyhbHc80040796 = -178228107;    double CPCHkpOXozCprDjWEdrOmpezDyhbHc36547762 = -931638824;    double CPCHkpOXozCprDjWEdrOmpezDyhbHc47058817 = -630309044;    double CPCHkpOXozCprDjWEdrOmpezDyhbHc6632607 = -854840583;    double CPCHkpOXozCprDjWEdrOmpezDyhbHc73979213 = -721337332;    double CPCHkpOXozCprDjWEdrOmpezDyhbHc45950453 = -626748141;    double CPCHkpOXozCprDjWEdrOmpezDyhbHc33543179 = -259792833;    double CPCHkpOXozCprDjWEdrOmpezDyhbHc62526733 = -985507757;    double CPCHkpOXozCprDjWEdrOmpezDyhbHc67054288 = -766888502;    double CPCHkpOXozCprDjWEdrOmpezDyhbHc44458133 = -544597049;    double CPCHkpOXozCprDjWEdrOmpezDyhbHc81461575 = -398700310;    double CPCHkpOXozCprDjWEdrOmpezDyhbHc78260106 = -872545536;    double CPCHkpOXozCprDjWEdrOmpezDyhbHc25207731 = -348434971;    double CPCHkpOXozCprDjWEdrOmpezDyhbHc45934760 = -867118392;    double CPCHkpOXozCprDjWEdrOmpezDyhbHc73378291 = -740548048;    double CPCHkpOXozCprDjWEdrOmpezDyhbHc58032902 = -113050201;    double CPCHkpOXozCprDjWEdrOmpezDyhbHc50846406 = -870119517;    double CPCHkpOXozCprDjWEdrOmpezDyhbHc16915986 = -181633899;    double CPCHkpOXozCprDjWEdrOmpezDyhbHc55917265 = -962073535;    double CPCHkpOXozCprDjWEdrOmpezDyhbHc20200623 = -320866837;    double CPCHkpOXozCprDjWEdrOmpezDyhbHc56137689 = -915183562;    double CPCHkpOXozCprDjWEdrOmpezDyhbHc14460769 = -827176066;    double CPCHkpOXozCprDjWEdrOmpezDyhbHc27398727 = -76166759;    double CPCHkpOXozCprDjWEdrOmpezDyhbHc83990768 = -527771196;    double CPCHkpOXozCprDjWEdrOmpezDyhbHc25428329 = -325885014;    double CPCHkpOXozCprDjWEdrOmpezDyhbHc32886273 = -204287927;    double CPCHkpOXozCprDjWEdrOmpezDyhbHc55284617 = 8765818;    double CPCHkpOXozCprDjWEdrOmpezDyhbHc98844195 = 87207754;    double CPCHkpOXozCprDjWEdrOmpezDyhbHc23556971 = -427965192;    double CPCHkpOXozCprDjWEdrOmpezDyhbHc39106236 = -629667882;    double CPCHkpOXozCprDjWEdrOmpezDyhbHc18670187 = -100686279;    double CPCHkpOXozCprDjWEdrOmpezDyhbHc91847881 = -611478641;    double CPCHkpOXozCprDjWEdrOmpezDyhbHc96662445 = 28651280;    double CPCHkpOXozCprDjWEdrOmpezDyhbHc16042510 = -853780804;    double CPCHkpOXozCprDjWEdrOmpezDyhbHc34292448 = 38593559;    double CPCHkpOXozCprDjWEdrOmpezDyhbHc10622073 = -875790786;    double CPCHkpOXozCprDjWEdrOmpezDyhbHc24381745 = -159316558;    double CPCHkpOXozCprDjWEdrOmpezDyhbHc70172350 = -893351081;    double CPCHkpOXozCprDjWEdrOmpezDyhbHc29585929 = -568361386;    double CPCHkpOXozCprDjWEdrOmpezDyhbHc47289969 = -3749742;    double CPCHkpOXozCprDjWEdrOmpezDyhbHc10616525 = 64327084;    double CPCHkpOXozCprDjWEdrOmpezDyhbHc6675829 = -113558054;    double CPCHkpOXozCprDjWEdrOmpezDyhbHc3544349 = -508361167;    double CPCHkpOXozCprDjWEdrOmpezDyhbHc29836460 = -78418758;    double CPCHkpOXozCprDjWEdrOmpezDyhbHc80155903 = -845463068;    double CPCHkpOXozCprDjWEdrOmpezDyhbHc56304196 = -11251054;    double CPCHkpOXozCprDjWEdrOmpezDyhbHc15379874 = -977114377;    double CPCHkpOXozCprDjWEdrOmpezDyhbHc45250580 = -154232815;    double CPCHkpOXozCprDjWEdrOmpezDyhbHc75952528 = -286029079;    double CPCHkpOXozCprDjWEdrOmpezDyhbHc58984127 = -164084346;    double CPCHkpOXozCprDjWEdrOmpezDyhbHc14606043 = -294787528;    double CPCHkpOXozCprDjWEdrOmpezDyhbHc54621618 = 26400632;    double CPCHkpOXozCprDjWEdrOmpezDyhbHc9944774 = -206367211;    double CPCHkpOXozCprDjWEdrOmpezDyhbHc30776052 = -534599517;    double CPCHkpOXozCprDjWEdrOmpezDyhbHc90862128 = -88852127;    double CPCHkpOXozCprDjWEdrOmpezDyhbHc65580028 = -351052042;    double CPCHkpOXozCprDjWEdrOmpezDyhbHc9149036 = -755472065;    double CPCHkpOXozCprDjWEdrOmpezDyhbHc63068049 = -2537849;    double CPCHkpOXozCprDjWEdrOmpezDyhbHc81204278 = -428955570;    double CPCHkpOXozCprDjWEdrOmpezDyhbHc41092940 = -417049406;    double CPCHkpOXozCprDjWEdrOmpezDyhbHc90665836 = -535513959;    double CPCHkpOXozCprDjWEdrOmpezDyhbHc34698984 = -247000588;    double CPCHkpOXozCprDjWEdrOmpezDyhbHc38969762 = -457542565;    double CPCHkpOXozCprDjWEdrOmpezDyhbHc27948053 = -37220621;    double CPCHkpOXozCprDjWEdrOmpezDyhbHc25787947 = -343910770;    double CPCHkpOXozCprDjWEdrOmpezDyhbHc89613693 = -787221670;    double CPCHkpOXozCprDjWEdrOmpezDyhbHc81597660 = -801196816;    double CPCHkpOXozCprDjWEdrOmpezDyhbHc9165222 = -494654167;    double CPCHkpOXozCprDjWEdrOmpezDyhbHc11642312 = -805711951;    double CPCHkpOXozCprDjWEdrOmpezDyhbHc62756218 = -864757262;    double CPCHkpOXozCprDjWEdrOmpezDyhbHc33651157 = -953733644;    double CPCHkpOXozCprDjWEdrOmpezDyhbHc80674055 = -976768437;    double CPCHkpOXozCprDjWEdrOmpezDyhbHc87330057 = -613272514;    double CPCHkpOXozCprDjWEdrOmpezDyhbHc8627297 = -858323793;    double CPCHkpOXozCprDjWEdrOmpezDyhbHc9584098 = -285193922;    double CPCHkpOXozCprDjWEdrOmpezDyhbHc49461860 = -701625508;    double CPCHkpOXozCprDjWEdrOmpezDyhbHc10916420 = -218814900;    double CPCHkpOXozCprDjWEdrOmpezDyhbHc97562266 = -997748002;    double CPCHkpOXozCprDjWEdrOmpezDyhbHc3834865 = -682308129;    double CPCHkpOXozCprDjWEdrOmpezDyhbHc69124132 = -214633961;    double CPCHkpOXozCprDjWEdrOmpezDyhbHc17506399 = -227173551;    double CPCHkpOXozCprDjWEdrOmpezDyhbHc10034037 = -837001368;    double CPCHkpOXozCprDjWEdrOmpezDyhbHc22891667 = -626763167;    double CPCHkpOXozCprDjWEdrOmpezDyhbHc64572844 = -163880847;    double CPCHkpOXozCprDjWEdrOmpezDyhbHc24500193 = -234880354;    double CPCHkpOXozCprDjWEdrOmpezDyhbHc64048568 = -27086912;    double CPCHkpOXozCprDjWEdrOmpezDyhbHc81903108 = -305111431;    double CPCHkpOXozCprDjWEdrOmpezDyhbHc65886394 = -436749204;    double CPCHkpOXozCprDjWEdrOmpezDyhbHc25180382 = -664928678;    double CPCHkpOXozCprDjWEdrOmpezDyhbHc68712420 = -610354400;    double CPCHkpOXozCprDjWEdrOmpezDyhbHc1473038 = -20318722;    double CPCHkpOXozCprDjWEdrOmpezDyhbHc61313696 = -56778709;    double CPCHkpOXozCprDjWEdrOmpezDyhbHc88968072 = -364395512;    double CPCHkpOXozCprDjWEdrOmpezDyhbHc88492988 = -51311980;    double CPCHkpOXozCprDjWEdrOmpezDyhbHc56624132 = -468235783;    double CPCHkpOXozCprDjWEdrOmpezDyhbHc75917541 = -688672328;    double CPCHkpOXozCprDjWEdrOmpezDyhbHc67706067 = -656015490;    double CPCHkpOXozCprDjWEdrOmpezDyhbHc75596296 = -955466354;     CPCHkpOXozCprDjWEdrOmpezDyhbHc50976675 = CPCHkpOXozCprDjWEdrOmpezDyhbHc46999817;     CPCHkpOXozCprDjWEdrOmpezDyhbHc46999817 = CPCHkpOXozCprDjWEdrOmpezDyhbHc80040796;     CPCHkpOXozCprDjWEdrOmpezDyhbHc80040796 = CPCHkpOXozCprDjWEdrOmpezDyhbHc36547762;     CPCHkpOXozCprDjWEdrOmpezDyhbHc36547762 = CPCHkpOXozCprDjWEdrOmpezDyhbHc47058817;     CPCHkpOXozCprDjWEdrOmpezDyhbHc47058817 = CPCHkpOXozCprDjWEdrOmpezDyhbHc6632607;     CPCHkpOXozCprDjWEdrOmpezDyhbHc6632607 = CPCHkpOXozCprDjWEdrOmpezDyhbHc73979213;     CPCHkpOXozCprDjWEdrOmpezDyhbHc73979213 = CPCHkpOXozCprDjWEdrOmpezDyhbHc45950453;     CPCHkpOXozCprDjWEdrOmpezDyhbHc45950453 = CPCHkpOXozCprDjWEdrOmpezDyhbHc33543179;     CPCHkpOXozCprDjWEdrOmpezDyhbHc33543179 = CPCHkpOXozCprDjWEdrOmpezDyhbHc62526733;     CPCHkpOXozCprDjWEdrOmpezDyhbHc62526733 = CPCHkpOXozCprDjWEdrOmpezDyhbHc67054288;     CPCHkpOXozCprDjWEdrOmpezDyhbHc67054288 = CPCHkpOXozCprDjWEdrOmpezDyhbHc44458133;     CPCHkpOXozCprDjWEdrOmpezDyhbHc44458133 = CPCHkpOXozCprDjWEdrOmpezDyhbHc81461575;     CPCHkpOXozCprDjWEdrOmpezDyhbHc81461575 = CPCHkpOXozCprDjWEdrOmpezDyhbHc78260106;     CPCHkpOXozCprDjWEdrOmpezDyhbHc78260106 = CPCHkpOXozCprDjWEdrOmpezDyhbHc25207731;     CPCHkpOXozCprDjWEdrOmpezDyhbHc25207731 = CPCHkpOXozCprDjWEdrOmpezDyhbHc45934760;     CPCHkpOXozCprDjWEdrOmpezDyhbHc45934760 = CPCHkpOXozCprDjWEdrOmpezDyhbHc73378291;     CPCHkpOXozCprDjWEdrOmpezDyhbHc73378291 = CPCHkpOXozCprDjWEdrOmpezDyhbHc58032902;     CPCHkpOXozCprDjWEdrOmpezDyhbHc58032902 = CPCHkpOXozCprDjWEdrOmpezDyhbHc50846406;     CPCHkpOXozCprDjWEdrOmpezDyhbHc50846406 = CPCHkpOXozCprDjWEdrOmpezDyhbHc16915986;     CPCHkpOXozCprDjWEdrOmpezDyhbHc16915986 = CPCHkpOXozCprDjWEdrOmpezDyhbHc55917265;     CPCHkpOXozCprDjWEdrOmpezDyhbHc55917265 = CPCHkpOXozCprDjWEdrOmpezDyhbHc20200623;     CPCHkpOXozCprDjWEdrOmpezDyhbHc20200623 = CPCHkpOXozCprDjWEdrOmpezDyhbHc56137689;     CPCHkpOXozCprDjWEdrOmpezDyhbHc56137689 = CPCHkpOXozCprDjWEdrOmpezDyhbHc14460769;     CPCHkpOXozCprDjWEdrOmpezDyhbHc14460769 = CPCHkpOXozCprDjWEdrOmpezDyhbHc27398727;     CPCHkpOXozCprDjWEdrOmpezDyhbHc27398727 = CPCHkpOXozCprDjWEdrOmpezDyhbHc83990768;     CPCHkpOXozCprDjWEdrOmpezDyhbHc83990768 = CPCHkpOXozCprDjWEdrOmpezDyhbHc25428329;     CPCHkpOXozCprDjWEdrOmpezDyhbHc25428329 = CPCHkpOXozCprDjWEdrOmpezDyhbHc32886273;     CPCHkpOXozCprDjWEdrOmpezDyhbHc32886273 = CPCHkpOXozCprDjWEdrOmpezDyhbHc55284617;     CPCHkpOXozCprDjWEdrOmpezDyhbHc55284617 = CPCHkpOXozCprDjWEdrOmpezDyhbHc98844195;     CPCHkpOXozCprDjWEdrOmpezDyhbHc98844195 = CPCHkpOXozCprDjWEdrOmpezDyhbHc23556971;     CPCHkpOXozCprDjWEdrOmpezDyhbHc23556971 = CPCHkpOXozCprDjWEdrOmpezDyhbHc39106236;     CPCHkpOXozCprDjWEdrOmpezDyhbHc39106236 = CPCHkpOXozCprDjWEdrOmpezDyhbHc18670187;     CPCHkpOXozCprDjWEdrOmpezDyhbHc18670187 = CPCHkpOXozCprDjWEdrOmpezDyhbHc91847881;     CPCHkpOXozCprDjWEdrOmpezDyhbHc91847881 = CPCHkpOXozCprDjWEdrOmpezDyhbHc96662445;     CPCHkpOXozCprDjWEdrOmpezDyhbHc96662445 = CPCHkpOXozCprDjWEdrOmpezDyhbHc16042510;     CPCHkpOXozCprDjWEdrOmpezDyhbHc16042510 = CPCHkpOXozCprDjWEdrOmpezDyhbHc34292448;     CPCHkpOXozCprDjWEdrOmpezDyhbHc34292448 = CPCHkpOXozCprDjWEdrOmpezDyhbHc10622073;     CPCHkpOXozCprDjWEdrOmpezDyhbHc10622073 = CPCHkpOXozCprDjWEdrOmpezDyhbHc24381745;     CPCHkpOXozCprDjWEdrOmpezDyhbHc24381745 = CPCHkpOXozCprDjWEdrOmpezDyhbHc70172350;     CPCHkpOXozCprDjWEdrOmpezDyhbHc70172350 = CPCHkpOXozCprDjWEdrOmpezDyhbHc29585929;     CPCHkpOXozCprDjWEdrOmpezDyhbHc29585929 = CPCHkpOXozCprDjWEdrOmpezDyhbHc47289969;     CPCHkpOXozCprDjWEdrOmpezDyhbHc47289969 = CPCHkpOXozCprDjWEdrOmpezDyhbHc10616525;     CPCHkpOXozCprDjWEdrOmpezDyhbHc10616525 = CPCHkpOXozCprDjWEdrOmpezDyhbHc6675829;     CPCHkpOXozCprDjWEdrOmpezDyhbHc6675829 = CPCHkpOXozCprDjWEdrOmpezDyhbHc3544349;     CPCHkpOXozCprDjWEdrOmpezDyhbHc3544349 = CPCHkpOXozCprDjWEdrOmpezDyhbHc29836460;     CPCHkpOXozCprDjWEdrOmpezDyhbHc29836460 = CPCHkpOXozCprDjWEdrOmpezDyhbHc80155903;     CPCHkpOXozCprDjWEdrOmpezDyhbHc80155903 = CPCHkpOXozCprDjWEdrOmpezDyhbHc56304196;     CPCHkpOXozCprDjWEdrOmpezDyhbHc56304196 = CPCHkpOXozCprDjWEdrOmpezDyhbHc15379874;     CPCHkpOXozCprDjWEdrOmpezDyhbHc15379874 = CPCHkpOXozCprDjWEdrOmpezDyhbHc45250580;     CPCHkpOXozCprDjWEdrOmpezDyhbHc45250580 = CPCHkpOXozCprDjWEdrOmpezDyhbHc75952528;     CPCHkpOXozCprDjWEdrOmpezDyhbHc75952528 = CPCHkpOXozCprDjWEdrOmpezDyhbHc58984127;     CPCHkpOXozCprDjWEdrOmpezDyhbHc58984127 = CPCHkpOXozCprDjWEdrOmpezDyhbHc14606043;     CPCHkpOXozCprDjWEdrOmpezDyhbHc14606043 = CPCHkpOXozCprDjWEdrOmpezDyhbHc54621618;     CPCHkpOXozCprDjWEdrOmpezDyhbHc54621618 = CPCHkpOXozCprDjWEdrOmpezDyhbHc9944774;     CPCHkpOXozCprDjWEdrOmpezDyhbHc9944774 = CPCHkpOXozCprDjWEdrOmpezDyhbHc30776052;     CPCHkpOXozCprDjWEdrOmpezDyhbHc30776052 = CPCHkpOXozCprDjWEdrOmpezDyhbHc90862128;     CPCHkpOXozCprDjWEdrOmpezDyhbHc90862128 = CPCHkpOXozCprDjWEdrOmpezDyhbHc65580028;     CPCHkpOXozCprDjWEdrOmpezDyhbHc65580028 = CPCHkpOXozCprDjWEdrOmpezDyhbHc9149036;     CPCHkpOXozCprDjWEdrOmpezDyhbHc9149036 = CPCHkpOXozCprDjWEdrOmpezDyhbHc63068049;     CPCHkpOXozCprDjWEdrOmpezDyhbHc63068049 = CPCHkpOXozCprDjWEdrOmpezDyhbHc81204278;     CPCHkpOXozCprDjWEdrOmpezDyhbHc81204278 = CPCHkpOXozCprDjWEdrOmpezDyhbHc41092940;     CPCHkpOXozCprDjWEdrOmpezDyhbHc41092940 = CPCHkpOXozCprDjWEdrOmpezDyhbHc90665836;     CPCHkpOXozCprDjWEdrOmpezDyhbHc90665836 = CPCHkpOXozCprDjWEdrOmpezDyhbHc34698984;     CPCHkpOXozCprDjWEdrOmpezDyhbHc34698984 = CPCHkpOXozCprDjWEdrOmpezDyhbHc38969762;     CPCHkpOXozCprDjWEdrOmpezDyhbHc38969762 = CPCHkpOXozCprDjWEdrOmpezDyhbHc27948053;     CPCHkpOXozCprDjWEdrOmpezDyhbHc27948053 = CPCHkpOXozCprDjWEdrOmpezDyhbHc25787947;     CPCHkpOXozCprDjWEdrOmpezDyhbHc25787947 = CPCHkpOXozCprDjWEdrOmpezDyhbHc89613693;     CPCHkpOXozCprDjWEdrOmpezDyhbHc89613693 = CPCHkpOXozCprDjWEdrOmpezDyhbHc81597660;     CPCHkpOXozCprDjWEdrOmpezDyhbHc81597660 = CPCHkpOXozCprDjWEdrOmpezDyhbHc9165222;     CPCHkpOXozCprDjWEdrOmpezDyhbHc9165222 = CPCHkpOXozCprDjWEdrOmpezDyhbHc11642312;     CPCHkpOXozCprDjWEdrOmpezDyhbHc11642312 = CPCHkpOXozCprDjWEdrOmpezDyhbHc62756218;     CPCHkpOXozCprDjWEdrOmpezDyhbHc62756218 = CPCHkpOXozCprDjWEdrOmpezDyhbHc33651157;     CPCHkpOXozCprDjWEdrOmpezDyhbHc33651157 = CPCHkpOXozCprDjWEdrOmpezDyhbHc80674055;     CPCHkpOXozCprDjWEdrOmpezDyhbHc80674055 = CPCHkpOXozCprDjWEdrOmpezDyhbHc87330057;     CPCHkpOXozCprDjWEdrOmpezDyhbHc87330057 = CPCHkpOXozCprDjWEdrOmpezDyhbHc8627297;     CPCHkpOXozCprDjWEdrOmpezDyhbHc8627297 = CPCHkpOXozCprDjWEdrOmpezDyhbHc9584098;     CPCHkpOXozCprDjWEdrOmpezDyhbHc9584098 = CPCHkpOXozCprDjWEdrOmpezDyhbHc49461860;     CPCHkpOXozCprDjWEdrOmpezDyhbHc49461860 = CPCHkpOXozCprDjWEdrOmpezDyhbHc10916420;     CPCHkpOXozCprDjWEdrOmpezDyhbHc10916420 = CPCHkpOXozCprDjWEdrOmpezDyhbHc97562266;     CPCHkpOXozCprDjWEdrOmpezDyhbHc97562266 = CPCHkpOXozCprDjWEdrOmpezDyhbHc3834865;     CPCHkpOXozCprDjWEdrOmpezDyhbHc3834865 = CPCHkpOXozCprDjWEdrOmpezDyhbHc69124132;     CPCHkpOXozCprDjWEdrOmpezDyhbHc69124132 = CPCHkpOXozCprDjWEdrOmpezDyhbHc17506399;     CPCHkpOXozCprDjWEdrOmpezDyhbHc17506399 = CPCHkpOXozCprDjWEdrOmpezDyhbHc10034037;     CPCHkpOXozCprDjWEdrOmpezDyhbHc10034037 = CPCHkpOXozCprDjWEdrOmpezDyhbHc22891667;     CPCHkpOXozCprDjWEdrOmpezDyhbHc22891667 = CPCHkpOXozCprDjWEdrOmpezDyhbHc64572844;     CPCHkpOXozCprDjWEdrOmpezDyhbHc64572844 = CPCHkpOXozCprDjWEdrOmpezDyhbHc24500193;     CPCHkpOXozCprDjWEdrOmpezDyhbHc24500193 = CPCHkpOXozCprDjWEdrOmpezDyhbHc64048568;     CPCHkpOXozCprDjWEdrOmpezDyhbHc64048568 = CPCHkpOXozCprDjWEdrOmpezDyhbHc81903108;     CPCHkpOXozCprDjWEdrOmpezDyhbHc81903108 = CPCHkpOXozCprDjWEdrOmpezDyhbHc65886394;     CPCHkpOXozCprDjWEdrOmpezDyhbHc65886394 = CPCHkpOXozCprDjWEdrOmpezDyhbHc25180382;     CPCHkpOXozCprDjWEdrOmpezDyhbHc25180382 = CPCHkpOXozCprDjWEdrOmpezDyhbHc68712420;     CPCHkpOXozCprDjWEdrOmpezDyhbHc68712420 = CPCHkpOXozCprDjWEdrOmpezDyhbHc1473038;     CPCHkpOXozCprDjWEdrOmpezDyhbHc1473038 = CPCHkpOXozCprDjWEdrOmpezDyhbHc61313696;     CPCHkpOXozCprDjWEdrOmpezDyhbHc61313696 = CPCHkpOXozCprDjWEdrOmpezDyhbHc88968072;     CPCHkpOXozCprDjWEdrOmpezDyhbHc88968072 = CPCHkpOXozCprDjWEdrOmpezDyhbHc88492988;     CPCHkpOXozCprDjWEdrOmpezDyhbHc88492988 = CPCHkpOXozCprDjWEdrOmpezDyhbHc56624132;     CPCHkpOXozCprDjWEdrOmpezDyhbHc56624132 = CPCHkpOXozCprDjWEdrOmpezDyhbHc75917541;     CPCHkpOXozCprDjWEdrOmpezDyhbHc75917541 = CPCHkpOXozCprDjWEdrOmpezDyhbHc67706067;     CPCHkpOXozCprDjWEdrOmpezDyhbHc67706067 = CPCHkpOXozCprDjWEdrOmpezDyhbHc75596296;     CPCHkpOXozCprDjWEdrOmpezDyhbHc75596296 = CPCHkpOXozCprDjWEdrOmpezDyhbHc50976675;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void IqbqMNiWLbqblxAfYOTgfezIy27709297() {     double RcXINOzDWciZiTfNhGlGUAWRRFIxPA2140758 = -778056696;    double RcXINOzDWciZiTfNhGlGUAWRRFIxPA78366419 = -557586367;    double RcXINOzDWciZiTfNhGlGUAWRRFIxPA47112359 = -840279793;    double RcXINOzDWciZiTfNhGlGUAWRRFIxPA13071482 = -766825441;    double RcXINOzDWciZiTfNhGlGUAWRRFIxPA94582928 = -92508940;    double RcXINOzDWciZiTfNhGlGUAWRRFIxPA75456592 = -864235401;    double RcXINOzDWciZiTfNhGlGUAWRRFIxPA53168238 = -490416213;    double RcXINOzDWciZiTfNhGlGUAWRRFIxPA45184752 = 7710784;    double RcXINOzDWciZiTfNhGlGUAWRRFIxPA66941929 = -965886992;    double RcXINOzDWciZiTfNhGlGUAWRRFIxPA97483011 = -191437674;    double RcXINOzDWciZiTfNhGlGUAWRRFIxPA16042002 = -247216348;    double RcXINOzDWciZiTfNhGlGUAWRRFIxPA29385122 = -67493225;    double RcXINOzDWciZiTfNhGlGUAWRRFIxPA66476044 = 51144485;    double RcXINOzDWciZiTfNhGlGUAWRRFIxPA15223761 = -66747175;    double RcXINOzDWciZiTfNhGlGUAWRRFIxPA82917615 = -88239738;    double RcXINOzDWciZiTfNhGlGUAWRRFIxPA35941393 = -972296997;    double RcXINOzDWciZiTfNhGlGUAWRRFIxPA28827283 = 63197794;    double RcXINOzDWciZiTfNhGlGUAWRRFIxPA23265244 = -442676544;    double RcXINOzDWciZiTfNhGlGUAWRRFIxPA94204118 = -854049499;    double RcXINOzDWciZiTfNhGlGUAWRRFIxPA11312683 = -742537101;    double RcXINOzDWciZiTfNhGlGUAWRRFIxPA37605220 = -495939471;    double RcXINOzDWciZiTfNhGlGUAWRRFIxPA1503102 = -570324579;    double RcXINOzDWciZiTfNhGlGUAWRRFIxPA543682 = -362325614;    double RcXINOzDWciZiTfNhGlGUAWRRFIxPA61538962 = -425794548;    double RcXINOzDWciZiTfNhGlGUAWRRFIxPA65647694 = -737852897;    double RcXINOzDWciZiTfNhGlGUAWRRFIxPA59543118 = -664878207;    double RcXINOzDWciZiTfNhGlGUAWRRFIxPA60425728 = -858310996;    double RcXINOzDWciZiTfNhGlGUAWRRFIxPA96087398 = -172579380;    double RcXINOzDWciZiTfNhGlGUAWRRFIxPA83717488 = -9892198;    double RcXINOzDWciZiTfNhGlGUAWRRFIxPA81579047 = -506042743;    double RcXINOzDWciZiTfNhGlGUAWRRFIxPA1062919 = -372352489;    double RcXINOzDWciZiTfNhGlGUAWRRFIxPA98209957 = -469081311;    double RcXINOzDWciZiTfNhGlGUAWRRFIxPA46496713 = -98272769;    double RcXINOzDWciZiTfNhGlGUAWRRFIxPA99304861 = -600450317;    double RcXINOzDWciZiTfNhGlGUAWRRFIxPA81830460 = -533534468;    double RcXINOzDWciZiTfNhGlGUAWRRFIxPA68454400 = -868735982;    double RcXINOzDWciZiTfNhGlGUAWRRFIxPA45524586 = 77916291;    double RcXINOzDWciZiTfNhGlGUAWRRFIxPA31685126 = -568483115;    double RcXINOzDWciZiTfNhGlGUAWRRFIxPA41542499 = -688674618;    double RcXINOzDWciZiTfNhGlGUAWRRFIxPA59612591 = -342723406;    double RcXINOzDWciZiTfNhGlGUAWRRFIxPA11744159 = -706425664;    double RcXINOzDWciZiTfNhGlGUAWRRFIxPA21006810 = -115618833;    double RcXINOzDWciZiTfNhGlGUAWRRFIxPA69300324 = -552015933;    double RcXINOzDWciZiTfNhGlGUAWRRFIxPA7494286 = -607353695;    double RcXINOzDWciZiTfNhGlGUAWRRFIxPA71524153 = -859662803;    double RcXINOzDWciZiTfNhGlGUAWRRFIxPA3065073 = -935558504;    double RcXINOzDWciZiTfNhGlGUAWRRFIxPA7390605 = -291681411;    double RcXINOzDWciZiTfNhGlGUAWRRFIxPA47913319 = 93621897;    double RcXINOzDWciZiTfNhGlGUAWRRFIxPA35660903 = -740230691;    double RcXINOzDWciZiTfNhGlGUAWRRFIxPA72915993 = -537304007;    double RcXINOzDWciZiTfNhGlGUAWRRFIxPA9484394 = -361901291;    double RcXINOzDWciZiTfNhGlGUAWRRFIxPA28048544 = -902388453;    double RcXINOzDWciZiTfNhGlGUAWRRFIxPA26201599 = -222638634;    double RcXINOzDWciZiTfNhGlGUAWRRFIxPA2669707 = -35646782;    double RcXINOzDWciZiTfNhGlGUAWRRFIxPA90104076 = -913447324;    double RcXINOzDWciZiTfNhGlGUAWRRFIxPA637656 = -107732118;    double RcXINOzDWciZiTfNhGlGUAWRRFIxPA77822738 = -95260753;    double RcXINOzDWciZiTfNhGlGUAWRRFIxPA85573397 = -314485246;    double RcXINOzDWciZiTfNhGlGUAWRRFIxPA47423788 = 71027456;    double RcXINOzDWciZiTfNhGlGUAWRRFIxPA35039810 = -427630733;    double RcXINOzDWciZiTfNhGlGUAWRRFIxPA15030864 = 94075594;    double RcXINOzDWciZiTfNhGlGUAWRRFIxPA57080840 = -217836833;    double RcXINOzDWciZiTfNhGlGUAWRRFIxPA61467263 = -982397019;    double RcXINOzDWciZiTfNhGlGUAWRRFIxPA85362881 = -359844250;    double RcXINOzDWciZiTfNhGlGUAWRRFIxPA96420093 = -819085186;    double RcXINOzDWciZiTfNhGlGUAWRRFIxPA17832044 = -778135037;    double RcXINOzDWciZiTfNhGlGUAWRRFIxPA82888409 = -969220456;    double RcXINOzDWciZiTfNhGlGUAWRRFIxPA67171183 = -348405199;    double RcXINOzDWciZiTfNhGlGUAWRRFIxPA33393300 = -533212708;    double RcXINOzDWciZiTfNhGlGUAWRRFIxPA14463216 = -219503756;    double RcXINOzDWciZiTfNhGlGUAWRRFIxPA90416806 = -950213289;    double RcXINOzDWciZiTfNhGlGUAWRRFIxPA97142157 = -368319091;    double RcXINOzDWciZiTfNhGlGUAWRRFIxPA81722744 = -754001927;    double RcXINOzDWciZiTfNhGlGUAWRRFIxPA34591527 = -411326094;    double RcXINOzDWciZiTfNhGlGUAWRRFIxPA99568523 = 63888562;    double RcXINOzDWciZiTfNhGlGUAWRRFIxPA16598411 = -280320639;    double RcXINOzDWciZiTfNhGlGUAWRRFIxPA32202778 = 81691353;    double RcXINOzDWciZiTfNhGlGUAWRRFIxPA93049395 = -754971920;    double RcXINOzDWciZiTfNhGlGUAWRRFIxPA90014808 = -566131745;    double RcXINOzDWciZiTfNhGlGUAWRRFIxPA62582621 = -802294394;    double RcXINOzDWciZiTfNhGlGUAWRRFIxPA52152514 = -273196797;    double RcXINOzDWciZiTfNhGlGUAWRRFIxPA12512409 = -851932893;    double RcXINOzDWciZiTfNhGlGUAWRRFIxPA60426495 = -432348690;    double RcXINOzDWciZiTfNhGlGUAWRRFIxPA10801495 = -472588191;    double RcXINOzDWciZiTfNhGlGUAWRRFIxPA72094654 = -44141452;    double RcXINOzDWciZiTfNhGlGUAWRRFIxPA73014375 = -469964036;    double RcXINOzDWciZiTfNhGlGUAWRRFIxPA72008359 = -146442678;    double RcXINOzDWciZiTfNhGlGUAWRRFIxPA43827007 = 37374012;    double RcXINOzDWciZiTfNhGlGUAWRRFIxPA9200785 = -687002994;    double RcXINOzDWciZiTfNhGlGUAWRRFIxPA81192804 = -325802351;    double RcXINOzDWciZiTfNhGlGUAWRRFIxPA90631661 = -673475230;    double RcXINOzDWciZiTfNhGlGUAWRRFIxPA59951189 = -607598464;    double RcXINOzDWciZiTfNhGlGUAWRRFIxPA84261338 = -539510572;    double RcXINOzDWciZiTfNhGlGUAWRRFIxPA6502689 = -161043885;    double RcXINOzDWciZiTfNhGlGUAWRRFIxPA44581727 = -336799000;    double RcXINOzDWciZiTfNhGlGUAWRRFIxPA54663318 = -388588831;    double RcXINOzDWciZiTfNhGlGUAWRRFIxPA59539546 = -133221814;    double RcXINOzDWciZiTfNhGlGUAWRRFIxPA83937442 = -92171684;    double RcXINOzDWciZiTfNhGlGUAWRRFIxPA11074193 = -788268509;    double RcXINOzDWciZiTfNhGlGUAWRRFIxPA53692110 = -778056696;     RcXINOzDWciZiTfNhGlGUAWRRFIxPA2140758 = RcXINOzDWciZiTfNhGlGUAWRRFIxPA78366419;     RcXINOzDWciZiTfNhGlGUAWRRFIxPA78366419 = RcXINOzDWciZiTfNhGlGUAWRRFIxPA47112359;     RcXINOzDWciZiTfNhGlGUAWRRFIxPA47112359 = RcXINOzDWciZiTfNhGlGUAWRRFIxPA13071482;     RcXINOzDWciZiTfNhGlGUAWRRFIxPA13071482 = RcXINOzDWciZiTfNhGlGUAWRRFIxPA94582928;     RcXINOzDWciZiTfNhGlGUAWRRFIxPA94582928 = RcXINOzDWciZiTfNhGlGUAWRRFIxPA75456592;     RcXINOzDWciZiTfNhGlGUAWRRFIxPA75456592 = RcXINOzDWciZiTfNhGlGUAWRRFIxPA53168238;     RcXINOzDWciZiTfNhGlGUAWRRFIxPA53168238 = RcXINOzDWciZiTfNhGlGUAWRRFIxPA45184752;     RcXINOzDWciZiTfNhGlGUAWRRFIxPA45184752 = RcXINOzDWciZiTfNhGlGUAWRRFIxPA66941929;     RcXINOzDWciZiTfNhGlGUAWRRFIxPA66941929 = RcXINOzDWciZiTfNhGlGUAWRRFIxPA97483011;     RcXINOzDWciZiTfNhGlGUAWRRFIxPA97483011 = RcXINOzDWciZiTfNhGlGUAWRRFIxPA16042002;     RcXINOzDWciZiTfNhGlGUAWRRFIxPA16042002 = RcXINOzDWciZiTfNhGlGUAWRRFIxPA29385122;     RcXINOzDWciZiTfNhGlGUAWRRFIxPA29385122 = RcXINOzDWciZiTfNhGlGUAWRRFIxPA66476044;     RcXINOzDWciZiTfNhGlGUAWRRFIxPA66476044 = RcXINOzDWciZiTfNhGlGUAWRRFIxPA15223761;     RcXINOzDWciZiTfNhGlGUAWRRFIxPA15223761 = RcXINOzDWciZiTfNhGlGUAWRRFIxPA82917615;     RcXINOzDWciZiTfNhGlGUAWRRFIxPA82917615 = RcXINOzDWciZiTfNhGlGUAWRRFIxPA35941393;     RcXINOzDWciZiTfNhGlGUAWRRFIxPA35941393 = RcXINOzDWciZiTfNhGlGUAWRRFIxPA28827283;     RcXINOzDWciZiTfNhGlGUAWRRFIxPA28827283 = RcXINOzDWciZiTfNhGlGUAWRRFIxPA23265244;     RcXINOzDWciZiTfNhGlGUAWRRFIxPA23265244 = RcXINOzDWciZiTfNhGlGUAWRRFIxPA94204118;     RcXINOzDWciZiTfNhGlGUAWRRFIxPA94204118 = RcXINOzDWciZiTfNhGlGUAWRRFIxPA11312683;     RcXINOzDWciZiTfNhGlGUAWRRFIxPA11312683 = RcXINOzDWciZiTfNhGlGUAWRRFIxPA37605220;     RcXINOzDWciZiTfNhGlGUAWRRFIxPA37605220 = RcXINOzDWciZiTfNhGlGUAWRRFIxPA1503102;     RcXINOzDWciZiTfNhGlGUAWRRFIxPA1503102 = RcXINOzDWciZiTfNhGlGUAWRRFIxPA543682;     RcXINOzDWciZiTfNhGlGUAWRRFIxPA543682 = RcXINOzDWciZiTfNhGlGUAWRRFIxPA61538962;     RcXINOzDWciZiTfNhGlGUAWRRFIxPA61538962 = RcXINOzDWciZiTfNhGlGUAWRRFIxPA65647694;     RcXINOzDWciZiTfNhGlGUAWRRFIxPA65647694 = RcXINOzDWciZiTfNhGlGUAWRRFIxPA59543118;     RcXINOzDWciZiTfNhGlGUAWRRFIxPA59543118 = RcXINOzDWciZiTfNhGlGUAWRRFIxPA60425728;     RcXINOzDWciZiTfNhGlGUAWRRFIxPA60425728 = RcXINOzDWciZiTfNhGlGUAWRRFIxPA96087398;     RcXINOzDWciZiTfNhGlGUAWRRFIxPA96087398 = RcXINOzDWciZiTfNhGlGUAWRRFIxPA83717488;     RcXINOzDWciZiTfNhGlGUAWRRFIxPA83717488 = RcXINOzDWciZiTfNhGlGUAWRRFIxPA81579047;     RcXINOzDWciZiTfNhGlGUAWRRFIxPA81579047 = RcXINOzDWciZiTfNhGlGUAWRRFIxPA1062919;     RcXINOzDWciZiTfNhGlGUAWRRFIxPA1062919 = RcXINOzDWciZiTfNhGlGUAWRRFIxPA98209957;     RcXINOzDWciZiTfNhGlGUAWRRFIxPA98209957 = RcXINOzDWciZiTfNhGlGUAWRRFIxPA46496713;     RcXINOzDWciZiTfNhGlGUAWRRFIxPA46496713 = RcXINOzDWciZiTfNhGlGUAWRRFIxPA99304861;     RcXINOzDWciZiTfNhGlGUAWRRFIxPA99304861 = RcXINOzDWciZiTfNhGlGUAWRRFIxPA81830460;     RcXINOzDWciZiTfNhGlGUAWRRFIxPA81830460 = RcXINOzDWciZiTfNhGlGUAWRRFIxPA68454400;     RcXINOzDWciZiTfNhGlGUAWRRFIxPA68454400 = RcXINOzDWciZiTfNhGlGUAWRRFIxPA45524586;     RcXINOzDWciZiTfNhGlGUAWRRFIxPA45524586 = RcXINOzDWciZiTfNhGlGUAWRRFIxPA31685126;     RcXINOzDWciZiTfNhGlGUAWRRFIxPA31685126 = RcXINOzDWciZiTfNhGlGUAWRRFIxPA41542499;     RcXINOzDWciZiTfNhGlGUAWRRFIxPA41542499 = RcXINOzDWciZiTfNhGlGUAWRRFIxPA59612591;     RcXINOzDWciZiTfNhGlGUAWRRFIxPA59612591 = RcXINOzDWciZiTfNhGlGUAWRRFIxPA11744159;     RcXINOzDWciZiTfNhGlGUAWRRFIxPA11744159 = RcXINOzDWciZiTfNhGlGUAWRRFIxPA21006810;     RcXINOzDWciZiTfNhGlGUAWRRFIxPA21006810 = RcXINOzDWciZiTfNhGlGUAWRRFIxPA69300324;     RcXINOzDWciZiTfNhGlGUAWRRFIxPA69300324 = RcXINOzDWciZiTfNhGlGUAWRRFIxPA7494286;     RcXINOzDWciZiTfNhGlGUAWRRFIxPA7494286 = RcXINOzDWciZiTfNhGlGUAWRRFIxPA71524153;     RcXINOzDWciZiTfNhGlGUAWRRFIxPA71524153 = RcXINOzDWciZiTfNhGlGUAWRRFIxPA3065073;     RcXINOzDWciZiTfNhGlGUAWRRFIxPA3065073 = RcXINOzDWciZiTfNhGlGUAWRRFIxPA7390605;     RcXINOzDWciZiTfNhGlGUAWRRFIxPA7390605 = RcXINOzDWciZiTfNhGlGUAWRRFIxPA47913319;     RcXINOzDWciZiTfNhGlGUAWRRFIxPA47913319 = RcXINOzDWciZiTfNhGlGUAWRRFIxPA35660903;     RcXINOzDWciZiTfNhGlGUAWRRFIxPA35660903 = RcXINOzDWciZiTfNhGlGUAWRRFIxPA72915993;     RcXINOzDWciZiTfNhGlGUAWRRFIxPA72915993 = RcXINOzDWciZiTfNhGlGUAWRRFIxPA9484394;     RcXINOzDWciZiTfNhGlGUAWRRFIxPA9484394 = RcXINOzDWciZiTfNhGlGUAWRRFIxPA28048544;     RcXINOzDWciZiTfNhGlGUAWRRFIxPA28048544 = RcXINOzDWciZiTfNhGlGUAWRRFIxPA26201599;     RcXINOzDWciZiTfNhGlGUAWRRFIxPA26201599 = RcXINOzDWciZiTfNhGlGUAWRRFIxPA2669707;     RcXINOzDWciZiTfNhGlGUAWRRFIxPA2669707 = RcXINOzDWciZiTfNhGlGUAWRRFIxPA90104076;     RcXINOzDWciZiTfNhGlGUAWRRFIxPA90104076 = RcXINOzDWciZiTfNhGlGUAWRRFIxPA637656;     RcXINOzDWciZiTfNhGlGUAWRRFIxPA637656 = RcXINOzDWciZiTfNhGlGUAWRRFIxPA77822738;     RcXINOzDWciZiTfNhGlGUAWRRFIxPA77822738 = RcXINOzDWciZiTfNhGlGUAWRRFIxPA85573397;     RcXINOzDWciZiTfNhGlGUAWRRFIxPA85573397 = RcXINOzDWciZiTfNhGlGUAWRRFIxPA47423788;     RcXINOzDWciZiTfNhGlGUAWRRFIxPA47423788 = RcXINOzDWciZiTfNhGlGUAWRRFIxPA35039810;     RcXINOzDWciZiTfNhGlGUAWRRFIxPA35039810 = RcXINOzDWciZiTfNhGlGUAWRRFIxPA15030864;     RcXINOzDWciZiTfNhGlGUAWRRFIxPA15030864 = RcXINOzDWciZiTfNhGlGUAWRRFIxPA57080840;     RcXINOzDWciZiTfNhGlGUAWRRFIxPA57080840 = RcXINOzDWciZiTfNhGlGUAWRRFIxPA61467263;     RcXINOzDWciZiTfNhGlGUAWRRFIxPA61467263 = RcXINOzDWciZiTfNhGlGUAWRRFIxPA85362881;     RcXINOzDWciZiTfNhGlGUAWRRFIxPA85362881 = RcXINOzDWciZiTfNhGlGUAWRRFIxPA96420093;     RcXINOzDWciZiTfNhGlGUAWRRFIxPA96420093 = RcXINOzDWciZiTfNhGlGUAWRRFIxPA17832044;     RcXINOzDWciZiTfNhGlGUAWRRFIxPA17832044 = RcXINOzDWciZiTfNhGlGUAWRRFIxPA82888409;     RcXINOzDWciZiTfNhGlGUAWRRFIxPA82888409 = RcXINOzDWciZiTfNhGlGUAWRRFIxPA67171183;     RcXINOzDWciZiTfNhGlGUAWRRFIxPA67171183 = RcXINOzDWciZiTfNhGlGUAWRRFIxPA33393300;     RcXINOzDWciZiTfNhGlGUAWRRFIxPA33393300 = RcXINOzDWciZiTfNhGlGUAWRRFIxPA14463216;     RcXINOzDWciZiTfNhGlGUAWRRFIxPA14463216 = RcXINOzDWciZiTfNhGlGUAWRRFIxPA90416806;     RcXINOzDWciZiTfNhGlGUAWRRFIxPA90416806 = RcXINOzDWciZiTfNhGlGUAWRRFIxPA97142157;     RcXINOzDWciZiTfNhGlGUAWRRFIxPA97142157 = RcXINOzDWciZiTfNhGlGUAWRRFIxPA81722744;     RcXINOzDWciZiTfNhGlGUAWRRFIxPA81722744 = RcXINOzDWciZiTfNhGlGUAWRRFIxPA34591527;     RcXINOzDWciZiTfNhGlGUAWRRFIxPA34591527 = RcXINOzDWciZiTfNhGlGUAWRRFIxPA99568523;     RcXINOzDWciZiTfNhGlGUAWRRFIxPA99568523 = RcXINOzDWciZiTfNhGlGUAWRRFIxPA16598411;     RcXINOzDWciZiTfNhGlGUAWRRFIxPA16598411 = RcXINOzDWciZiTfNhGlGUAWRRFIxPA32202778;     RcXINOzDWciZiTfNhGlGUAWRRFIxPA32202778 = RcXINOzDWciZiTfNhGlGUAWRRFIxPA93049395;     RcXINOzDWciZiTfNhGlGUAWRRFIxPA93049395 = RcXINOzDWciZiTfNhGlGUAWRRFIxPA90014808;     RcXINOzDWciZiTfNhGlGUAWRRFIxPA90014808 = RcXINOzDWciZiTfNhGlGUAWRRFIxPA62582621;     RcXINOzDWciZiTfNhGlGUAWRRFIxPA62582621 = RcXINOzDWciZiTfNhGlGUAWRRFIxPA52152514;     RcXINOzDWciZiTfNhGlGUAWRRFIxPA52152514 = RcXINOzDWciZiTfNhGlGUAWRRFIxPA12512409;     RcXINOzDWciZiTfNhGlGUAWRRFIxPA12512409 = RcXINOzDWciZiTfNhGlGUAWRRFIxPA60426495;     RcXINOzDWciZiTfNhGlGUAWRRFIxPA60426495 = RcXINOzDWciZiTfNhGlGUAWRRFIxPA10801495;     RcXINOzDWciZiTfNhGlGUAWRRFIxPA10801495 = RcXINOzDWciZiTfNhGlGUAWRRFIxPA72094654;     RcXINOzDWciZiTfNhGlGUAWRRFIxPA72094654 = RcXINOzDWciZiTfNhGlGUAWRRFIxPA73014375;     RcXINOzDWciZiTfNhGlGUAWRRFIxPA73014375 = RcXINOzDWciZiTfNhGlGUAWRRFIxPA72008359;     RcXINOzDWciZiTfNhGlGUAWRRFIxPA72008359 = RcXINOzDWciZiTfNhGlGUAWRRFIxPA43827007;     RcXINOzDWciZiTfNhGlGUAWRRFIxPA43827007 = RcXINOzDWciZiTfNhGlGUAWRRFIxPA9200785;     RcXINOzDWciZiTfNhGlGUAWRRFIxPA9200785 = RcXINOzDWciZiTfNhGlGUAWRRFIxPA81192804;     RcXINOzDWciZiTfNhGlGUAWRRFIxPA81192804 = RcXINOzDWciZiTfNhGlGUAWRRFIxPA90631661;     RcXINOzDWciZiTfNhGlGUAWRRFIxPA90631661 = RcXINOzDWciZiTfNhGlGUAWRRFIxPA59951189;     RcXINOzDWciZiTfNhGlGUAWRRFIxPA59951189 = RcXINOzDWciZiTfNhGlGUAWRRFIxPA84261338;     RcXINOzDWciZiTfNhGlGUAWRRFIxPA84261338 = RcXINOzDWciZiTfNhGlGUAWRRFIxPA6502689;     RcXINOzDWciZiTfNhGlGUAWRRFIxPA6502689 = RcXINOzDWciZiTfNhGlGUAWRRFIxPA44581727;     RcXINOzDWciZiTfNhGlGUAWRRFIxPA44581727 = RcXINOzDWciZiTfNhGlGUAWRRFIxPA54663318;     RcXINOzDWciZiTfNhGlGUAWRRFIxPA54663318 = RcXINOzDWciZiTfNhGlGUAWRRFIxPA59539546;     RcXINOzDWciZiTfNhGlGUAWRRFIxPA59539546 = RcXINOzDWciZiTfNhGlGUAWRRFIxPA83937442;     RcXINOzDWciZiTfNhGlGUAWRRFIxPA83937442 = RcXINOzDWciZiTfNhGlGUAWRRFIxPA11074193;     RcXINOzDWciZiTfNhGlGUAWRRFIxPA11074193 = RcXINOzDWciZiTfNhGlGUAWRRFIxPA53692110;     RcXINOzDWciZiTfNhGlGUAWRRFIxPA53692110 = RcXINOzDWciZiTfNhGlGUAWRRFIxPA2140758;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void crBzzfRUXnwIinPCVuwkAnLDF37314023() {     double ZHaPFknPSXpUvkJwCWorjOaQmIOjHO23962979 = -246272028;    double ZHaPFknPSXpUvkJwCWorjOaQmIOjHO39834224 = -940185220;    double ZHaPFknPSXpUvkJwCWorjOaQmIOjHO92839629 = -887497325;    double ZHaPFknPSXpUvkJwCWorjOaQmIOjHO44446628 = -971609617;    double ZHaPFknPSXpUvkJwCWorjOaQmIOjHO54717260 = 30240138;    double ZHaPFknPSXpUvkJwCWorjOaQmIOjHO99474907 = -875778559;    double ZHaPFknPSXpUvkJwCWorjOaQmIOjHO82188822 = -553734337;    double ZHaPFknPSXpUvkJwCWorjOaQmIOjHO32047381 = -470064;    double ZHaPFknPSXpUvkJwCWorjOaQmIOjHO63465568 = -951682410;    double ZHaPFknPSXpUvkJwCWorjOaQmIOjHO58766237 = -61656072;    double ZHaPFknPSXpUvkJwCWorjOaQmIOjHO86958270 = -902974050;    double ZHaPFknPSXpUvkJwCWorjOaQmIOjHO45567005 = -170674831;    double ZHaPFknPSXpUvkJwCWorjOaQmIOjHO99464987 = -486889304;    double ZHaPFknPSXpUvkJwCWorjOaQmIOjHO82190227 = -916823972;    double ZHaPFknPSXpUvkJwCWorjOaQmIOjHO78175411 = -15081657;    double ZHaPFknPSXpUvkJwCWorjOaQmIOjHO83912118 = -314663538;    double ZHaPFknPSXpUvkJwCWorjOaQmIOjHO22276343 = -322626924;    double ZHaPFknPSXpUvkJwCWorjOaQmIOjHO85790546 = -364397462;    double ZHaPFknPSXpUvkJwCWorjOaQmIOjHO98841341 = -927185156;    double ZHaPFknPSXpUvkJwCWorjOaQmIOjHO92422324 = -133782157;    double ZHaPFknPSXpUvkJwCWorjOaQmIOjHO94759505 = -228018174;    double ZHaPFknPSXpUvkJwCWorjOaQmIOjHO65905080 = -641075744;    double ZHaPFknPSXpUvkJwCWorjOaQmIOjHO10015086 = 81647031;    double ZHaPFknPSXpUvkJwCWorjOaQmIOjHO98816583 = -835893413;    double ZHaPFknPSXpUvkJwCWorjOaQmIOjHO39578362 = -648749870;    double ZHaPFknPSXpUvkJwCWorjOaQmIOjHO49118972 = -992063735;    double ZHaPFknPSXpUvkJwCWorjOaQmIOjHO33462332 = -385115040;    double ZHaPFknPSXpUvkJwCWorjOaQmIOjHO31667224 = -37027613;    double ZHaPFknPSXpUvkJwCWorjOaQmIOjHO31614401 = -776838116;    double ZHaPFknPSXpUvkJwCWorjOaQmIOjHO27396125 = -882256937;    double ZHaPFknPSXpUvkJwCWorjOaQmIOjHO52228184 = -778080236;    double ZHaPFknPSXpUvkJwCWorjOaQmIOjHO17101284 = -244970142;    double ZHaPFknPSXpUvkJwCWorjOaQmIOjHO71816178 = -940876652;    double ZHaPFknPSXpUvkJwCWorjOaQmIOjHO71843978 = -276269944;    double ZHaPFknPSXpUvkJwCWorjOaQmIOjHO62664673 = -683353070;    double ZHaPFknPSXpUvkJwCWorjOaQmIOjHO38031360 = -883151962;    double ZHaPFknPSXpUvkJwCWorjOaQmIOjHO88606843 = 28299195;    double ZHaPFknPSXpUvkJwCWorjOaQmIOjHO35622988 = -50025873;    double ZHaPFknPSXpUvkJwCWorjOaQmIOjHO1922945 = -461079898;    double ZHaPFknPSXpUvkJwCWorjOaQmIOjHO72283236 = -800272407;    double ZHaPFknPSXpUvkJwCWorjOaQmIOjHO66120004 = -40564922;    double ZHaPFknPSXpUvkJwCWorjOaQmIOjHO37508981 = -903084910;    double ZHaPFknPSXpUvkJwCWorjOaQmIOjHO16667723 = -595982748;    double ZHaPFknPSXpUvkJwCWorjOaQmIOjHO55589144 = -516159864;    double ZHaPFknPSXpUvkJwCWorjOaQmIOjHO51439964 = 53648568;    double ZHaPFknPSXpUvkJwCWorjOaQmIOjHO42271552 = -638990734;    double ZHaPFknPSXpUvkJwCWorjOaQmIOjHO33058716 = -472688931;    double ZHaPFknPSXpUvkJwCWorjOaQmIOjHO29753071 = -744874092;    double ZHaPFknPSXpUvkJwCWorjOaQmIOjHO42724996 = -925347114;    double ZHaPFknPSXpUvkJwCWorjOaQmIOjHO88963470 = -516359192;    double ZHaPFknPSXpUvkJwCWorjOaQmIOjHO97946212 = -405790617;    double ZHaPFknPSXpUvkJwCWorjOaQmIOjHO24437208 = -127766534;    double ZHaPFknPSXpUvkJwCWorjOaQmIOjHO17424463 = -186233773;    double ZHaPFknPSXpUvkJwCWorjOaQmIOjHO30694829 = -226655841;    double ZHaPFknPSXpUvkJwCWorjOaQmIOjHO42554518 = -874569073;    double ZHaPFknPSXpUvkJwCWorjOaQmIOjHO58057898 = -605196285;    double ZHaPFknPSXpUvkJwCWorjOaQmIOjHO29819138 = -921832251;    double ZHaPFknPSXpUvkJwCWorjOaQmIOjHO94023046 = 48396088;    double ZHaPFknPSXpUvkJwCWorjOaQmIOjHO4868267 = -222859747;    double ZHaPFknPSXpUvkJwCWorjOaQmIOjHO5598288 = 22303873;    double ZHaPFknPSXpUvkJwCWorjOaQmIOjHO66012576 = -390663519;    double ZHaPFknPSXpUvkJwCWorjOaQmIOjHO50521599 = -416706724;    double ZHaPFknPSXpUvkJwCWorjOaQmIOjHO432980 = -223631949;    double ZHaPFknPSXpUvkJwCWorjOaQmIOjHO36069444 = 30574527;    double ZHaPFknPSXpUvkJwCWorjOaQmIOjHO6538054 = -283575836;    double ZHaPFknPSXpUvkJwCWorjOaQmIOjHO69856986 = -558003909;    double ZHaPFknPSXpUvkJwCWorjOaQmIOjHO73750827 = -229798180;    double ZHaPFknPSXpUvkJwCWorjOaQmIOjHO27621009 = -110619361;    double ZHaPFknPSXpUvkJwCWorjOaQmIOjHO19525555 = -133470903;    double ZHaPFknPSXpUvkJwCWorjOaQmIOjHO40144052 = -131929695;    double ZHaPFknPSXpUvkJwCWorjOaQmIOjHO95305275 = -242962733;    double ZHaPFknPSXpUvkJwCWorjOaQmIOjHO86653354 = -172601052;    double ZHaPFknPSXpUvkJwCWorjOaQmIOjHO83867601 = -903317564;    double ZHaPFknPSXpUvkJwCWorjOaQmIOjHO26558105 = -26912750;    double ZHaPFknPSXpUvkJwCWorjOaQmIOjHO26302321 = 6782764;    double ZHaPFknPSXpUvkJwCWorjOaQmIOjHO57250524 = -324933264;    double ZHaPFknPSXpUvkJwCWorjOaQmIOjHO49237357 = 54907003;    double ZHaPFknPSXpUvkJwCWorjOaQmIOjHO54425941 = -402193106;    double ZHaPFknPSXpUvkJwCWorjOaQmIOjHO47376619 = -789541981;    double ZHaPFknPSXpUvkJwCWorjOaQmIOjHO97306809 = 90240864;    double ZHaPFknPSXpUvkJwCWorjOaQmIOjHO16060257 = -419374805;    double ZHaPFknPSXpUvkJwCWorjOaQmIOjHO3709261 = -640240949;    double ZHaPFknPSXpUvkJwCWorjOaQmIOjHO88942228 = -111680500;    double ZHaPFknPSXpUvkJwCWorjOaQmIOjHO42650931 = -160478924;    double ZHaPFknPSXpUvkJwCWorjOaQmIOjHO29449912 = -376466321;    double ZHaPFknPSXpUvkJwCWorjOaQmIOjHO27790977 = -550313703;    double ZHaPFknPSXpUvkJwCWorjOaQmIOjHO99676820 = 41263631;    double ZHaPFknPSXpUvkJwCWorjOaQmIOjHO41121349 = -614220811;    double ZHaPFknPSXpUvkJwCWorjOaQmIOjHO29289461 = -401700872;    double ZHaPFknPSXpUvkJwCWorjOaQmIOjHO4606775 = 21843214;    double ZHaPFknPSXpUvkJwCWorjOaQmIOjHO8212222 = -961319712;    double ZHaPFknPSXpUvkJwCWorjOaQmIOjHO94583796 = 79903106;    double ZHaPFknPSXpUvkJwCWorjOaQmIOjHO30754722 = -827166126;    double ZHaPFknPSXpUvkJwCWorjOaQmIOjHO96324657 = -383383772;    double ZHaPFknPSXpUvkJwCWorjOaQmIOjHO6270661 = -309608888;    double ZHaPFknPSXpUvkJwCWorjOaQmIOjHO15598406 = -623858198;    double ZHaPFknPSXpUvkJwCWorjOaQmIOjHO37076001 = -579452961;    double ZHaPFknPSXpUvkJwCWorjOaQmIOjHO80598279 = -526557275;    double ZHaPFknPSXpUvkJwCWorjOaQmIOjHO49051091 = -132584029;    double ZHaPFknPSXpUvkJwCWorjOaQmIOjHO81582977 = -246272028;     ZHaPFknPSXpUvkJwCWorjOaQmIOjHO23962979 = ZHaPFknPSXpUvkJwCWorjOaQmIOjHO39834224;     ZHaPFknPSXpUvkJwCWorjOaQmIOjHO39834224 = ZHaPFknPSXpUvkJwCWorjOaQmIOjHO92839629;     ZHaPFknPSXpUvkJwCWorjOaQmIOjHO92839629 = ZHaPFknPSXpUvkJwCWorjOaQmIOjHO44446628;     ZHaPFknPSXpUvkJwCWorjOaQmIOjHO44446628 = ZHaPFknPSXpUvkJwCWorjOaQmIOjHO54717260;     ZHaPFknPSXpUvkJwCWorjOaQmIOjHO54717260 = ZHaPFknPSXpUvkJwCWorjOaQmIOjHO99474907;     ZHaPFknPSXpUvkJwCWorjOaQmIOjHO99474907 = ZHaPFknPSXpUvkJwCWorjOaQmIOjHO82188822;     ZHaPFknPSXpUvkJwCWorjOaQmIOjHO82188822 = ZHaPFknPSXpUvkJwCWorjOaQmIOjHO32047381;     ZHaPFknPSXpUvkJwCWorjOaQmIOjHO32047381 = ZHaPFknPSXpUvkJwCWorjOaQmIOjHO63465568;     ZHaPFknPSXpUvkJwCWorjOaQmIOjHO63465568 = ZHaPFknPSXpUvkJwCWorjOaQmIOjHO58766237;     ZHaPFknPSXpUvkJwCWorjOaQmIOjHO58766237 = ZHaPFknPSXpUvkJwCWorjOaQmIOjHO86958270;     ZHaPFknPSXpUvkJwCWorjOaQmIOjHO86958270 = ZHaPFknPSXpUvkJwCWorjOaQmIOjHO45567005;     ZHaPFknPSXpUvkJwCWorjOaQmIOjHO45567005 = ZHaPFknPSXpUvkJwCWorjOaQmIOjHO99464987;     ZHaPFknPSXpUvkJwCWorjOaQmIOjHO99464987 = ZHaPFknPSXpUvkJwCWorjOaQmIOjHO82190227;     ZHaPFknPSXpUvkJwCWorjOaQmIOjHO82190227 = ZHaPFknPSXpUvkJwCWorjOaQmIOjHO78175411;     ZHaPFknPSXpUvkJwCWorjOaQmIOjHO78175411 = ZHaPFknPSXpUvkJwCWorjOaQmIOjHO83912118;     ZHaPFknPSXpUvkJwCWorjOaQmIOjHO83912118 = ZHaPFknPSXpUvkJwCWorjOaQmIOjHO22276343;     ZHaPFknPSXpUvkJwCWorjOaQmIOjHO22276343 = ZHaPFknPSXpUvkJwCWorjOaQmIOjHO85790546;     ZHaPFknPSXpUvkJwCWorjOaQmIOjHO85790546 = ZHaPFknPSXpUvkJwCWorjOaQmIOjHO98841341;     ZHaPFknPSXpUvkJwCWorjOaQmIOjHO98841341 = ZHaPFknPSXpUvkJwCWorjOaQmIOjHO92422324;     ZHaPFknPSXpUvkJwCWorjOaQmIOjHO92422324 = ZHaPFknPSXpUvkJwCWorjOaQmIOjHO94759505;     ZHaPFknPSXpUvkJwCWorjOaQmIOjHO94759505 = ZHaPFknPSXpUvkJwCWorjOaQmIOjHO65905080;     ZHaPFknPSXpUvkJwCWorjOaQmIOjHO65905080 = ZHaPFknPSXpUvkJwCWorjOaQmIOjHO10015086;     ZHaPFknPSXpUvkJwCWorjOaQmIOjHO10015086 = ZHaPFknPSXpUvkJwCWorjOaQmIOjHO98816583;     ZHaPFknPSXpUvkJwCWorjOaQmIOjHO98816583 = ZHaPFknPSXpUvkJwCWorjOaQmIOjHO39578362;     ZHaPFknPSXpUvkJwCWorjOaQmIOjHO39578362 = ZHaPFknPSXpUvkJwCWorjOaQmIOjHO49118972;     ZHaPFknPSXpUvkJwCWorjOaQmIOjHO49118972 = ZHaPFknPSXpUvkJwCWorjOaQmIOjHO33462332;     ZHaPFknPSXpUvkJwCWorjOaQmIOjHO33462332 = ZHaPFknPSXpUvkJwCWorjOaQmIOjHO31667224;     ZHaPFknPSXpUvkJwCWorjOaQmIOjHO31667224 = ZHaPFknPSXpUvkJwCWorjOaQmIOjHO31614401;     ZHaPFknPSXpUvkJwCWorjOaQmIOjHO31614401 = ZHaPFknPSXpUvkJwCWorjOaQmIOjHO27396125;     ZHaPFknPSXpUvkJwCWorjOaQmIOjHO27396125 = ZHaPFknPSXpUvkJwCWorjOaQmIOjHO52228184;     ZHaPFknPSXpUvkJwCWorjOaQmIOjHO52228184 = ZHaPFknPSXpUvkJwCWorjOaQmIOjHO17101284;     ZHaPFknPSXpUvkJwCWorjOaQmIOjHO17101284 = ZHaPFknPSXpUvkJwCWorjOaQmIOjHO71816178;     ZHaPFknPSXpUvkJwCWorjOaQmIOjHO71816178 = ZHaPFknPSXpUvkJwCWorjOaQmIOjHO71843978;     ZHaPFknPSXpUvkJwCWorjOaQmIOjHO71843978 = ZHaPFknPSXpUvkJwCWorjOaQmIOjHO62664673;     ZHaPFknPSXpUvkJwCWorjOaQmIOjHO62664673 = ZHaPFknPSXpUvkJwCWorjOaQmIOjHO38031360;     ZHaPFknPSXpUvkJwCWorjOaQmIOjHO38031360 = ZHaPFknPSXpUvkJwCWorjOaQmIOjHO88606843;     ZHaPFknPSXpUvkJwCWorjOaQmIOjHO88606843 = ZHaPFknPSXpUvkJwCWorjOaQmIOjHO35622988;     ZHaPFknPSXpUvkJwCWorjOaQmIOjHO35622988 = ZHaPFknPSXpUvkJwCWorjOaQmIOjHO1922945;     ZHaPFknPSXpUvkJwCWorjOaQmIOjHO1922945 = ZHaPFknPSXpUvkJwCWorjOaQmIOjHO72283236;     ZHaPFknPSXpUvkJwCWorjOaQmIOjHO72283236 = ZHaPFknPSXpUvkJwCWorjOaQmIOjHO66120004;     ZHaPFknPSXpUvkJwCWorjOaQmIOjHO66120004 = ZHaPFknPSXpUvkJwCWorjOaQmIOjHO37508981;     ZHaPFknPSXpUvkJwCWorjOaQmIOjHO37508981 = ZHaPFknPSXpUvkJwCWorjOaQmIOjHO16667723;     ZHaPFknPSXpUvkJwCWorjOaQmIOjHO16667723 = ZHaPFknPSXpUvkJwCWorjOaQmIOjHO55589144;     ZHaPFknPSXpUvkJwCWorjOaQmIOjHO55589144 = ZHaPFknPSXpUvkJwCWorjOaQmIOjHO51439964;     ZHaPFknPSXpUvkJwCWorjOaQmIOjHO51439964 = ZHaPFknPSXpUvkJwCWorjOaQmIOjHO42271552;     ZHaPFknPSXpUvkJwCWorjOaQmIOjHO42271552 = ZHaPFknPSXpUvkJwCWorjOaQmIOjHO33058716;     ZHaPFknPSXpUvkJwCWorjOaQmIOjHO33058716 = ZHaPFknPSXpUvkJwCWorjOaQmIOjHO29753071;     ZHaPFknPSXpUvkJwCWorjOaQmIOjHO29753071 = ZHaPFknPSXpUvkJwCWorjOaQmIOjHO42724996;     ZHaPFknPSXpUvkJwCWorjOaQmIOjHO42724996 = ZHaPFknPSXpUvkJwCWorjOaQmIOjHO88963470;     ZHaPFknPSXpUvkJwCWorjOaQmIOjHO88963470 = ZHaPFknPSXpUvkJwCWorjOaQmIOjHO97946212;     ZHaPFknPSXpUvkJwCWorjOaQmIOjHO97946212 = ZHaPFknPSXpUvkJwCWorjOaQmIOjHO24437208;     ZHaPFknPSXpUvkJwCWorjOaQmIOjHO24437208 = ZHaPFknPSXpUvkJwCWorjOaQmIOjHO17424463;     ZHaPFknPSXpUvkJwCWorjOaQmIOjHO17424463 = ZHaPFknPSXpUvkJwCWorjOaQmIOjHO30694829;     ZHaPFknPSXpUvkJwCWorjOaQmIOjHO30694829 = ZHaPFknPSXpUvkJwCWorjOaQmIOjHO42554518;     ZHaPFknPSXpUvkJwCWorjOaQmIOjHO42554518 = ZHaPFknPSXpUvkJwCWorjOaQmIOjHO58057898;     ZHaPFknPSXpUvkJwCWorjOaQmIOjHO58057898 = ZHaPFknPSXpUvkJwCWorjOaQmIOjHO29819138;     ZHaPFknPSXpUvkJwCWorjOaQmIOjHO29819138 = ZHaPFknPSXpUvkJwCWorjOaQmIOjHO94023046;     ZHaPFknPSXpUvkJwCWorjOaQmIOjHO94023046 = ZHaPFknPSXpUvkJwCWorjOaQmIOjHO4868267;     ZHaPFknPSXpUvkJwCWorjOaQmIOjHO4868267 = ZHaPFknPSXpUvkJwCWorjOaQmIOjHO5598288;     ZHaPFknPSXpUvkJwCWorjOaQmIOjHO5598288 = ZHaPFknPSXpUvkJwCWorjOaQmIOjHO66012576;     ZHaPFknPSXpUvkJwCWorjOaQmIOjHO66012576 = ZHaPFknPSXpUvkJwCWorjOaQmIOjHO50521599;     ZHaPFknPSXpUvkJwCWorjOaQmIOjHO50521599 = ZHaPFknPSXpUvkJwCWorjOaQmIOjHO432980;     ZHaPFknPSXpUvkJwCWorjOaQmIOjHO432980 = ZHaPFknPSXpUvkJwCWorjOaQmIOjHO36069444;     ZHaPFknPSXpUvkJwCWorjOaQmIOjHO36069444 = ZHaPFknPSXpUvkJwCWorjOaQmIOjHO6538054;     ZHaPFknPSXpUvkJwCWorjOaQmIOjHO6538054 = ZHaPFknPSXpUvkJwCWorjOaQmIOjHO69856986;     ZHaPFknPSXpUvkJwCWorjOaQmIOjHO69856986 = ZHaPFknPSXpUvkJwCWorjOaQmIOjHO73750827;     ZHaPFknPSXpUvkJwCWorjOaQmIOjHO73750827 = ZHaPFknPSXpUvkJwCWorjOaQmIOjHO27621009;     ZHaPFknPSXpUvkJwCWorjOaQmIOjHO27621009 = ZHaPFknPSXpUvkJwCWorjOaQmIOjHO19525555;     ZHaPFknPSXpUvkJwCWorjOaQmIOjHO19525555 = ZHaPFknPSXpUvkJwCWorjOaQmIOjHO40144052;     ZHaPFknPSXpUvkJwCWorjOaQmIOjHO40144052 = ZHaPFknPSXpUvkJwCWorjOaQmIOjHO95305275;     ZHaPFknPSXpUvkJwCWorjOaQmIOjHO95305275 = ZHaPFknPSXpUvkJwCWorjOaQmIOjHO86653354;     ZHaPFknPSXpUvkJwCWorjOaQmIOjHO86653354 = ZHaPFknPSXpUvkJwCWorjOaQmIOjHO83867601;     ZHaPFknPSXpUvkJwCWorjOaQmIOjHO83867601 = ZHaPFknPSXpUvkJwCWorjOaQmIOjHO26558105;     ZHaPFknPSXpUvkJwCWorjOaQmIOjHO26558105 = ZHaPFknPSXpUvkJwCWorjOaQmIOjHO26302321;     ZHaPFknPSXpUvkJwCWorjOaQmIOjHO26302321 = ZHaPFknPSXpUvkJwCWorjOaQmIOjHO57250524;     ZHaPFknPSXpUvkJwCWorjOaQmIOjHO57250524 = ZHaPFknPSXpUvkJwCWorjOaQmIOjHO49237357;     ZHaPFknPSXpUvkJwCWorjOaQmIOjHO49237357 = ZHaPFknPSXpUvkJwCWorjOaQmIOjHO54425941;     ZHaPFknPSXpUvkJwCWorjOaQmIOjHO54425941 = ZHaPFknPSXpUvkJwCWorjOaQmIOjHO47376619;     ZHaPFknPSXpUvkJwCWorjOaQmIOjHO47376619 = ZHaPFknPSXpUvkJwCWorjOaQmIOjHO97306809;     ZHaPFknPSXpUvkJwCWorjOaQmIOjHO97306809 = ZHaPFknPSXpUvkJwCWorjOaQmIOjHO16060257;     ZHaPFknPSXpUvkJwCWorjOaQmIOjHO16060257 = ZHaPFknPSXpUvkJwCWorjOaQmIOjHO3709261;     ZHaPFknPSXpUvkJwCWorjOaQmIOjHO3709261 = ZHaPFknPSXpUvkJwCWorjOaQmIOjHO88942228;     ZHaPFknPSXpUvkJwCWorjOaQmIOjHO88942228 = ZHaPFknPSXpUvkJwCWorjOaQmIOjHO42650931;     ZHaPFknPSXpUvkJwCWorjOaQmIOjHO42650931 = ZHaPFknPSXpUvkJwCWorjOaQmIOjHO29449912;     ZHaPFknPSXpUvkJwCWorjOaQmIOjHO29449912 = ZHaPFknPSXpUvkJwCWorjOaQmIOjHO27790977;     ZHaPFknPSXpUvkJwCWorjOaQmIOjHO27790977 = ZHaPFknPSXpUvkJwCWorjOaQmIOjHO99676820;     ZHaPFknPSXpUvkJwCWorjOaQmIOjHO99676820 = ZHaPFknPSXpUvkJwCWorjOaQmIOjHO41121349;     ZHaPFknPSXpUvkJwCWorjOaQmIOjHO41121349 = ZHaPFknPSXpUvkJwCWorjOaQmIOjHO29289461;     ZHaPFknPSXpUvkJwCWorjOaQmIOjHO29289461 = ZHaPFknPSXpUvkJwCWorjOaQmIOjHO4606775;     ZHaPFknPSXpUvkJwCWorjOaQmIOjHO4606775 = ZHaPFknPSXpUvkJwCWorjOaQmIOjHO8212222;     ZHaPFknPSXpUvkJwCWorjOaQmIOjHO8212222 = ZHaPFknPSXpUvkJwCWorjOaQmIOjHO94583796;     ZHaPFknPSXpUvkJwCWorjOaQmIOjHO94583796 = ZHaPFknPSXpUvkJwCWorjOaQmIOjHO30754722;     ZHaPFknPSXpUvkJwCWorjOaQmIOjHO30754722 = ZHaPFknPSXpUvkJwCWorjOaQmIOjHO96324657;     ZHaPFknPSXpUvkJwCWorjOaQmIOjHO96324657 = ZHaPFknPSXpUvkJwCWorjOaQmIOjHO6270661;     ZHaPFknPSXpUvkJwCWorjOaQmIOjHO6270661 = ZHaPFknPSXpUvkJwCWorjOaQmIOjHO15598406;     ZHaPFknPSXpUvkJwCWorjOaQmIOjHO15598406 = ZHaPFknPSXpUvkJwCWorjOaQmIOjHO37076001;     ZHaPFknPSXpUvkJwCWorjOaQmIOjHO37076001 = ZHaPFknPSXpUvkJwCWorjOaQmIOjHO80598279;     ZHaPFknPSXpUvkJwCWorjOaQmIOjHO80598279 = ZHaPFknPSXpUvkJwCWorjOaQmIOjHO49051091;     ZHaPFknPSXpUvkJwCWorjOaQmIOjHO49051091 = ZHaPFknPSXpUvkJwCWorjOaQmIOjHO81582977;     ZHaPFknPSXpUvkJwCWorjOaQmIOjHO81582977 = ZHaPFknPSXpUvkJwCWorjOaQmIOjHO23962979;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void LNgOkShDkcVrmzfdQEoxETjvk99161281() {     double qMnXRPpKXoHFuuWVaqDLBRRriHbwUl75127061 = -68862371;    double qMnXRPpKXoHFuuWVaqDLBRRriHbwUl71200826 = -393735898;    double qMnXRPpKXoHFuuWVaqDLBRRriHbwUl59911193 = -449549011;    double qMnXRPpKXoHFuuWVaqDLBRRriHbwUl20970348 = -806796233;    double qMnXRPpKXoHFuuWVaqDLBRRriHbwUl2241372 = -531959758;    double qMnXRPpKXoHFuuWVaqDLBRRriHbwUl68298893 = -885173378;    double qMnXRPpKXoHFuuWVaqDLBRRriHbwUl61377847 = -322813218;    double qMnXRPpKXoHFuuWVaqDLBRRriHbwUl31281680 = -466011140;    double qMnXRPpKXoHFuuWVaqDLBRRriHbwUl96864317 = -557776569;    double qMnXRPpKXoHFuuWVaqDLBRRriHbwUl93722515 = -367585990;    double qMnXRPpKXoHFuuWVaqDLBRRriHbwUl35945983 = -383301896;    double qMnXRPpKXoHFuuWVaqDLBRRriHbwUl30493994 = -793571007;    double qMnXRPpKXoHFuuWVaqDLBRRriHbwUl84479456 = -37044510;    double qMnXRPpKXoHFuuWVaqDLBRRriHbwUl19153882 = -111025611;    double qMnXRPpKXoHFuuWVaqDLBRRriHbwUl35885296 = -854886425;    double qMnXRPpKXoHFuuWVaqDLBRRriHbwUl73918751 = -419842143;    double qMnXRPpKXoHFuuWVaqDLBRRriHbwUl77725334 = -618881082;    double qMnXRPpKXoHFuuWVaqDLBRRriHbwUl51022888 = -694023805;    double qMnXRPpKXoHFuuWVaqDLBRRriHbwUl42199054 = -911115137;    double qMnXRPpKXoHFuuWVaqDLBRRriHbwUl86819020 = -694685359;    double qMnXRPpKXoHFuuWVaqDLBRRriHbwUl76447460 = -861884109;    double qMnXRPpKXoHFuuWVaqDLBRRriHbwUl47207560 = -890533486;    double qMnXRPpKXoHFuuWVaqDLBRRriHbwUl54421078 = -465495022;    double qMnXRPpKXoHFuuWVaqDLBRRriHbwUl45894777 = -434511895;    double qMnXRPpKXoHFuuWVaqDLBRRriHbwUl77827329 = -210436008;    double qMnXRPpKXoHFuuWVaqDLBRRriHbwUl24671323 = -29170747;    double qMnXRPpKXoHFuuWVaqDLBRRriHbwUl68459732 = -917541023;    double qMnXRPpKXoHFuuWVaqDLBRRriHbwUl94868349 = -5319067;    double qMnXRPpKXoHFuuWVaqDLBRRriHbwUl60047273 = -795496131;    double qMnXRPpKXoHFuuWVaqDLBRRriHbwUl10130977 = -375507435;    double qMnXRPpKXoHFuuWVaqDLBRRriHbwUl29734132 = -722467532;    double qMnXRPpKXoHFuuWVaqDLBRRriHbwUl76205006 = -84383571;    double qMnXRPpKXoHFuuWVaqDLBRRriHbwUl99642704 = -938463142;    double qMnXRPpKXoHFuuWVaqDLBRRriHbwUl79300958 = -265241620;    double qMnXRPpKXoHFuuWVaqDLBRRriHbwUl47832687 = -145538818;    double qMnXRPpKXoHFuuWVaqDLBRRriHbwUl90443250 = -898107140;    double qMnXRPpKXoHFuuWVaqDLBRRriHbwUl99838981 = 67621927;    double qMnXRPpKXoHFuuWVaqDLBRRriHbwUl56686041 = -842718202;    double qMnXRPpKXoHFuuWVaqDLBRRriHbwUl19083699 = -990437958;    double qMnXRPpKXoHFuuWVaqDLBRRriHbwUl61723477 = -249644731;    double qMnXRPpKXoHFuuWVaqDLBRRriHbwUl48278234 = -178629199;    double qMnXRPpKXoHFuuWVaqDLBRRriHbwUl11225822 = 85046000;    double qMnXRPpKXoHFuuWVaqDLBRRriHbwUl75351522 = -112325765;    double qMnXRPpKXoHFuuWVaqDLBRRriHbwUl56407601 = 90044494;    double qMnXRPpKXoHFuuWVaqDLBRRriHbwUl19419769 = -297653069;    double qMnXRPpKXoHFuuWVaqDLBRRriHbwUl15500165 = -396130480;    double qMnXRPpKXoHFuuWVaqDLBRRriHbwUl60293417 = 81092726;    double qMnXRPpKXoHFuuWVaqDLBRRriHbwUl21362194 = -640001141;    double qMnXRPpKXoHFuuWVaqDLBRRriHbwUl63006025 = -688463428;    double qMnXRPpKXoHFuuWVaqDLBRRriHbwUl16628883 = -899430385;    double qMnXRPpKXoHFuuWVaqDLBRRriHbwUl31478077 = -481662829;    double qMnXRPpKXoHFuuWVaqDLBRRriHbwUl93501624 = -866070641;    double qMnXRPpKXoHFuuWVaqDLBRRriHbwUl29020019 = -114084879;    double qMnXRPpKXoHFuuWVaqDLBRRriHbwUl78742917 = -288703255;    double qMnXRPpKXoHFuuWVaqDLBRRriHbwUl22713822 = -481649185;    double qMnXRPpKXoHFuuWVaqDLBRRriHbwUl27919502 = -178328886;    double qMnXRPpKXoHFuuWVaqDLBRRriHbwUl16779749 = -928240877;    double qMnXRPpKXoHFuuWVaqDLBRRriHbwUl14016417 = 84962884;    double qMnXRPpKXoHFuuWVaqDLBRRriHbwUl43143018 = -496360226;    double qMnXRPpKXoHFuuWVaqDLBRRriHbwUl77570049 = -402789011;    double qMnXRPpKXoHFuuWVaqDLBRRriHbwUl99839161 = -967632356;    double qMnXRPpKXoHFuuWVaqDLBRRriHbwUl66509498 = -217494151;    double qMnXRPpKXoHFuuWVaqDLBRRriHbwUl71234407 = -670515009;    double qMnXRPpKXoHFuuWVaqDLBRRriHbwUl86733341 = -82269135;    double qMnXRPpKXoHFuuWVaqDLBRRriHbwUl63988384 = -645118458;    double qMnXRPpKXoHFuuWVaqDLBRRriHbwUl59740977 = -198918325;    double qMnXRPpKXoHFuuWVaqDLBRRriHbwUl30851289 = -855107866;    double qMnXRPpKXoHFuuWVaqDLBRRriHbwUl5178499 = -771802890;    double qMnXRPpKXoHFuuWVaqDLBRRriHbwUl71321195 = -965486794;    double qMnXRPpKXoHFuuWVaqDLBRRriHbwUl45442046 = -956779285;    double qMnXRPpKXoHFuuWVaqDLBRRriHbwUl74079770 = -387464071;    double qMnXRPpKXoHFuuWVaqDLBRRriHbwUl21039294 = -776162881;    double qMnXRPpKXoHFuuWVaqDLBRRriHbwUl31939189 = -703585847;    double qMnXRPpKXoHFuuWVaqDLBRRriHbwUl80475576 = -561470407;    double qMnXRPpKXoHFuuWVaqDLBRRriHbwUl38540787 = -416056160;    double qMnXRPpKXoHFuuWVaqDLBRRriHbwUl65221638 = -846930109;    double qMnXRPpKXoHFuuWVaqDLBRRriHbwUl71856037 = -678207722;    double qMnXRPpKXoHFuuWVaqDLBRRriHbwUl98013476 = -455539517;    double qMnXRPpKXoHFuuWVaqDLBRRriHbwUl26475008 = -36858827;    double qMnXRPpKXoHFuuWVaqDLBRRriHbwUl62327165 = -814305528;    double qMnXRPpKXoHFuuWVaqDLBRRriHbwUl64377906 = -10263474;    double qMnXRPpKXoHFuuWVaqDLBRRriHbwUl47097538 = -177539882;    double qMnXRPpKXoHFuuWVaqDLBRRriHbwUl31862324 = -316855639;    double qMnXRPpKXoHFuuWVaqDLBRRriHbwUl43418390 = -896065747;    double qMnXRPpKXoHFuuWVaqDLBRRriHbwUl78652899 = -893844606;    double qMnXRPpKXoHFuuWVaqDLBRRriHbwUl36232508 = -856396892;    double qMnXRPpKXoHFuuWVaqDLBRRriHbwUl47184987 = -970298693;    double qMnXRPpKXoHFuuWVaqDLBRRriHbwUl20899788 = -549759887;    double qMnXRPpKXoHFuuWVaqDLBRRriHbwUl56587137 = -783592435;    double qMnXRPpKXoHFuuWVaqDLBRRriHbwUl19913185 = -967209933;    double qMnXRPpKXoHFuuWVaqDLBRRriHbwUl73663501 = -969866264;    double qMnXRPpKXoHFuuWVaqDLBRRriHbwUl85822565 = 82659043;    double qMnXRPpKXoHFuuWVaqDLBRRriHbwUl13543023 = -246357976;    double qMnXRPpKXoHFuuWVaqDLBRRriHbwUl41513650 = -487648947;    double qMnXRPpKXoHFuuWVaqDLBRRriHbwUl61884316 = -282012376;    double qMnXRPpKXoHFuuWVaqDLBRRriHbwUl81768735 = -961135049;    double qMnXRPpKXoHFuuWVaqDLBRRriHbwUl39991414 = -244438992;    double qMnXRPpKXoHFuuWVaqDLBRRriHbwUl88618180 = 69943370;    double qMnXRPpKXoHFuuWVaqDLBRRriHbwUl92419216 = -264837048;    double qMnXRPpKXoHFuuWVaqDLBRRriHbwUl59678791 = -68862371;     qMnXRPpKXoHFuuWVaqDLBRRriHbwUl75127061 = qMnXRPpKXoHFuuWVaqDLBRRriHbwUl71200826;     qMnXRPpKXoHFuuWVaqDLBRRriHbwUl71200826 = qMnXRPpKXoHFuuWVaqDLBRRriHbwUl59911193;     qMnXRPpKXoHFuuWVaqDLBRRriHbwUl59911193 = qMnXRPpKXoHFuuWVaqDLBRRriHbwUl20970348;     qMnXRPpKXoHFuuWVaqDLBRRriHbwUl20970348 = qMnXRPpKXoHFuuWVaqDLBRRriHbwUl2241372;     qMnXRPpKXoHFuuWVaqDLBRRriHbwUl2241372 = qMnXRPpKXoHFuuWVaqDLBRRriHbwUl68298893;     qMnXRPpKXoHFuuWVaqDLBRRriHbwUl68298893 = qMnXRPpKXoHFuuWVaqDLBRRriHbwUl61377847;     qMnXRPpKXoHFuuWVaqDLBRRriHbwUl61377847 = qMnXRPpKXoHFuuWVaqDLBRRriHbwUl31281680;     qMnXRPpKXoHFuuWVaqDLBRRriHbwUl31281680 = qMnXRPpKXoHFuuWVaqDLBRRriHbwUl96864317;     qMnXRPpKXoHFuuWVaqDLBRRriHbwUl96864317 = qMnXRPpKXoHFuuWVaqDLBRRriHbwUl93722515;     qMnXRPpKXoHFuuWVaqDLBRRriHbwUl93722515 = qMnXRPpKXoHFuuWVaqDLBRRriHbwUl35945983;     qMnXRPpKXoHFuuWVaqDLBRRriHbwUl35945983 = qMnXRPpKXoHFuuWVaqDLBRRriHbwUl30493994;     qMnXRPpKXoHFuuWVaqDLBRRriHbwUl30493994 = qMnXRPpKXoHFuuWVaqDLBRRriHbwUl84479456;     qMnXRPpKXoHFuuWVaqDLBRRriHbwUl84479456 = qMnXRPpKXoHFuuWVaqDLBRRriHbwUl19153882;     qMnXRPpKXoHFuuWVaqDLBRRriHbwUl19153882 = qMnXRPpKXoHFuuWVaqDLBRRriHbwUl35885296;     qMnXRPpKXoHFuuWVaqDLBRRriHbwUl35885296 = qMnXRPpKXoHFuuWVaqDLBRRriHbwUl73918751;     qMnXRPpKXoHFuuWVaqDLBRRriHbwUl73918751 = qMnXRPpKXoHFuuWVaqDLBRRriHbwUl77725334;     qMnXRPpKXoHFuuWVaqDLBRRriHbwUl77725334 = qMnXRPpKXoHFuuWVaqDLBRRriHbwUl51022888;     qMnXRPpKXoHFuuWVaqDLBRRriHbwUl51022888 = qMnXRPpKXoHFuuWVaqDLBRRriHbwUl42199054;     qMnXRPpKXoHFuuWVaqDLBRRriHbwUl42199054 = qMnXRPpKXoHFuuWVaqDLBRRriHbwUl86819020;     qMnXRPpKXoHFuuWVaqDLBRRriHbwUl86819020 = qMnXRPpKXoHFuuWVaqDLBRRriHbwUl76447460;     qMnXRPpKXoHFuuWVaqDLBRRriHbwUl76447460 = qMnXRPpKXoHFuuWVaqDLBRRriHbwUl47207560;     qMnXRPpKXoHFuuWVaqDLBRRriHbwUl47207560 = qMnXRPpKXoHFuuWVaqDLBRRriHbwUl54421078;     qMnXRPpKXoHFuuWVaqDLBRRriHbwUl54421078 = qMnXRPpKXoHFuuWVaqDLBRRriHbwUl45894777;     qMnXRPpKXoHFuuWVaqDLBRRriHbwUl45894777 = qMnXRPpKXoHFuuWVaqDLBRRriHbwUl77827329;     qMnXRPpKXoHFuuWVaqDLBRRriHbwUl77827329 = qMnXRPpKXoHFuuWVaqDLBRRriHbwUl24671323;     qMnXRPpKXoHFuuWVaqDLBRRriHbwUl24671323 = qMnXRPpKXoHFuuWVaqDLBRRriHbwUl68459732;     qMnXRPpKXoHFuuWVaqDLBRRriHbwUl68459732 = qMnXRPpKXoHFuuWVaqDLBRRriHbwUl94868349;     qMnXRPpKXoHFuuWVaqDLBRRriHbwUl94868349 = qMnXRPpKXoHFuuWVaqDLBRRriHbwUl60047273;     qMnXRPpKXoHFuuWVaqDLBRRriHbwUl60047273 = qMnXRPpKXoHFuuWVaqDLBRRriHbwUl10130977;     qMnXRPpKXoHFuuWVaqDLBRRriHbwUl10130977 = qMnXRPpKXoHFuuWVaqDLBRRriHbwUl29734132;     qMnXRPpKXoHFuuWVaqDLBRRriHbwUl29734132 = qMnXRPpKXoHFuuWVaqDLBRRriHbwUl76205006;     qMnXRPpKXoHFuuWVaqDLBRRriHbwUl76205006 = qMnXRPpKXoHFuuWVaqDLBRRriHbwUl99642704;     qMnXRPpKXoHFuuWVaqDLBRRriHbwUl99642704 = qMnXRPpKXoHFuuWVaqDLBRRriHbwUl79300958;     qMnXRPpKXoHFuuWVaqDLBRRriHbwUl79300958 = qMnXRPpKXoHFuuWVaqDLBRRriHbwUl47832687;     qMnXRPpKXoHFuuWVaqDLBRRriHbwUl47832687 = qMnXRPpKXoHFuuWVaqDLBRRriHbwUl90443250;     qMnXRPpKXoHFuuWVaqDLBRRriHbwUl90443250 = qMnXRPpKXoHFuuWVaqDLBRRriHbwUl99838981;     qMnXRPpKXoHFuuWVaqDLBRRriHbwUl99838981 = qMnXRPpKXoHFuuWVaqDLBRRriHbwUl56686041;     qMnXRPpKXoHFuuWVaqDLBRRriHbwUl56686041 = qMnXRPpKXoHFuuWVaqDLBRRriHbwUl19083699;     qMnXRPpKXoHFuuWVaqDLBRRriHbwUl19083699 = qMnXRPpKXoHFuuWVaqDLBRRriHbwUl61723477;     qMnXRPpKXoHFuuWVaqDLBRRriHbwUl61723477 = qMnXRPpKXoHFuuWVaqDLBRRriHbwUl48278234;     qMnXRPpKXoHFuuWVaqDLBRRriHbwUl48278234 = qMnXRPpKXoHFuuWVaqDLBRRriHbwUl11225822;     qMnXRPpKXoHFuuWVaqDLBRRriHbwUl11225822 = qMnXRPpKXoHFuuWVaqDLBRRriHbwUl75351522;     qMnXRPpKXoHFuuWVaqDLBRRriHbwUl75351522 = qMnXRPpKXoHFuuWVaqDLBRRriHbwUl56407601;     qMnXRPpKXoHFuuWVaqDLBRRriHbwUl56407601 = qMnXRPpKXoHFuuWVaqDLBRRriHbwUl19419769;     qMnXRPpKXoHFuuWVaqDLBRRriHbwUl19419769 = qMnXRPpKXoHFuuWVaqDLBRRriHbwUl15500165;     qMnXRPpKXoHFuuWVaqDLBRRriHbwUl15500165 = qMnXRPpKXoHFuuWVaqDLBRRriHbwUl60293417;     qMnXRPpKXoHFuuWVaqDLBRRriHbwUl60293417 = qMnXRPpKXoHFuuWVaqDLBRRriHbwUl21362194;     qMnXRPpKXoHFuuWVaqDLBRRriHbwUl21362194 = qMnXRPpKXoHFuuWVaqDLBRRriHbwUl63006025;     qMnXRPpKXoHFuuWVaqDLBRRriHbwUl63006025 = qMnXRPpKXoHFuuWVaqDLBRRriHbwUl16628883;     qMnXRPpKXoHFuuWVaqDLBRRriHbwUl16628883 = qMnXRPpKXoHFuuWVaqDLBRRriHbwUl31478077;     qMnXRPpKXoHFuuWVaqDLBRRriHbwUl31478077 = qMnXRPpKXoHFuuWVaqDLBRRriHbwUl93501624;     qMnXRPpKXoHFuuWVaqDLBRRriHbwUl93501624 = qMnXRPpKXoHFuuWVaqDLBRRriHbwUl29020019;     qMnXRPpKXoHFuuWVaqDLBRRriHbwUl29020019 = qMnXRPpKXoHFuuWVaqDLBRRriHbwUl78742917;     qMnXRPpKXoHFuuWVaqDLBRRriHbwUl78742917 = qMnXRPpKXoHFuuWVaqDLBRRriHbwUl22713822;     qMnXRPpKXoHFuuWVaqDLBRRriHbwUl22713822 = qMnXRPpKXoHFuuWVaqDLBRRriHbwUl27919502;     qMnXRPpKXoHFuuWVaqDLBRRriHbwUl27919502 = qMnXRPpKXoHFuuWVaqDLBRRriHbwUl16779749;     qMnXRPpKXoHFuuWVaqDLBRRriHbwUl16779749 = qMnXRPpKXoHFuuWVaqDLBRRriHbwUl14016417;     qMnXRPpKXoHFuuWVaqDLBRRriHbwUl14016417 = qMnXRPpKXoHFuuWVaqDLBRRriHbwUl43143018;     qMnXRPpKXoHFuuWVaqDLBRRriHbwUl43143018 = qMnXRPpKXoHFuuWVaqDLBRRriHbwUl77570049;     qMnXRPpKXoHFuuWVaqDLBRRriHbwUl77570049 = qMnXRPpKXoHFuuWVaqDLBRRriHbwUl99839161;     qMnXRPpKXoHFuuWVaqDLBRRriHbwUl99839161 = qMnXRPpKXoHFuuWVaqDLBRRriHbwUl66509498;     qMnXRPpKXoHFuuWVaqDLBRRriHbwUl66509498 = qMnXRPpKXoHFuuWVaqDLBRRriHbwUl71234407;     qMnXRPpKXoHFuuWVaqDLBRRriHbwUl71234407 = qMnXRPpKXoHFuuWVaqDLBRRriHbwUl86733341;     qMnXRPpKXoHFuuWVaqDLBRRriHbwUl86733341 = qMnXRPpKXoHFuuWVaqDLBRRriHbwUl63988384;     qMnXRPpKXoHFuuWVaqDLBRRriHbwUl63988384 = qMnXRPpKXoHFuuWVaqDLBRRriHbwUl59740977;     qMnXRPpKXoHFuuWVaqDLBRRriHbwUl59740977 = qMnXRPpKXoHFuuWVaqDLBRRriHbwUl30851289;     qMnXRPpKXoHFuuWVaqDLBRRriHbwUl30851289 = qMnXRPpKXoHFuuWVaqDLBRRriHbwUl5178499;     qMnXRPpKXoHFuuWVaqDLBRRriHbwUl5178499 = qMnXRPpKXoHFuuWVaqDLBRRriHbwUl71321195;     qMnXRPpKXoHFuuWVaqDLBRRriHbwUl71321195 = qMnXRPpKXoHFuuWVaqDLBRRriHbwUl45442046;     qMnXRPpKXoHFuuWVaqDLBRRriHbwUl45442046 = qMnXRPpKXoHFuuWVaqDLBRRriHbwUl74079770;     qMnXRPpKXoHFuuWVaqDLBRRriHbwUl74079770 = qMnXRPpKXoHFuuWVaqDLBRRriHbwUl21039294;     qMnXRPpKXoHFuuWVaqDLBRRriHbwUl21039294 = qMnXRPpKXoHFuuWVaqDLBRRriHbwUl31939189;     qMnXRPpKXoHFuuWVaqDLBRRriHbwUl31939189 = qMnXRPpKXoHFuuWVaqDLBRRriHbwUl80475576;     qMnXRPpKXoHFuuWVaqDLBRRriHbwUl80475576 = qMnXRPpKXoHFuuWVaqDLBRRriHbwUl38540787;     qMnXRPpKXoHFuuWVaqDLBRRriHbwUl38540787 = qMnXRPpKXoHFuuWVaqDLBRRriHbwUl65221638;     qMnXRPpKXoHFuuWVaqDLBRRriHbwUl65221638 = qMnXRPpKXoHFuuWVaqDLBRRriHbwUl71856037;     qMnXRPpKXoHFuuWVaqDLBRRriHbwUl71856037 = qMnXRPpKXoHFuuWVaqDLBRRriHbwUl98013476;     qMnXRPpKXoHFuuWVaqDLBRRriHbwUl98013476 = qMnXRPpKXoHFuuWVaqDLBRRriHbwUl26475008;     qMnXRPpKXoHFuuWVaqDLBRRriHbwUl26475008 = qMnXRPpKXoHFuuWVaqDLBRRriHbwUl62327165;     qMnXRPpKXoHFuuWVaqDLBRRriHbwUl62327165 = qMnXRPpKXoHFuuWVaqDLBRRriHbwUl64377906;     qMnXRPpKXoHFuuWVaqDLBRRriHbwUl64377906 = qMnXRPpKXoHFuuWVaqDLBRRriHbwUl47097538;     qMnXRPpKXoHFuuWVaqDLBRRriHbwUl47097538 = qMnXRPpKXoHFuuWVaqDLBRRriHbwUl31862324;     qMnXRPpKXoHFuuWVaqDLBRRriHbwUl31862324 = qMnXRPpKXoHFuuWVaqDLBRRriHbwUl43418390;     qMnXRPpKXoHFuuWVaqDLBRRriHbwUl43418390 = qMnXRPpKXoHFuuWVaqDLBRRriHbwUl78652899;     qMnXRPpKXoHFuuWVaqDLBRRriHbwUl78652899 = qMnXRPpKXoHFuuWVaqDLBRRriHbwUl36232508;     qMnXRPpKXoHFuuWVaqDLBRRriHbwUl36232508 = qMnXRPpKXoHFuuWVaqDLBRRriHbwUl47184987;     qMnXRPpKXoHFuuWVaqDLBRRriHbwUl47184987 = qMnXRPpKXoHFuuWVaqDLBRRriHbwUl20899788;     qMnXRPpKXoHFuuWVaqDLBRRriHbwUl20899788 = qMnXRPpKXoHFuuWVaqDLBRRriHbwUl56587137;     qMnXRPpKXoHFuuWVaqDLBRRriHbwUl56587137 = qMnXRPpKXoHFuuWVaqDLBRRriHbwUl19913185;     qMnXRPpKXoHFuuWVaqDLBRRriHbwUl19913185 = qMnXRPpKXoHFuuWVaqDLBRRriHbwUl73663501;     qMnXRPpKXoHFuuWVaqDLBRRriHbwUl73663501 = qMnXRPpKXoHFuuWVaqDLBRRriHbwUl85822565;     qMnXRPpKXoHFuuWVaqDLBRRriHbwUl85822565 = qMnXRPpKXoHFuuWVaqDLBRRriHbwUl13543023;     qMnXRPpKXoHFuuWVaqDLBRRriHbwUl13543023 = qMnXRPpKXoHFuuWVaqDLBRRriHbwUl41513650;     qMnXRPpKXoHFuuWVaqDLBRRriHbwUl41513650 = qMnXRPpKXoHFuuWVaqDLBRRriHbwUl61884316;     qMnXRPpKXoHFuuWVaqDLBRRriHbwUl61884316 = qMnXRPpKXoHFuuWVaqDLBRRriHbwUl81768735;     qMnXRPpKXoHFuuWVaqDLBRRriHbwUl81768735 = qMnXRPpKXoHFuuWVaqDLBRRriHbwUl39991414;     qMnXRPpKXoHFuuWVaqDLBRRriHbwUl39991414 = qMnXRPpKXoHFuuWVaqDLBRRriHbwUl88618180;     qMnXRPpKXoHFuuWVaqDLBRRriHbwUl88618180 = qMnXRPpKXoHFuuWVaqDLBRRriHbwUl92419216;     qMnXRPpKXoHFuuWVaqDLBRRriHbwUl92419216 = qMnXRPpKXoHFuuWVaqDLBRRriHbwUl59678791;     qMnXRPpKXoHFuuWVaqDLBRRriHbwUl59678791 = qMnXRPpKXoHFuuWVaqDLBRRriHbwUl75127061;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void tFCWPCwwcLHqkCcHTGudkRdaA39082435() {     double bXUzRPOLjhqAViRMfqxCQVXvcYphdu64682002 = -933954082;    double bXUzRPOLjhqAViRMfqxCQVXvcYphdu70018511 = -145312992;    double bXUzRPOLjhqAViRMfqxCQVXvcYphdu73675095 = -351035773;    double bXUzRPOLjhqAViRMfqxCQVXvcYphdu95917240 = 88114470;    double bXUzRPOLjhqAViRMfqxCQVXvcYphdu86098286 = -227832441;    double bXUzRPOLjhqAViRMfqxCQVXvcYphdu93025928 = -628174078;    double bXUzRPOLjhqAViRMfqxCQVXvcYphdu61453467 = 93774025;    double bXUzRPOLjhqAViRMfqxCQVXvcYphdu64603064 = -444220399;    double bXUzRPOLjhqAViRMfqxCQVXvcYphdu2776679 = -380914656;    double bXUzRPOLjhqAViRMfqxCQVXvcYphdu64137341 = -801744450;    double bXUzRPOLjhqAViRMfqxCQVXvcYphdu65792816 = -410327427;    double bXUzRPOLjhqAViRMfqxCQVXvcYphdu39814113 = -961073818;    double bXUzRPOLjhqAViRMfqxCQVXvcYphdu20659265 = -290255314;    double bXUzRPOLjhqAViRMfqxCQVXvcYphdu35768671 = -776707587;    double bXUzRPOLjhqAViRMfqxCQVXvcYphdu37654295 = -502084425;    double bXUzRPOLjhqAViRMfqxCQVXvcYphdu76377854 = -513716662;    double bXUzRPOLjhqAViRMfqxCQVXvcYphdu21165982 = -808385792;    double bXUzRPOLjhqAViRMfqxCQVXvcYphdu51928020 = 96077054;    double bXUzRPOLjhqAViRMfqxCQVXvcYphdu86897307 = -833541371;    double bXUzRPOLjhqAViRMfqxCQVXvcYphdu28810391 = 6801277;    double bXUzRPOLjhqAViRMfqxCQVXvcYphdu310465 = -17366970;    double bXUzRPOLjhqAViRMfqxCQVXvcYphdu24172167 = -199606856;    double bXUzRPOLjhqAViRMfqxCQVXvcYphdu30715974 = -710859548;    double bXUzRPOLjhqAViRMfqxCQVXvcYphdu8243818 = -609562801;    double bXUzRPOLjhqAViRMfqxCQVXvcYphdu91545627 = -469978653;    double bXUzRPOLjhqAViRMfqxCQVXvcYphdu61309224 = -796541714;    double bXUzRPOLjhqAViRMfqxCQVXvcYphdu86595831 = -747087281;    double bXUzRPOLjhqAViRMfqxCQVXvcYphdu83110624 = -750169893;    double bXUzRPOLjhqAViRMfqxCQVXvcYphdu74939069 = -426454293;    double bXUzRPOLjhqAViRMfqxCQVXvcYphdu70669824 = -381259527;    double bXUzRPOLjhqAViRMfqxCQVXvcYphdu73484673 = -660638906;    double bXUzRPOLjhqAViRMfqxCQVXvcYphdu21645912 = -100847228;    double bXUzRPOLjhqAViRMfqxCQVXvcYphdu38344964 = -653892905;    double bXUzRPOLjhqAViRMfqxCQVXvcYphdu16572870 = -585067287;    double bXUzRPOLjhqAViRMfqxCQVXvcYphdu70392107 = -141250583;    double bXUzRPOLjhqAViRMfqxCQVXvcYphdu14386538 = -979922900;    double bXUzRPOLjhqAViRMfqxCQVXvcYphdu61656462 = -964516500;    double bXUzRPOLjhqAViRMfqxCQVXvcYphdu1272765 = -317957411;    double bXUzRPOLjhqAViRMfqxCQVXvcYphdu77002627 = -781940669;    double bXUzRPOLjhqAViRMfqxCQVXvcYphdu70593443 = -85109162;    double bXUzRPOLjhqAViRMfqxCQVXvcYphdu75452050 = 96604035;    double bXUzRPOLjhqAViRMfqxCQVXvcYphdu79561725 = -952796682;    double bXUzRPOLjhqAViRMfqxCQVXvcYphdu37268930 = -203317845;    double bXUzRPOLjhqAViRMfqxCQVXvcYphdu94952179 = -342445658;    double bXUzRPOLjhqAViRMfqxCQVXvcYphdu7334783 = -160967578;    double bXUzRPOLjhqAViRMfqxCQVXvcYphdu7473324 = -213002191;    double bXUzRPOLjhqAViRMfqxCQVXvcYphdu81785214 = -651267663;    double bXUzRPOLjhqAViRMfqxCQVXvcYphdu24373311 = -157379748;    double bXUzRPOLjhqAViRMfqxCQVXvcYphdu22187256 = -923566360;    double bXUzRPOLjhqAViRMfqxCQVXvcYphdu84918442 = -780486534;    double bXUzRPOLjhqAViRMfqxCQVXvcYphdu53695573 = -123412930;    double bXUzRPOLjhqAViRMfqxCQVXvcYphdu74359395 = -7202021;    double bXUzRPOLjhqAViRMfqxCQVXvcYphdu66829283 = -9675791;    double bXUzRPOLjhqAViRMfqxCQVXvcYphdu9638827 = -859506639;    double bXUzRPOLjhqAViRMfqxCQVXvcYphdu38771971 = -187566368;    double bXUzRPOLjhqAViRMfqxCQVXvcYphdu40509835 = -634347227;    double bXUzRPOLjhqAViRMfqxCQVXvcYphdu39302538 = -434453444;    double bXUzRPOLjhqAViRMfqxCQVXvcYphdu65431278 = -741472972;    double bXUzRPOLjhqAViRMfqxCQVXvcYphdu4371614 = -441906878;    double bXUzRPOLjhqAViRMfqxCQVXvcYphdu24789062 = -431290728;    double bXUzRPOLjhqAViRMfqxCQVXvcYphdu6430097 = -881086797;    double bXUzRPOLjhqAViRMfqxCQVXvcYphdu78342842 = -156056083;    double bXUzRPOLjhqAViRMfqxCQVXvcYphdu89663995 = 82233893;    double bXUzRPOLjhqAViRMfqxCQVXvcYphdu32106854 = -999655129;    double bXUzRPOLjhqAViRMfqxCQVXvcYphdu90652667 = -41105545;    double bXUzRPOLjhqAViRMfqxCQVXvcYphdu44146905 = -209480199;    double bXUzRPOLjhqAViRMfqxCQVXvcYphdu1469150 = -207180913;    double bXUzRPOLjhqAViRMfqxCQVXvcYphdu4086395 = -705188027;    double bXUzRPOLjhqAViRMfqxCQVXvcYphdu65376563 = -535457005;    double bXUzRPOLjhqAViRMfqxCQVXvcYphdu23267758 = -522161526;    double bXUzRPOLjhqAViRMfqxCQVXvcYphdu14721392 = -549200162;    double bXUzRPOLjhqAViRMfqxCQVXvcYphdu19893217 = -390428381;    double bXUzRPOLjhqAViRMfqxCQVXvcYphdu74925393 = -121982277;    double bXUzRPOLjhqAViRMfqxCQVXvcYphdu16303865 = -648432210;    double bXUzRPOLjhqAViRMfqxCQVXvcYphdu53358341 = 10197242;    double bXUzRPOLjhqAViRMfqxCQVXvcYphdu20748739 = -64570288;    double bXUzRPOLjhqAViRMfqxCQVXvcYphdu86903237 = -996289011;    double bXUzRPOLjhqAViRMfqxCQVXvcYphdu35763794 = -268413891;    double bXUzRPOLjhqAViRMfqxCQVXvcYphdu909035 = -348595224;    double bXUzRPOLjhqAViRMfqxCQVXvcYphdu84072303 = -156976462;    double bXUzRPOLjhqAViRMfqxCQVXvcYphdu79524010 = -45274051;    double bXUzRPOLjhqAViRMfqxCQVXvcYphdu62222521 = -489707533;    double bXUzRPOLjhqAViRMfqxCQVXvcYphdu60923369 = -826603533;    double bXUzRPOLjhqAViRMfqxCQVXvcYphdu90020626 = -645967759;    double bXUzRPOLjhqAViRMfqxCQVXvcYphdu16974251 = -157846598;    double bXUzRPOLjhqAViRMfqxCQVXvcYphdu99125278 = -553436885;    double bXUzRPOLjhqAViRMfqxCQVXvcYphdu54816629 = 8828563;    double bXUzRPOLjhqAViRMfqxCQVXvcYphdu28706137 = -794386267;    double bXUzRPOLjhqAViRMfqxCQVXvcYphdu77800899 = -297500920;    double bXUzRPOLjhqAViRMfqxCQVXvcYphdu29882273 = -506903357;    double bXUzRPOLjhqAViRMfqxCQVXvcYphdu75083999 = -445469456;    double bXUzRPOLjhqAViRMfqxCQVXvcYphdu96225184 = -123043529;    double bXUzRPOLjhqAViRMfqxCQVXvcYphdu96901151 = -876050534;    double bXUzRPOLjhqAViRMfqxCQVXvcYphdu52213565 = -250649942;    double bXUzRPOLjhqAViRMfqxCQVXvcYphdu64163346 = -204022366;    double bXUzRPOLjhqAViRMfqxCQVXvcYphdu97109207 = -747339883;    double bXUzRPOLjhqAViRMfqxCQVXvcYphdu89897730 = -935030576;    double bXUzRPOLjhqAViRMfqxCQVXvcYphdu5162077 = -203662717;    double bXUzRPOLjhqAViRMfqxCQVXvcYphdu4299513 = -201340113;    double bXUzRPOLjhqAViRMfqxCQVXvcYphdu63187878 = -933954082;     bXUzRPOLjhqAViRMfqxCQVXvcYphdu64682002 = bXUzRPOLjhqAViRMfqxCQVXvcYphdu70018511;     bXUzRPOLjhqAViRMfqxCQVXvcYphdu70018511 = bXUzRPOLjhqAViRMfqxCQVXvcYphdu73675095;     bXUzRPOLjhqAViRMfqxCQVXvcYphdu73675095 = bXUzRPOLjhqAViRMfqxCQVXvcYphdu95917240;     bXUzRPOLjhqAViRMfqxCQVXvcYphdu95917240 = bXUzRPOLjhqAViRMfqxCQVXvcYphdu86098286;     bXUzRPOLjhqAViRMfqxCQVXvcYphdu86098286 = bXUzRPOLjhqAViRMfqxCQVXvcYphdu93025928;     bXUzRPOLjhqAViRMfqxCQVXvcYphdu93025928 = bXUzRPOLjhqAViRMfqxCQVXvcYphdu61453467;     bXUzRPOLjhqAViRMfqxCQVXvcYphdu61453467 = bXUzRPOLjhqAViRMfqxCQVXvcYphdu64603064;     bXUzRPOLjhqAViRMfqxCQVXvcYphdu64603064 = bXUzRPOLjhqAViRMfqxCQVXvcYphdu2776679;     bXUzRPOLjhqAViRMfqxCQVXvcYphdu2776679 = bXUzRPOLjhqAViRMfqxCQVXvcYphdu64137341;     bXUzRPOLjhqAViRMfqxCQVXvcYphdu64137341 = bXUzRPOLjhqAViRMfqxCQVXvcYphdu65792816;     bXUzRPOLjhqAViRMfqxCQVXvcYphdu65792816 = bXUzRPOLjhqAViRMfqxCQVXvcYphdu39814113;     bXUzRPOLjhqAViRMfqxCQVXvcYphdu39814113 = bXUzRPOLjhqAViRMfqxCQVXvcYphdu20659265;     bXUzRPOLjhqAViRMfqxCQVXvcYphdu20659265 = bXUzRPOLjhqAViRMfqxCQVXvcYphdu35768671;     bXUzRPOLjhqAViRMfqxCQVXvcYphdu35768671 = bXUzRPOLjhqAViRMfqxCQVXvcYphdu37654295;     bXUzRPOLjhqAViRMfqxCQVXvcYphdu37654295 = bXUzRPOLjhqAViRMfqxCQVXvcYphdu76377854;     bXUzRPOLjhqAViRMfqxCQVXvcYphdu76377854 = bXUzRPOLjhqAViRMfqxCQVXvcYphdu21165982;     bXUzRPOLjhqAViRMfqxCQVXvcYphdu21165982 = bXUzRPOLjhqAViRMfqxCQVXvcYphdu51928020;     bXUzRPOLjhqAViRMfqxCQVXvcYphdu51928020 = bXUzRPOLjhqAViRMfqxCQVXvcYphdu86897307;     bXUzRPOLjhqAViRMfqxCQVXvcYphdu86897307 = bXUzRPOLjhqAViRMfqxCQVXvcYphdu28810391;     bXUzRPOLjhqAViRMfqxCQVXvcYphdu28810391 = bXUzRPOLjhqAViRMfqxCQVXvcYphdu310465;     bXUzRPOLjhqAViRMfqxCQVXvcYphdu310465 = bXUzRPOLjhqAViRMfqxCQVXvcYphdu24172167;     bXUzRPOLjhqAViRMfqxCQVXvcYphdu24172167 = bXUzRPOLjhqAViRMfqxCQVXvcYphdu30715974;     bXUzRPOLjhqAViRMfqxCQVXvcYphdu30715974 = bXUzRPOLjhqAViRMfqxCQVXvcYphdu8243818;     bXUzRPOLjhqAViRMfqxCQVXvcYphdu8243818 = bXUzRPOLjhqAViRMfqxCQVXvcYphdu91545627;     bXUzRPOLjhqAViRMfqxCQVXvcYphdu91545627 = bXUzRPOLjhqAViRMfqxCQVXvcYphdu61309224;     bXUzRPOLjhqAViRMfqxCQVXvcYphdu61309224 = bXUzRPOLjhqAViRMfqxCQVXvcYphdu86595831;     bXUzRPOLjhqAViRMfqxCQVXvcYphdu86595831 = bXUzRPOLjhqAViRMfqxCQVXvcYphdu83110624;     bXUzRPOLjhqAViRMfqxCQVXvcYphdu83110624 = bXUzRPOLjhqAViRMfqxCQVXvcYphdu74939069;     bXUzRPOLjhqAViRMfqxCQVXvcYphdu74939069 = bXUzRPOLjhqAViRMfqxCQVXvcYphdu70669824;     bXUzRPOLjhqAViRMfqxCQVXvcYphdu70669824 = bXUzRPOLjhqAViRMfqxCQVXvcYphdu73484673;     bXUzRPOLjhqAViRMfqxCQVXvcYphdu73484673 = bXUzRPOLjhqAViRMfqxCQVXvcYphdu21645912;     bXUzRPOLjhqAViRMfqxCQVXvcYphdu21645912 = bXUzRPOLjhqAViRMfqxCQVXvcYphdu38344964;     bXUzRPOLjhqAViRMfqxCQVXvcYphdu38344964 = bXUzRPOLjhqAViRMfqxCQVXvcYphdu16572870;     bXUzRPOLjhqAViRMfqxCQVXvcYphdu16572870 = bXUzRPOLjhqAViRMfqxCQVXvcYphdu70392107;     bXUzRPOLjhqAViRMfqxCQVXvcYphdu70392107 = bXUzRPOLjhqAViRMfqxCQVXvcYphdu14386538;     bXUzRPOLjhqAViRMfqxCQVXvcYphdu14386538 = bXUzRPOLjhqAViRMfqxCQVXvcYphdu61656462;     bXUzRPOLjhqAViRMfqxCQVXvcYphdu61656462 = bXUzRPOLjhqAViRMfqxCQVXvcYphdu1272765;     bXUzRPOLjhqAViRMfqxCQVXvcYphdu1272765 = bXUzRPOLjhqAViRMfqxCQVXvcYphdu77002627;     bXUzRPOLjhqAViRMfqxCQVXvcYphdu77002627 = bXUzRPOLjhqAViRMfqxCQVXvcYphdu70593443;     bXUzRPOLjhqAViRMfqxCQVXvcYphdu70593443 = bXUzRPOLjhqAViRMfqxCQVXvcYphdu75452050;     bXUzRPOLjhqAViRMfqxCQVXvcYphdu75452050 = bXUzRPOLjhqAViRMfqxCQVXvcYphdu79561725;     bXUzRPOLjhqAViRMfqxCQVXvcYphdu79561725 = bXUzRPOLjhqAViRMfqxCQVXvcYphdu37268930;     bXUzRPOLjhqAViRMfqxCQVXvcYphdu37268930 = bXUzRPOLjhqAViRMfqxCQVXvcYphdu94952179;     bXUzRPOLjhqAViRMfqxCQVXvcYphdu94952179 = bXUzRPOLjhqAViRMfqxCQVXvcYphdu7334783;     bXUzRPOLjhqAViRMfqxCQVXvcYphdu7334783 = bXUzRPOLjhqAViRMfqxCQVXvcYphdu7473324;     bXUzRPOLjhqAViRMfqxCQVXvcYphdu7473324 = bXUzRPOLjhqAViRMfqxCQVXvcYphdu81785214;     bXUzRPOLjhqAViRMfqxCQVXvcYphdu81785214 = bXUzRPOLjhqAViRMfqxCQVXvcYphdu24373311;     bXUzRPOLjhqAViRMfqxCQVXvcYphdu24373311 = bXUzRPOLjhqAViRMfqxCQVXvcYphdu22187256;     bXUzRPOLjhqAViRMfqxCQVXvcYphdu22187256 = bXUzRPOLjhqAViRMfqxCQVXvcYphdu84918442;     bXUzRPOLjhqAViRMfqxCQVXvcYphdu84918442 = bXUzRPOLjhqAViRMfqxCQVXvcYphdu53695573;     bXUzRPOLjhqAViRMfqxCQVXvcYphdu53695573 = bXUzRPOLjhqAViRMfqxCQVXvcYphdu74359395;     bXUzRPOLjhqAViRMfqxCQVXvcYphdu74359395 = bXUzRPOLjhqAViRMfqxCQVXvcYphdu66829283;     bXUzRPOLjhqAViRMfqxCQVXvcYphdu66829283 = bXUzRPOLjhqAViRMfqxCQVXvcYphdu9638827;     bXUzRPOLjhqAViRMfqxCQVXvcYphdu9638827 = bXUzRPOLjhqAViRMfqxCQVXvcYphdu38771971;     bXUzRPOLjhqAViRMfqxCQVXvcYphdu38771971 = bXUzRPOLjhqAViRMfqxCQVXvcYphdu40509835;     bXUzRPOLjhqAViRMfqxCQVXvcYphdu40509835 = bXUzRPOLjhqAViRMfqxCQVXvcYphdu39302538;     bXUzRPOLjhqAViRMfqxCQVXvcYphdu39302538 = bXUzRPOLjhqAViRMfqxCQVXvcYphdu65431278;     bXUzRPOLjhqAViRMfqxCQVXvcYphdu65431278 = bXUzRPOLjhqAViRMfqxCQVXvcYphdu4371614;     bXUzRPOLjhqAViRMfqxCQVXvcYphdu4371614 = bXUzRPOLjhqAViRMfqxCQVXvcYphdu24789062;     bXUzRPOLjhqAViRMfqxCQVXvcYphdu24789062 = bXUzRPOLjhqAViRMfqxCQVXvcYphdu6430097;     bXUzRPOLjhqAViRMfqxCQVXvcYphdu6430097 = bXUzRPOLjhqAViRMfqxCQVXvcYphdu78342842;     bXUzRPOLjhqAViRMfqxCQVXvcYphdu78342842 = bXUzRPOLjhqAViRMfqxCQVXvcYphdu89663995;     bXUzRPOLjhqAViRMfqxCQVXvcYphdu89663995 = bXUzRPOLjhqAViRMfqxCQVXvcYphdu32106854;     bXUzRPOLjhqAViRMfqxCQVXvcYphdu32106854 = bXUzRPOLjhqAViRMfqxCQVXvcYphdu90652667;     bXUzRPOLjhqAViRMfqxCQVXvcYphdu90652667 = bXUzRPOLjhqAViRMfqxCQVXvcYphdu44146905;     bXUzRPOLjhqAViRMfqxCQVXvcYphdu44146905 = bXUzRPOLjhqAViRMfqxCQVXvcYphdu1469150;     bXUzRPOLjhqAViRMfqxCQVXvcYphdu1469150 = bXUzRPOLjhqAViRMfqxCQVXvcYphdu4086395;     bXUzRPOLjhqAViRMfqxCQVXvcYphdu4086395 = bXUzRPOLjhqAViRMfqxCQVXvcYphdu65376563;     bXUzRPOLjhqAViRMfqxCQVXvcYphdu65376563 = bXUzRPOLjhqAViRMfqxCQVXvcYphdu23267758;     bXUzRPOLjhqAViRMfqxCQVXvcYphdu23267758 = bXUzRPOLjhqAViRMfqxCQVXvcYphdu14721392;     bXUzRPOLjhqAViRMfqxCQVXvcYphdu14721392 = bXUzRPOLjhqAViRMfqxCQVXvcYphdu19893217;     bXUzRPOLjhqAViRMfqxCQVXvcYphdu19893217 = bXUzRPOLjhqAViRMfqxCQVXvcYphdu74925393;     bXUzRPOLjhqAViRMfqxCQVXvcYphdu74925393 = bXUzRPOLjhqAViRMfqxCQVXvcYphdu16303865;     bXUzRPOLjhqAViRMfqxCQVXvcYphdu16303865 = bXUzRPOLjhqAViRMfqxCQVXvcYphdu53358341;     bXUzRPOLjhqAViRMfqxCQVXvcYphdu53358341 = bXUzRPOLjhqAViRMfqxCQVXvcYphdu20748739;     bXUzRPOLjhqAViRMfqxCQVXvcYphdu20748739 = bXUzRPOLjhqAViRMfqxCQVXvcYphdu86903237;     bXUzRPOLjhqAViRMfqxCQVXvcYphdu86903237 = bXUzRPOLjhqAViRMfqxCQVXvcYphdu35763794;     bXUzRPOLjhqAViRMfqxCQVXvcYphdu35763794 = bXUzRPOLjhqAViRMfqxCQVXvcYphdu909035;     bXUzRPOLjhqAViRMfqxCQVXvcYphdu909035 = bXUzRPOLjhqAViRMfqxCQVXvcYphdu84072303;     bXUzRPOLjhqAViRMfqxCQVXvcYphdu84072303 = bXUzRPOLjhqAViRMfqxCQVXvcYphdu79524010;     bXUzRPOLjhqAViRMfqxCQVXvcYphdu79524010 = bXUzRPOLjhqAViRMfqxCQVXvcYphdu62222521;     bXUzRPOLjhqAViRMfqxCQVXvcYphdu62222521 = bXUzRPOLjhqAViRMfqxCQVXvcYphdu60923369;     bXUzRPOLjhqAViRMfqxCQVXvcYphdu60923369 = bXUzRPOLjhqAViRMfqxCQVXvcYphdu90020626;     bXUzRPOLjhqAViRMfqxCQVXvcYphdu90020626 = bXUzRPOLjhqAViRMfqxCQVXvcYphdu16974251;     bXUzRPOLjhqAViRMfqxCQVXvcYphdu16974251 = bXUzRPOLjhqAViRMfqxCQVXvcYphdu99125278;     bXUzRPOLjhqAViRMfqxCQVXvcYphdu99125278 = bXUzRPOLjhqAViRMfqxCQVXvcYphdu54816629;     bXUzRPOLjhqAViRMfqxCQVXvcYphdu54816629 = bXUzRPOLjhqAViRMfqxCQVXvcYphdu28706137;     bXUzRPOLjhqAViRMfqxCQVXvcYphdu28706137 = bXUzRPOLjhqAViRMfqxCQVXvcYphdu77800899;     bXUzRPOLjhqAViRMfqxCQVXvcYphdu77800899 = bXUzRPOLjhqAViRMfqxCQVXvcYphdu29882273;     bXUzRPOLjhqAViRMfqxCQVXvcYphdu29882273 = bXUzRPOLjhqAViRMfqxCQVXvcYphdu75083999;     bXUzRPOLjhqAViRMfqxCQVXvcYphdu75083999 = bXUzRPOLjhqAViRMfqxCQVXvcYphdu96225184;     bXUzRPOLjhqAViRMfqxCQVXvcYphdu96225184 = bXUzRPOLjhqAViRMfqxCQVXvcYphdu96901151;     bXUzRPOLjhqAViRMfqxCQVXvcYphdu96901151 = bXUzRPOLjhqAViRMfqxCQVXvcYphdu52213565;     bXUzRPOLjhqAViRMfqxCQVXvcYphdu52213565 = bXUzRPOLjhqAViRMfqxCQVXvcYphdu64163346;     bXUzRPOLjhqAViRMfqxCQVXvcYphdu64163346 = bXUzRPOLjhqAViRMfqxCQVXvcYphdu97109207;     bXUzRPOLjhqAViRMfqxCQVXvcYphdu97109207 = bXUzRPOLjhqAViRMfqxCQVXvcYphdu89897730;     bXUzRPOLjhqAViRMfqxCQVXvcYphdu89897730 = bXUzRPOLjhqAViRMfqxCQVXvcYphdu5162077;     bXUzRPOLjhqAViRMfqxCQVXvcYphdu5162077 = bXUzRPOLjhqAViRMfqxCQVXvcYphdu4299513;     bXUzRPOLjhqAViRMfqxCQVXvcYphdu4299513 = bXUzRPOLjhqAViRMfqxCQVXvcYphdu63187878;     bXUzRPOLjhqAViRMfqxCQVXvcYphdu63187878 = bXUzRPOLjhqAViRMfqxCQVXvcYphdu64682002;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void dNtqUnnzvhkXOoCBZZFxjqgoc929694() {     double ThYTZTzjKOpwoUFuBVkukdAPxEcaRN15846085 = -756544425;    double ThYTZTzjKOpwoUFuBVkukdAPxEcaRN1385115 = -698863671;    double ThYTZTzjKOpwoUFuBVkukdAPxEcaRN40746659 = 86912541;    double ThYTZTzjKOpwoUFuBVkukdAPxEcaRN72440961 = -847072147;    double ThYTZTzjKOpwoUFuBVkukdAPxEcaRN33622398 = -790032337;    double ThYTZTzjKOpwoUFuBVkukdAPxEcaRN61849914 = -637568896;    double ThYTZTzjKOpwoUFuBVkukdAPxEcaRN40642492 = -775304856;    double ThYTZTzjKOpwoUFuBVkukdAPxEcaRN63837363 = -909761475;    double ThYTZTzjKOpwoUFuBVkukdAPxEcaRN36175428 = 12991185;    double ThYTZTzjKOpwoUFuBVkukdAPxEcaRN99093619 = -7674368;    double ThYTZTzjKOpwoUFuBVkukdAPxEcaRN14780530 = -990655272;    double ThYTZTzjKOpwoUFuBVkukdAPxEcaRN24741102 = -483969994;    double ThYTZTzjKOpwoUFuBVkukdAPxEcaRN5673735 = -940410519;    double ThYTZTzjKOpwoUFuBVkukdAPxEcaRN72732324 = 29090774;    double ThYTZTzjKOpwoUFuBVkukdAPxEcaRN95364180 = -241889193;    double ThYTZTzjKOpwoUFuBVkukdAPxEcaRN66384487 = -618895267;    double ThYTZTzjKOpwoUFuBVkukdAPxEcaRN76614974 = -4639950;    double ThYTZTzjKOpwoUFuBVkukdAPxEcaRN17160362 = -233549289;    double ThYTZTzjKOpwoUFuBVkukdAPxEcaRN30255020 = -817471353;    double ThYTZTzjKOpwoUFuBVkukdAPxEcaRN23207088 = -554101925;    double ThYTZTzjKOpwoUFuBVkukdAPxEcaRN81998419 = -651232905;    double ThYTZTzjKOpwoUFuBVkukdAPxEcaRN5474647 = -449064598;    double ThYTZTzjKOpwoUFuBVkukdAPxEcaRN75121966 = -158001601;    double ThYTZTzjKOpwoUFuBVkukdAPxEcaRN55322010 = -208181283;    double ThYTZTzjKOpwoUFuBVkukdAPxEcaRN29794596 = -31664790;    double ThYTZTzjKOpwoUFuBVkukdAPxEcaRN36861574 = -933648726;    double ThYTZTzjKOpwoUFuBVkukdAPxEcaRN21593232 = -179513263;    double ThYTZTzjKOpwoUFuBVkukdAPxEcaRN46311750 = -718461346;    double ThYTZTzjKOpwoUFuBVkukdAPxEcaRN3371941 = -445112309;    double ThYTZTzjKOpwoUFuBVkukdAPxEcaRN53404676 = -974510025;    double ThYTZTzjKOpwoUFuBVkukdAPxEcaRN50990621 = -605026202;    double ThYTZTzjKOpwoUFuBVkukdAPxEcaRN80749634 = 59739343;    double ThYTZTzjKOpwoUFuBVkukdAPxEcaRN66171490 = -651479395;    double ThYTZTzjKOpwoUFuBVkukdAPxEcaRN24029850 = -574038963;    double ThYTZTzjKOpwoUFuBVkukdAPxEcaRN55560121 = -703436331;    double ThYTZTzjKOpwoUFuBVkukdAPxEcaRN66798428 = -994878078;    double ThYTZTzjKOpwoUFuBVkukdAPxEcaRN72888601 = -925193768;    double ThYTZTzjKOpwoUFuBVkukdAPxEcaRN22335818 = -10649740;    double ThYTZTzjKOpwoUFuBVkukdAPxEcaRN94163381 = -211298729;    double ThYTZTzjKOpwoUFuBVkukdAPxEcaRN60033683 = -634481487;    double ThYTZTzjKOpwoUFuBVkukdAPxEcaRN57610279 = -41460243;    double ThYTZTzjKOpwoUFuBVkukdAPxEcaRN53278566 = 35334227;    double ThYTZTzjKOpwoUFuBVkukdAPxEcaRN95952728 = -819660862;    double ThYTZTzjKOpwoUFuBVkukdAPxEcaRN95770636 = -836241299;    double ThYTZTzjKOpwoUFuBVkukdAPxEcaRN75314587 = -512269214;    double ThYTZTzjKOpwoUFuBVkukdAPxEcaRN80701936 = 29858063;    double ThYTZTzjKOpwoUFuBVkukdAPxEcaRN9019915 = -97486006;    double ThYTZTzjKOpwoUFuBVkukdAPxEcaRN15982434 = -52506798;    double ThYTZTzjKOpwoUFuBVkukdAPxEcaRN42468285 = -686682675;    double ThYTZTzjKOpwoUFuBVkukdAPxEcaRN12583856 = -63557727;    double ThYTZTzjKOpwoUFuBVkukdAPxEcaRN87227438 = -199285141;    double ThYTZTzjKOpwoUFuBVkukdAPxEcaRN43423812 = -745506128;    double ThYTZTzjKOpwoUFuBVkukdAPxEcaRN78424838 = 62473103;    double ThYTZTzjKOpwoUFuBVkukdAPxEcaRN57686915 = -921554053;    double ThYTZTzjKOpwoUFuBVkukdAPxEcaRN18931274 = -894646481;    double ThYTZTzjKOpwoUFuBVkukdAPxEcaRN10371439 = -207479827;    double ThYTZTzjKOpwoUFuBVkukdAPxEcaRN26263149 = -440862071;    double ThYTZTzjKOpwoUFuBVkukdAPxEcaRN85424648 = -704906176;    double ThYTZTzjKOpwoUFuBVkukdAPxEcaRN42646366 = -715407357;    double ThYTZTzjKOpwoUFuBVkukdAPxEcaRN96760823 = -856383612;    double ThYTZTzjKOpwoUFuBVkukdAPxEcaRN40256683 = -358055633;    double ThYTZTzjKOpwoUFuBVkukdAPxEcaRN94330742 = 43156490;    double ThYTZTzjKOpwoUFuBVkukdAPxEcaRN60465422 = -364649167;    double ThYTZTzjKOpwoUFuBVkukdAPxEcaRN82770751 = -12498791;    double ThYTZTzjKOpwoUFuBVkukdAPxEcaRN48102998 = -402648167;    double ThYTZTzjKOpwoUFuBVkukdAPxEcaRN34030895 = -950394615;    double ThYTZTzjKOpwoUFuBVkukdAPxEcaRN58569611 = -832490599;    double ThYTZTzjKOpwoUFuBVkukdAPxEcaRN81643885 = -266371556;    double ThYTZTzjKOpwoUFuBVkukdAPxEcaRN17172203 = -267472896;    double ThYTZTzjKOpwoUFuBVkukdAPxEcaRN28565753 = -247011115;    double ThYTZTzjKOpwoUFuBVkukdAPxEcaRN93495886 = -693701500;    double ThYTZTzjKOpwoUFuBVkukdAPxEcaRN54279156 = -993990210;    double ThYTZTzjKOpwoUFuBVkukdAPxEcaRN22996981 = 77749439;    double ThYTZTzjKOpwoUFuBVkukdAPxEcaRN70221336 = -82989867;    double ThYTZTzjKOpwoUFuBVkukdAPxEcaRN65596808 = -412641682;    double ThYTZTzjKOpwoUFuBVkukdAPxEcaRN28719853 = -586567133;    double ThYTZTzjKOpwoUFuBVkukdAPxEcaRN9521918 = -629403736;    double ThYTZTzjKOpwoUFuBVkukdAPxEcaRN79351330 = -321760302;    double ThYTZTzjKOpwoUFuBVkukdAPxEcaRN80007423 = -695912070;    double ThYTZTzjKOpwoUFuBVkukdAPxEcaRN49092659 = 38477146;    double ThYTZTzjKOpwoUFuBVkukdAPxEcaRN27841659 = -736162720;    double ThYTZTzjKOpwoUFuBVkukdAPxEcaRN5610798 = -27006466;    double ThYTZTzjKOpwoUFuBVkukdAPxEcaRN3843465 = 68221328;    double ThYTZTzjKOpwoUFuBVkukdAPxEcaRN90788085 = -281554582;    double ThYTZTzjKOpwoUFuBVkukdAPxEcaRN66177238 = -675224884;    double ThYTZTzjKOpwoUFuBVkukdAPxEcaRN7566810 = -859520074;    double ThYTZTzjKOpwoUFuBVkukdAPxEcaRN2324796 = 97266239;    double ThYTZTzjKOpwoUFuBVkukdAPxEcaRN8484575 = -729925343;    double ThYTZTzjKOpwoUFuBVkukdAPxEcaRN5098576 = -679392483;    double ThYTZTzjKOpwoUFuBVkukdAPxEcaRN45188683 = -395956504;    double ThYTZTzjKOpwoUFuBVkukdAPxEcaRN40535279 = -454016008;    double ThYTZTzjKOpwoUFuBVkukdAPxEcaRN87463952 = -120287592;    double ThYTZTzjKOpwoUFuBVkukdAPxEcaRN79689452 = -295242384;    double ThYTZTzjKOpwoUFuBVkukdAPxEcaRN97402557 = -354915117;    double ThYTZTzjKOpwoUFuBVkukdAPxEcaRN19777001 = -176425854;    double ThYTZTzjKOpwoUFuBVkukdAPxEcaRN63279537 = 15383267;    double ThYTZTzjKOpwoUFuBVkukdAPxEcaRN92813144 = -600016607;    double ThYTZTzjKOpwoUFuBVkukdAPxEcaRN13181978 = -707162072;    double ThYTZTzjKOpwoUFuBVkukdAPxEcaRN47667638 = -333593133;    double ThYTZTzjKOpwoUFuBVkukdAPxEcaRN41283692 = -756544425;     ThYTZTzjKOpwoUFuBVkukdAPxEcaRN15846085 = ThYTZTzjKOpwoUFuBVkukdAPxEcaRN1385115;     ThYTZTzjKOpwoUFuBVkukdAPxEcaRN1385115 = ThYTZTzjKOpwoUFuBVkukdAPxEcaRN40746659;     ThYTZTzjKOpwoUFuBVkukdAPxEcaRN40746659 = ThYTZTzjKOpwoUFuBVkukdAPxEcaRN72440961;     ThYTZTzjKOpwoUFuBVkukdAPxEcaRN72440961 = ThYTZTzjKOpwoUFuBVkukdAPxEcaRN33622398;     ThYTZTzjKOpwoUFuBVkukdAPxEcaRN33622398 = ThYTZTzjKOpwoUFuBVkukdAPxEcaRN61849914;     ThYTZTzjKOpwoUFuBVkukdAPxEcaRN61849914 = ThYTZTzjKOpwoUFuBVkukdAPxEcaRN40642492;     ThYTZTzjKOpwoUFuBVkukdAPxEcaRN40642492 = ThYTZTzjKOpwoUFuBVkukdAPxEcaRN63837363;     ThYTZTzjKOpwoUFuBVkukdAPxEcaRN63837363 = ThYTZTzjKOpwoUFuBVkukdAPxEcaRN36175428;     ThYTZTzjKOpwoUFuBVkukdAPxEcaRN36175428 = ThYTZTzjKOpwoUFuBVkukdAPxEcaRN99093619;     ThYTZTzjKOpwoUFuBVkukdAPxEcaRN99093619 = ThYTZTzjKOpwoUFuBVkukdAPxEcaRN14780530;     ThYTZTzjKOpwoUFuBVkukdAPxEcaRN14780530 = ThYTZTzjKOpwoUFuBVkukdAPxEcaRN24741102;     ThYTZTzjKOpwoUFuBVkukdAPxEcaRN24741102 = ThYTZTzjKOpwoUFuBVkukdAPxEcaRN5673735;     ThYTZTzjKOpwoUFuBVkukdAPxEcaRN5673735 = ThYTZTzjKOpwoUFuBVkukdAPxEcaRN72732324;     ThYTZTzjKOpwoUFuBVkukdAPxEcaRN72732324 = ThYTZTzjKOpwoUFuBVkukdAPxEcaRN95364180;     ThYTZTzjKOpwoUFuBVkukdAPxEcaRN95364180 = ThYTZTzjKOpwoUFuBVkukdAPxEcaRN66384487;     ThYTZTzjKOpwoUFuBVkukdAPxEcaRN66384487 = ThYTZTzjKOpwoUFuBVkukdAPxEcaRN76614974;     ThYTZTzjKOpwoUFuBVkukdAPxEcaRN76614974 = ThYTZTzjKOpwoUFuBVkukdAPxEcaRN17160362;     ThYTZTzjKOpwoUFuBVkukdAPxEcaRN17160362 = ThYTZTzjKOpwoUFuBVkukdAPxEcaRN30255020;     ThYTZTzjKOpwoUFuBVkukdAPxEcaRN30255020 = ThYTZTzjKOpwoUFuBVkukdAPxEcaRN23207088;     ThYTZTzjKOpwoUFuBVkukdAPxEcaRN23207088 = ThYTZTzjKOpwoUFuBVkukdAPxEcaRN81998419;     ThYTZTzjKOpwoUFuBVkukdAPxEcaRN81998419 = ThYTZTzjKOpwoUFuBVkukdAPxEcaRN5474647;     ThYTZTzjKOpwoUFuBVkukdAPxEcaRN5474647 = ThYTZTzjKOpwoUFuBVkukdAPxEcaRN75121966;     ThYTZTzjKOpwoUFuBVkukdAPxEcaRN75121966 = ThYTZTzjKOpwoUFuBVkukdAPxEcaRN55322010;     ThYTZTzjKOpwoUFuBVkukdAPxEcaRN55322010 = ThYTZTzjKOpwoUFuBVkukdAPxEcaRN29794596;     ThYTZTzjKOpwoUFuBVkukdAPxEcaRN29794596 = ThYTZTzjKOpwoUFuBVkukdAPxEcaRN36861574;     ThYTZTzjKOpwoUFuBVkukdAPxEcaRN36861574 = ThYTZTzjKOpwoUFuBVkukdAPxEcaRN21593232;     ThYTZTzjKOpwoUFuBVkukdAPxEcaRN21593232 = ThYTZTzjKOpwoUFuBVkukdAPxEcaRN46311750;     ThYTZTzjKOpwoUFuBVkukdAPxEcaRN46311750 = ThYTZTzjKOpwoUFuBVkukdAPxEcaRN3371941;     ThYTZTzjKOpwoUFuBVkukdAPxEcaRN3371941 = ThYTZTzjKOpwoUFuBVkukdAPxEcaRN53404676;     ThYTZTzjKOpwoUFuBVkukdAPxEcaRN53404676 = ThYTZTzjKOpwoUFuBVkukdAPxEcaRN50990621;     ThYTZTzjKOpwoUFuBVkukdAPxEcaRN50990621 = ThYTZTzjKOpwoUFuBVkukdAPxEcaRN80749634;     ThYTZTzjKOpwoUFuBVkukdAPxEcaRN80749634 = ThYTZTzjKOpwoUFuBVkukdAPxEcaRN66171490;     ThYTZTzjKOpwoUFuBVkukdAPxEcaRN66171490 = ThYTZTzjKOpwoUFuBVkukdAPxEcaRN24029850;     ThYTZTzjKOpwoUFuBVkukdAPxEcaRN24029850 = ThYTZTzjKOpwoUFuBVkukdAPxEcaRN55560121;     ThYTZTzjKOpwoUFuBVkukdAPxEcaRN55560121 = ThYTZTzjKOpwoUFuBVkukdAPxEcaRN66798428;     ThYTZTzjKOpwoUFuBVkukdAPxEcaRN66798428 = ThYTZTzjKOpwoUFuBVkukdAPxEcaRN72888601;     ThYTZTzjKOpwoUFuBVkukdAPxEcaRN72888601 = ThYTZTzjKOpwoUFuBVkukdAPxEcaRN22335818;     ThYTZTzjKOpwoUFuBVkukdAPxEcaRN22335818 = ThYTZTzjKOpwoUFuBVkukdAPxEcaRN94163381;     ThYTZTzjKOpwoUFuBVkukdAPxEcaRN94163381 = ThYTZTzjKOpwoUFuBVkukdAPxEcaRN60033683;     ThYTZTzjKOpwoUFuBVkukdAPxEcaRN60033683 = ThYTZTzjKOpwoUFuBVkukdAPxEcaRN57610279;     ThYTZTzjKOpwoUFuBVkukdAPxEcaRN57610279 = ThYTZTzjKOpwoUFuBVkukdAPxEcaRN53278566;     ThYTZTzjKOpwoUFuBVkukdAPxEcaRN53278566 = ThYTZTzjKOpwoUFuBVkukdAPxEcaRN95952728;     ThYTZTzjKOpwoUFuBVkukdAPxEcaRN95952728 = ThYTZTzjKOpwoUFuBVkukdAPxEcaRN95770636;     ThYTZTzjKOpwoUFuBVkukdAPxEcaRN95770636 = ThYTZTzjKOpwoUFuBVkukdAPxEcaRN75314587;     ThYTZTzjKOpwoUFuBVkukdAPxEcaRN75314587 = ThYTZTzjKOpwoUFuBVkukdAPxEcaRN80701936;     ThYTZTzjKOpwoUFuBVkukdAPxEcaRN80701936 = ThYTZTzjKOpwoUFuBVkukdAPxEcaRN9019915;     ThYTZTzjKOpwoUFuBVkukdAPxEcaRN9019915 = ThYTZTzjKOpwoUFuBVkukdAPxEcaRN15982434;     ThYTZTzjKOpwoUFuBVkukdAPxEcaRN15982434 = ThYTZTzjKOpwoUFuBVkukdAPxEcaRN42468285;     ThYTZTzjKOpwoUFuBVkukdAPxEcaRN42468285 = ThYTZTzjKOpwoUFuBVkukdAPxEcaRN12583856;     ThYTZTzjKOpwoUFuBVkukdAPxEcaRN12583856 = ThYTZTzjKOpwoUFuBVkukdAPxEcaRN87227438;     ThYTZTzjKOpwoUFuBVkukdAPxEcaRN87227438 = ThYTZTzjKOpwoUFuBVkukdAPxEcaRN43423812;     ThYTZTzjKOpwoUFuBVkukdAPxEcaRN43423812 = ThYTZTzjKOpwoUFuBVkukdAPxEcaRN78424838;     ThYTZTzjKOpwoUFuBVkukdAPxEcaRN78424838 = ThYTZTzjKOpwoUFuBVkukdAPxEcaRN57686915;     ThYTZTzjKOpwoUFuBVkukdAPxEcaRN57686915 = ThYTZTzjKOpwoUFuBVkukdAPxEcaRN18931274;     ThYTZTzjKOpwoUFuBVkukdAPxEcaRN18931274 = ThYTZTzjKOpwoUFuBVkukdAPxEcaRN10371439;     ThYTZTzjKOpwoUFuBVkukdAPxEcaRN10371439 = ThYTZTzjKOpwoUFuBVkukdAPxEcaRN26263149;     ThYTZTzjKOpwoUFuBVkukdAPxEcaRN26263149 = ThYTZTzjKOpwoUFuBVkukdAPxEcaRN85424648;     ThYTZTzjKOpwoUFuBVkukdAPxEcaRN85424648 = ThYTZTzjKOpwoUFuBVkukdAPxEcaRN42646366;     ThYTZTzjKOpwoUFuBVkukdAPxEcaRN42646366 = ThYTZTzjKOpwoUFuBVkukdAPxEcaRN96760823;     ThYTZTzjKOpwoUFuBVkukdAPxEcaRN96760823 = ThYTZTzjKOpwoUFuBVkukdAPxEcaRN40256683;     ThYTZTzjKOpwoUFuBVkukdAPxEcaRN40256683 = ThYTZTzjKOpwoUFuBVkukdAPxEcaRN94330742;     ThYTZTzjKOpwoUFuBVkukdAPxEcaRN94330742 = ThYTZTzjKOpwoUFuBVkukdAPxEcaRN60465422;     ThYTZTzjKOpwoUFuBVkukdAPxEcaRN60465422 = ThYTZTzjKOpwoUFuBVkukdAPxEcaRN82770751;     ThYTZTzjKOpwoUFuBVkukdAPxEcaRN82770751 = ThYTZTzjKOpwoUFuBVkukdAPxEcaRN48102998;     ThYTZTzjKOpwoUFuBVkukdAPxEcaRN48102998 = ThYTZTzjKOpwoUFuBVkukdAPxEcaRN34030895;     ThYTZTzjKOpwoUFuBVkukdAPxEcaRN34030895 = ThYTZTzjKOpwoUFuBVkukdAPxEcaRN58569611;     ThYTZTzjKOpwoUFuBVkukdAPxEcaRN58569611 = ThYTZTzjKOpwoUFuBVkukdAPxEcaRN81643885;     ThYTZTzjKOpwoUFuBVkukdAPxEcaRN81643885 = ThYTZTzjKOpwoUFuBVkukdAPxEcaRN17172203;     ThYTZTzjKOpwoUFuBVkukdAPxEcaRN17172203 = ThYTZTzjKOpwoUFuBVkukdAPxEcaRN28565753;     ThYTZTzjKOpwoUFuBVkukdAPxEcaRN28565753 = ThYTZTzjKOpwoUFuBVkukdAPxEcaRN93495886;     ThYTZTzjKOpwoUFuBVkukdAPxEcaRN93495886 = ThYTZTzjKOpwoUFuBVkukdAPxEcaRN54279156;     ThYTZTzjKOpwoUFuBVkukdAPxEcaRN54279156 = ThYTZTzjKOpwoUFuBVkukdAPxEcaRN22996981;     ThYTZTzjKOpwoUFuBVkukdAPxEcaRN22996981 = ThYTZTzjKOpwoUFuBVkukdAPxEcaRN70221336;     ThYTZTzjKOpwoUFuBVkukdAPxEcaRN70221336 = ThYTZTzjKOpwoUFuBVkukdAPxEcaRN65596808;     ThYTZTzjKOpwoUFuBVkukdAPxEcaRN65596808 = ThYTZTzjKOpwoUFuBVkukdAPxEcaRN28719853;     ThYTZTzjKOpwoUFuBVkukdAPxEcaRN28719853 = ThYTZTzjKOpwoUFuBVkukdAPxEcaRN9521918;     ThYTZTzjKOpwoUFuBVkukdAPxEcaRN9521918 = ThYTZTzjKOpwoUFuBVkukdAPxEcaRN79351330;     ThYTZTzjKOpwoUFuBVkukdAPxEcaRN79351330 = ThYTZTzjKOpwoUFuBVkukdAPxEcaRN80007423;     ThYTZTzjKOpwoUFuBVkukdAPxEcaRN80007423 = ThYTZTzjKOpwoUFuBVkukdAPxEcaRN49092659;     ThYTZTzjKOpwoUFuBVkukdAPxEcaRN49092659 = ThYTZTzjKOpwoUFuBVkukdAPxEcaRN27841659;     ThYTZTzjKOpwoUFuBVkukdAPxEcaRN27841659 = ThYTZTzjKOpwoUFuBVkukdAPxEcaRN5610798;     ThYTZTzjKOpwoUFuBVkukdAPxEcaRN5610798 = ThYTZTzjKOpwoUFuBVkukdAPxEcaRN3843465;     ThYTZTzjKOpwoUFuBVkukdAPxEcaRN3843465 = ThYTZTzjKOpwoUFuBVkukdAPxEcaRN90788085;     ThYTZTzjKOpwoUFuBVkukdAPxEcaRN90788085 = ThYTZTzjKOpwoUFuBVkukdAPxEcaRN66177238;     ThYTZTzjKOpwoUFuBVkukdAPxEcaRN66177238 = ThYTZTzjKOpwoUFuBVkukdAPxEcaRN7566810;     ThYTZTzjKOpwoUFuBVkukdAPxEcaRN7566810 = ThYTZTzjKOpwoUFuBVkukdAPxEcaRN2324796;     ThYTZTzjKOpwoUFuBVkukdAPxEcaRN2324796 = ThYTZTzjKOpwoUFuBVkukdAPxEcaRN8484575;     ThYTZTzjKOpwoUFuBVkukdAPxEcaRN8484575 = ThYTZTzjKOpwoUFuBVkukdAPxEcaRN5098576;     ThYTZTzjKOpwoUFuBVkukdAPxEcaRN5098576 = ThYTZTzjKOpwoUFuBVkukdAPxEcaRN45188683;     ThYTZTzjKOpwoUFuBVkukdAPxEcaRN45188683 = ThYTZTzjKOpwoUFuBVkukdAPxEcaRN40535279;     ThYTZTzjKOpwoUFuBVkukdAPxEcaRN40535279 = ThYTZTzjKOpwoUFuBVkukdAPxEcaRN87463952;     ThYTZTzjKOpwoUFuBVkukdAPxEcaRN87463952 = ThYTZTzjKOpwoUFuBVkukdAPxEcaRN79689452;     ThYTZTzjKOpwoUFuBVkukdAPxEcaRN79689452 = ThYTZTzjKOpwoUFuBVkukdAPxEcaRN97402557;     ThYTZTzjKOpwoUFuBVkukdAPxEcaRN97402557 = ThYTZTzjKOpwoUFuBVkukdAPxEcaRN19777001;     ThYTZTzjKOpwoUFuBVkukdAPxEcaRN19777001 = ThYTZTzjKOpwoUFuBVkukdAPxEcaRN63279537;     ThYTZTzjKOpwoUFuBVkukdAPxEcaRN63279537 = ThYTZTzjKOpwoUFuBVkukdAPxEcaRN92813144;     ThYTZTzjKOpwoUFuBVkukdAPxEcaRN92813144 = ThYTZTzjKOpwoUFuBVkukdAPxEcaRN13181978;     ThYTZTzjKOpwoUFuBVkukdAPxEcaRN13181978 = ThYTZTzjKOpwoUFuBVkukdAPxEcaRN47667638;     ThYTZTzjKOpwoUFuBVkukdAPxEcaRN47667638 = ThYTZTzjKOpwoUFuBVkukdAPxEcaRN41283692;     ThYTZTzjKOpwoUFuBVkukdAPxEcaRN41283692 = ThYTZTzjKOpwoUFuBVkukdAPxEcaRN15846085;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void gmYXcyDicFnUJftSyDNhEZBuZ10534420() {     double mvJQCgMKkuOrxHdGHWQMydcAMyElxc37668306 = -224759756;    double mvJQCgMKkuOrxHdGHWQMydcAMyElxc62852919 = 18537476;    double mvJQCgMKkuOrxHdGHWQMydcAMyElxc86473929 = 39695009;    double mvJQCgMKkuOrxHdGHWQMydcAMyElxc3816107 = 48143678;    double mvJQCgMKkuOrxHdGHWQMydcAMyElxc93756728 = -667283259;    double mvJQCgMKkuOrxHdGHWQMydcAMyElxc85868229 = -649112054;    double mvJQCgMKkuOrxHdGHWQMydcAMyElxc69663076 = -838622980;    double mvJQCgMKkuOrxHdGHWQMydcAMyElxc50699992 = -917942323;    double mvJQCgMKkuOrxHdGHWQMydcAMyElxc32699067 = 27195767;    double mvJQCgMKkuOrxHdGHWQMydcAMyElxc60376845 = -977892766;    double mvJQCgMKkuOrxHdGHWQMydcAMyElxc85696798 = -546412975;    double mvJQCgMKkuOrxHdGHWQMydcAMyElxc40922985 = -587151600;    double mvJQCgMKkuOrxHdGHWQMydcAMyElxc38662677 = -378444308;    double mvJQCgMKkuOrxHdGHWQMydcAMyElxc39698792 = -820986023;    double mvJQCgMKkuOrxHdGHWQMydcAMyElxc90621975 = -168731112;    double mvJQCgMKkuOrxHdGHWQMydcAMyElxc14355214 = 38738192;    double mvJQCgMKkuOrxHdGHWQMydcAMyElxc70064033 = -390464668;    double mvJQCgMKkuOrxHdGHWQMydcAMyElxc79685665 = -155270207;    double mvJQCgMKkuOrxHdGHWQMydcAMyElxc34892243 = -890607010;    double mvJQCgMKkuOrxHdGHWQMydcAMyElxc4316730 = 54653019;    double mvJQCgMKkuOrxHdGHWQMydcAMyElxc39152704 = -383311608;    double mvJQCgMKkuOrxHdGHWQMydcAMyElxc69876624 = -519815762;    double mvJQCgMKkuOrxHdGHWQMydcAMyElxc84593370 = -814028956;    double mvJQCgMKkuOrxHdGHWQMydcAMyElxc92599632 = -618280149;    double mvJQCgMKkuOrxHdGHWQMydcAMyElxc3725263 = 57438237;    double mvJQCgMKkuOrxHdGHWQMydcAMyElxc26437428 = -160834254;    double mvJQCgMKkuOrxHdGHWQMydcAMyElxc94629835 = -806317307;    double mvJQCgMKkuOrxHdGHWQMydcAMyElxc81891575 = -582909579;    double mvJQCgMKkuOrxHdGHWQMydcAMyElxc51268853 = -112058227;    double mvJQCgMKkuOrxHdGHWQMydcAMyElxc99221753 = -250724219;    double mvJQCgMKkuOrxHdGHWQMydcAMyElxc2155887 = 89246051;    double mvJQCgMKkuOrxHdGHWQMydcAMyElxc99640960 = -816149488;    double mvJQCgMKkuOrxHdGHWQMydcAMyElxc91490955 = -394083278;    double mvJQCgMKkuOrxHdGHWQMydcAMyElxc96568967 = -249858590;    double mvJQCgMKkuOrxHdGHWQMydcAMyElxc36394334 = -853254933;    double mvJQCgMKkuOrxHdGHWQMydcAMyElxc36375388 = 90705942;    double mvJQCgMKkuOrxHdGHWQMydcAMyElxc15970858 = -974810864;    double mvJQCgMKkuOrxHdGHWQMydcAMyElxc26273680 = -592192498;    double mvJQCgMKkuOrxHdGHWQMydcAMyElxc54543827 = 16295990;    double mvJQCgMKkuOrxHdGHWQMydcAMyElxc72704329 = 7969512;    double mvJQCgMKkuOrxHdGHWQMydcAMyElxc11986126 = -475599501;    double mvJQCgMKkuOrxHdGHWQMydcAMyElxc69780737 = -752131850;    double mvJQCgMKkuOrxHdGHWQMydcAMyElxc43320128 = -863627677;    double mvJQCgMKkuOrxHdGHWQMydcAMyElxc43865495 = -745047468;    double mvJQCgMKkuOrxHdGHWQMydcAMyElxc55230398 = -698957843;    double mvJQCgMKkuOrxHdGHWQMydcAMyElxc19908416 = -773574167;    double mvJQCgMKkuOrxHdGHWQMydcAMyElxc34688026 = -278493526;    double mvJQCgMKkuOrxHdGHWQMydcAMyElxc97822185 = -891002786;    double mvJQCgMKkuOrxHdGHWQMydcAMyElxc49532377 = -871799097;    double mvJQCgMKkuOrxHdGHWQMydcAMyElxc28631333 = -42612912;    double mvJQCgMKkuOrxHdGHWQMydcAMyElxc75689257 = -243174467;    double mvJQCgMKkuOrxHdGHWQMydcAMyElxc39812476 = 29115791;    double mvJQCgMKkuOrxHdGHWQMydcAMyElxc69647703 = 98877963;    double mvJQCgMKkuOrxHdGHWQMydcAMyElxc85712037 = -12563113;    double mvJQCgMKkuOrxHdGHWQMydcAMyElxc71381715 = -855768230;    double mvJQCgMKkuOrxHdGHWQMydcAMyElxc67791681 = -704943995;    double mvJQCgMKkuOrxHdGHWQMydcAMyElxc78259548 = -167433568;    double mvJQCgMKkuOrxHdGHWQMydcAMyElxc93874296 = -342024843;    double mvJQCgMKkuOrxHdGHWQMydcAMyElxc90845 = 90705440;    double mvJQCgMKkuOrxHdGHWQMydcAMyElxc67319301 = -406449006;    double mvJQCgMKkuOrxHdGHWQMydcAMyElxc91238394 = -842794747;    double mvJQCgMKkuOrxHdGHWQMydcAMyElxc87771501 = -155713401;    double mvJQCgMKkuOrxHdGHWQMydcAMyElxc99431138 = -705884097;    double mvJQCgMKkuOrxHdGHWQMydcAMyElxc33477314 = -722080015;    double mvJQCgMKkuOrxHdGHWQMydcAMyElxc58220958 = -967138817;    double mvJQCgMKkuOrxHdGHWQMydcAMyElxc86055838 = -730263487;    double mvJQCgMKkuOrxHdGHWQMydcAMyElxc49432030 = -93068322;    double mvJQCgMKkuOrxHdGHWQMydcAMyElxc42093710 = -28585718;    double mvJQCgMKkuOrxHdGHWQMydcAMyElxc3304458 = -967731091;    double mvJQCgMKkuOrxHdGHWQMydcAMyElxc54246588 = -159437054;    double mvJQCgMKkuOrxHdGHWQMydcAMyElxc98384355 = 13549056;    double mvJQCgMKkuOrxHdGHWQMydcAMyElxc43790353 = -798272171;    double mvJQCgMKkuOrxHdGHWQMydcAMyElxc25141838 = -71566198;    double mvJQCgMKkuOrxHdGHWQMydcAMyElxc62187914 = -798576523;    double mvJQCgMKkuOrxHdGHWQMydcAMyElxc92330604 = -469747480;    double mvJQCgMKkuOrxHdGHWQMydcAMyElxc69371967 = -631179758;    double mvJQCgMKkuOrxHdGHWQMydcAMyElxc26556497 = -656188085;    double mvJQCgMKkuOrxHdGHWQMydcAMyElxc40727875 = 31018512;    double mvJQCgMKkuOrxHdGHWQMydcAMyElxc37369234 = -919322306;    double mvJQCgMKkuOrxHdGHWQMydcAMyElxc83816846 = -168987596;    double mvJQCgMKkuOrxHdGHWQMydcAMyElxc91749401 = -882340728;    double mvJQCgMKkuOrxHdGHWQMydcAMyElxc96807649 = -915314522;    double mvJQCgMKkuOrxHdGHWQMydcAMyElxc32359198 = -711110482;    double mvJQCgMKkuOrxHdGHWQMydcAMyElxc22637521 = 30554685;    double mvJQCgMKkuOrxHdGHWQMydcAMyElxc23532497 = 92450248;    double mvJQCgMKkuOrxHdGHWQMydcAMyElxc62343411 = -939869741;    double mvJQCgMKkuOrxHdGHWQMydcAMyElxc29993257 = -815027452;    double mvJQCgMKkuOrxHdGHWQMydcAMyElxc5778918 = -281520166;    double mvJQCgMKkuOrxHdGHWQMydcAMyElxc25187252 = -394090361;    double mvJQCgMKkuOrxHdGHWQMydcAMyElxc68602653 = -48310939;    double mvJQCgMKkuOrxHdGHWQMydcAMyElxc58115839 = -741860490;    double mvJQCgMKkuOrxHdGHWQMydcAMyElxc22096561 = -532786022;    double mvJQCgMKkuOrxHdGHWQMydcAMyElxc26182836 = -582897938;    double mvJQCgMKkuOrxHdGHWQMydcAMyElxc87224526 = -577255004;    double mvJQCgMKkuOrxHdGHWQMydcAMyElxc81465934 = -149235741;    double mvJQCgMKkuOrxHdGHWQMydcAMyElxc24214624 = -219886100;    double mvJQCgMKkuOrxHdGHWQMydcAMyElxc70349598 = 53752246;    double mvJQCgMKkuOrxHdGHWQMydcAMyElxc9842814 = -41547663;    double mvJQCgMKkuOrxHdGHWQMydcAMyElxc85644537 = -777908652;    double mvJQCgMKkuOrxHdGHWQMydcAMyElxc69174560 = -224759756;     mvJQCgMKkuOrxHdGHWQMydcAMyElxc37668306 = mvJQCgMKkuOrxHdGHWQMydcAMyElxc62852919;     mvJQCgMKkuOrxHdGHWQMydcAMyElxc62852919 = mvJQCgMKkuOrxHdGHWQMydcAMyElxc86473929;     mvJQCgMKkuOrxHdGHWQMydcAMyElxc86473929 = mvJQCgMKkuOrxHdGHWQMydcAMyElxc3816107;     mvJQCgMKkuOrxHdGHWQMydcAMyElxc3816107 = mvJQCgMKkuOrxHdGHWQMydcAMyElxc93756728;     mvJQCgMKkuOrxHdGHWQMydcAMyElxc93756728 = mvJQCgMKkuOrxHdGHWQMydcAMyElxc85868229;     mvJQCgMKkuOrxHdGHWQMydcAMyElxc85868229 = mvJQCgMKkuOrxHdGHWQMydcAMyElxc69663076;     mvJQCgMKkuOrxHdGHWQMydcAMyElxc69663076 = mvJQCgMKkuOrxHdGHWQMydcAMyElxc50699992;     mvJQCgMKkuOrxHdGHWQMydcAMyElxc50699992 = mvJQCgMKkuOrxHdGHWQMydcAMyElxc32699067;     mvJQCgMKkuOrxHdGHWQMydcAMyElxc32699067 = mvJQCgMKkuOrxHdGHWQMydcAMyElxc60376845;     mvJQCgMKkuOrxHdGHWQMydcAMyElxc60376845 = mvJQCgMKkuOrxHdGHWQMydcAMyElxc85696798;     mvJQCgMKkuOrxHdGHWQMydcAMyElxc85696798 = mvJQCgMKkuOrxHdGHWQMydcAMyElxc40922985;     mvJQCgMKkuOrxHdGHWQMydcAMyElxc40922985 = mvJQCgMKkuOrxHdGHWQMydcAMyElxc38662677;     mvJQCgMKkuOrxHdGHWQMydcAMyElxc38662677 = mvJQCgMKkuOrxHdGHWQMydcAMyElxc39698792;     mvJQCgMKkuOrxHdGHWQMydcAMyElxc39698792 = mvJQCgMKkuOrxHdGHWQMydcAMyElxc90621975;     mvJQCgMKkuOrxHdGHWQMydcAMyElxc90621975 = mvJQCgMKkuOrxHdGHWQMydcAMyElxc14355214;     mvJQCgMKkuOrxHdGHWQMydcAMyElxc14355214 = mvJQCgMKkuOrxHdGHWQMydcAMyElxc70064033;     mvJQCgMKkuOrxHdGHWQMydcAMyElxc70064033 = mvJQCgMKkuOrxHdGHWQMydcAMyElxc79685665;     mvJQCgMKkuOrxHdGHWQMydcAMyElxc79685665 = mvJQCgMKkuOrxHdGHWQMydcAMyElxc34892243;     mvJQCgMKkuOrxHdGHWQMydcAMyElxc34892243 = mvJQCgMKkuOrxHdGHWQMydcAMyElxc4316730;     mvJQCgMKkuOrxHdGHWQMydcAMyElxc4316730 = mvJQCgMKkuOrxHdGHWQMydcAMyElxc39152704;     mvJQCgMKkuOrxHdGHWQMydcAMyElxc39152704 = mvJQCgMKkuOrxHdGHWQMydcAMyElxc69876624;     mvJQCgMKkuOrxHdGHWQMydcAMyElxc69876624 = mvJQCgMKkuOrxHdGHWQMydcAMyElxc84593370;     mvJQCgMKkuOrxHdGHWQMydcAMyElxc84593370 = mvJQCgMKkuOrxHdGHWQMydcAMyElxc92599632;     mvJQCgMKkuOrxHdGHWQMydcAMyElxc92599632 = mvJQCgMKkuOrxHdGHWQMydcAMyElxc3725263;     mvJQCgMKkuOrxHdGHWQMydcAMyElxc3725263 = mvJQCgMKkuOrxHdGHWQMydcAMyElxc26437428;     mvJQCgMKkuOrxHdGHWQMydcAMyElxc26437428 = mvJQCgMKkuOrxHdGHWQMydcAMyElxc94629835;     mvJQCgMKkuOrxHdGHWQMydcAMyElxc94629835 = mvJQCgMKkuOrxHdGHWQMydcAMyElxc81891575;     mvJQCgMKkuOrxHdGHWQMydcAMyElxc81891575 = mvJQCgMKkuOrxHdGHWQMydcAMyElxc51268853;     mvJQCgMKkuOrxHdGHWQMydcAMyElxc51268853 = mvJQCgMKkuOrxHdGHWQMydcAMyElxc99221753;     mvJQCgMKkuOrxHdGHWQMydcAMyElxc99221753 = mvJQCgMKkuOrxHdGHWQMydcAMyElxc2155887;     mvJQCgMKkuOrxHdGHWQMydcAMyElxc2155887 = mvJQCgMKkuOrxHdGHWQMydcAMyElxc99640960;     mvJQCgMKkuOrxHdGHWQMydcAMyElxc99640960 = mvJQCgMKkuOrxHdGHWQMydcAMyElxc91490955;     mvJQCgMKkuOrxHdGHWQMydcAMyElxc91490955 = mvJQCgMKkuOrxHdGHWQMydcAMyElxc96568967;     mvJQCgMKkuOrxHdGHWQMydcAMyElxc96568967 = mvJQCgMKkuOrxHdGHWQMydcAMyElxc36394334;     mvJQCgMKkuOrxHdGHWQMydcAMyElxc36394334 = mvJQCgMKkuOrxHdGHWQMydcAMyElxc36375388;     mvJQCgMKkuOrxHdGHWQMydcAMyElxc36375388 = mvJQCgMKkuOrxHdGHWQMydcAMyElxc15970858;     mvJQCgMKkuOrxHdGHWQMydcAMyElxc15970858 = mvJQCgMKkuOrxHdGHWQMydcAMyElxc26273680;     mvJQCgMKkuOrxHdGHWQMydcAMyElxc26273680 = mvJQCgMKkuOrxHdGHWQMydcAMyElxc54543827;     mvJQCgMKkuOrxHdGHWQMydcAMyElxc54543827 = mvJQCgMKkuOrxHdGHWQMydcAMyElxc72704329;     mvJQCgMKkuOrxHdGHWQMydcAMyElxc72704329 = mvJQCgMKkuOrxHdGHWQMydcAMyElxc11986126;     mvJQCgMKkuOrxHdGHWQMydcAMyElxc11986126 = mvJQCgMKkuOrxHdGHWQMydcAMyElxc69780737;     mvJQCgMKkuOrxHdGHWQMydcAMyElxc69780737 = mvJQCgMKkuOrxHdGHWQMydcAMyElxc43320128;     mvJQCgMKkuOrxHdGHWQMydcAMyElxc43320128 = mvJQCgMKkuOrxHdGHWQMydcAMyElxc43865495;     mvJQCgMKkuOrxHdGHWQMydcAMyElxc43865495 = mvJQCgMKkuOrxHdGHWQMydcAMyElxc55230398;     mvJQCgMKkuOrxHdGHWQMydcAMyElxc55230398 = mvJQCgMKkuOrxHdGHWQMydcAMyElxc19908416;     mvJQCgMKkuOrxHdGHWQMydcAMyElxc19908416 = mvJQCgMKkuOrxHdGHWQMydcAMyElxc34688026;     mvJQCgMKkuOrxHdGHWQMydcAMyElxc34688026 = mvJQCgMKkuOrxHdGHWQMydcAMyElxc97822185;     mvJQCgMKkuOrxHdGHWQMydcAMyElxc97822185 = mvJQCgMKkuOrxHdGHWQMydcAMyElxc49532377;     mvJQCgMKkuOrxHdGHWQMydcAMyElxc49532377 = mvJQCgMKkuOrxHdGHWQMydcAMyElxc28631333;     mvJQCgMKkuOrxHdGHWQMydcAMyElxc28631333 = mvJQCgMKkuOrxHdGHWQMydcAMyElxc75689257;     mvJQCgMKkuOrxHdGHWQMydcAMyElxc75689257 = mvJQCgMKkuOrxHdGHWQMydcAMyElxc39812476;     mvJQCgMKkuOrxHdGHWQMydcAMyElxc39812476 = mvJQCgMKkuOrxHdGHWQMydcAMyElxc69647703;     mvJQCgMKkuOrxHdGHWQMydcAMyElxc69647703 = mvJQCgMKkuOrxHdGHWQMydcAMyElxc85712037;     mvJQCgMKkuOrxHdGHWQMydcAMyElxc85712037 = mvJQCgMKkuOrxHdGHWQMydcAMyElxc71381715;     mvJQCgMKkuOrxHdGHWQMydcAMyElxc71381715 = mvJQCgMKkuOrxHdGHWQMydcAMyElxc67791681;     mvJQCgMKkuOrxHdGHWQMydcAMyElxc67791681 = mvJQCgMKkuOrxHdGHWQMydcAMyElxc78259548;     mvJQCgMKkuOrxHdGHWQMydcAMyElxc78259548 = mvJQCgMKkuOrxHdGHWQMydcAMyElxc93874296;     mvJQCgMKkuOrxHdGHWQMydcAMyElxc93874296 = mvJQCgMKkuOrxHdGHWQMydcAMyElxc90845;     mvJQCgMKkuOrxHdGHWQMydcAMyElxc90845 = mvJQCgMKkuOrxHdGHWQMydcAMyElxc67319301;     mvJQCgMKkuOrxHdGHWQMydcAMyElxc67319301 = mvJQCgMKkuOrxHdGHWQMydcAMyElxc91238394;     mvJQCgMKkuOrxHdGHWQMydcAMyElxc91238394 = mvJQCgMKkuOrxHdGHWQMydcAMyElxc87771501;     mvJQCgMKkuOrxHdGHWQMydcAMyElxc87771501 = mvJQCgMKkuOrxHdGHWQMydcAMyElxc99431138;     mvJQCgMKkuOrxHdGHWQMydcAMyElxc99431138 = mvJQCgMKkuOrxHdGHWQMydcAMyElxc33477314;     mvJQCgMKkuOrxHdGHWQMydcAMyElxc33477314 = mvJQCgMKkuOrxHdGHWQMydcAMyElxc58220958;     mvJQCgMKkuOrxHdGHWQMydcAMyElxc58220958 = mvJQCgMKkuOrxHdGHWQMydcAMyElxc86055838;     mvJQCgMKkuOrxHdGHWQMydcAMyElxc86055838 = mvJQCgMKkuOrxHdGHWQMydcAMyElxc49432030;     mvJQCgMKkuOrxHdGHWQMydcAMyElxc49432030 = mvJQCgMKkuOrxHdGHWQMydcAMyElxc42093710;     mvJQCgMKkuOrxHdGHWQMydcAMyElxc42093710 = mvJQCgMKkuOrxHdGHWQMydcAMyElxc3304458;     mvJQCgMKkuOrxHdGHWQMydcAMyElxc3304458 = mvJQCgMKkuOrxHdGHWQMydcAMyElxc54246588;     mvJQCgMKkuOrxHdGHWQMydcAMyElxc54246588 = mvJQCgMKkuOrxHdGHWQMydcAMyElxc98384355;     mvJQCgMKkuOrxHdGHWQMydcAMyElxc98384355 = mvJQCgMKkuOrxHdGHWQMydcAMyElxc43790353;     mvJQCgMKkuOrxHdGHWQMydcAMyElxc43790353 = mvJQCgMKkuOrxHdGHWQMydcAMyElxc25141838;     mvJQCgMKkuOrxHdGHWQMydcAMyElxc25141838 = mvJQCgMKkuOrxHdGHWQMydcAMyElxc62187914;     mvJQCgMKkuOrxHdGHWQMydcAMyElxc62187914 = mvJQCgMKkuOrxHdGHWQMydcAMyElxc92330604;     mvJQCgMKkuOrxHdGHWQMydcAMyElxc92330604 = mvJQCgMKkuOrxHdGHWQMydcAMyElxc69371967;     mvJQCgMKkuOrxHdGHWQMydcAMyElxc69371967 = mvJQCgMKkuOrxHdGHWQMydcAMyElxc26556497;     mvJQCgMKkuOrxHdGHWQMydcAMyElxc26556497 = mvJQCgMKkuOrxHdGHWQMydcAMyElxc40727875;     mvJQCgMKkuOrxHdGHWQMydcAMyElxc40727875 = mvJQCgMKkuOrxHdGHWQMydcAMyElxc37369234;     mvJQCgMKkuOrxHdGHWQMydcAMyElxc37369234 = mvJQCgMKkuOrxHdGHWQMydcAMyElxc83816846;     mvJQCgMKkuOrxHdGHWQMydcAMyElxc83816846 = mvJQCgMKkuOrxHdGHWQMydcAMyElxc91749401;     mvJQCgMKkuOrxHdGHWQMydcAMyElxc91749401 = mvJQCgMKkuOrxHdGHWQMydcAMyElxc96807649;     mvJQCgMKkuOrxHdGHWQMydcAMyElxc96807649 = mvJQCgMKkuOrxHdGHWQMydcAMyElxc32359198;     mvJQCgMKkuOrxHdGHWQMydcAMyElxc32359198 = mvJQCgMKkuOrxHdGHWQMydcAMyElxc22637521;     mvJQCgMKkuOrxHdGHWQMydcAMyElxc22637521 = mvJQCgMKkuOrxHdGHWQMydcAMyElxc23532497;     mvJQCgMKkuOrxHdGHWQMydcAMyElxc23532497 = mvJQCgMKkuOrxHdGHWQMydcAMyElxc62343411;     mvJQCgMKkuOrxHdGHWQMydcAMyElxc62343411 = mvJQCgMKkuOrxHdGHWQMydcAMyElxc29993257;     mvJQCgMKkuOrxHdGHWQMydcAMyElxc29993257 = mvJQCgMKkuOrxHdGHWQMydcAMyElxc5778918;     mvJQCgMKkuOrxHdGHWQMydcAMyElxc5778918 = mvJQCgMKkuOrxHdGHWQMydcAMyElxc25187252;     mvJQCgMKkuOrxHdGHWQMydcAMyElxc25187252 = mvJQCgMKkuOrxHdGHWQMydcAMyElxc68602653;     mvJQCgMKkuOrxHdGHWQMydcAMyElxc68602653 = mvJQCgMKkuOrxHdGHWQMydcAMyElxc58115839;     mvJQCgMKkuOrxHdGHWQMydcAMyElxc58115839 = mvJQCgMKkuOrxHdGHWQMydcAMyElxc22096561;     mvJQCgMKkuOrxHdGHWQMydcAMyElxc22096561 = mvJQCgMKkuOrxHdGHWQMydcAMyElxc26182836;     mvJQCgMKkuOrxHdGHWQMydcAMyElxc26182836 = mvJQCgMKkuOrxHdGHWQMydcAMyElxc87224526;     mvJQCgMKkuOrxHdGHWQMydcAMyElxc87224526 = mvJQCgMKkuOrxHdGHWQMydcAMyElxc81465934;     mvJQCgMKkuOrxHdGHWQMydcAMyElxc81465934 = mvJQCgMKkuOrxHdGHWQMydcAMyElxc24214624;     mvJQCgMKkuOrxHdGHWQMydcAMyElxc24214624 = mvJQCgMKkuOrxHdGHWQMydcAMyElxc70349598;     mvJQCgMKkuOrxHdGHWQMydcAMyElxc70349598 = mvJQCgMKkuOrxHdGHWQMydcAMyElxc9842814;     mvJQCgMKkuOrxHdGHWQMydcAMyElxc9842814 = mvJQCgMKkuOrxHdGHWQMydcAMyElxc85644537;     mvJQCgMKkuOrxHdGHWQMydcAMyElxc85644537 = mvJQCgMKkuOrxHdGHWQMydcAMyElxc69174560;     mvJQCgMKkuOrxHdGHWQMydcAMyElxc69174560 = mvJQCgMKkuOrxHdGHWQMydcAMyElxc37668306;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void AIBIwlYZVZvsinxvDKQLNEvYj72381678() {     double dajWuPiVMYqOzmDJRdEvHutzJaYqBZ88832388 = -47350099;    double dajWuPiVMYqOzmDJRdEvHutzJaYqBZ94219521 = -535013202;    double dajWuPiVMYqOzmDJRdEvHutzJaYqBZ53545493 = -622356677;    double dajWuPiVMYqOzmDJRdEvHutzJaYqBZ80339826 = -887042939;    double dajWuPiVMYqOzmDJRdEvHutzJaYqBZ41280841 = -129483155;    double dajWuPiVMYqOzmDJRdEvHutzJaYqBZ54692215 = -658506872;    double dajWuPiVMYqOzmDJRdEvHutzJaYqBZ48852102 = -607701861;    double dajWuPiVMYqOzmDJRdEvHutzJaYqBZ49934291 = -283483398;    double dajWuPiVMYqOzmDJRdEvHutzJaYqBZ66097817 = -678898392;    double dajWuPiVMYqOzmDJRdEvHutzJaYqBZ95333123 = -183822684;    double dajWuPiVMYqOzmDJRdEvHutzJaYqBZ34684512 = -26740820;    double dajWuPiVMYqOzmDJRdEvHutzJaYqBZ25849974 = -110047776;    double dajWuPiVMYqOzmDJRdEvHutzJaYqBZ23677147 = 71400487;    double dajWuPiVMYqOzmDJRdEvHutzJaYqBZ76662445 = -15187662;    double dajWuPiVMYqOzmDJRdEvHutzJaYqBZ48331861 = 91464121;    double dajWuPiVMYqOzmDJRdEvHutzJaYqBZ4361847 = -66440413;    double dajWuPiVMYqOzmDJRdEvHutzJaYqBZ25513025 = -686718826;    double dajWuPiVMYqOzmDJRdEvHutzJaYqBZ44918007 = -484896550;    double dajWuPiVMYqOzmDJRdEvHutzJaYqBZ78249955 = -874536991;    double dajWuPiVMYqOzmDJRdEvHutzJaYqBZ98713425 = -506250183;    double dajWuPiVMYqOzmDJRdEvHutzJaYqBZ20840659 = 82822456;    double dajWuPiVMYqOzmDJRdEvHutzJaYqBZ51179104 = -769273504;    double dajWuPiVMYqOzmDJRdEvHutzJaYqBZ28999363 = -261171008;    double dajWuPiVMYqOzmDJRdEvHutzJaYqBZ39677826 = -216898631;    double dajWuPiVMYqOzmDJRdEvHutzJaYqBZ41974230 = -604247901;    double dajWuPiVMYqOzmDJRdEvHutzJaYqBZ1989779 = -297941265;    double dajWuPiVMYqOzmDJRdEvHutzJaYqBZ29627235 = -238743290;    double dajWuPiVMYqOzmDJRdEvHutzJaYqBZ45092701 = -551201033;    double dajWuPiVMYqOzmDJRdEvHutzJaYqBZ79701725 = -130716242;    double dajWuPiVMYqOzmDJRdEvHutzJaYqBZ81956605 = -843974716;    double dajWuPiVMYqOzmDJRdEvHutzJaYqBZ79661834 = -955141246;    double dajWuPiVMYqOzmDJRdEvHutzJaYqBZ58744682 = -655562917;    double dajWuPiVMYqOzmDJRdEvHutzJaYqBZ19317482 = -391669768;    double dajWuPiVMYqOzmDJRdEvHutzJaYqBZ4025947 = -238830266;    double dajWuPiVMYqOzmDJRdEvHutzJaYqBZ21562349 = -315440680;    double dajWuPiVMYqOzmDJRdEvHutzJaYqBZ88787278 = 75750764;    double dajWuPiVMYqOzmDJRdEvHutzJaYqBZ27202996 = -935488132;    double dajWuPiVMYqOzmDJRdEvHutzJaYqBZ47336733 = -284884827;    double dajWuPiVMYqOzmDJRdEvHutzJaYqBZ71704581 = -513062070;    double dajWuPiVMYqOzmDJRdEvHutzJaYqBZ62144569 = -541402812;    double dajWuPiVMYqOzmDJRdEvHutzJaYqBZ94144355 = -613663779;    double dajWuPiVMYqOzmDJRdEvHutzJaYqBZ43497578 = -864000940;    double dajWuPiVMYqOzmDJRdEvHutzJaYqBZ2003927 = -379970694;    double dajWuPiVMYqOzmDJRdEvHutzJaYqBZ44683952 = -138843109;    double dajWuPiVMYqOzmDJRdEvHutzJaYqBZ23210203 = 49740520;    double dajWuPiVMYqOzmDJRdEvHutzJaYqBZ93137028 = -530713913;    double dajWuPiVMYqOzmDJRdEvHutzJaYqBZ61922727 = -824711869;    double dajWuPiVMYqOzmDJRdEvHutzJaYqBZ89431308 = -786129836;    double dajWuPiVMYqOzmDJRdEvHutzJaYqBZ69813406 = -634915412;    double dajWuPiVMYqOzmDJRdEvHutzJaYqBZ56296745 = -425684104;    double dajWuPiVMYqOzmDJRdEvHutzJaYqBZ9221122 = -319046679;    double dajWuPiVMYqOzmDJRdEvHutzJaYqBZ8876893 = -709188316;    double dajWuPiVMYqOzmDJRdEvHutzJaYqBZ81243258 = -928973142;    double dajWuPiVMYqOzmDJRdEvHutzJaYqBZ33760126 = -74610527;    double dajWuPiVMYqOzmDJRdEvHutzJaYqBZ51541019 = -462848342;    double dajWuPiVMYqOzmDJRdEvHutzJaYqBZ37653285 = -278076595;    double dajWuPiVMYqOzmDJRdEvHutzJaYqBZ65220159 = -173842195;    double dajWuPiVMYqOzmDJRdEvHutzJaYqBZ13867667 = -305458047;    double dajWuPiVMYqOzmDJRdEvHutzJaYqBZ38365596 = -182795039;    double dajWuPiVMYqOzmDJRdEvHutzJaYqBZ39291062 = -831541890;    double dajWuPiVMYqOzmDJRdEvHutzJaYqBZ25064980 = -319763583;    double dajWuPiVMYqOzmDJRdEvHutzJaYqBZ3759401 = 43499171;    double dajWuPiVMYqOzmDJRdEvHutzJaYqBZ70232566 = -52767156;    double dajWuPiVMYqOzmDJRdEvHutzJaYqBZ84141211 = -834923677;    double dajWuPiVMYqOzmDJRdEvHutzJaYqBZ15671289 = -228681438;    double dajWuPiVMYqOzmDJRdEvHutzJaYqBZ75939829 = -371177903;    double dajWuPiVMYqOzmDJRdEvHutzJaYqBZ6532492 = -718378008;    double dajWuPiVMYqOzmDJRdEvHutzJaYqBZ19651200 = -689769248;    double dajWuPiVMYqOzmDJRdEvHutzJaYqBZ55100097 = -699746982;    double dajWuPiVMYqOzmDJRdEvHutzJaYqBZ59544583 = -984286643;    double dajWuPiVMYqOzmDJRdEvHutzJaYqBZ77158850 = -130952281;    double dajWuPiVMYqOzmDJRdEvHutzJaYqBZ78176292 = -301834000;    double dajWuPiVMYqOzmDJRdEvHutzJaYqBZ73213425 = -971834481;    double dajWuPiVMYqOzmDJRdEvHutzJaYqBZ16105386 = -233134180;    double dajWuPiVMYqOzmDJRdEvHutzJaYqBZ4569071 = -892586405;    double dajWuPiVMYqOzmDJRdEvHutzJaYqBZ77343081 = -53176604;    double dajWuPiVMYqOzmDJRdEvHutzJaYqBZ49175177 = -289302810;    double dajWuPiVMYqOzmDJRdEvHutzJaYqBZ84315411 = -22327899;    double dajWuPiVMYqOzmDJRdEvHutzJaYqBZ16467623 = -166639152;    double dajWuPiVMYqOzmDJRdEvHutzJaYqBZ48837202 = 26466012;    double dajWuPiVMYqOzmDJRdEvHutzJaYqBZ40067051 = -473229396;    double dajWuPiVMYqOzmDJRdEvHutzJaYqBZ40195927 = -452613454;    double dajWuPiVMYqOzmDJRdEvHutzJaYqBZ75279294 = -916285621;    double dajWuPiVMYqOzmDJRdEvHutzJaYqBZ23404980 = -705032139;    double dajWuPiVMYqOzmDJRdEvHutzJaYqBZ72735483 = -424928038;    double dajWuPiVMYqOzmDJRdEvHutzJaYqBZ70784942 = -145952930;    double dajWuPiVMYqOzmDJRdEvHutzJaYqBZ77501424 = -726589776;    double dajWuPiVMYqOzmDJRdEvHutzJaYqBZ85557356 = -217059242;    double dajWuPiVMYqOzmDJRdEvHutzJaYqBZ52484928 = -775981924;    double dajWuPiVMYqOzmDJRdEvHutzJaYqBZ83909063 = 62635914;    double dajWuPiVMYqOzmDJRdEvHutzJaYqBZ23567120 = -750407042;    double dajWuPiVMYqOzmDJRdEvHutzJaYqBZ13335329 = -530030085;    double dajWuPiVMYqOzmDJRdEvHutzJaYqBZ8971137 = -2089788;    double dajWuPiVMYqOzmDJRdEvHutzJaYqBZ32413519 = -681520180;    double dajWuPiVMYqOzmDJRdEvHutzJaYqBZ37079590 = -121639229;    double dajWuPiVMYqOzmDJRdEvHutzJaYqBZ90384954 = -557162951;    double dajWuPiVMYqOzmDJRdEvHutzJaYqBZ73265012 = -711233785;    double dajWuPiVMYqOzmDJRdEvHutzJaYqBZ17862716 = -545047018;    double dajWuPiVMYqOzmDJRdEvHutzJaYqBZ29012663 = -910161672;    double dajWuPiVMYqOzmDJRdEvHutzJaYqBZ47270374 = -47350099;     dajWuPiVMYqOzmDJRdEvHutzJaYqBZ88832388 = dajWuPiVMYqOzmDJRdEvHutzJaYqBZ94219521;     dajWuPiVMYqOzmDJRdEvHutzJaYqBZ94219521 = dajWuPiVMYqOzmDJRdEvHutzJaYqBZ53545493;     dajWuPiVMYqOzmDJRdEvHutzJaYqBZ53545493 = dajWuPiVMYqOzmDJRdEvHutzJaYqBZ80339826;     dajWuPiVMYqOzmDJRdEvHutzJaYqBZ80339826 = dajWuPiVMYqOzmDJRdEvHutzJaYqBZ41280841;     dajWuPiVMYqOzmDJRdEvHutzJaYqBZ41280841 = dajWuPiVMYqOzmDJRdEvHutzJaYqBZ54692215;     dajWuPiVMYqOzmDJRdEvHutzJaYqBZ54692215 = dajWuPiVMYqOzmDJRdEvHutzJaYqBZ48852102;     dajWuPiVMYqOzmDJRdEvHutzJaYqBZ48852102 = dajWuPiVMYqOzmDJRdEvHutzJaYqBZ49934291;     dajWuPiVMYqOzmDJRdEvHutzJaYqBZ49934291 = dajWuPiVMYqOzmDJRdEvHutzJaYqBZ66097817;     dajWuPiVMYqOzmDJRdEvHutzJaYqBZ66097817 = dajWuPiVMYqOzmDJRdEvHutzJaYqBZ95333123;     dajWuPiVMYqOzmDJRdEvHutzJaYqBZ95333123 = dajWuPiVMYqOzmDJRdEvHutzJaYqBZ34684512;     dajWuPiVMYqOzmDJRdEvHutzJaYqBZ34684512 = dajWuPiVMYqOzmDJRdEvHutzJaYqBZ25849974;     dajWuPiVMYqOzmDJRdEvHutzJaYqBZ25849974 = dajWuPiVMYqOzmDJRdEvHutzJaYqBZ23677147;     dajWuPiVMYqOzmDJRdEvHutzJaYqBZ23677147 = dajWuPiVMYqOzmDJRdEvHutzJaYqBZ76662445;     dajWuPiVMYqOzmDJRdEvHutzJaYqBZ76662445 = dajWuPiVMYqOzmDJRdEvHutzJaYqBZ48331861;     dajWuPiVMYqOzmDJRdEvHutzJaYqBZ48331861 = dajWuPiVMYqOzmDJRdEvHutzJaYqBZ4361847;     dajWuPiVMYqOzmDJRdEvHutzJaYqBZ4361847 = dajWuPiVMYqOzmDJRdEvHutzJaYqBZ25513025;     dajWuPiVMYqOzmDJRdEvHutzJaYqBZ25513025 = dajWuPiVMYqOzmDJRdEvHutzJaYqBZ44918007;     dajWuPiVMYqOzmDJRdEvHutzJaYqBZ44918007 = dajWuPiVMYqOzmDJRdEvHutzJaYqBZ78249955;     dajWuPiVMYqOzmDJRdEvHutzJaYqBZ78249955 = dajWuPiVMYqOzmDJRdEvHutzJaYqBZ98713425;     dajWuPiVMYqOzmDJRdEvHutzJaYqBZ98713425 = dajWuPiVMYqOzmDJRdEvHutzJaYqBZ20840659;     dajWuPiVMYqOzmDJRdEvHutzJaYqBZ20840659 = dajWuPiVMYqOzmDJRdEvHutzJaYqBZ51179104;     dajWuPiVMYqOzmDJRdEvHutzJaYqBZ51179104 = dajWuPiVMYqOzmDJRdEvHutzJaYqBZ28999363;     dajWuPiVMYqOzmDJRdEvHutzJaYqBZ28999363 = dajWuPiVMYqOzmDJRdEvHutzJaYqBZ39677826;     dajWuPiVMYqOzmDJRdEvHutzJaYqBZ39677826 = dajWuPiVMYqOzmDJRdEvHutzJaYqBZ41974230;     dajWuPiVMYqOzmDJRdEvHutzJaYqBZ41974230 = dajWuPiVMYqOzmDJRdEvHutzJaYqBZ1989779;     dajWuPiVMYqOzmDJRdEvHutzJaYqBZ1989779 = dajWuPiVMYqOzmDJRdEvHutzJaYqBZ29627235;     dajWuPiVMYqOzmDJRdEvHutzJaYqBZ29627235 = dajWuPiVMYqOzmDJRdEvHutzJaYqBZ45092701;     dajWuPiVMYqOzmDJRdEvHutzJaYqBZ45092701 = dajWuPiVMYqOzmDJRdEvHutzJaYqBZ79701725;     dajWuPiVMYqOzmDJRdEvHutzJaYqBZ79701725 = dajWuPiVMYqOzmDJRdEvHutzJaYqBZ81956605;     dajWuPiVMYqOzmDJRdEvHutzJaYqBZ81956605 = dajWuPiVMYqOzmDJRdEvHutzJaYqBZ79661834;     dajWuPiVMYqOzmDJRdEvHutzJaYqBZ79661834 = dajWuPiVMYqOzmDJRdEvHutzJaYqBZ58744682;     dajWuPiVMYqOzmDJRdEvHutzJaYqBZ58744682 = dajWuPiVMYqOzmDJRdEvHutzJaYqBZ19317482;     dajWuPiVMYqOzmDJRdEvHutzJaYqBZ19317482 = dajWuPiVMYqOzmDJRdEvHutzJaYqBZ4025947;     dajWuPiVMYqOzmDJRdEvHutzJaYqBZ4025947 = dajWuPiVMYqOzmDJRdEvHutzJaYqBZ21562349;     dajWuPiVMYqOzmDJRdEvHutzJaYqBZ21562349 = dajWuPiVMYqOzmDJRdEvHutzJaYqBZ88787278;     dajWuPiVMYqOzmDJRdEvHutzJaYqBZ88787278 = dajWuPiVMYqOzmDJRdEvHutzJaYqBZ27202996;     dajWuPiVMYqOzmDJRdEvHutzJaYqBZ27202996 = dajWuPiVMYqOzmDJRdEvHutzJaYqBZ47336733;     dajWuPiVMYqOzmDJRdEvHutzJaYqBZ47336733 = dajWuPiVMYqOzmDJRdEvHutzJaYqBZ71704581;     dajWuPiVMYqOzmDJRdEvHutzJaYqBZ71704581 = dajWuPiVMYqOzmDJRdEvHutzJaYqBZ62144569;     dajWuPiVMYqOzmDJRdEvHutzJaYqBZ62144569 = dajWuPiVMYqOzmDJRdEvHutzJaYqBZ94144355;     dajWuPiVMYqOzmDJRdEvHutzJaYqBZ94144355 = dajWuPiVMYqOzmDJRdEvHutzJaYqBZ43497578;     dajWuPiVMYqOzmDJRdEvHutzJaYqBZ43497578 = dajWuPiVMYqOzmDJRdEvHutzJaYqBZ2003927;     dajWuPiVMYqOzmDJRdEvHutzJaYqBZ2003927 = dajWuPiVMYqOzmDJRdEvHutzJaYqBZ44683952;     dajWuPiVMYqOzmDJRdEvHutzJaYqBZ44683952 = dajWuPiVMYqOzmDJRdEvHutzJaYqBZ23210203;     dajWuPiVMYqOzmDJRdEvHutzJaYqBZ23210203 = dajWuPiVMYqOzmDJRdEvHutzJaYqBZ93137028;     dajWuPiVMYqOzmDJRdEvHutzJaYqBZ93137028 = dajWuPiVMYqOzmDJRdEvHutzJaYqBZ61922727;     dajWuPiVMYqOzmDJRdEvHutzJaYqBZ61922727 = dajWuPiVMYqOzmDJRdEvHutzJaYqBZ89431308;     dajWuPiVMYqOzmDJRdEvHutzJaYqBZ89431308 = dajWuPiVMYqOzmDJRdEvHutzJaYqBZ69813406;     dajWuPiVMYqOzmDJRdEvHutzJaYqBZ69813406 = dajWuPiVMYqOzmDJRdEvHutzJaYqBZ56296745;     dajWuPiVMYqOzmDJRdEvHutzJaYqBZ56296745 = dajWuPiVMYqOzmDJRdEvHutzJaYqBZ9221122;     dajWuPiVMYqOzmDJRdEvHutzJaYqBZ9221122 = dajWuPiVMYqOzmDJRdEvHutzJaYqBZ8876893;     dajWuPiVMYqOzmDJRdEvHutzJaYqBZ8876893 = dajWuPiVMYqOzmDJRdEvHutzJaYqBZ81243258;     dajWuPiVMYqOzmDJRdEvHutzJaYqBZ81243258 = dajWuPiVMYqOzmDJRdEvHutzJaYqBZ33760126;     dajWuPiVMYqOzmDJRdEvHutzJaYqBZ33760126 = dajWuPiVMYqOzmDJRdEvHutzJaYqBZ51541019;     dajWuPiVMYqOzmDJRdEvHutzJaYqBZ51541019 = dajWuPiVMYqOzmDJRdEvHutzJaYqBZ37653285;     dajWuPiVMYqOzmDJRdEvHutzJaYqBZ37653285 = dajWuPiVMYqOzmDJRdEvHutzJaYqBZ65220159;     dajWuPiVMYqOzmDJRdEvHutzJaYqBZ65220159 = dajWuPiVMYqOzmDJRdEvHutzJaYqBZ13867667;     dajWuPiVMYqOzmDJRdEvHutzJaYqBZ13867667 = dajWuPiVMYqOzmDJRdEvHutzJaYqBZ38365596;     dajWuPiVMYqOzmDJRdEvHutzJaYqBZ38365596 = dajWuPiVMYqOzmDJRdEvHutzJaYqBZ39291062;     dajWuPiVMYqOzmDJRdEvHutzJaYqBZ39291062 = dajWuPiVMYqOzmDJRdEvHutzJaYqBZ25064980;     dajWuPiVMYqOzmDJRdEvHutzJaYqBZ25064980 = dajWuPiVMYqOzmDJRdEvHutzJaYqBZ3759401;     dajWuPiVMYqOzmDJRdEvHutzJaYqBZ3759401 = dajWuPiVMYqOzmDJRdEvHutzJaYqBZ70232566;     dajWuPiVMYqOzmDJRdEvHutzJaYqBZ70232566 = dajWuPiVMYqOzmDJRdEvHutzJaYqBZ84141211;     dajWuPiVMYqOzmDJRdEvHutzJaYqBZ84141211 = dajWuPiVMYqOzmDJRdEvHutzJaYqBZ15671289;     dajWuPiVMYqOzmDJRdEvHutzJaYqBZ15671289 = dajWuPiVMYqOzmDJRdEvHutzJaYqBZ75939829;     dajWuPiVMYqOzmDJRdEvHutzJaYqBZ75939829 = dajWuPiVMYqOzmDJRdEvHutzJaYqBZ6532492;     dajWuPiVMYqOzmDJRdEvHutzJaYqBZ6532492 = dajWuPiVMYqOzmDJRdEvHutzJaYqBZ19651200;     dajWuPiVMYqOzmDJRdEvHutzJaYqBZ19651200 = dajWuPiVMYqOzmDJRdEvHutzJaYqBZ55100097;     dajWuPiVMYqOzmDJRdEvHutzJaYqBZ55100097 = dajWuPiVMYqOzmDJRdEvHutzJaYqBZ59544583;     dajWuPiVMYqOzmDJRdEvHutzJaYqBZ59544583 = dajWuPiVMYqOzmDJRdEvHutzJaYqBZ77158850;     dajWuPiVMYqOzmDJRdEvHutzJaYqBZ77158850 = dajWuPiVMYqOzmDJRdEvHutzJaYqBZ78176292;     dajWuPiVMYqOzmDJRdEvHutzJaYqBZ78176292 = dajWuPiVMYqOzmDJRdEvHutzJaYqBZ73213425;     dajWuPiVMYqOzmDJRdEvHutzJaYqBZ73213425 = dajWuPiVMYqOzmDJRdEvHutzJaYqBZ16105386;     dajWuPiVMYqOzmDJRdEvHutzJaYqBZ16105386 = dajWuPiVMYqOzmDJRdEvHutzJaYqBZ4569071;     dajWuPiVMYqOzmDJRdEvHutzJaYqBZ4569071 = dajWuPiVMYqOzmDJRdEvHutzJaYqBZ77343081;     dajWuPiVMYqOzmDJRdEvHutzJaYqBZ77343081 = dajWuPiVMYqOzmDJRdEvHutzJaYqBZ49175177;     dajWuPiVMYqOzmDJRdEvHutzJaYqBZ49175177 = dajWuPiVMYqOzmDJRdEvHutzJaYqBZ84315411;     dajWuPiVMYqOzmDJRdEvHutzJaYqBZ84315411 = dajWuPiVMYqOzmDJRdEvHutzJaYqBZ16467623;     dajWuPiVMYqOzmDJRdEvHutzJaYqBZ16467623 = dajWuPiVMYqOzmDJRdEvHutzJaYqBZ48837202;     dajWuPiVMYqOzmDJRdEvHutzJaYqBZ48837202 = dajWuPiVMYqOzmDJRdEvHutzJaYqBZ40067051;     dajWuPiVMYqOzmDJRdEvHutzJaYqBZ40067051 = dajWuPiVMYqOzmDJRdEvHutzJaYqBZ40195927;     dajWuPiVMYqOzmDJRdEvHutzJaYqBZ40195927 = dajWuPiVMYqOzmDJRdEvHutzJaYqBZ75279294;     dajWuPiVMYqOzmDJRdEvHutzJaYqBZ75279294 = dajWuPiVMYqOzmDJRdEvHutzJaYqBZ23404980;     dajWuPiVMYqOzmDJRdEvHutzJaYqBZ23404980 = dajWuPiVMYqOzmDJRdEvHutzJaYqBZ72735483;     dajWuPiVMYqOzmDJRdEvHutzJaYqBZ72735483 = dajWuPiVMYqOzmDJRdEvHutzJaYqBZ70784942;     dajWuPiVMYqOzmDJRdEvHutzJaYqBZ70784942 = dajWuPiVMYqOzmDJRdEvHutzJaYqBZ77501424;     dajWuPiVMYqOzmDJRdEvHutzJaYqBZ77501424 = dajWuPiVMYqOzmDJRdEvHutzJaYqBZ85557356;     dajWuPiVMYqOzmDJRdEvHutzJaYqBZ85557356 = dajWuPiVMYqOzmDJRdEvHutzJaYqBZ52484928;     dajWuPiVMYqOzmDJRdEvHutzJaYqBZ52484928 = dajWuPiVMYqOzmDJRdEvHutzJaYqBZ83909063;     dajWuPiVMYqOzmDJRdEvHutzJaYqBZ83909063 = dajWuPiVMYqOzmDJRdEvHutzJaYqBZ23567120;     dajWuPiVMYqOzmDJRdEvHutzJaYqBZ23567120 = dajWuPiVMYqOzmDJRdEvHutzJaYqBZ13335329;     dajWuPiVMYqOzmDJRdEvHutzJaYqBZ13335329 = dajWuPiVMYqOzmDJRdEvHutzJaYqBZ8971137;     dajWuPiVMYqOzmDJRdEvHutzJaYqBZ8971137 = dajWuPiVMYqOzmDJRdEvHutzJaYqBZ32413519;     dajWuPiVMYqOzmDJRdEvHutzJaYqBZ32413519 = dajWuPiVMYqOzmDJRdEvHutzJaYqBZ37079590;     dajWuPiVMYqOzmDJRdEvHutzJaYqBZ37079590 = dajWuPiVMYqOzmDJRdEvHutzJaYqBZ90384954;     dajWuPiVMYqOzmDJRdEvHutzJaYqBZ90384954 = dajWuPiVMYqOzmDJRdEvHutzJaYqBZ73265012;     dajWuPiVMYqOzmDJRdEvHutzJaYqBZ73265012 = dajWuPiVMYqOzmDJRdEvHutzJaYqBZ17862716;     dajWuPiVMYqOzmDJRdEvHutzJaYqBZ17862716 = dajWuPiVMYqOzmDJRdEvHutzJaYqBZ29012663;     dajWuPiVMYqOzmDJRdEvHutzJaYqBZ29012663 = dajWuPiVMYqOzmDJRdEvHutzJaYqBZ47270374;     dajWuPiVMYqOzmDJRdEvHutzJaYqBZ47270374 = dajWuPiVMYqOzmDJRdEvHutzJaYqBZ88832388;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void TnaxHzojnaoOOFzfzRQhqqvzd81986404() {     double WWNALTWMCnZklHCvpgFDcpYuhWxyWj10654610 = -615565431;    double WWNALTWMCnZklHCvpgFDcpYuhWxyWj55687326 = -917612055;    double WWNALTWMCnZklHCvpgFDcpYuhWxyWj99272763 = -669574209;    double WWNALTWMCnZklHCvpgFDcpYuhWxyWj11714973 = 8172885;    double WWNALTWMCnZklHCvpgFDcpYuhWxyWj1415172 = -6734077;    double WWNALTWMCnZklHCvpgFDcpYuhWxyWj78710531 = -670050030;    double WWNALTWMCnZklHCvpgFDcpYuhWxyWj77872686 = -671019985;    double WWNALTWMCnZklHCvpgFDcpYuhWxyWj36796920 = -291664246;    double WWNALTWMCnZklHCvpgFDcpYuhWxyWj62621456 = -664693810;    double WWNALTWMCnZklHCvpgFDcpYuhWxyWj56616349 = -54041081;    double WWNALTWMCnZklHCvpgFDcpYuhWxyWj5600780 = -682498523;    double WWNALTWMCnZklHCvpgFDcpYuhWxyWj42031857 = -213229382;    double WWNALTWMCnZklHCvpgFDcpYuhWxyWj56666089 = -466633302;    double WWNALTWMCnZklHCvpgFDcpYuhWxyWj43628913 = -865264460;    double WWNALTWMCnZklHCvpgFDcpYuhWxyWj43589657 = -935377798;    double WWNALTWMCnZklHCvpgFDcpYuhWxyWj52332572 = -508806954;    double WWNALTWMCnZklHCvpgFDcpYuhWxyWj18962085 = 27456456;    double WWNALTWMCnZklHCvpgFDcpYuhWxyWj7443310 = -406617468;    double WWNALTWMCnZklHCvpgFDcpYuhWxyWj82887179 = -947672648;    double WWNALTWMCnZklHCvpgFDcpYuhWxyWj79823068 = -997495239;    double WWNALTWMCnZklHCvpgFDcpYuhWxyWj77994944 = -749256246;    double WWNALTWMCnZklHCvpgFDcpYuhWxyWj15581083 = -840024669;    double WWNALTWMCnZklHCvpgFDcpYuhWxyWj38470767 = -917198363;    double WWNALTWMCnZklHCvpgFDcpYuhWxyWj76955447 = -626997496;    double WWNALTWMCnZklHCvpgFDcpYuhWxyWj15904898 = -515144873;    double WWNALTWMCnZklHCvpgFDcpYuhWxyWj91565632 = -625126793;    double WWNALTWMCnZklHCvpgFDcpYuhWxyWj2663839 = -865547334;    double WWNALTWMCnZklHCvpgFDcpYuhWxyWj80672526 = -415649265;    double WWNALTWMCnZklHCvpgFDcpYuhWxyWj27598638 = -897662160;    double WWNALTWMCnZklHCvpgFDcpYuhWxyWj27773683 = -120188910;    double WWNALTWMCnZklHCvpgFDcpYuhWxyWj30827100 = -260868993;    double WWNALTWMCnZklHCvpgFDcpYuhWxyWj77636008 = -431451748;    double WWNALTWMCnZklHCvpgFDcpYuhWxyWj44636947 = -134273651;    double WWNALTWMCnZklHCvpgFDcpYuhWxyWj76565064 = 85350107;    double WWNALTWMCnZklHCvpgFDcpYuhWxyWj2396561 = -465259283;    double WWNALTWMCnZklHCvpgFDcpYuhWxyWj58364238 = 61334784;    double WWNALTWMCnZklHCvpgFDcpYuhWxyWj70285252 = -985105228;    double WWNALTWMCnZklHCvpgFDcpYuhWxyWj51274595 = -866427585;    double WWNALTWMCnZklHCvpgFDcpYuhWxyWj32085028 = -285467350;    double WWNALTWMCnZklHCvpgFDcpYuhWxyWj74815215 = -998951813;    double WWNALTWMCnZklHCvpgFDcpYuhWxyWj48520201 = 52196963;    double WWNALTWMCnZklHCvpgFDcpYuhWxyWj59999749 = -551467018;    double WWNALTWMCnZklHCvpgFDcpYuhWxyWj49371326 = -423937509;    double WWNALTWMCnZklHCvpgFDcpYuhWxyWj92778810 = -47649279;    double WWNALTWMCnZklHCvpgFDcpYuhWxyWj3126014 = -136948109;    double WWNALTWMCnZklHCvpgFDcpYuhWxyWj32343508 = -234146143;    double WWNALTWMCnZklHCvpgFDcpYuhWxyWj87590838 = 94280611;    double WWNALTWMCnZklHCvpgFDcpYuhWxyWj71271060 = -524625824;    double WWNALTWMCnZklHCvpgFDcpYuhWxyWj76877499 = -820031834;    double WWNALTWMCnZklHCvpgFDcpYuhWxyWj72344222 = -404739289;    double WWNALTWMCnZklHCvpgFDcpYuhWxyWj97682941 = -362936005;    double WWNALTWMCnZklHCvpgFDcpYuhWxyWj5265557 = 65433603;    double WWNALTWMCnZklHCvpgFDcpYuhWxyWj72466123 = -892568282;    double WWNALTWMCnZklHCvpgFDcpYuhWxyWj61785248 = -265619587;    double WWNALTWMCnZklHCvpgFDcpYuhWxyWj3991461 = -423970091;    double WWNALTWMCnZklHCvpgFDcpYuhWxyWj95073527 = -775540762;    double WWNALTWMCnZklHCvpgFDcpYuhWxyWj17216559 = 99586308;    double WWNALTWMCnZklHCvpgFDcpYuhWxyWj22317316 = 57423287;    double WWNALTWMCnZklHCvpgFDcpYuhWxyWj95810075 = -476682242;    double WWNALTWMCnZklHCvpgFDcpYuhWxyWj9849540 = -381607284;    double WWNALTWMCnZklHCvpgFDcpYuhWxyWj76046692 = -804502697;    double WWNALTWMCnZklHCvpgFDcpYuhWxyWj97200159 = -155370720;    double WWNALTWMCnZklHCvpgFDcpYuhWxyWj9198283 = -394002087;    double WWNALTWMCnZklHCvpgFDcpYuhWxyWj34847774 = -444504900;    double WWNALTWMCnZklHCvpgFDcpYuhWxyWj25789249 = -793172089;    double WWNALTWMCnZklHCvpgFDcpYuhWxyWj27964772 = -151046776;    double WWNALTWMCnZklHCvpgFDcpYuhWxyWj97394910 = 21044268;    double WWNALTWMCnZklHCvpgFDcpYuhWxyWj80101025 = -451983409;    double WWNALTWMCnZklHCvpgFDcpYuhWxyWj41232352 = -300005177;    double WWNALTWMCnZklHCvpgFDcpYuhWxyWj85225418 = -896712582;    double WWNALTWMCnZklHCvpgFDcpYuhWxyWj82047319 = -523701726;    double WWNALTWMCnZklHCvpgFDcpYuhWxyWj67687489 = -106115960;    double WWNALTWMCnZklHCvpgFDcpYuhWxyWj75358282 = -21150118;    double WWNALTWMCnZklHCvpgFDcpYuhWxyWj8071964 = -948720835;    double WWNALTWMCnZklHCvpgFDcpYuhWxyWj31302868 = -949692203;    double WWNALTWMCnZklHCvpgFDcpYuhWxyWj17995195 = -97789229;    double WWNALTWMCnZklHCvpgFDcpYuhWxyWj66209756 = -316087160;    double WWNALTWMCnZklHCvpgFDcpYuhWxyWj45691957 = -769549085;    double WWNALTWMCnZklHCvpgFDcpYuhWxyWj73829433 = -390049388;    double WWNALTWMCnZklHCvpgFDcpYuhWxyWj83561389 = -180998730;    double WWNALTWMCnZklHCvpgFDcpYuhWxyWj3974794 = -619407404;    double WWNALTWMCnZklHCvpgFDcpYuhWxyWj31392779 = -240921510;    double WWNALTWMCnZklHCvpgFDcpYuhWxyWj3795028 = -595617432;    double WWNALTWMCnZklHCvpgFDcpYuhWxyWj55254416 = -392922872;    double WWNALTWMCnZklHCvpgFDcpYuhWxyWj30090742 = -757252906;    double WWNALTWMCnZklHCvpgFDcpYuhWxyWj25561544 = -226302596;    double WWNALTWMCnZklHCvpgFDcpYuhWxyWj5169886 = -538883467;    double WWNALTWMCnZklHCvpgFDcpYuhWxyWj82851698 = -868654065;    double WWNALTWMCnZklHCvpgFDcpYuhWxyWj72573604 = -490679802;    double WWNALTWMCnZklHCvpgFDcpYuhWxyWj7323034 = -689718521;    double WWNALTWMCnZklHCvpgFDcpYuhWxyWj41147680 = 61748476;    double WWNALTWMCnZklHCvpgFDcpYuhWxyWj47967937 = -942528516;    double WWNALTWMCnZklHCvpgFDcpYuhWxyWj55464520 = -289745343;    double WWNALTWMCnZklHCvpgFDcpYuhWxyWj22235488 = -903860067;    double WWNALTWMCnZklHCvpgFDcpYuhWxyWj98768523 = -94449117;    double WWNALTWMCnZklHCvpgFDcpYuhWxyWj51320041 = -792432318;    double WWNALTWMCnZklHCvpgFDcpYuhWxyWj50801467 = -57464932;    double WWNALTWMCnZklHCvpgFDcpYuhWxyWj14523552 = -979432609;    double WWNALTWMCnZklHCvpgFDcpYuhWxyWj66989561 = -254477191;    double WWNALTWMCnZklHCvpgFDcpYuhWxyWj75161242 = -615565431;     WWNALTWMCnZklHCvpgFDcpYuhWxyWj10654610 = WWNALTWMCnZklHCvpgFDcpYuhWxyWj55687326;     WWNALTWMCnZklHCvpgFDcpYuhWxyWj55687326 = WWNALTWMCnZklHCvpgFDcpYuhWxyWj99272763;     WWNALTWMCnZklHCvpgFDcpYuhWxyWj99272763 = WWNALTWMCnZklHCvpgFDcpYuhWxyWj11714973;     WWNALTWMCnZklHCvpgFDcpYuhWxyWj11714973 = WWNALTWMCnZklHCvpgFDcpYuhWxyWj1415172;     WWNALTWMCnZklHCvpgFDcpYuhWxyWj1415172 = WWNALTWMCnZklHCvpgFDcpYuhWxyWj78710531;     WWNALTWMCnZklHCvpgFDcpYuhWxyWj78710531 = WWNALTWMCnZklHCvpgFDcpYuhWxyWj77872686;     WWNALTWMCnZklHCvpgFDcpYuhWxyWj77872686 = WWNALTWMCnZklHCvpgFDcpYuhWxyWj36796920;     WWNALTWMCnZklHCvpgFDcpYuhWxyWj36796920 = WWNALTWMCnZklHCvpgFDcpYuhWxyWj62621456;     WWNALTWMCnZklHCvpgFDcpYuhWxyWj62621456 = WWNALTWMCnZklHCvpgFDcpYuhWxyWj56616349;     WWNALTWMCnZklHCvpgFDcpYuhWxyWj56616349 = WWNALTWMCnZklHCvpgFDcpYuhWxyWj5600780;     WWNALTWMCnZklHCvpgFDcpYuhWxyWj5600780 = WWNALTWMCnZklHCvpgFDcpYuhWxyWj42031857;     WWNALTWMCnZklHCvpgFDcpYuhWxyWj42031857 = WWNALTWMCnZklHCvpgFDcpYuhWxyWj56666089;     WWNALTWMCnZklHCvpgFDcpYuhWxyWj56666089 = WWNALTWMCnZklHCvpgFDcpYuhWxyWj43628913;     WWNALTWMCnZklHCvpgFDcpYuhWxyWj43628913 = WWNALTWMCnZklHCvpgFDcpYuhWxyWj43589657;     WWNALTWMCnZklHCvpgFDcpYuhWxyWj43589657 = WWNALTWMCnZklHCvpgFDcpYuhWxyWj52332572;     WWNALTWMCnZklHCvpgFDcpYuhWxyWj52332572 = WWNALTWMCnZklHCvpgFDcpYuhWxyWj18962085;     WWNALTWMCnZklHCvpgFDcpYuhWxyWj18962085 = WWNALTWMCnZklHCvpgFDcpYuhWxyWj7443310;     WWNALTWMCnZklHCvpgFDcpYuhWxyWj7443310 = WWNALTWMCnZklHCvpgFDcpYuhWxyWj82887179;     WWNALTWMCnZklHCvpgFDcpYuhWxyWj82887179 = WWNALTWMCnZklHCvpgFDcpYuhWxyWj79823068;     WWNALTWMCnZklHCvpgFDcpYuhWxyWj79823068 = WWNALTWMCnZklHCvpgFDcpYuhWxyWj77994944;     WWNALTWMCnZklHCvpgFDcpYuhWxyWj77994944 = WWNALTWMCnZklHCvpgFDcpYuhWxyWj15581083;     WWNALTWMCnZklHCvpgFDcpYuhWxyWj15581083 = WWNALTWMCnZklHCvpgFDcpYuhWxyWj38470767;     WWNALTWMCnZklHCvpgFDcpYuhWxyWj38470767 = WWNALTWMCnZklHCvpgFDcpYuhWxyWj76955447;     WWNALTWMCnZklHCvpgFDcpYuhWxyWj76955447 = WWNALTWMCnZklHCvpgFDcpYuhWxyWj15904898;     WWNALTWMCnZklHCvpgFDcpYuhWxyWj15904898 = WWNALTWMCnZklHCvpgFDcpYuhWxyWj91565632;     WWNALTWMCnZklHCvpgFDcpYuhWxyWj91565632 = WWNALTWMCnZklHCvpgFDcpYuhWxyWj2663839;     WWNALTWMCnZklHCvpgFDcpYuhWxyWj2663839 = WWNALTWMCnZklHCvpgFDcpYuhWxyWj80672526;     WWNALTWMCnZklHCvpgFDcpYuhWxyWj80672526 = WWNALTWMCnZklHCvpgFDcpYuhWxyWj27598638;     WWNALTWMCnZklHCvpgFDcpYuhWxyWj27598638 = WWNALTWMCnZklHCvpgFDcpYuhWxyWj27773683;     WWNALTWMCnZklHCvpgFDcpYuhWxyWj27773683 = WWNALTWMCnZklHCvpgFDcpYuhWxyWj30827100;     WWNALTWMCnZklHCvpgFDcpYuhWxyWj30827100 = WWNALTWMCnZklHCvpgFDcpYuhWxyWj77636008;     WWNALTWMCnZklHCvpgFDcpYuhWxyWj77636008 = WWNALTWMCnZklHCvpgFDcpYuhWxyWj44636947;     WWNALTWMCnZklHCvpgFDcpYuhWxyWj44636947 = WWNALTWMCnZklHCvpgFDcpYuhWxyWj76565064;     WWNALTWMCnZklHCvpgFDcpYuhWxyWj76565064 = WWNALTWMCnZklHCvpgFDcpYuhWxyWj2396561;     WWNALTWMCnZklHCvpgFDcpYuhWxyWj2396561 = WWNALTWMCnZklHCvpgFDcpYuhWxyWj58364238;     WWNALTWMCnZklHCvpgFDcpYuhWxyWj58364238 = WWNALTWMCnZklHCvpgFDcpYuhWxyWj70285252;     WWNALTWMCnZklHCvpgFDcpYuhWxyWj70285252 = WWNALTWMCnZklHCvpgFDcpYuhWxyWj51274595;     WWNALTWMCnZklHCvpgFDcpYuhWxyWj51274595 = WWNALTWMCnZklHCvpgFDcpYuhWxyWj32085028;     WWNALTWMCnZklHCvpgFDcpYuhWxyWj32085028 = WWNALTWMCnZklHCvpgFDcpYuhWxyWj74815215;     WWNALTWMCnZklHCvpgFDcpYuhWxyWj74815215 = WWNALTWMCnZklHCvpgFDcpYuhWxyWj48520201;     WWNALTWMCnZklHCvpgFDcpYuhWxyWj48520201 = WWNALTWMCnZklHCvpgFDcpYuhWxyWj59999749;     WWNALTWMCnZklHCvpgFDcpYuhWxyWj59999749 = WWNALTWMCnZklHCvpgFDcpYuhWxyWj49371326;     WWNALTWMCnZklHCvpgFDcpYuhWxyWj49371326 = WWNALTWMCnZklHCvpgFDcpYuhWxyWj92778810;     WWNALTWMCnZklHCvpgFDcpYuhWxyWj92778810 = WWNALTWMCnZklHCvpgFDcpYuhWxyWj3126014;     WWNALTWMCnZklHCvpgFDcpYuhWxyWj3126014 = WWNALTWMCnZklHCvpgFDcpYuhWxyWj32343508;     WWNALTWMCnZklHCvpgFDcpYuhWxyWj32343508 = WWNALTWMCnZklHCvpgFDcpYuhWxyWj87590838;     WWNALTWMCnZklHCvpgFDcpYuhWxyWj87590838 = WWNALTWMCnZklHCvpgFDcpYuhWxyWj71271060;     WWNALTWMCnZklHCvpgFDcpYuhWxyWj71271060 = WWNALTWMCnZklHCvpgFDcpYuhWxyWj76877499;     WWNALTWMCnZklHCvpgFDcpYuhWxyWj76877499 = WWNALTWMCnZklHCvpgFDcpYuhWxyWj72344222;     WWNALTWMCnZklHCvpgFDcpYuhWxyWj72344222 = WWNALTWMCnZklHCvpgFDcpYuhWxyWj97682941;     WWNALTWMCnZklHCvpgFDcpYuhWxyWj97682941 = WWNALTWMCnZklHCvpgFDcpYuhWxyWj5265557;     WWNALTWMCnZklHCvpgFDcpYuhWxyWj5265557 = WWNALTWMCnZklHCvpgFDcpYuhWxyWj72466123;     WWNALTWMCnZklHCvpgFDcpYuhWxyWj72466123 = WWNALTWMCnZklHCvpgFDcpYuhWxyWj61785248;     WWNALTWMCnZklHCvpgFDcpYuhWxyWj61785248 = WWNALTWMCnZklHCvpgFDcpYuhWxyWj3991461;     WWNALTWMCnZklHCvpgFDcpYuhWxyWj3991461 = WWNALTWMCnZklHCvpgFDcpYuhWxyWj95073527;     WWNALTWMCnZklHCvpgFDcpYuhWxyWj95073527 = WWNALTWMCnZklHCvpgFDcpYuhWxyWj17216559;     WWNALTWMCnZklHCvpgFDcpYuhWxyWj17216559 = WWNALTWMCnZklHCvpgFDcpYuhWxyWj22317316;     WWNALTWMCnZklHCvpgFDcpYuhWxyWj22317316 = WWNALTWMCnZklHCvpgFDcpYuhWxyWj95810075;     WWNALTWMCnZklHCvpgFDcpYuhWxyWj95810075 = WWNALTWMCnZklHCvpgFDcpYuhWxyWj9849540;     WWNALTWMCnZklHCvpgFDcpYuhWxyWj9849540 = WWNALTWMCnZklHCvpgFDcpYuhWxyWj76046692;     WWNALTWMCnZklHCvpgFDcpYuhWxyWj76046692 = WWNALTWMCnZklHCvpgFDcpYuhWxyWj97200159;     WWNALTWMCnZklHCvpgFDcpYuhWxyWj97200159 = WWNALTWMCnZklHCvpgFDcpYuhWxyWj9198283;     WWNALTWMCnZklHCvpgFDcpYuhWxyWj9198283 = WWNALTWMCnZklHCvpgFDcpYuhWxyWj34847774;     WWNALTWMCnZklHCvpgFDcpYuhWxyWj34847774 = WWNALTWMCnZklHCvpgFDcpYuhWxyWj25789249;     WWNALTWMCnZklHCvpgFDcpYuhWxyWj25789249 = WWNALTWMCnZklHCvpgFDcpYuhWxyWj27964772;     WWNALTWMCnZklHCvpgFDcpYuhWxyWj27964772 = WWNALTWMCnZklHCvpgFDcpYuhWxyWj97394910;     WWNALTWMCnZklHCvpgFDcpYuhWxyWj97394910 = WWNALTWMCnZklHCvpgFDcpYuhWxyWj80101025;     WWNALTWMCnZklHCvpgFDcpYuhWxyWj80101025 = WWNALTWMCnZklHCvpgFDcpYuhWxyWj41232352;     WWNALTWMCnZklHCvpgFDcpYuhWxyWj41232352 = WWNALTWMCnZklHCvpgFDcpYuhWxyWj85225418;     WWNALTWMCnZklHCvpgFDcpYuhWxyWj85225418 = WWNALTWMCnZklHCvpgFDcpYuhWxyWj82047319;     WWNALTWMCnZklHCvpgFDcpYuhWxyWj82047319 = WWNALTWMCnZklHCvpgFDcpYuhWxyWj67687489;     WWNALTWMCnZklHCvpgFDcpYuhWxyWj67687489 = WWNALTWMCnZklHCvpgFDcpYuhWxyWj75358282;     WWNALTWMCnZklHCvpgFDcpYuhWxyWj75358282 = WWNALTWMCnZklHCvpgFDcpYuhWxyWj8071964;     WWNALTWMCnZklHCvpgFDcpYuhWxyWj8071964 = WWNALTWMCnZklHCvpgFDcpYuhWxyWj31302868;     WWNALTWMCnZklHCvpgFDcpYuhWxyWj31302868 = WWNALTWMCnZklHCvpgFDcpYuhWxyWj17995195;     WWNALTWMCnZklHCvpgFDcpYuhWxyWj17995195 = WWNALTWMCnZklHCvpgFDcpYuhWxyWj66209756;     WWNALTWMCnZklHCvpgFDcpYuhWxyWj66209756 = WWNALTWMCnZklHCvpgFDcpYuhWxyWj45691957;     WWNALTWMCnZklHCvpgFDcpYuhWxyWj45691957 = WWNALTWMCnZklHCvpgFDcpYuhWxyWj73829433;     WWNALTWMCnZklHCvpgFDcpYuhWxyWj73829433 = WWNALTWMCnZklHCvpgFDcpYuhWxyWj83561389;     WWNALTWMCnZklHCvpgFDcpYuhWxyWj83561389 = WWNALTWMCnZklHCvpgFDcpYuhWxyWj3974794;     WWNALTWMCnZklHCvpgFDcpYuhWxyWj3974794 = WWNALTWMCnZklHCvpgFDcpYuhWxyWj31392779;     WWNALTWMCnZklHCvpgFDcpYuhWxyWj31392779 = WWNALTWMCnZklHCvpgFDcpYuhWxyWj3795028;     WWNALTWMCnZklHCvpgFDcpYuhWxyWj3795028 = WWNALTWMCnZklHCvpgFDcpYuhWxyWj55254416;     WWNALTWMCnZklHCvpgFDcpYuhWxyWj55254416 = WWNALTWMCnZklHCvpgFDcpYuhWxyWj30090742;     WWNALTWMCnZklHCvpgFDcpYuhWxyWj30090742 = WWNALTWMCnZklHCvpgFDcpYuhWxyWj25561544;     WWNALTWMCnZklHCvpgFDcpYuhWxyWj25561544 = WWNALTWMCnZklHCvpgFDcpYuhWxyWj5169886;     WWNALTWMCnZklHCvpgFDcpYuhWxyWj5169886 = WWNALTWMCnZklHCvpgFDcpYuhWxyWj82851698;     WWNALTWMCnZklHCvpgFDcpYuhWxyWj82851698 = WWNALTWMCnZklHCvpgFDcpYuhWxyWj72573604;     WWNALTWMCnZklHCvpgFDcpYuhWxyWj72573604 = WWNALTWMCnZklHCvpgFDcpYuhWxyWj7323034;     WWNALTWMCnZklHCvpgFDcpYuhWxyWj7323034 = WWNALTWMCnZklHCvpgFDcpYuhWxyWj41147680;     WWNALTWMCnZklHCvpgFDcpYuhWxyWj41147680 = WWNALTWMCnZklHCvpgFDcpYuhWxyWj47967937;     WWNALTWMCnZklHCvpgFDcpYuhWxyWj47967937 = WWNALTWMCnZklHCvpgFDcpYuhWxyWj55464520;     WWNALTWMCnZklHCvpgFDcpYuhWxyWj55464520 = WWNALTWMCnZklHCvpgFDcpYuhWxyWj22235488;     WWNALTWMCnZklHCvpgFDcpYuhWxyWj22235488 = WWNALTWMCnZklHCvpgFDcpYuhWxyWj98768523;     WWNALTWMCnZklHCvpgFDcpYuhWxyWj98768523 = WWNALTWMCnZklHCvpgFDcpYuhWxyWj51320041;     WWNALTWMCnZklHCvpgFDcpYuhWxyWj51320041 = WWNALTWMCnZklHCvpgFDcpYuhWxyWj50801467;     WWNALTWMCnZklHCvpgFDcpYuhWxyWj50801467 = WWNALTWMCnZklHCvpgFDcpYuhWxyWj14523552;     WWNALTWMCnZklHCvpgFDcpYuhWxyWj14523552 = WWNALTWMCnZklHCvpgFDcpYuhWxyWj66989561;     WWNALTWMCnZklHCvpgFDcpYuhWxyWj66989561 = WWNALTWMCnZklHCvpgFDcpYuhWxyWj75161242;     WWNALTWMCnZklHCvpgFDcpYuhWxyWj75161242 = WWNALTWMCnZklHCvpgFDcpYuhWxyWj10654610;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void WpOwyZowoJBHJiAiHOzcHAzcC43833663() {     double oucjBlpvruTRRKsyODrIaJayYMyKmv61818692 = -438155773;    double oucjBlpvruTRRKsyODrIaJayYMyKmv87053928 = -371162734;    double oucjBlpvruTRRKsyODrIaJayYMyKmv66344326 = -231625895;    double oucjBlpvruTRRKsyODrIaJayYMyKmv88238692 = -927013732;    double oucjBlpvruTRRKsyODrIaJayYMyKmv48939283 = -568933972;    double oucjBlpvruTRRKsyODrIaJayYMyKmv47534516 = -679444849;    double oucjBlpvruTRRKsyODrIaJayYMyKmv57061711 = -440098866;    double oucjBlpvruTRRKsyODrIaJayYMyKmv36031219 = -757205322;    double oucjBlpvruTRRKsyODrIaJayYMyKmv96020205 = -270787969;    double oucjBlpvruTRRKsyODrIaJayYMyKmv91572627 = -359970999;    double oucjBlpvruTRRKsyODrIaJayYMyKmv54588493 = -162826369;    double oucjBlpvruTRRKsyODrIaJayYMyKmv26958846 = -836125558;    double oucjBlpvruTRRKsyODrIaJayYMyKmv41680559 = -16788507;    double oucjBlpvruTRRKsyODrIaJayYMyKmv80592567 = -59466098;    double oucjBlpvruTRRKsyODrIaJayYMyKmv1299542 = -675182565;    double oucjBlpvruTRRKsyODrIaJayYMyKmv42339205 = -613985558;    double oucjBlpvruTRRKsyODrIaJayYMyKmv74411076 = -268797703;    double oucjBlpvruTRRKsyODrIaJayYMyKmv72675651 = -736243811;    double oucjBlpvruTRRKsyODrIaJayYMyKmv26244891 = -931602630;    double oucjBlpvruTRRKsyODrIaJayYMyKmv74219764 = -458398442;    double oucjBlpvruTRRKsyODrIaJayYMyKmv59682899 = -283122182;    double oucjBlpvruTRRKsyODrIaJayYMyKmv96883561 = 10517589;    double oucjBlpvruTRRKsyODrIaJayYMyKmv82876759 = -364340416;    double oucjBlpvruTRRKsyODrIaJayYMyKmv24033641 = -225615978;    double oucjBlpvruTRRKsyODrIaJayYMyKmv54153865 = -76831011;    double oucjBlpvruTRRKsyODrIaJayYMyKmv67117982 = -762233805;    double oucjBlpvruTRRKsyODrIaJayYMyKmv37661239 = -297973316;    double oucjBlpvruTRRKsyODrIaJayYMyKmv43873652 = -383940719;    double oucjBlpvruTRRKsyODrIaJayYMyKmv56031509 = -916320176;    double oucjBlpvruTRRKsyODrIaJayYMyKmv10508535 = -713439408;    double oucjBlpvruTRRKsyODrIaJayYMyKmv8333048 = -205256289;    double oucjBlpvruTRRKsyODrIaJayYMyKmv36739731 = -270865177;    double oucjBlpvruTRRKsyODrIaJayYMyKmv72463474 = -131860141;    double oucjBlpvruTRRKsyODrIaJayYMyKmv84022043 = 96378431;    double oucjBlpvruTRRKsyODrIaJayYMyKmv87564575 = 72554970;    double oucjBlpvruTRRKsyODrIaJayYMyKmv10776129 = 46379606;    double oucjBlpvruTRRKsyODrIaJayYMyKmv81517391 = -945782496;    double oucjBlpvruTRRKsyODrIaJayYMyKmv72337648 = -559119914;    double oucjBlpvruTRRKsyODrIaJayYMyKmv49245781 = -814825410;    double oucjBlpvruTRRKsyODrIaJayYMyKmv64255456 = -448324138;    double oucjBlpvruTRRKsyODrIaJayYMyKmv30678431 = -85867315;    double oucjBlpvruTRRKsyODrIaJayYMyKmv33716590 = -663336108;    double oucjBlpvruTRRKsyODrIaJayYMyKmv8055125 = 59719474;    double oucjBlpvruTRRKsyODrIaJayYMyKmv93597267 = -541444920;    double oucjBlpvruTRRKsyODrIaJayYMyKmv71105818 = -488249745;    double oucjBlpvruTRRKsyODrIaJayYMyKmv5572121 = 8714111;    double oucjBlpvruTRRKsyODrIaJayYMyKmv14825540 = -451937732;    double oucjBlpvruTRRKsyODrIaJayYMyKmv62880183 = -419752874;    double oucjBlpvruTRRKsyODrIaJayYMyKmv97158528 = -583148149;    double oucjBlpvruTRRKsyODrIaJayYMyKmv9636 = -787810482;    double oucjBlpvruTRRKsyODrIaJayYMyKmv31214806 = -438808216;    double oucjBlpvruTRRKsyODrIaJayYMyKmv74329973 = -672870504;    double oucjBlpvruTRRKsyODrIaJayYMyKmv84061678 = -820419388;    double oucjBlpvruTRRKsyODrIaJayYMyKmv9833337 = -327667001;    double oucjBlpvruTRRKsyODrIaJayYMyKmv84150763 = -31050204;    double oucjBlpvruTRRKsyODrIaJayYMyKmv64935131 = -348673363;    double oucjBlpvruTRRKsyODrIaJayYMyKmv4177170 = 93177681;    double oucjBlpvruTRRKsyODrIaJayYMyKmv42310686 = 93990083;    double oucjBlpvruTRRKsyODrIaJayYMyKmv34084827 = -750182721;    double oucjBlpvruTRRKsyODrIaJayYMyKmv81821300 = -806700168;    double oucjBlpvruTRRKsyODrIaJayYMyKmv9873278 = -281471533;    double oucjBlpvruTRRKsyODrIaJayYMyKmv13188060 = 43841853;    double oucjBlpvruTRRKsyODrIaJayYMyKmv79999709 = -840885146;    double oucjBlpvruTRRKsyODrIaJayYMyKmv85511671 = -557348562;    double oucjBlpvruTRRKsyODrIaJayYMyKmv83239580 = -54714710;    double oucjBlpvruTRRKsyODrIaJayYMyKmv17848763 = -891961192;    double oucjBlpvruTRRKsyODrIaJayYMyKmv54495372 = -604265418;    double oucjBlpvruTRRKsyODrIaJayYMyKmv57658515 = -13166939;    double oucjBlpvruTRRKsyODrIaJayYMyKmv93027991 = -32021069;    double oucjBlpvruTRRKsyODrIaJayYMyKmv90523413 = -621562172;    double oucjBlpvruTRRKsyODrIaJayYMyKmv60821814 = -668203063;    double oucjBlpvruTRRKsyODrIaJayYMyKmv2073429 = -709677789;    double oucjBlpvruTRRKsyODrIaJayYMyKmv23429870 = -921418401;    double oucjBlpvruTRRKsyODrIaJayYMyKmv61989435 = -383278492;    double oucjBlpvruTRRKsyODrIaJayYMyKmv43541334 = -272531127;    double oucjBlpvruTRRKsyODrIaJayYMyKmv25966309 = -619786074;    double oucjBlpvruTRRKsyODrIaJayYMyKmv88828437 = 50798115;    double oucjBlpvruTRRKsyODrIaJayYMyKmv89279492 = -822895497;    double oucjBlpvruTRRKsyODrIaJayYMyKmv52927822 = -737366234;    double oucjBlpvruTRRKsyODrIaJayYMyKmv48581745 = 14454878;    double oucjBlpvruTRRKsyODrIaJayYMyKmv52292443 = -210296073;    double oucjBlpvruTRRKsyODrIaJayYMyKmv74781055 = -878220443;    double oucjBlpvruTRRKsyODrIaJayYMyKmv46715123 = -800792571;    double oucjBlpvruTRRKsyODrIaJayYMyKmv56021874 = -28509695;    double oucjBlpvruTRRKsyODrIaJayYMyKmv79293728 = -174631192;    double oucjBlpvruTRRKsyODrIaJayYMyKmv34003075 = -532385786;    double oucjBlpvruTRRKsyODrIaJayYMyKmv52678052 = -450445790;    double oucjBlpvruTRRKsyODrIaJayYMyKmv62630137 = -804193141;    double oucjBlpvruTRRKsyODrIaJayYMyKmv99871280 = -872571365;    double oucjBlpvruTRRKsyODrIaJayYMyKmv22629445 = -578771668;    double oucjBlpvruTRRKsyODrIaJayYMyKmv6598960 = 53201924;    double oucjBlpvruTRRKsyODrIaJayYMyKmv39206706 = -939772579;    double oucjBlpvruTRRKsyODrIaJayYMyKmv38252821 = -808937193;    double oucjBlpvruTRRKsyODrIaJayYMyKmv67424480 = 91874757;    double oucjBlpvruTRRKsyODrIaJayYMyKmv54382178 = -66852605;    double oucjBlpvruTRRKsyODrIaJayYMyKmv17490371 = -29709169;    double oucjBlpvruTRRKsyODrIaJayYMyKmv53716880 = -822450963;    double oucjBlpvruTRRKsyODrIaJayYMyKmv22543453 = -382931964;    double oucjBlpvruTRRKsyODrIaJayYMyKmv10357688 = -386730210;    double oucjBlpvruTRRKsyODrIaJayYMyKmv53257056 = -438155773;     oucjBlpvruTRRKsyODrIaJayYMyKmv61818692 = oucjBlpvruTRRKsyODrIaJayYMyKmv87053928;     oucjBlpvruTRRKsyODrIaJayYMyKmv87053928 = oucjBlpvruTRRKsyODrIaJayYMyKmv66344326;     oucjBlpvruTRRKsyODrIaJayYMyKmv66344326 = oucjBlpvruTRRKsyODrIaJayYMyKmv88238692;     oucjBlpvruTRRKsyODrIaJayYMyKmv88238692 = oucjBlpvruTRRKsyODrIaJayYMyKmv48939283;     oucjBlpvruTRRKsyODrIaJayYMyKmv48939283 = oucjBlpvruTRRKsyODrIaJayYMyKmv47534516;     oucjBlpvruTRRKsyODrIaJayYMyKmv47534516 = oucjBlpvruTRRKsyODrIaJayYMyKmv57061711;     oucjBlpvruTRRKsyODrIaJayYMyKmv57061711 = oucjBlpvruTRRKsyODrIaJayYMyKmv36031219;     oucjBlpvruTRRKsyODrIaJayYMyKmv36031219 = oucjBlpvruTRRKsyODrIaJayYMyKmv96020205;     oucjBlpvruTRRKsyODrIaJayYMyKmv96020205 = oucjBlpvruTRRKsyODrIaJayYMyKmv91572627;     oucjBlpvruTRRKsyODrIaJayYMyKmv91572627 = oucjBlpvruTRRKsyODrIaJayYMyKmv54588493;     oucjBlpvruTRRKsyODrIaJayYMyKmv54588493 = oucjBlpvruTRRKsyODrIaJayYMyKmv26958846;     oucjBlpvruTRRKsyODrIaJayYMyKmv26958846 = oucjBlpvruTRRKsyODrIaJayYMyKmv41680559;     oucjBlpvruTRRKsyODrIaJayYMyKmv41680559 = oucjBlpvruTRRKsyODrIaJayYMyKmv80592567;     oucjBlpvruTRRKsyODrIaJayYMyKmv80592567 = oucjBlpvruTRRKsyODrIaJayYMyKmv1299542;     oucjBlpvruTRRKsyODrIaJayYMyKmv1299542 = oucjBlpvruTRRKsyODrIaJayYMyKmv42339205;     oucjBlpvruTRRKsyODrIaJayYMyKmv42339205 = oucjBlpvruTRRKsyODrIaJayYMyKmv74411076;     oucjBlpvruTRRKsyODrIaJayYMyKmv74411076 = oucjBlpvruTRRKsyODrIaJayYMyKmv72675651;     oucjBlpvruTRRKsyODrIaJayYMyKmv72675651 = oucjBlpvruTRRKsyODrIaJayYMyKmv26244891;     oucjBlpvruTRRKsyODrIaJayYMyKmv26244891 = oucjBlpvruTRRKsyODrIaJayYMyKmv74219764;     oucjBlpvruTRRKsyODrIaJayYMyKmv74219764 = oucjBlpvruTRRKsyODrIaJayYMyKmv59682899;     oucjBlpvruTRRKsyODrIaJayYMyKmv59682899 = oucjBlpvruTRRKsyODrIaJayYMyKmv96883561;     oucjBlpvruTRRKsyODrIaJayYMyKmv96883561 = oucjBlpvruTRRKsyODrIaJayYMyKmv82876759;     oucjBlpvruTRRKsyODrIaJayYMyKmv82876759 = oucjBlpvruTRRKsyODrIaJayYMyKmv24033641;     oucjBlpvruTRRKsyODrIaJayYMyKmv24033641 = oucjBlpvruTRRKsyODrIaJayYMyKmv54153865;     oucjBlpvruTRRKsyODrIaJayYMyKmv54153865 = oucjBlpvruTRRKsyODrIaJayYMyKmv67117982;     oucjBlpvruTRRKsyODrIaJayYMyKmv67117982 = oucjBlpvruTRRKsyODrIaJayYMyKmv37661239;     oucjBlpvruTRRKsyODrIaJayYMyKmv37661239 = oucjBlpvruTRRKsyODrIaJayYMyKmv43873652;     oucjBlpvruTRRKsyODrIaJayYMyKmv43873652 = oucjBlpvruTRRKsyODrIaJayYMyKmv56031509;     oucjBlpvruTRRKsyODrIaJayYMyKmv56031509 = oucjBlpvruTRRKsyODrIaJayYMyKmv10508535;     oucjBlpvruTRRKsyODrIaJayYMyKmv10508535 = oucjBlpvruTRRKsyODrIaJayYMyKmv8333048;     oucjBlpvruTRRKsyODrIaJayYMyKmv8333048 = oucjBlpvruTRRKsyODrIaJayYMyKmv36739731;     oucjBlpvruTRRKsyODrIaJayYMyKmv36739731 = oucjBlpvruTRRKsyODrIaJayYMyKmv72463474;     oucjBlpvruTRRKsyODrIaJayYMyKmv72463474 = oucjBlpvruTRRKsyODrIaJayYMyKmv84022043;     oucjBlpvruTRRKsyODrIaJayYMyKmv84022043 = oucjBlpvruTRRKsyODrIaJayYMyKmv87564575;     oucjBlpvruTRRKsyODrIaJayYMyKmv87564575 = oucjBlpvruTRRKsyODrIaJayYMyKmv10776129;     oucjBlpvruTRRKsyODrIaJayYMyKmv10776129 = oucjBlpvruTRRKsyODrIaJayYMyKmv81517391;     oucjBlpvruTRRKsyODrIaJayYMyKmv81517391 = oucjBlpvruTRRKsyODrIaJayYMyKmv72337648;     oucjBlpvruTRRKsyODrIaJayYMyKmv72337648 = oucjBlpvruTRRKsyODrIaJayYMyKmv49245781;     oucjBlpvruTRRKsyODrIaJayYMyKmv49245781 = oucjBlpvruTRRKsyODrIaJayYMyKmv64255456;     oucjBlpvruTRRKsyODrIaJayYMyKmv64255456 = oucjBlpvruTRRKsyODrIaJayYMyKmv30678431;     oucjBlpvruTRRKsyODrIaJayYMyKmv30678431 = oucjBlpvruTRRKsyODrIaJayYMyKmv33716590;     oucjBlpvruTRRKsyODrIaJayYMyKmv33716590 = oucjBlpvruTRRKsyODrIaJayYMyKmv8055125;     oucjBlpvruTRRKsyODrIaJayYMyKmv8055125 = oucjBlpvruTRRKsyODrIaJayYMyKmv93597267;     oucjBlpvruTRRKsyODrIaJayYMyKmv93597267 = oucjBlpvruTRRKsyODrIaJayYMyKmv71105818;     oucjBlpvruTRRKsyODrIaJayYMyKmv71105818 = oucjBlpvruTRRKsyODrIaJayYMyKmv5572121;     oucjBlpvruTRRKsyODrIaJayYMyKmv5572121 = oucjBlpvruTRRKsyODrIaJayYMyKmv14825540;     oucjBlpvruTRRKsyODrIaJayYMyKmv14825540 = oucjBlpvruTRRKsyODrIaJayYMyKmv62880183;     oucjBlpvruTRRKsyODrIaJayYMyKmv62880183 = oucjBlpvruTRRKsyODrIaJayYMyKmv97158528;     oucjBlpvruTRRKsyODrIaJayYMyKmv97158528 = oucjBlpvruTRRKsyODrIaJayYMyKmv9636;     oucjBlpvruTRRKsyODrIaJayYMyKmv9636 = oucjBlpvruTRRKsyODrIaJayYMyKmv31214806;     oucjBlpvruTRRKsyODrIaJayYMyKmv31214806 = oucjBlpvruTRRKsyODrIaJayYMyKmv74329973;     oucjBlpvruTRRKsyODrIaJayYMyKmv74329973 = oucjBlpvruTRRKsyODrIaJayYMyKmv84061678;     oucjBlpvruTRRKsyODrIaJayYMyKmv84061678 = oucjBlpvruTRRKsyODrIaJayYMyKmv9833337;     oucjBlpvruTRRKsyODrIaJayYMyKmv9833337 = oucjBlpvruTRRKsyODrIaJayYMyKmv84150763;     oucjBlpvruTRRKsyODrIaJayYMyKmv84150763 = oucjBlpvruTRRKsyODrIaJayYMyKmv64935131;     oucjBlpvruTRRKsyODrIaJayYMyKmv64935131 = oucjBlpvruTRRKsyODrIaJayYMyKmv4177170;     oucjBlpvruTRRKsyODrIaJayYMyKmv4177170 = oucjBlpvruTRRKsyODrIaJayYMyKmv42310686;     oucjBlpvruTRRKsyODrIaJayYMyKmv42310686 = oucjBlpvruTRRKsyODrIaJayYMyKmv34084827;     oucjBlpvruTRRKsyODrIaJayYMyKmv34084827 = oucjBlpvruTRRKsyODrIaJayYMyKmv81821300;     oucjBlpvruTRRKsyODrIaJayYMyKmv81821300 = oucjBlpvruTRRKsyODrIaJayYMyKmv9873278;     oucjBlpvruTRRKsyODrIaJayYMyKmv9873278 = oucjBlpvruTRRKsyODrIaJayYMyKmv13188060;     oucjBlpvruTRRKsyODrIaJayYMyKmv13188060 = oucjBlpvruTRRKsyODrIaJayYMyKmv79999709;     oucjBlpvruTRRKsyODrIaJayYMyKmv79999709 = oucjBlpvruTRRKsyODrIaJayYMyKmv85511671;     oucjBlpvruTRRKsyODrIaJayYMyKmv85511671 = oucjBlpvruTRRKsyODrIaJayYMyKmv83239580;     oucjBlpvruTRRKsyODrIaJayYMyKmv83239580 = oucjBlpvruTRRKsyODrIaJayYMyKmv17848763;     oucjBlpvruTRRKsyODrIaJayYMyKmv17848763 = oucjBlpvruTRRKsyODrIaJayYMyKmv54495372;     oucjBlpvruTRRKsyODrIaJayYMyKmv54495372 = oucjBlpvruTRRKsyODrIaJayYMyKmv57658515;     oucjBlpvruTRRKsyODrIaJayYMyKmv57658515 = oucjBlpvruTRRKsyODrIaJayYMyKmv93027991;     oucjBlpvruTRRKsyODrIaJayYMyKmv93027991 = oucjBlpvruTRRKsyODrIaJayYMyKmv90523413;     oucjBlpvruTRRKsyODrIaJayYMyKmv90523413 = oucjBlpvruTRRKsyODrIaJayYMyKmv60821814;     oucjBlpvruTRRKsyODrIaJayYMyKmv60821814 = oucjBlpvruTRRKsyODrIaJayYMyKmv2073429;     oucjBlpvruTRRKsyODrIaJayYMyKmv2073429 = oucjBlpvruTRRKsyODrIaJayYMyKmv23429870;     oucjBlpvruTRRKsyODrIaJayYMyKmv23429870 = oucjBlpvruTRRKsyODrIaJayYMyKmv61989435;     oucjBlpvruTRRKsyODrIaJayYMyKmv61989435 = oucjBlpvruTRRKsyODrIaJayYMyKmv43541334;     oucjBlpvruTRRKsyODrIaJayYMyKmv43541334 = oucjBlpvruTRRKsyODrIaJayYMyKmv25966309;     oucjBlpvruTRRKsyODrIaJayYMyKmv25966309 = oucjBlpvruTRRKsyODrIaJayYMyKmv88828437;     oucjBlpvruTRRKsyODrIaJayYMyKmv88828437 = oucjBlpvruTRRKsyODrIaJayYMyKmv89279492;     oucjBlpvruTRRKsyODrIaJayYMyKmv89279492 = oucjBlpvruTRRKsyODrIaJayYMyKmv52927822;     oucjBlpvruTRRKsyODrIaJayYMyKmv52927822 = oucjBlpvruTRRKsyODrIaJayYMyKmv48581745;     oucjBlpvruTRRKsyODrIaJayYMyKmv48581745 = oucjBlpvruTRRKsyODrIaJayYMyKmv52292443;     oucjBlpvruTRRKsyODrIaJayYMyKmv52292443 = oucjBlpvruTRRKsyODrIaJayYMyKmv74781055;     oucjBlpvruTRRKsyODrIaJayYMyKmv74781055 = oucjBlpvruTRRKsyODrIaJayYMyKmv46715123;     oucjBlpvruTRRKsyODrIaJayYMyKmv46715123 = oucjBlpvruTRRKsyODrIaJayYMyKmv56021874;     oucjBlpvruTRRKsyODrIaJayYMyKmv56021874 = oucjBlpvruTRRKsyODrIaJayYMyKmv79293728;     oucjBlpvruTRRKsyODrIaJayYMyKmv79293728 = oucjBlpvruTRRKsyODrIaJayYMyKmv34003075;     oucjBlpvruTRRKsyODrIaJayYMyKmv34003075 = oucjBlpvruTRRKsyODrIaJayYMyKmv52678052;     oucjBlpvruTRRKsyODrIaJayYMyKmv52678052 = oucjBlpvruTRRKsyODrIaJayYMyKmv62630137;     oucjBlpvruTRRKsyODrIaJayYMyKmv62630137 = oucjBlpvruTRRKsyODrIaJayYMyKmv99871280;     oucjBlpvruTRRKsyODrIaJayYMyKmv99871280 = oucjBlpvruTRRKsyODrIaJayYMyKmv22629445;     oucjBlpvruTRRKsyODrIaJayYMyKmv22629445 = oucjBlpvruTRRKsyODrIaJayYMyKmv6598960;     oucjBlpvruTRRKsyODrIaJayYMyKmv6598960 = oucjBlpvruTRRKsyODrIaJayYMyKmv39206706;     oucjBlpvruTRRKsyODrIaJayYMyKmv39206706 = oucjBlpvruTRRKsyODrIaJayYMyKmv38252821;     oucjBlpvruTRRKsyODrIaJayYMyKmv38252821 = oucjBlpvruTRRKsyODrIaJayYMyKmv67424480;     oucjBlpvruTRRKsyODrIaJayYMyKmv67424480 = oucjBlpvruTRRKsyODrIaJayYMyKmv54382178;     oucjBlpvruTRRKsyODrIaJayYMyKmv54382178 = oucjBlpvruTRRKsyODrIaJayYMyKmv17490371;     oucjBlpvruTRRKsyODrIaJayYMyKmv17490371 = oucjBlpvruTRRKsyODrIaJayYMyKmv53716880;     oucjBlpvruTRRKsyODrIaJayYMyKmv53716880 = oucjBlpvruTRRKsyODrIaJayYMyKmv22543453;     oucjBlpvruTRRKsyODrIaJayYMyKmv22543453 = oucjBlpvruTRRKsyODrIaJayYMyKmv10357688;     oucjBlpvruTRRKsyODrIaJayYMyKmv10357688 = oucjBlpvruTRRKsyODrIaJayYMyKmv53257056;     oucjBlpvruTRRKsyODrIaJayYMyKmv53257056 = oucjBlpvruTRRKsyODrIaJayYMyKmv61818692;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void iBHnQTANqWONdCcNmomjMQCkd53438389() {     double VLORWVztjLivnzsLJZGLRguzHceKZB83640913 = 93628895;    double VLORWVztjLivnzsLJZGLRguzHceKZB48521733 = -753761587;    double VLORWVztjLivnzsLJZGLRguzHceKZB12071597 = -278843427;    double VLORWVztjLivnzsLJZGLRguzHceKZB19613839 = -31797908;    double VLORWVztjLivnzsLJZGLRguzHceKZB9073615 = -446184894;    double VLORWVztjLivnzsLJZGLRguzHceKZB71552832 = -690988007;    double VLORWVztjLivnzsLJZGLRguzHceKZB86082295 = -503416989;    double VLORWVztjLivnzsLJZGLRguzHceKZB22893848 = -765386170;    double VLORWVztjLivnzsLJZGLRguzHceKZB92543845 = -256583387;    double VLORWVztjLivnzsLJZGLRguzHceKZB52855853 = -230189396;    double VLORWVztjLivnzsLJZGLRguzHceKZB25504762 = -818584071;    double VLORWVztjLivnzsLJZGLRguzHceKZB43140729 = -939307165;    double VLORWVztjLivnzsLJZGLRguzHceKZB74669501 = -554822296;    double VLORWVztjLivnzsLJZGLRguzHceKZB47559034 = -909542896;    double VLORWVztjLivnzsLJZGLRguzHceKZB96557337 = -602024484;    double VLORWVztjLivnzsLJZGLRguzHceKZB90309931 = 43647901;    double VLORWVztjLivnzsLJZGLRguzHceKZB67860136 = -654622421;    double VLORWVztjLivnzsLJZGLRguzHceKZB35200954 = -657964729;    double VLORWVztjLivnzsLJZGLRguzHceKZB30882115 = 95261714;    double VLORWVztjLivnzsLJZGLRguzHceKZB55329407 = -949643497;    double VLORWVztjLivnzsLJZGLRguzHceKZB16837185 = -15200885;    double VLORWVztjLivnzsLJZGLRguzHceKZB61285540 = -60233575;    double VLORWVztjLivnzsLJZGLRguzHceKZB92348164 = 79632229;    double VLORWVztjLivnzsLJZGLRguzHceKZB61311263 = -635714844;    double VLORWVztjLivnzsLJZGLRguzHceKZB28084533 = 12272017;    double VLORWVztjLivnzsLJZGLRguzHceKZB56693836 = 10580667;    double VLORWVztjLivnzsLJZGLRguzHceKZB10697843 = -924777361;    double VLORWVztjLivnzsLJZGLRguzHceKZB79453477 = -248388952;    double VLORWVztjLivnzsLJZGLRguzHceKZB3928423 = -583266094;    double VLORWVztjLivnzsLJZGLRguzHceKZB56325612 = 10346398;    double VLORWVztjLivnzsLJZGLRguzHceKZB59498313 = -610984036;    double VLORWVztjLivnzsLJZGLRguzHceKZB55631056 = -46754008;    double VLORWVztjLivnzsLJZGLRguzHceKZB97782938 = -974464024;    double VLORWVztjLivnzsLJZGLRguzHceKZB56561161 = -679441196;    double VLORWVztjLivnzsLJZGLRguzHceKZB68398787 = -77263632;    double VLORWVztjLivnzsLJZGLRguzHceKZB80353088 = 31963626;    double VLORWVztjLivnzsLJZGLRguzHceKZB24599648 = -995399592;    double VLORWVztjLivnzsLJZGLRguzHceKZB76275510 = -40662671;    double VLORWVztjLivnzsLJZGLRguzHceKZB9626228 = -587230691;    double VLORWVztjLivnzsLJZGLRguzHceKZB76926101 = -905873139;    double VLORWVztjLivnzsLJZGLRguzHceKZB85054276 = -520006573;    double VLORWVztjLivnzsLJZGLRguzHceKZB50218761 = -350802186;    double VLORWVztjLivnzsLJZGLRguzHceKZB55422523 = 15752659;    double VLORWVztjLivnzsLJZGLRguzHceKZB41692126 = -450251089;    double VLORWVztjLivnzsLJZGLRguzHceKZB51021629 = -674938374;    double VLORWVztjLivnzsLJZGLRguzHceKZB44778599 = -794718119;    double VLORWVztjLivnzsLJZGLRguzHceKZB40493651 = -632945253;    double VLORWVztjLivnzsLJZGLRguzHceKZB44719935 = -158248863;    double VLORWVztjLivnzsLJZGLRguzHceKZB4222621 = -768264571;    double VLORWVztjLivnzsLJZGLRguzHceKZB16057112 = -766865667;    double VLORWVztjLivnzsLJZGLRguzHceKZB19676625 = -482697542;    double VLORWVztjLivnzsLJZGLRguzHceKZB70718637 = -998248585;    double VLORWVztjLivnzsLJZGLRguzHceKZB75284543 = -784014527;    double VLORWVztjLivnzsLJZGLRguzHceKZB37858459 = -518676060;    double VLORWVztjLivnzsLJZGLRguzHceKZB36601205 = 7828047;    double VLORWVztjLivnzsLJZGLRguzHceKZB22355374 = -846137530;    double VLORWVztjLivnzsLJZGLRguzHceKZB56173569 = -733393816;    double VLORWVztjLivnzsLJZGLRguzHceKZB50760334 = -643128584;    double VLORWVztjLivnzsLJZGLRguzHceKZB91529306 = 55930075;    double VLORWVztjLivnzsLJZGLRguzHceKZB52379778 = -356765562;    double VLORWVztjLivnzsLJZGLRguzHceKZB60854989 = -766210647;    double VLORWVztjLivnzsLJZGLRguzHceKZB6628819 = -155028038;    double VLORWVztjLivnzsLJZGLRguzHceKZB18965426 = -82120076;    double VLORWVztjLivnzsLJZGLRguzHceKZB36218234 = -166929786;    double VLORWVztjLivnzsLJZGLRguzHceKZB93357540 = -619205360;    double VLORWVztjLivnzsLJZGLRguzHceKZB69873705 = -671830064;    double VLORWVztjLivnzsLJZGLRguzHceKZB45357791 = -964843141;    double VLORWVztjLivnzsLJZGLRguzHceKZB18108341 = -875381101;    double VLORWVztjLivnzsLJZGLRguzHceKZB79160246 = -732279264;    double VLORWVztjLivnzsLJZGLRguzHceKZB16204249 = -533988111;    double VLORWVztjLivnzsLJZGLRguzHceKZB65710284 = 39047492;    double VLORWVztjLivnzsLJZGLRguzHceKZB91584625 = -513959750;    double VLORWVztjLivnzsLJZGLRguzHceKZB25574727 = 29265962;    double VLORWVztjLivnzsLJZGLRguzHceKZB53956013 = 1134852;    double VLORWVztjLivnzsLJZGLRguzHceKZB70275130 = -329636925;    double VLORWVztjLivnzsLJZGLRguzHceKZB66618423 = -664398700;    double VLORWVztjLivnzsLJZGLRguzHceKZB5863017 = 24013765;    double VLORWVztjLivnzsLJZGLRguzHceKZB50656038 = -470116682;    double VLORWVztjLivnzsLJZGLRguzHceKZB10289634 = -960776470;    double VLORWVztjLivnzsLJZGLRguzHceKZB83305933 = -193009864;    double VLORWVztjLivnzsLJZGLRguzHceKZB16200186 = -356474081;    double VLORWVztjLivnzsLJZGLRguzHceKZB65977907 = -666528499;    double VLORWVztjLivnzsLJZGLRguzHceKZB75230856 = -480124381;    double VLORWVztjLivnzsLJZGLRguzHceKZB87871310 = -816400428;    double VLORWVztjLivnzsLJZGLRguzHceKZB36648987 = -506956060;    double VLORWVztjLivnzsLJZGLRguzHceKZB88779676 = -612735452;    double VLORWVztjLivnzsLJZGLRguzHceKZB80346513 = -262739481;    double VLORWVztjLivnzsLJZGLRguzHceKZB59924479 = -355787964;    double VLORWVztjLivnzsLJZGLRguzHceKZB19959956 = -587269243;    double VLORWVztjLivnzsLJZGLRguzHceKZB46043414 = -231126103;    double VLORWVztjLivnzsLJZGLRguzHceKZB24179520 = -234642558;    double VLORWVztjLivnzsLJZGLRguzHceKZB73839314 = -252271009;    double VLORWVztjLivnzsLJZGLRguzHceKZB84746204 = 3407253;    double VLORWVztjLivnzsLJZGLRguzHceKZB57246449 = -130465130;    double VLORWVztjLivnzsLJZGLRguzHceKZB16071113 = -39662493;    double VLORWVztjLivnzsLJZGLRguzHceKZB78425458 = -264978535;    double VLORWVztjLivnzsLJZGLRguzHceKZB31253335 = -168682110;    double VLORWVztjLivnzsLJZGLRguzHceKZB19204290 = -817317556;    double VLORWVztjLivnzsLJZGLRguzHceKZB48334586 = -831045729;    double VLORWVztjLivnzsLJZGLRguzHceKZB81147924 = 93628895;     VLORWVztjLivnzsLJZGLRguzHceKZB83640913 = VLORWVztjLivnzsLJZGLRguzHceKZB48521733;     VLORWVztjLivnzsLJZGLRguzHceKZB48521733 = VLORWVztjLivnzsLJZGLRguzHceKZB12071597;     VLORWVztjLivnzsLJZGLRguzHceKZB12071597 = VLORWVztjLivnzsLJZGLRguzHceKZB19613839;     VLORWVztjLivnzsLJZGLRguzHceKZB19613839 = VLORWVztjLivnzsLJZGLRguzHceKZB9073615;     VLORWVztjLivnzsLJZGLRguzHceKZB9073615 = VLORWVztjLivnzsLJZGLRguzHceKZB71552832;     VLORWVztjLivnzsLJZGLRguzHceKZB71552832 = VLORWVztjLivnzsLJZGLRguzHceKZB86082295;     VLORWVztjLivnzsLJZGLRguzHceKZB86082295 = VLORWVztjLivnzsLJZGLRguzHceKZB22893848;     VLORWVztjLivnzsLJZGLRguzHceKZB22893848 = VLORWVztjLivnzsLJZGLRguzHceKZB92543845;     VLORWVztjLivnzsLJZGLRguzHceKZB92543845 = VLORWVztjLivnzsLJZGLRguzHceKZB52855853;     VLORWVztjLivnzsLJZGLRguzHceKZB52855853 = VLORWVztjLivnzsLJZGLRguzHceKZB25504762;     VLORWVztjLivnzsLJZGLRguzHceKZB25504762 = VLORWVztjLivnzsLJZGLRguzHceKZB43140729;     VLORWVztjLivnzsLJZGLRguzHceKZB43140729 = VLORWVztjLivnzsLJZGLRguzHceKZB74669501;     VLORWVztjLivnzsLJZGLRguzHceKZB74669501 = VLORWVztjLivnzsLJZGLRguzHceKZB47559034;     VLORWVztjLivnzsLJZGLRguzHceKZB47559034 = VLORWVztjLivnzsLJZGLRguzHceKZB96557337;     VLORWVztjLivnzsLJZGLRguzHceKZB96557337 = VLORWVztjLivnzsLJZGLRguzHceKZB90309931;     VLORWVztjLivnzsLJZGLRguzHceKZB90309931 = VLORWVztjLivnzsLJZGLRguzHceKZB67860136;     VLORWVztjLivnzsLJZGLRguzHceKZB67860136 = VLORWVztjLivnzsLJZGLRguzHceKZB35200954;     VLORWVztjLivnzsLJZGLRguzHceKZB35200954 = VLORWVztjLivnzsLJZGLRguzHceKZB30882115;     VLORWVztjLivnzsLJZGLRguzHceKZB30882115 = VLORWVztjLivnzsLJZGLRguzHceKZB55329407;     VLORWVztjLivnzsLJZGLRguzHceKZB55329407 = VLORWVztjLivnzsLJZGLRguzHceKZB16837185;     VLORWVztjLivnzsLJZGLRguzHceKZB16837185 = VLORWVztjLivnzsLJZGLRguzHceKZB61285540;     VLORWVztjLivnzsLJZGLRguzHceKZB61285540 = VLORWVztjLivnzsLJZGLRguzHceKZB92348164;     VLORWVztjLivnzsLJZGLRguzHceKZB92348164 = VLORWVztjLivnzsLJZGLRguzHceKZB61311263;     VLORWVztjLivnzsLJZGLRguzHceKZB61311263 = VLORWVztjLivnzsLJZGLRguzHceKZB28084533;     VLORWVztjLivnzsLJZGLRguzHceKZB28084533 = VLORWVztjLivnzsLJZGLRguzHceKZB56693836;     VLORWVztjLivnzsLJZGLRguzHceKZB56693836 = VLORWVztjLivnzsLJZGLRguzHceKZB10697843;     VLORWVztjLivnzsLJZGLRguzHceKZB10697843 = VLORWVztjLivnzsLJZGLRguzHceKZB79453477;     VLORWVztjLivnzsLJZGLRguzHceKZB79453477 = VLORWVztjLivnzsLJZGLRguzHceKZB3928423;     VLORWVztjLivnzsLJZGLRguzHceKZB3928423 = VLORWVztjLivnzsLJZGLRguzHceKZB56325612;     VLORWVztjLivnzsLJZGLRguzHceKZB56325612 = VLORWVztjLivnzsLJZGLRguzHceKZB59498313;     VLORWVztjLivnzsLJZGLRguzHceKZB59498313 = VLORWVztjLivnzsLJZGLRguzHceKZB55631056;     VLORWVztjLivnzsLJZGLRguzHceKZB55631056 = VLORWVztjLivnzsLJZGLRguzHceKZB97782938;     VLORWVztjLivnzsLJZGLRguzHceKZB97782938 = VLORWVztjLivnzsLJZGLRguzHceKZB56561161;     VLORWVztjLivnzsLJZGLRguzHceKZB56561161 = VLORWVztjLivnzsLJZGLRguzHceKZB68398787;     VLORWVztjLivnzsLJZGLRguzHceKZB68398787 = VLORWVztjLivnzsLJZGLRguzHceKZB80353088;     VLORWVztjLivnzsLJZGLRguzHceKZB80353088 = VLORWVztjLivnzsLJZGLRguzHceKZB24599648;     VLORWVztjLivnzsLJZGLRguzHceKZB24599648 = VLORWVztjLivnzsLJZGLRguzHceKZB76275510;     VLORWVztjLivnzsLJZGLRguzHceKZB76275510 = VLORWVztjLivnzsLJZGLRguzHceKZB9626228;     VLORWVztjLivnzsLJZGLRguzHceKZB9626228 = VLORWVztjLivnzsLJZGLRguzHceKZB76926101;     VLORWVztjLivnzsLJZGLRguzHceKZB76926101 = VLORWVztjLivnzsLJZGLRguzHceKZB85054276;     VLORWVztjLivnzsLJZGLRguzHceKZB85054276 = VLORWVztjLivnzsLJZGLRguzHceKZB50218761;     VLORWVztjLivnzsLJZGLRguzHceKZB50218761 = VLORWVztjLivnzsLJZGLRguzHceKZB55422523;     VLORWVztjLivnzsLJZGLRguzHceKZB55422523 = VLORWVztjLivnzsLJZGLRguzHceKZB41692126;     VLORWVztjLivnzsLJZGLRguzHceKZB41692126 = VLORWVztjLivnzsLJZGLRguzHceKZB51021629;     VLORWVztjLivnzsLJZGLRguzHceKZB51021629 = VLORWVztjLivnzsLJZGLRguzHceKZB44778599;     VLORWVztjLivnzsLJZGLRguzHceKZB44778599 = VLORWVztjLivnzsLJZGLRguzHceKZB40493651;     VLORWVztjLivnzsLJZGLRguzHceKZB40493651 = VLORWVztjLivnzsLJZGLRguzHceKZB44719935;     VLORWVztjLivnzsLJZGLRguzHceKZB44719935 = VLORWVztjLivnzsLJZGLRguzHceKZB4222621;     VLORWVztjLivnzsLJZGLRguzHceKZB4222621 = VLORWVztjLivnzsLJZGLRguzHceKZB16057112;     VLORWVztjLivnzsLJZGLRguzHceKZB16057112 = VLORWVztjLivnzsLJZGLRguzHceKZB19676625;     VLORWVztjLivnzsLJZGLRguzHceKZB19676625 = VLORWVztjLivnzsLJZGLRguzHceKZB70718637;     VLORWVztjLivnzsLJZGLRguzHceKZB70718637 = VLORWVztjLivnzsLJZGLRguzHceKZB75284543;     VLORWVztjLivnzsLJZGLRguzHceKZB75284543 = VLORWVztjLivnzsLJZGLRguzHceKZB37858459;     VLORWVztjLivnzsLJZGLRguzHceKZB37858459 = VLORWVztjLivnzsLJZGLRguzHceKZB36601205;     VLORWVztjLivnzsLJZGLRguzHceKZB36601205 = VLORWVztjLivnzsLJZGLRguzHceKZB22355374;     VLORWVztjLivnzsLJZGLRguzHceKZB22355374 = VLORWVztjLivnzsLJZGLRguzHceKZB56173569;     VLORWVztjLivnzsLJZGLRguzHceKZB56173569 = VLORWVztjLivnzsLJZGLRguzHceKZB50760334;     VLORWVztjLivnzsLJZGLRguzHceKZB50760334 = VLORWVztjLivnzsLJZGLRguzHceKZB91529306;     VLORWVztjLivnzsLJZGLRguzHceKZB91529306 = VLORWVztjLivnzsLJZGLRguzHceKZB52379778;     VLORWVztjLivnzsLJZGLRguzHceKZB52379778 = VLORWVztjLivnzsLJZGLRguzHceKZB60854989;     VLORWVztjLivnzsLJZGLRguzHceKZB60854989 = VLORWVztjLivnzsLJZGLRguzHceKZB6628819;     VLORWVztjLivnzsLJZGLRguzHceKZB6628819 = VLORWVztjLivnzsLJZGLRguzHceKZB18965426;     VLORWVztjLivnzsLJZGLRguzHceKZB18965426 = VLORWVztjLivnzsLJZGLRguzHceKZB36218234;     VLORWVztjLivnzsLJZGLRguzHceKZB36218234 = VLORWVztjLivnzsLJZGLRguzHceKZB93357540;     VLORWVztjLivnzsLJZGLRguzHceKZB93357540 = VLORWVztjLivnzsLJZGLRguzHceKZB69873705;     VLORWVztjLivnzsLJZGLRguzHceKZB69873705 = VLORWVztjLivnzsLJZGLRguzHceKZB45357791;     VLORWVztjLivnzsLJZGLRguzHceKZB45357791 = VLORWVztjLivnzsLJZGLRguzHceKZB18108341;     VLORWVztjLivnzsLJZGLRguzHceKZB18108341 = VLORWVztjLivnzsLJZGLRguzHceKZB79160246;     VLORWVztjLivnzsLJZGLRguzHceKZB79160246 = VLORWVztjLivnzsLJZGLRguzHceKZB16204249;     VLORWVztjLivnzsLJZGLRguzHceKZB16204249 = VLORWVztjLivnzsLJZGLRguzHceKZB65710284;     VLORWVztjLivnzsLJZGLRguzHceKZB65710284 = VLORWVztjLivnzsLJZGLRguzHceKZB91584625;     VLORWVztjLivnzsLJZGLRguzHceKZB91584625 = VLORWVztjLivnzsLJZGLRguzHceKZB25574727;     VLORWVztjLivnzsLJZGLRguzHceKZB25574727 = VLORWVztjLivnzsLJZGLRguzHceKZB53956013;     VLORWVztjLivnzsLJZGLRguzHceKZB53956013 = VLORWVztjLivnzsLJZGLRguzHceKZB70275130;     VLORWVztjLivnzsLJZGLRguzHceKZB70275130 = VLORWVztjLivnzsLJZGLRguzHceKZB66618423;     VLORWVztjLivnzsLJZGLRguzHceKZB66618423 = VLORWVztjLivnzsLJZGLRguzHceKZB5863017;     VLORWVztjLivnzsLJZGLRguzHceKZB5863017 = VLORWVztjLivnzsLJZGLRguzHceKZB50656038;     VLORWVztjLivnzsLJZGLRguzHceKZB50656038 = VLORWVztjLivnzsLJZGLRguzHceKZB10289634;     VLORWVztjLivnzsLJZGLRguzHceKZB10289634 = VLORWVztjLivnzsLJZGLRguzHceKZB83305933;     VLORWVztjLivnzsLJZGLRguzHceKZB83305933 = VLORWVztjLivnzsLJZGLRguzHceKZB16200186;     VLORWVztjLivnzsLJZGLRguzHceKZB16200186 = VLORWVztjLivnzsLJZGLRguzHceKZB65977907;     VLORWVztjLivnzsLJZGLRguzHceKZB65977907 = VLORWVztjLivnzsLJZGLRguzHceKZB75230856;     VLORWVztjLivnzsLJZGLRguzHceKZB75230856 = VLORWVztjLivnzsLJZGLRguzHceKZB87871310;     VLORWVztjLivnzsLJZGLRguzHceKZB87871310 = VLORWVztjLivnzsLJZGLRguzHceKZB36648987;     VLORWVztjLivnzsLJZGLRguzHceKZB36648987 = VLORWVztjLivnzsLJZGLRguzHceKZB88779676;     VLORWVztjLivnzsLJZGLRguzHceKZB88779676 = VLORWVztjLivnzsLJZGLRguzHceKZB80346513;     VLORWVztjLivnzsLJZGLRguzHceKZB80346513 = VLORWVztjLivnzsLJZGLRguzHceKZB59924479;     VLORWVztjLivnzsLJZGLRguzHceKZB59924479 = VLORWVztjLivnzsLJZGLRguzHceKZB19959956;     VLORWVztjLivnzsLJZGLRguzHceKZB19959956 = VLORWVztjLivnzsLJZGLRguzHceKZB46043414;     VLORWVztjLivnzsLJZGLRguzHceKZB46043414 = VLORWVztjLivnzsLJZGLRguzHceKZB24179520;     VLORWVztjLivnzsLJZGLRguzHceKZB24179520 = VLORWVztjLivnzsLJZGLRguzHceKZB73839314;     VLORWVztjLivnzsLJZGLRguzHceKZB73839314 = VLORWVztjLivnzsLJZGLRguzHceKZB84746204;     VLORWVztjLivnzsLJZGLRguzHceKZB84746204 = VLORWVztjLivnzsLJZGLRguzHceKZB57246449;     VLORWVztjLivnzsLJZGLRguzHceKZB57246449 = VLORWVztjLivnzsLJZGLRguzHceKZB16071113;     VLORWVztjLivnzsLJZGLRguzHceKZB16071113 = VLORWVztjLivnzsLJZGLRguzHceKZB78425458;     VLORWVztjLivnzsLJZGLRguzHceKZB78425458 = VLORWVztjLivnzsLJZGLRguzHceKZB31253335;     VLORWVztjLivnzsLJZGLRguzHceKZB31253335 = VLORWVztjLivnzsLJZGLRguzHceKZB19204290;     VLORWVztjLivnzsLJZGLRguzHceKZB19204290 = VLORWVztjLivnzsLJZGLRguzHceKZB48334586;     VLORWVztjLivnzsLJZGLRguzHceKZB48334586 = VLORWVztjLivnzsLJZGLRguzHceKZB81147924;     VLORWVztjLivnzsLJZGLRguzHceKZB81147924 = VLORWVztjLivnzsLJZGLRguzHceKZB83640913;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void IvaTBbpSjKaSZqfqVShprNkSt15285648() {     double zIKVeTSBpFVWNQrIwDWtBhAwdrenLD34804996 = -828961448;    double zIKVeTSBpFVWNQrIwDWtBhAwdrenLD79888336 = -207312265;    double zIKVeTSBpFVWNQrIwDWtBhAwdrenLD79143160 = -940895113;    double zIKVeTSBpFVWNQrIwDWtBhAwdrenLD96137558 = -966984524;    double zIKVeTSBpFVWNQrIwDWtBhAwdrenLD56597726 = 91615210;    double zIKVeTSBpFVWNQrIwDWtBhAwdrenLD40376817 = -700382825;    double zIKVeTSBpFVWNQrIwDWtBhAwdrenLD65271320 = -272495870;    double zIKVeTSBpFVWNQrIwDWtBhAwdrenLD22128148 = -130927245;    double zIKVeTSBpFVWNQrIwDWtBhAwdrenLD25942595 = -962677547;    double zIKVeTSBpFVWNQrIwDWtBhAwdrenLD87812131 = -536119314;    double zIKVeTSBpFVWNQrIwDWtBhAwdrenLD74492475 = -298911917;    double zIKVeTSBpFVWNQrIwDWtBhAwdrenLD28067718 = -462203341;    double zIKVeTSBpFVWNQrIwDWtBhAwdrenLD59683971 = -104977501;    double zIKVeTSBpFVWNQrIwDWtBhAwdrenLD84522688 = -103744534;    double zIKVeTSBpFVWNQrIwDWtBhAwdrenLD54267222 = -341829252;    double zIKVeTSBpFVWNQrIwDWtBhAwdrenLD80316564 = -61530704;    double zIKVeTSBpFVWNQrIwDWtBhAwdrenLD23309128 = -950876579;    double zIKVeTSBpFVWNQrIwDWtBhAwdrenLD433296 = -987591072;    double zIKVeTSBpFVWNQrIwDWtBhAwdrenLD74239826 = -988668268;    double zIKVeTSBpFVWNQrIwDWtBhAwdrenLD49726103 = -410546700;    double zIKVeTSBpFVWNQrIwDWtBhAwdrenLD98525139 = -649066821;    double zIKVeTSBpFVWNQrIwDWtBhAwdrenLD42588019 = -309691317;    double zIKVeTSBpFVWNQrIwDWtBhAwdrenLD36754157 = -467509823;    double zIKVeTSBpFVWNQrIwDWtBhAwdrenLD8389457 = -234333326;    double zIKVeTSBpFVWNQrIwDWtBhAwdrenLD66333500 = -649414121;    double zIKVeTSBpFVWNQrIwDWtBhAwdrenLD32246187 = -126526344;    double zIKVeTSBpFVWNQrIwDWtBhAwdrenLD45695242 = -357203343;    double zIKVeTSBpFVWNQrIwDWtBhAwdrenLD42654603 = -216680405;    double zIKVeTSBpFVWNQrIwDWtBhAwdrenLD32361294 = -601924110;    double zIKVeTSBpFVWNQrIwDWtBhAwdrenLD39060464 = -582904099;    double zIKVeTSBpFVWNQrIwDWtBhAwdrenLD37004261 = -555371333;    double zIKVeTSBpFVWNQrIwDWtBhAwdrenLD14734779 = -986167437;    double zIKVeTSBpFVWNQrIwDWtBhAwdrenLD25609466 = -972050514;    double zIKVeTSBpFVWNQrIwDWtBhAwdrenLD64018141 = -668412872;    double zIKVeTSBpFVWNQrIwDWtBhAwdrenLD53566802 = -639449380;    double zIKVeTSBpFVWNQrIwDWtBhAwdrenLD32764979 = 17008448;    double zIKVeTSBpFVWNQrIwDWtBhAwdrenLD35831786 = -956076860;    double zIKVeTSBpFVWNQrIwDWtBhAwdrenLD97338563 = -833355001;    double zIKVeTSBpFVWNQrIwDWtBhAwdrenLD26786982 = -16588751;    double zIKVeTSBpFVWNQrIwDWtBhAwdrenLD66366342 = -355245463;    double zIKVeTSBpFVWNQrIwDWtBhAwdrenLD67212506 = -658070851;    double zIKVeTSBpFVWNQrIwDWtBhAwdrenLD23935603 = -462671276;    double zIKVeTSBpFVWNQrIwDWtBhAwdrenLD14106323 = -600590358;    double zIKVeTSBpFVWNQrIwDWtBhAwdrenLD42510583 = -944046730;    double zIKVeTSBpFVWNQrIwDWtBhAwdrenLD19001434 = 73759989;    double zIKVeTSBpFVWNQrIwDWtBhAwdrenLD18007212 = -551857865;    double zIKVeTSBpFVWNQrIwDWtBhAwdrenLD67728352 = -79163596;    double zIKVeTSBpFVWNQrIwDWtBhAwdrenLD36329058 = -53375912;    double zIKVeTSBpFVWNQrIwDWtBhAwdrenLD24503650 = -531380886;    double zIKVeTSBpFVWNQrIwDWtBhAwdrenLD43722525 = -49936859;    double zIKVeTSBpFVWNQrIwDWtBhAwdrenLD53208490 = -558569754;    double zIKVeTSBpFVWNQrIwDWtBhAwdrenLD39783054 = -636552692;    double zIKVeTSBpFVWNQrIwDWtBhAwdrenLD86880098 = -711865633;    double zIKVeTSBpFVWNQrIwDWtBhAwdrenLD85906547 = -580723474;    double zIKVeTSBpFVWNQrIwDWtBhAwdrenLD16760509 = -699252066;    double zIKVeTSBpFVWNQrIwDWtBhAwdrenLD92216977 = -419270131;    double zIKVeTSBpFVWNQrIwDWtBhAwdrenLD43134179 = -739802442;    double zIKVeTSBpFVWNQrIwDWtBhAwdrenLD70753704 = -606561788;    double zIKVeTSBpFVWNQrIwDWtBhAwdrenLD29804058 = -217570404;    double zIKVeTSBpFVWNQrIwDWtBhAwdrenLD24351540 = -781858446;    double zIKVeTSBpFVWNQrIwDWtBhAwdrenLD94681575 = -243179483;    double zIKVeTSBpFVWNQrIwDWtBhAwdrenLD22616718 = 44184535;    double zIKVeTSBpFVWNQrIwDWtBhAwdrenLD89766853 = -529003136;    double zIKVeTSBpFVWNQrIwDWtBhAwdrenLD86882131 = -279773448;    double zIKVeTSBpFVWNQrIwDWtBhAwdrenLD50807871 = -980747982;    double zIKVeTSBpFVWNQrIwDWtBhAwdrenLD59757696 = -312744480;    double zIKVeTSBpFVWNQrIwDWtBhAwdrenLD2458253 = -490152827;    double zIKVeTSBpFVWNQrIwDWtBhAwdrenLD95665830 = -436564630;    double zIKVeTSBpFVWNQrIwDWtBhAwdrenLD30955886 = -464295155;    double zIKVeTSBpFVWNQrIwDWtBhAwdrenLD21502243 = -258837700;    double zIKVeTSBpFVWNQrIwDWtBhAwdrenLD44484778 = -105453845;    double zIKVeTSBpFVWNQrIwDWtBhAwdrenLD25970565 = -17521579;    double zIKVeTSBpFVWNQrIwDWtBhAwdrenLD73646314 = -871002321;    double zIKVeTSBpFVWNQrIwDWtBhAwdrenLD7873485 = -533422805;    double zIKVeTSBpFVWNQrIwDWtBhAwdrenLD82513597 = -752475849;    double zIKVeTSBpFVWNQrIwDWtBhAwdrenLD74589537 = -86395545;    double zIKVeTSBpFVWNQrIwDWtBhAwdrenLD28481697 = -709100960;    double zIKVeTSBpFVWNQrIwDWtBhAwdrenLD94243574 = -523463094;    double zIKVeTSBpFVWNQrIwDWtBhAwdrenLD89388022 = -208093315;    double zIKVeTSBpFVWNQrIwDWtBhAwdrenLD48326288 = 2443744;    double zIKVeTSBpFVWNQrIwDWtBhAwdrenLD64517835 = 52637251;    double zIKVeTSBpFVWNQrIwDWtBhAwdrenLD9366185 = -203827431;    double zIKVeTSBpFVWNQrIwDWtBhAwdrenLD18150953 = -685299520;    double zIKVeTSBpFVWNQrIwDWtBhAwdrenLD88638769 = -451987251;    double zIKVeTSBpFVWNQrIwDWtBhAwdrenLD85851974 = 75665654;    double zIKVeTSBpFVWNQrIwDWtBhAwdrenLD97221207 = -918818641;    double zIKVeTSBpFVWNQrIwDWtBhAwdrenLD27854680 = -174301805;    double zIKVeTSBpFVWNQrIwDWtBhAwdrenLD39702918 = -291327040;    double zIKVeTSBpFVWNQrIwDWtBhAwdrenLD47257632 = -969160806;    double zIKVeTSBpFVWNQrIwDWtBhAwdrenLD61349825 = -120179250;    double zIKVeTSBpFVWNQrIwDWtBhAwdrenLD89630799 = -243189110;    double zIKVeTSBpFVWNQrIwDWtBhAwdrenLD65078082 = -249515073;    double zIKVeTSBpFVWNQrIwDWtBhAwdrenLD67534505 = -515784597;    double zIKVeTSBpFVWNQrIwDWtBhAwdrenLD2435443 = -234730305;    double zIKVeTSBpFVWNQrIwDWtBhAwdrenLD71684767 = -12065981;    double zIKVeTSBpFVWNQrIwDWtBhAwdrenLD44595788 = -602255386;    double zIKVeTSBpFVWNQrIwDWtBhAwdrenLD34168749 = -933668141;    double zIKVeTSBpFVWNQrIwDWtBhAwdrenLD27224191 = -220816911;    double zIKVeTSBpFVWNQrIwDWtBhAwdrenLD91702711 = -963298749;    double zIKVeTSBpFVWNQrIwDWtBhAwdrenLD59243738 = -828961448;     zIKVeTSBpFVWNQrIwDWtBhAwdrenLD34804996 = zIKVeTSBpFVWNQrIwDWtBhAwdrenLD79888336;     zIKVeTSBpFVWNQrIwDWtBhAwdrenLD79888336 = zIKVeTSBpFVWNQrIwDWtBhAwdrenLD79143160;     zIKVeTSBpFVWNQrIwDWtBhAwdrenLD79143160 = zIKVeTSBpFVWNQrIwDWtBhAwdrenLD96137558;     zIKVeTSBpFVWNQrIwDWtBhAwdrenLD96137558 = zIKVeTSBpFVWNQrIwDWtBhAwdrenLD56597726;     zIKVeTSBpFVWNQrIwDWtBhAwdrenLD56597726 = zIKVeTSBpFVWNQrIwDWtBhAwdrenLD40376817;     zIKVeTSBpFVWNQrIwDWtBhAwdrenLD40376817 = zIKVeTSBpFVWNQrIwDWtBhAwdrenLD65271320;     zIKVeTSBpFVWNQrIwDWtBhAwdrenLD65271320 = zIKVeTSBpFVWNQrIwDWtBhAwdrenLD22128148;     zIKVeTSBpFVWNQrIwDWtBhAwdrenLD22128148 = zIKVeTSBpFVWNQrIwDWtBhAwdrenLD25942595;     zIKVeTSBpFVWNQrIwDWtBhAwdrenLD25942595 = zIKVeTSBpFVWNQrIwDWtBhAwdrenLD87812131;     zIKVeTSBpFVWNQrIwDWtBhAwdrenLD87812131 = zIKVeTSBpFVWNQrIwDWtBhAwdrenLD74492475;     zIKVeTSBpFVWNQrIwDWtBhAwdrenLD74492475 = zIKVeTSBpFVWNQrIwDWtBhAwdrenLD28067718;     zIKVeTSBpFVWNQrIwDWtBhAwdrenLD28067718 = zIKVeTSBpFVWNQrIwDWtBhAwdrenLD59683971;     zIKVeTSBpFVWNQrIwDWtBhAwdrenLD59683971 = zIKVeTSBpFVWNQrIwDWtBhAwdrenLD84522688;     zIKVeTSBpFVWNQrIwDWtBhAwdrenLD84522688 = zIKVeTSBpFVWNQrIwDWtBhAwdrenLD54267222;     zIKVeTSBpFVWNQrIwDWtBhAwdrenLD54267222 = zIKVeTSBpFVWNQrIwDWtBhAwdrenLD80316564;     zIKVeTSBpFVWNQrIwDWtBhAwdrenLD80316564 = zIKVeTSBpFVWNQrIwDWtBhAwdrenLD23309128;     zIKVeTSBpFVWNQrIwDWtBhAwdrenLD23309128 = zIKVeTSBpFVWNQrIwDWtBhAwdrenLD433296;     zIKVeTSBpFVWNQrIwDWtBhAwdrenLD433296 = zIKVeTSBpFVWNQrIwDWtBhAwdrenLD74239826;     zIKVeTSBpFVWNQrIwDWtBhAwdrenLD74239826 = zIKVeTSBpFVWNQrIwDWtBhAwdrenLD49726103;     zIKVeTSBpFVWNQrIwDWtBhAwdrenLD49726103 = zIKVeTSBpFVWNQrIwDWtBhAwdrenLD98525139;     zIKVeTSBpFVWNQrIwDWtBhAwdrenLD98525139 = zIKVeTSBpFVWNQrIwDWtBhAwdrenLD42588019;     zIKVeTSBpFVWNQrIwDWtBhAwdrenLD42588019 = zIKVeTSBpFVWNQrIwDWtBhAwdrenLD36754157;     zIKVeTSBpFVWNQrIwDWtBhAwdrenLD36754157 = zIKVeTSBpFVWNQrIwDWtBhAwdrenLD8389457;     zIKVeTSBpFVWNQrIwDWtBhAwdrenLD8389457 = zIKVeTSBpFVWNQrIwDWtBhAwdrenLD66333500;     zIKVeTSBpFVWNQrIwDWtBhAwdrenLD66333500 = zIKVeTSBpFVWNQrIwDWtBhAwdrenLD32246187;     zIKVeTSBpFVWNQrIwDWtBhAwdrenLD32246187 = zIKVeTSBpFVWNQrIwDWtBhAwdrenLD45695242;     zIKVeTSBpFVWNQrIwDWtBhAwdrenLD45695242 = zIKVeTSBpFVWNQrIwDWtBhAwdrenLD42654603;     zIKVeTSBpFVWNQrIwDWtBhAwdrenLD42654603 = zIKVeTSBpFVWNQrIwDWtBhAwdrenLD32361294;     zIKVeTSBpFVWNQrIwDWtBhAwdrenLD32361294 = zIKVeTSBpFVWNQrIwDWtBhAwdrenLD39060464;     zIKVeTSBpFVWNQrIwDWtBhAwdrenLD39060464 = zIKVeTSBpFVWNQrIwDWtBhAwdrenLD37004261;     zIKVeTSBpFVWNQrIwDWtBhAwdrenLD37004261 = zIKVeTSBpFVWNQrIwDWtBhAwdrenLD14734779;     zIKVeTSBpFVWNQrIwDWtBhAwdrenLD14734779 = zIKVeTSBpFVWNQrIwDWtBhAwdrenLD25609466;     zIKVeTSBpFVWNQrIwDWtBhAwdrenLD25609466 = zIKVeTSBpFVWNQrIwDWtBhAwdrenLD64018141;     zIKVeTSBpFVWNQrIwDWtBhAwdrenLD64018141 = zIKVeTSBpFVWNQrIwDWtBhAwdrenLD53566802;     zIKVeTSBpFVWNQrIwDWtBhAwdrenLD53566802 = zIKVeTSBpFVWNQrIwDWtBhAwdrenLD32764979;     zIKVeTSBpFVWNQrIwDWtBhAwdrenLD32764979 = zIKVeTSBpFVWNQrIwDWtBhAwdrenLD35831786;     zIKVeTSBpFVWNQrIwDWtBhAwdrenLD35831786 = zIKVeTSBpFVWNQrIwDWtBhAwdrenLD97338563;     zIKVeTSBpFVWNQrIwDWtBhAwdrenLD97338563 = zIKVeTSBpFVWNQrIwDWtBhAwdrenLD26786982;     zIKVeTSBpFVWNQrIwDWtBhAwdrenLD26786982 = zIKVeTSBpFVWNQrIwDWtBhAwdrenLD66366342;     zIKVeTSBpFVWNQrIwDWtBhAwdrenLD66366342 = zIKVeTSBpFVWNQrIwDWtBhAwdrenLD67212506;     zIKVeTSBpFVWNQrIwDWtBhAwdrenLD67212506 = zIKVeTSBpFVWNQrIwDWtBhAwdrenLD23935603;     zIKVeTSBpFVWNQrIwDWtBhAwdrenLD23935603 = zIKVeTSBpFVWNQrIwDWtBhAwdrenLD14106323;     zIKVeTSBpFVWNQrIwDWtBhAwdrenLD14106323 = zIKVeTSBpFVWNQrIwDWtBhAwdrenLD42510583;     zIKVeTSBpFVWNQrIwDWtBhAwdrenLD42510583 = zIKVeTSBpFVWNQrIwDWtBhAwdrenLD19001434;     zIKVeTSBpFVWNQrIwDWtBhAwdrenLD19001434 = zIKVeTSBpFVWNQrIwDWtBhAwdrenLD18007212;     zIKVeTSBpFVWNQrIwDWtBhAwdrenLD18007212 = zIKVeTSBpFVWNQrIwDWtBhAwdrenLD67728352;     zIKVeTSBpFVWNQrIwDWtBhAwdrenLD67728352 = zIKVeTSBpFVWNQrIwDWtBhAwdrenLD36329058;     zIKVeTSBpFVWNQrIwDWtBhAwdrenLD36329058 = zIKVeTSBpFVWNQrIwDWtBhAwdrenLD24503650;     zIKVeTSBpFVWNQrIwDWtBhAwdrenLD24503650 = zIKVeTSBpFVWNQrIwDWtBhAwdrenLD43722525;     zIKVeTSBpFVWNQrIwDWtBhAwdrenLD43722525 = zIKVeTSBpFVWNQrIwDWtBhAwdrenLD53208490;     zIKVeTSBpFVWNQrIwDWtBhAwdrenLD53208490 = zIKVeTSBpFVWNQrIwDWtBhAwdrenLD39783054;     zIKVeTSBpFVWNQrIwDWtBhAwdrenLD39783054 = zIKVeTSBpFVWNQrIwDWtBhAwdrenLD86880098;     zIKVeTSBpFVWNQrIwDWtBhAwdrenLD86880098 = zIKVeTSBpFVWNQrIwDWtBhAwdrenLD85906547;     zIKVeTSBpFVWNQrIwDWtBhAwdrenLD85906547 = zIKVeTSBpFVWNQrIwDWtBhAwdrenLD16760509;     zIKVeTSBpFVWNQrIwDWtBhAwdrenLD16760509 = zIKVeTSBpFVWNQrIwDWtBhAwdrenLD92216977;     zIKVeTSBpFVWNQrIwDWtBhAwdrenLD92216977 = zIKVeTSBpFVWNQrIwDWtBhAwdrenLD43134179;     zIKVeTSBpFVWNQrIwDWtBhAwdrenLD43134179 = zIKVeTSBpFVWNQrIwDWtBhAwdrenLD70753704;     zIKVeTSBpFVWNQrIwDWtBhAwdrenLD70753704 = zIKVeTSBpFVWNQrIwDWtBhAwdrenLD29804058;     zIKVeTSBpFVWNQrIwDWtBhAwdrenLD29804058 = zIKVeTSBpFVWNQrIwDWtBhAwdrenLD24351540;     zIKVeTSBpFVWNQrIwDWtBhAwdrenLD24351540 = zIKVeTSBpFVWNQrIwDWtBhAwdrenLD94681575;     zIKVeTSBpFVWNQrIwDWtBhAwdrenLD94681575 = zIKVeTSBpFVWNQrIwDWtBhAwdrenLD22616718;     zIKVeTSBpFVWNQrIwDWtBhAwdrenLD22616718 = zIKVeTSBpFVWNQrIwDWtBhAwdrenLD89766853;     zIKVeTSBpFVWNQrIwDWtBhAwdrenLD89766853 = zIKVeTSBpFVWNQrIwDWtBhAwdrenLD86882131;     zIKVeTSBpFVWNQrIwDWtBhAwdrenLD86882131 = zIKVeTSBpFVWNQrIwDWtBhAwdrenLD50807871;     zIKVeTSBpFVWNQrIwDWtBhAwdrenLD50807871 = zIKVeTSBpFVWNQrIwDWtBhAwdrenLD59757696;     zIKVeTSBpFVWNQrIwDWtBhAwdrenLD59757696 = zIKVeTSBpFVWNQrIwDWtBhAwdrenLD2458253;     zIKVeTSBpFVWNQrIwDWtBhAwdrenLD2458253 = zIKVeTSBpFVWNQrIwDWtBhAwdrenLD95665830;     zIKVeTSBpFVWNQrIwDWtBhAwdrenLD95665830 = zIKVeTSBpFVWNQrIwDWtBhAwdrenLD30955886;     zIKVeTSBpFVWNQrIwDWtBhAwdrenLD30955886 = zIKVeTSBpFVWNQrIwDWtBhAwdrenLD21502243;     zIKVeTSBpFVWNQrIwDWtBhAwdrenLD21502243 = zIKVeTSBpFVWNQrIwDWtBhAwdrenLD44484778;     zIKVeTSBpFVWNQrIwDWtBhAwdrenLD44484778 = zIKVeTSBpFVWNQrIwDWtBhAwdrenLD25970565;     zIKVeTSBpFVWNQrIwDWtBhAwdrenLD25970565 = zIKVeTSBpFVWNQrIwDWtBhAwdrenLD73646314;     zIKVeTSBpFVWNQrIwDWtBhAwdrenLD73646314 = zIKVeTSBpFVWNQrIwDWtBhAwdrenLD7873485;     zIKVeTSBpFVWNQrIwDWtBhAwdrenLD7873485 = zIKVeTSBpFVWNQrIwDWtBhAwdrenLD82513597;     zIKVeTSBpFVWNQrIwDWtBhAwdrenLD82513597 = zIKVeTSBpFVWNQrIwDWtBhAwdrenLD74589537;     zIKVeTSBpFVWNQrIwDWtBhAwdrenLD74589537 = zIKVeTSBpFVWNQrIwDWtBhAwdrenLD28481697;     zIKVeTSBpFVWNQrIwDWtBhAwdrenLD28481697 = zIKVeTSBpFVWNQrIwDWtBhAwdrenLD94243574;     zIKVeTSBpFVWNQrIwDWtBhAwdrenLD94243574 = zIKVeTSBpFVWNQrIwDWtBhAwdrenLD89388022;     zIKVeTSBpFVWNQrIwDWtBhAwdrenLD89388022 = zIKVeTSBpFVWNQrIwDWtBhAwdrenLD48326288;     zIKVeTSBpFVWNQrIwDWtBhAwdrenLD48326288 = zIKVeTSBpFVWNQrIwDWtBhAwdrenLD64517835;     zIKVeTSBpFVWNQrIwDWtBhAwdrenLD64517835 = zIKVeTSBpFVWNQrIwDWtBhAwdrenLD9366185;     zIKVeTSBpFVWNQrIwDWtBhAwdrenLD9366185 = zIKVeTSBpFVWNQrIwDWtBhAwdrenLD18150953;     zIKVeTSBpFVWNQrIwDWtBhAwdrenLD18150953 = zIKVeTSBpFVWNQrIwDWtBhAwdrenLD88638769;     zIKVeTSBpFVWNQrIwDWtBhAwdrenLD88638769 = zIKVeTSBpFVWNQrIwDWtBhAwdrenLD85851974;     zIKVeTSBpFVWNQrIwDWtBhAwdrenLD85851974 = zIKVeTSBpFVWNQrIwDWtBhAwdrenLD97221207;     zIKVeTSBpFVWNQrIwDWtBhAwdrenLD97221207 = zIKVeTSBpFVWNQrIwDWtBhAwdrenLD27854680;     zIKVeTSBpFVWNQrIwDWtBhAwdrenLD27854680 = zIKVeTSBpFVWNQrIwDWtBhAwdrenLD39702918;     zIKVeTSBpFVWNQrIwDWtBhAwdrenLD39702918 = zIKVeTSBpFVWNQrIwDWtBhAwdrenLD47257632;     zIKVeTSBpFVWNQrIwDWtBhAwdrenLD47257632 = zIKVeTSBpFVWNQrIwDWtBhAwdrenLD61349825;     zIKVeTSBpFVWNQrIwDWtBhAwdrenLD61349825 = zIKVeTSBpFVWNQrIwDWtBhAwdrenLD89630799;     zIKVeTSBpFVWNQrIwDWtBhAwdrenLD89630799 = zIKVeTSBpFVWNQrIwDWtBhAwdrenLD65078082;     zIKVeTSBpFVWNQrIwDWtBhAwdrenLD65078082 = zIKVeTSBpFVWNQrIwDWtBhAwdrenLD67534505;     zIKVeTSBpFVWNQrIwDWtBhAwdrenLD67534505 = zIKVeTSBpFVWNQrIwDWtBhAwdrenLD2435443;     zIKVeTSBpFVWNQrIwDWtBhAwdrenLD2435443 = zIKVeTSBpFVWNQrIwDWtBhAwdrenLD71684767;     zIKVeTSBpFVWNQrIwDWtBhAwdrenLD71684767 = zIKVeTSBpFVWNQrIwDWtBhAwdrenLD44595788;     zIKVeTSBpFVWNQrIwDWtBhAwdrenLD44595788 = zIKVeTSBpFVWNQrIwDWtBhAwdrenLD34168749;     zIKVeTSBpFVWNQrIwDWtBhAwdrenLD34168749 = zIKVeTSBpFVWNQrIwDWtBhAwdrenLD27224191;     zIKVeTSBpFVWNQrIwDWtBhAwdrenLD27224191 = zIKVeTSBpFVWNQrIwDWtBhAwdrenLD91702711;     zIKVeTSBpFVWNQrIwDWtBhAwdrenLD91702711 = zIKVeTSBpFVWNQrIwDWtBhAwdrenLD59243738;     zIKVeTSBpFVWNQrIwDWtBhAwdrenLD59243738 = zIKVeTSBpFVWNQrIwDWtBhAwdrenLD34804996;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void JMypeQNJfPRdHKfEqMTXITdCi55206801() {     double GAdYhgEArhzzwDVAZzjopzCHWukKKd24359937 = -594053159;    double GAdYhgEArhzzwDVAZzjopzCHWukKKd78706021 = 41110641;    double GAdYhgEArhzzwDVAZzjopzCHWukKKd92907062 = -842381875;    double GAdYhgEArhzzwDVAZzjopzCHWukKKd71084451 = -72073821;    double GAdYhgEArhzzwDVAZzjopzCHWukKKd40454641 = -704257474;    double GAdYhgEArhzzwDVAZzjopzCHWukKKd65103853 = -443383525;    double GAdYhgEArhzzwDVAZzjopzCHWukKKd65346940 = -955908628;    double GAdYhgEArhzzwDVAZzjopzCHWukKKd55449531 = -109136505;    double GAdYhgEArhzzwDVAZzjopzCHWukKKd31854955 = -785815633;    double GAdYhgEArhzzwDVAZzjopzCHWukKKd58226957 = -970277775;    double GAdYhgEArhzzwDVAZzjopzCHWukKKd4339309 = -325937448;    double GAdYhgEArhzzwDVAZzjopzCHWukKKd37387837 = -629706151;    double GAdYhgEArhzzwDVAZzjopzCHWukKKd95863779 = -358188305;    double GAdYhgEArhzzwDVAZzjopzCHWukKKd1137478 = -769426511;    double GAdYhgEArhzzwDVAZzjopzCHWukKKd56036221 = 10972748;    double GAdYhgEArhzzwDVAZzjopzCHWukKKd82775667 = -155405223;    double GAdYhgEArhzzwDVAZzjopzCHWukKKd66749775 = -40381288;    double GAdYhgEArhzzwDVAZzjopzCHWukKKd1338429 = -197490213;    double GAdYhgEArhzzwDVAZzjopzCHWukKKd18938081 = -911094502;    double GAdYhgEArhzzwDVAZzjopzCHWukKKd91717473 = -809060063;    double GAdYhgEArhzzwDVAZzjopzCHWukKKd22388144 = -904549681;    double GAdYhgEArhzzwDVAZzjopzCHWukKKd19552627 = -718764687;    double GAdYhgEArhzzwDVAZzjopzCHWukKKd13049053 = -712874350;    double GAdYhgEArhzzwDVAZzjopzCHWukKKd70738496 = -409384232;    double GAdYhgEArhzzwDVAZzjopzCHWukKKd80051798 = -908956766;    double GAdYhgEArhzzwDVAZzjopzCHWukKKd68884088 = -893897311;    double GAdYhgEArhzzwDVAZzjopzCHWukKKd63831342 = -186749601;    double GAdYhgEArhzzwDVAZzjopzCHWukKKd30896878 = -961531231;    double GAdYhgEArhzzwDVAZzjopzCHWukKKd47253090 = -232882271;    double GAdYhgEArhzzwDVAZzjopzCHWukKKd99599311 = -588656192;    double GAdYhgEArhzzwDVAZzjopzCHWukKKd80754802 = -493542706;    double GAdYhgEArhzzwDVAZzjopzCHWukKKd60175685 = 97368905;    double GAdYhgEArhzzwDVAZzjopzCHWukKKd64311724 = -687480277;    double GAdYhgEArhzzwDVAZzjopzCHWukKKd1290053 = -988238539;    double GAdYhgEArhzzwDVAZzjopzCHWukKKd76126222 = -635161145;    double GAdYhgEArhzzwDVAZzjopzCHWukKKd56708266 = -64807312;    double GAdYhgEArhzzwDVAZzjopzCHWukKKd97649267 = -888215287;    double GAdYhgEArhzzwDVAZzjopzCHWukKKd41925287 = -308594209;    double GAdYhgEArhzzwDVAZzjopzCHWukKKd84705910 = -908091462;    double GAdYhgEArhzzwDVAZzjopzCHWukKKd75236307 = -190709894;    double GAdYhgEArhzzwDVAZzjopzCHWukKKd94386321 = -382837617;    double GAdYhgEArhzzwDVAZzjopzCHWukKKd92271506 = -400513958;    double GAdYhgEArhzzwDVAZzjopzCHWukKKd76023730 = -691582439;    double GAdYhgEArhzzwDVAZzjopzCHWukKKd81055161 = -276536883;    double GAdYhgEArhzzwDVAZzjopzCHWukKKd6916449 = -889554520;    double GAdYhgEArhzzwDVAZzjopzCHWukKKd9980372 = -368729576;    double GAdYhgEArhzzwDVAZzjopzCHWukKKd89220148 = -811523985;    double GAdYhgEArhzzwDVAZzjopzCHWukKKd39340175 = -670754519;    double GAdYhgEArhzzwDVAZzjopzCHWukKKd83684880 = -766483818;    double GAdYhgEArhzzwDVAZzjopzCHWukKKd12012085 = 69006991;    double GAdYhgEArhzzwDVAZzjopzCHWukKKd75425986 = -200319855;    double GAdYhgEArhzzwDVAZzjopzCHWukKKd20640825 = -877684072;    double GAdYhgEArhzzwDVAZzjopzCHWukKKd24689363 = -607456545;    double GAdYhgEArhzzwDVAZzjopzCHWukKKd16802458 = -51526858;    double GAdYhgEArhzzwDVAZzjopzCHWukKKd32818658 = -405169249;    double GAdYhgEArhzzwDVAZzjopzCHWukKKd4807311 = -875288472;    double GAdYhgEArhzzwDVAZzjopzCHWukKKd65656968 = -246015010;    double GAdYhgEArhzzwDVAZzjopzCHWukKKd22168566 = -332997644;    double GAdYhgEArhzzwDVAZzjopzCHWukKKd91032653 = -163117055;    double GAdYhgEArhzzwDVAZzjopzCHWukKKd71570552 = -810360163;    double GAdYhgEArhzzwDVAZzjopzCHWukKKd1272511 = -156633924;    double GAdYhgEArhzzwDVAZzjopzCHWukKKd34450062 = -994377397;    double GAdYhgEArhzzwDVAZzjopzCHWukKKd8196442 = -876254234;    double GAdYhgEArhzzwDVAZzjopzCHWukKKd32255644 = -97159442;    double GAdYhgEArhzzwDVAZzjopzCHWukKKd77472154 = -376735069;    double GAdYhgEArhzzwDVAZzjopzCHWukKKd44163623 = -323306354;    double GAdYhgEArhzzwDVAZzjopzCHWukKKd73076113 = -942225874;    double GAdYhgEArhzzwDVAZzjopzCHWukKKd94573726 = -369949767;    double GAdYhgEArhzzwDVAZzjopzCHWukKKd25011255 = -34265366;    double GAdYhgEArhzzwDVAZzjopzCHWukKKd99327955 = -924219941;    double GAdYhgEArhzzwDVAZzjopzCHWukKKd85126400 = -267189936;    double GAdYhgEArhzzwDVAZzjopzCHWukKKd24824488 = -731787080;    double GAdYhgEArhzzwDVAZzjopzCHWukKKd16632519 = -289398752;    double GAdYhgEArhzzwDVAZzjopzCHWukKKd43701773 = -620384609;    double GAdYhgEArhzzwDVAZzjopzCHWukKKd97331151 = -326222447;    double GAdYhgEArhzzwDVAZzjopzCHWukKKd30116637 = -404035723;    double GAdYhgEArhzzwDVAZzjopzCHWukKKd43528896 = 72817751;    double GAdYhgEArhzzwDVAZzjopzCHWukKKd31993891 = -336337468;    double GAdYhgEArhzzwDVAZzjopzCHWukKKd63822048 = -519829713;    double GAdYhgEArhzzwDVAZzjopzCHWukKKd70071427 = -440227190;    double GAdYhgEArhzzwDVAZzjopzCHWukKKd79663939 = 17626673;    double GAdYhgEArhzzwDVAZzjopzCHWukKKd24491167 = -515995082;    double GAdYhgEArhzzwDVAZzjopzCHWukKKd47211997 = -95047414;    double GAdYhgEArhzzwDVAZzjopzCHWukKKd35241006 = -201889263;    double GAdYhgEArhzzwDVAZzjopzCHWukKKd24173326 = -288336338;    double GAdYhgEArhzzwDVAZzjopzCHWukKKd60113978 = -615858635;    double GAdYhgEArhzzwDVAZzjopzCHWukKKd35486322 = -295174550;    double GAdYhgEArhzzwDVAZzjopzCHWukKKd47509266 = -535953420;    double GAdYhgEArhzzwDVAZzjopzCHWukKKd68471395 = -483069291;    double GAdYhgEArhzzwDVAZzjopzCHWukKKd71318912 = -759872674;    double GAdYhgEArhzzwDVAZzjopzCHWukKKd91051297 = -818792302;    double GAdYhgEArhzzwDVAZzjopzCHWukKKd75480701 = -455217644;    double GAdYhgEArhzzwDVAZzjopzCHWukKKd50892634 = -45477155;    double GAdYhgEArhzzwDVAZzjopzCHWukKKd13135358 = 2268700;    double GAdYhgEArhzzwDVAZzjopzCHWukKKd73963797 = 65924030;    double GAdYhgEArhzzwDVAZzjopzCHWukKKd59936260 = -388460220;    double GAdYhgEArhzzwDVAZzjopzCHWukKKd84075065 = -524259724;    double GAdYhgEArhzzwDVAZzjopzCHWukKKd43768087 = -494422998;    double GAdYhgEArhzzwDVAZzjopzCHWukKKd3583008 = -899801814;    double GAdYhgEArhzzwDVAZzjopzCHWukKKd62752825 = -594053159;     GAdYhgEArhzzwDVAZzjopzCHWukKKd24359937 = GAdYhgEArhzzwDVAZzjopzCHWukKKd78706021;     GAdYhgEArhzzwDVAZzjopzCHWukKKd78706021 = GAdYhgEArhzzwDVAZzjopzCHWukKKd92907062;     GAdYhgEArhzzwDVAZzjopzCHWukKKd92907062 = GAdYhgEArhzzwDVAZzjopzCHWukKKd71084451;     GAdYhgEArhzzwDVAZzjopzCHWukKKd71084451 = GAdYhgEArhzzwDVAZzjopzCHWukKKd40454641;     GAdYhgEArhzzwDVAZzjopzCHWukKKd40454641 = GAdYhgEArhzzwDVAZzjopzCHWukKKd65103853;     GAdYhgEArhzzwDVAZzjopzCHWukKKd65103853 = GAdYhgEArhzzwDVAZzjopzCHWukKKd65346940;     GAdYhgEArhzzwDVAZzjopzCHWukKKd65346940 = GAdYhgEArhzzwDVAZzjopzCHWukKKd55449531;     GAdYhgEArhzzwDVAZzjopzCHWukKKd55449531 = GAdYhgEArhzzwDVAZzjopzCHWukKKd31854955;     GAdYhgEArhzzwDVAZzjopzCHWukKKd31854955 = GAdYhgEArhzzwDVAZzjopzCHWukKKd58226957;     GAdYhgEArhzzwDVAZzjopzCHWukKKd58226957 = GAdYhgEArhzzwDVAZzjopzCHWukKKd4339309;     GAdYhgEArhzzwDVAZzjopzCHWukKKd4339309 = GAdYhgEArhzzwDVAZzjopzCHWukKKd37387837;     GAdYhgEArhzzwDVAZzjopzCHWukKKd37387837 = GAdYhgEArhzzwDVAZzjopzCHWukKKd95863779;     GAdYhgEArhzzwDVAZzjopzCHWukKKd95863779 = GAdYhgEArhzzwDVAZzjopzCHWukKKd1137478;     GAdYhgEArhzzwDVAZzjopzCHWukKKd1137478 = GAdYhgEArhzzwDVAZzjopzCHWukKKd56036221;     GAdYhgEArhzzwDVAZzjopzCHWukKKd56036221 = GAdYhgEArhzzwDVAZzjopzCHWukKKd82775667;     GAdYhgEArhzzwDVAZzjopzCHWukKKd82775667 = GAdYhgEArhzzwDVAZzjopzCHWukKKd66749775;     GAdYhgEArhzzwDVAZzjopzCHWukKKd66749775 = GAdYhgEArhzzwDVAZzjopzCHWukKKd1338429;     GAdYhgEArhzzwDVAZzjopzCHWukKKd1338429 = GAdYhgEArhzzwDVAZzjopzCHWukKKd18938081;     GAdYhgEArhzzwDVAZzjopzCHWukKKd18938081 = GAdYhgEArhzzwDVAZzjopzCHWukKKd91717473;     GAdYhgEArhzzwDVAZzjopzCHWukKKd91717473 = GAdYhgEArhzzwDVAZzjopzCHWukKKd22388144;     GAdYhgEArhzzwDVAZzjopzCHWukKKd22388144 = GAdYhgEArhzzwDVAZzjopzCHWukKKd19552627;     GAdYhgEArhzzwDVAZzjopzCHWukKKd19552627 = GAdYhgEArhzzwDVAZzjopzCHWukKKd13049053;     GAdYhgEArhzzwDVAZzjopzCHWukKKd13049053 = GAdYhgEArhzzwDVAZzjopzCHWukKKd70738496;     GAdYhgEArhzzwDVAZzjopzCHWukKKd70738496 = GAdYhgEArhzzwDVAZzjopzCHWukKKd80051798;     GAdYhgEArhzzwDVAZzjopzCHWukKKd80051798 = GAdYhgEArhzzwDVAZzjopzCHWukKKd68884088;     GAdYhgEArhzzwDVAZzjopzCHWukKKd68884088 = GAdYhgEArhzzwDVAZzjopzCHWukKKd63831342;     GAdYhgEArhzzwDVAZzjopzCHWukKKd63831342 = GAdYhgEArhzzwDVAZzjopzCHWukKKd30896878;     GAdYhgEArhzzwDVAZzjopzCHWukKKd30896878 = GAdYhgEArhzzwDVAZzjopzCHWukKKd47253090;     GAdYhgEArhzzwDVAZzjopzCHWukKKd47253090 = GAdYhgEArhzzwDVAZzjopzCHWukKKd99599311;     GAdYhgEArhzzwDVAZzjopzCHWukKKd99599311 = GAdYhgEArhzzwDVAZzjopzCHWukKKd80754802;     GAdYhgEArhzzwDVAZzjopzCHWukKKd80754802 = GAdYhgEArhzzwDVAZzjopzCHWukKKd60175685;     GAdYhgEArhzzwDVAZzjopzCHWukKKd60175685 = GAdYhgEArhzzwDVAZzjopzCHWukKKd64311724;     GAdYhgEArhzzwDVAZzjopzCHWukKKd64311724 = GAdYhgEArhzzwDVAZzjopzCHWukKKd1290053;     GAdYhgEArhzzwDVAZzjopzCHWukKKd1290053 = GAdYhgEArhzzwDVAZzjopzCHWukKKd76126222;     GAdYhgEArhzzwDVAZzjopzCHWukKKd76126222 = GAdYhgEArhzzwDVAZzjopzCHWukKKd56708266;     GAdYhgEArhzzwDVAZzjopzCHWukKKd56708266 = GAdYhgEArhzzwDVAZzjopzCHWukKKd97649267;     GAdYhgEArhzzwDVAZzjopzCHWukKKd97649267 = GAdYhgEArhzzwDVAZzjopzCHWukKKd41925287;     GAdYhgEArhzzwDVAZzjopzCHWukKKd41925287 = GAdYhgEArhzzwDVAZzjopzCHWukKKd84705910;     GAdYhgEArhzzwDVAZzjopzCHWukKKd84705910 = GAdYhgEArhzzwDVAZzjopzCHWukKKd75236307;     GAdYhgEArhzzwDVAZzjopzCHWukKKd75236307 = GAdYhgEArhzzwDVAZzjopzCHWukKKd94386321;     GAdYhgEArhzzwDVAZzjopzCHWukKKd94386321 = GAdYhgEArhzzwDVAZzjopzCHWukKKd92271506;     GAdYhgEArhzzwDVAZzjopzCHWukKKd92271506 = GAdYhgEArhzzwDVAZzjopzCHWukKKd76023730;     GAdYhgEArhzzwDVAZzjopzCHWukKKd76023730 = GAdYhgEArhzzwDVAZzjopzCHWukKKd81055161;     GAdYhgEArhzzwDVAZzjopzCHWukKKd81055161 = GAdYhgEArhzzwDVAZzjopzCHWukKKd6916449;     GAdYhgEArhzzwDVAZzjopzCHWukKKd6916449 = GAdYhgEArhzzwDVAZzjopzCHWukKKd9980372;     GAdYhgEArhzzwDVAZzjopzCHWukKKd9980372 = GAdYhgEArhzzwDVAZzjopzCHWukKKd89220148;     GAdYhgEArhzzwDVAZzjopzCHWukKKd89220148 = GAdYhgEArhzzwDVAZzjopzCHWukKKd39340175;     GAdYhgEArhzzwDVAZzjopzCHWukKKd39340175 = GAdYhgEArhzzwDVAZzjopzCHWukKKd83684880;     GAdYhgEArhzzwDVAZzjopzCHWukKKd83684880 = GAdYhgEArhzzwDVAZzjopzCHWukKKd12012085;     GAdYhgEArhzzwDVAZzjopzCHWukKKd12012085 = GAdYhgEArhzzwDVAZzjopzCHWukKKd75425986;     GAdYhgEArhzzwDVAZzjopzCHWukKKd75425986 = GAdYhgEArhzzwDVAZzjopzCHWukKKd20640825;     GAdYhgEArhzzwDVAZzjopzCHWukKKd20640825 = GAdYhgEArhzzwDVAZzjopzCHWukKKd24689363;     GAdYhgEArhzzwDVAZzjopzCHWukKKd24689363 = GAdYhgEArhzzwDVAZzjopzCHWukKKd16802458;     GAdYhgEArhzzwDVAZzjopzCHWukKKd16802458 = GAdYhgEArhzzwDVAZzjopzCHWukKKd32818658;     GAdYhgEArhzzwDVAZzjopzCHWukKKd32818658 = GAdYhgEArhzzwDVAZzjopzCHWukKKd4807311;     GAdYhgEArhzzwDVAZzjopzCHWukKKd4807311 = GAdYhgEArhzzwDVAZzjopzCHWukKKd65656968;     GAdYhgEArhzzwDVAZzjopzCHWukKKd65656968 = GAdYhgEArhzzwDVAZzjopzCHWukKKd22168566;     GAdYhgEArhzzwDVAZzjopzCHWukKKd22168566 = GAdYhgEArhzzwDVAZzjopzCHWukKKd91032653;     GAdYhgEArhzzwDVAZzjopzCHWukKKd91032653 = GAdYhgEArhzzwDVAZzjopzCHWukKKd71570552;     GAdYhgEArhzzwDVAZzjopzCHWukKKd71570552 = GAdYhgEArhzzwDVAZzjopzCHWukKKd1272511;     GAdYhgEArhzzwDVAZzjopzCHWukKKd1272511 = GAdYhgEArhzzwDVAZzjopzCHWukKKd34450062;     GAdYhgEArhzzwDVAZzjopzCHWukKKd34450062 = GAdYhgEArhzzwDVAZzjopzCHWukKKd8196442;     GAdYhgEArhzzwDVAZzjopzCHWukKKd8196442 = GAdYhgEArhzzwDVAZzjopzCHWukKKd32255644;     GAdYhgEArhzzwDVAZzjopzCHWukKKd32255644 = GAdYhgEArhzzwDVAZzjopzCHWukKKd77472154;     GAdYhgEArhzzwDVAZzjopzCHWukKKd77472154 = GAdYhgEArhzzwDVAZzjopzCHWukKKd44163623;     GAdYhgEArhzzwDVAZzjopzCHWukKKd44163623 = GAdYhgEArhzzwDVAZzjopzCHWukKKd73076113;     GAdYhgEArhzzwDVAZzjopzCHWukKKd73076113 = GAdYhgEArhzzwDVAZzjopzCHWukKKd94573726;     GAdYhgEArhzzwDVAZzjopzCHWukKKd94573726 = GAdYhgEArhzzwDVAZzjopzCHWukKKd25011255;     GAdYhgEArhzzwDVAZzjopzCHWukKKd25011255 = GAdYhgEArhzzwDVAZzjopzCHWukKKd99327955;     GAdYhgEArhzzwDVAZzjopzCHWukKKd99327955 = GAdYhgEArhzzwDVAZzjopzCHWukKKd85126400;     GAdYhgEArhzzwDVAZzjopzCHWukKKd85126400 = GAdYhgEArhzzwDVAZzjopzCHWukKKd24824488;     GAdYhgEArhzzwDVAZzjopzCHWukKKd24824488 = GAdYhgEArhzzwDVAZzjopzCHWukKKd16632519;     GAdYhgEArhzzwDVAZzjopzCHWukKKd16632519 = GAdYhgEArhzzwDVAZzjopzCHWukKKd43701773;     GAdYhgEArhzzwDVAZzjopzCHWukKKd43701773 = GAdYhgEArhzzwDVAZzjopzCHWukKKd97331151;     GAdYhgEArhzzwDVAZzjopzCHWukKKd97331151 = GAdYhgEArhzzwDVAZzjopzCHWukKKd30116637;     GAdYhgEArhzzwDVAZzjopzCHWukKKd30116637 = GAdYhgEArhzzwDVAZzjopzCHWukKKd43528896;     GAdYhgEArhzzwDVAZzjopzCHWukKKd43528896 = GAdYhgEArhzzwDVAZzjopzCHWukKKd31993891;     GAdYhgEArhzzwDVAZzjopzCHWukKKd31993891 = GAdYhgEArhzzwDVAZzjopzCHWukKKd63822048;     GAdYhgEArhzzwDVAZzjopzCHWukKKd63822048 = GAdYhgEArhzzwDVAZzjopzCHWukKKd70071427;     GAdYhgEArhzzwDVAZzjopzCHWukKKd70071427 = GAdYhgEArhzzwDVAZzjopzCHWukKKd79663939;     GAdYhgEArhzzwDVAZzjopzCHWukKKd79663939 = GAdYhgEArhzzwDVAZzjopzCHWukKKd24491167;     GAdYhgEArhzzwDVAZzjopzCHWukKKd24491167 = GAdYhgEArhzzwDVAZzjopzCHWukKKd47211997;     GAdYhgEArhzzwDVAZzjopzCHWukKKd47211997 = GAdYhgEArhzzwDVAZzjopzCHWukKKd35241006;     GAdYhgEArhzzwDVAZzjopzCHWukKKd35241006 = GAdYhgEArhzzwDVAZzjopzCHWukKKd24173326;     GAdYhgEArhzzwDVAZzjopzCHWukKKd24173326 = GAdYhgEArhzzwDVAZzjopzCHWukKKd60113978;     GAdYhgEArhzzwDVAZzjopzCHWukKKd60113978 = GAdYhgEArhzzwDVAZzjopzCHWukKKd35486322;     GAdYhgEArhzzwDVAZzjopzCHWukKKd35486322 = GAdYhgEArhzzwDVAZzjopzCHWukKKd47509266;     GAdYhgEArhzzwDVAZzjopzCHWukKKd47509266 = GAdYhgEArhzzwDVAZzjopzCHWukKKd68471395;     GAdYhgEArhzzwDVAZzjopzCHWukKKd68471395 = GAdYhgEArhzzwDVAZzjopzCHWukKKd71318912;     GAdYhgEArhzzwDVAZzjopzCHWukKKd71318912 = GAdYhgEArhzzwDVAZzjopzCHWukKKd91051297;     GAdYhgEArhzzwDVAZzjopzCHWukKKd91051297 = GAdYhgEArhzzwDVAZzjopzCHWukKKd75480701;     GAdYhgEArhzzwDVAZzjopzCHWukKKd75480701 = GAdYhgEArhzzwDVAZzjopzCHWukKKd50892634;     GAdYhgEArhzzwDVAZzjopzCHWukKKd50892634 = GAdYhgEArhzzwDVAZzjopzCHWukKKd13135358;     GAdYhgEArhzzwDVAZzjopzCHWukKKd13135358 = GAdYhgEArhzzwDVAZzjopzCHWukKKd73963797;     GAdYhgEArhzzwDVAZzjopzCHWukKKd73963797 = GAdYhgEArhzzwDVAZzjopzCHWukKKd59936260;     GAdYhgEArhzzwDVAZzjopzCHWukKKd59936260 = GAdYhgEArhzzwDVAZzjopzCHWukKKd84075065;     GAdYhgEArhzzwDVAZzjopzCHWukKKd84075065 = GAdYhgEArhzzwDVAZzjopzCHWukKKd43768087;     GAdYhgEArhzzwDVAZzjopzCHWukKKd43768087 = GAdYhgEArhzzwDVAZzjopzCHWukKKd3583008;     GAdYhgEArhzzwDVAZzjopzCHWukKKd3583008 = GAdYhgEArhzzwDVAZzjopzCHWukKKd62752825;     GAdYhgEArhzzwDVAZzjopzCHWukKKd62752825 = GAdYhgEArhzzwDVAZzjopzCHWukKKd24359937;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void IlOdrBBWRWachyeOdxwsdrOUm17054060() {     double CBkBaYqKzocjxXtFxVmfWXzAeqkWld75524019 = -416643501;    double CBkBaYqKzocjxXtFxVmfWXzAeqkWld10072624 = -512440038;    double CBkBaYqKzocjxXtFxVmfWXzAeqkWld59978626 = -404433561;    double CBkBaYqKzocjxXtFxVmfWXzAeqkWld47608172 = 92739563;    double CBkBaYqKzocjxXtFxVmfWXzAeqkWld87978752 = -166457369;    double CBkBaYqKzocjxXtFxVmfWXzAeqkWld33927838 = -452778343;    double CBkBaYqKzocjxXtFxVmfWXzAeqkWld44535965 = -724987509;    double CBkBaYqKzocjxXtFxVmfWXzAeqkWld54683830 = -574677580;    double CBkBaYqKzocjxXtFxVmfWXzAeqkWld65253705 = -391909792;    double CBkBaYqKzocjxXtFxVmfWXzAeqkWld93183235 = -176207693;    double CBkBaYqKzocjxXtFxVmfWXzAeqkWld53327021 = -906265293;    double CBkBaYqKzocjxXtFxVmfWXzAeqkWld22314826 = -152602327;    double CBkBaYqKzocjxXtFxVmfWXzAeqkWld80878249 = 91656489;    double CBkBaYqKzocjxXtFxVmfWXzAeqkWld38101131 = 36371851;    double CBkBaYqKzocjxXtFxVmfWXzAeqkWld13746107 = -828832020;    double CBkBaYqKzocjxXtFxVmfWXzAeqkWld72782300 = -260583828;    double CBkBaYqKzocjxXtFxVmfWXzAeqkWld22198768 = -336635447;    double CBkBaYqKzocjxXtFxVmfWXzAeqkWld66570770 = -527116556;    double CBkBaYqKzocjxXtFxVmfWXzAeqkWld62295792 = -895024484;    double CBkBaYqKzocjxXtFxVmfWXzAeqkWld86114169 = -269963265;    double CBkBaYqKzocjxXtFxVmfWXzAeqkWld4076099 = -438415617;    double CBkBaYqKzocjxXtFxVmfWXzAeqkWld855106 = -968222429;    double CBkBaYqKzocjxXtFxVmfWXzAeqkWld57455045 = -160016402;    double CBkBaYqKzocjxXtFxVmfWXzAeqkWld17816690 = -8002714;    double CBkBaYqKzocjxXtFxVmfWXzAeqkWld18300767 = -470642904;    double CBkBaYqKzocjxXtFxVmfWXzAeqkWld44436438 = 68995677;    double CBkBaYqKzocjxXtFxVmfWXzAeqkWld98828742 = -719175583;    double CBkBaYqKzocjxXtFxVmfWXzAeqkWld94098003 = -929822685;    double CBkBaYqKzocjxXtFxVmfWXzAeqkWld75685962 = -251540287;    double CBkBaYqKzocjxXtFxVmfWXzAeqkWld82334163 = -81906689;    double CBkBaYqKzocjxXtFxVmfWXzAeqkWld58260750 = -437930002;    double CBkBaYqKzocjxXtFxVmfWXzAeqkWld19279407 = -842044524;    double CBkBaYqKzocjxXtFxVmfWXzAeqkWld92138250 = -685066767;    double CBkBaYqKzocjxXtFxVmfWXzAeqkWld8747033 = -977210215;    double CBkBaYqKzocjxXtFxVmfWXzAeqkWld61294236 = -97346893;    double CBkBaYqKzocjxXtFxVmfWXzAeqkWld9120157 = -79762490;    double CBkBaYqKzocjxXtFxVmfWXzAeqkWld8881406 = -848892555;    double CBkBaYqKzocjxXtFxVmfWXzAeqkWld62988340 = -1286538;    double CBkBaYqKzocjxXtFxVmfWXzAeqkWld1866664 = -337449522;    double CBkBaYqKzocjxXtFxVmfWXzAeqkWld64676548 = -740082219;    double CBkBaYqKzocjxXtFxVmfWXzAeqkWld76544551 = -520901895;    double CBkBaYqKzocjxXtFxVmfWXzAeqkWld65988347 = -512383048;    double CBkBaYqKzocjxXtFxVmfWXzAeqkWld34707529 = -207925456;    double CBkBaYqKzocjxXtFxVmfWXzAeqkWld81873618 = -770332524;    double CBkBaYqKzocjxXtFxVmfWXzAeqkWld74896252 = -140856156;    double CBkBaYqKzocjxXtFxVmfWXzAeqkWld83208984 = -125869322;    double CBkBaYqKzocjxXtFxVmfWXzAeqkWld16454850 = -257742328;    double CBkBaYqKzocjxXtFxVmfWXzAeqkWld30949298 = -565881569;    double CBkBaYqKzocjxXtFxVmfWXzAeqkWld3965911 = -529600133;    double CBkBaYqKzocjxXtFxVmfWXzAeqkWld39677497 = -314064201;    double CBkBaYqKzocjxXtFxVmfWXzAeqkWld8957851 = -276192066;    double CBkBaYqKzocjxXtFxVmfWXzAeqkWld89705241 = -515988179;    double CBkBaYqKzocjxXtFxVmfWXzAeqkWld36284919 = -535307651;    double CBkBaYqKzocjxXtFxVmfWXzAeqkWld64850546 = -113574272;    double CBkBaYqKzocjxXtFxVmfWXzAeqkWld12977961 = -12249361;    double CBkBaYqKzocjxXtFxVmfWXzAeqkWld74668913 = -448421073;    double CBkBaYqKzocjxXtFxVmfWXzAeqkWld52617579 = -252423636;    double CBkBaYqKzocjxXtFxVmfWXzAeqkWld42161936 = -296430848;    double CBkBaYqKzocjxXtFxVmfWXzAeqkWld29307405 = -436617534;    double CBkBaYqKzocjxXtFxVmfWXzAeqkWld43542314 = -135453047;    double CBkBaYqKzocjxXtFxVmfWXzAeqkWld35099096 = -733602760;    double CBkBaYqKzocjxXtFxVmfWXzAeqkWld50437962 = -795164824;    double CBkBaYqKzocjxXtFxVmfWXzAeqkWld78997868 = -223137294;    double CBkBaYqKzocjxXtFxVmfWXzAeqkWld82919541 = -210003104;    double CBkBaYqKzocjxXtFxVmfWXzAeqkWld34922485 = -738277691;    double CBkBaYqKzocjxXtFxVmfWXzAeqkWld34047614 = 35779230;    double CBkBaYqKzocjxXtFxVmfWXzAeqkWld30176575 = -467535560;    double CBkBaYqKzocjxXtFxVmfWXzAeqkWld72131216 = 68866704;    double CBkBaYqKzocjxXtFxVmfWXzAeqkWld76806894 = -866281257;    double CBkBaYqKzocjxXtFxVmfWXzAeqkWld4625950 = -649069530;    double CBkBaYqKzocjxXtFxVmfWXzAeqkWld63900894 = -411691274;    double CBkBaYqKzocjxXtFxVmfWXzAeqkWld59210427 = -235348909;    double CBkBaYqKzocjxXtFxVmfWXzAeqkWld64704106 = -89667035;    double CBkBaYqKzocjxXtFxVmfWXzAeqkWld97619244 = -54942266;    double CBkBaYqKzocjxXtFxVmfWXzAeqkWld9569619 = -749061371;    double CBkBaYqKzocjxXtFxVmfWXzAeqkWld38087751 = -926032569;    double CBkBaYqKzocjxXtFxVmfWXzAeqkWld66147576 = -660296974;    double CBkBaYqKzocjxXtFxVmfWXzAeqkWld75581427 = -389683879;    double CBkBaYqKzocjxXtFxVmfWXzAeqkWld42920437 = -867146558;    double CBkBaYqKzocjxXtFxVmfWXzAeqkWld35091783 = -244773582;    double CBkBaYqKzocjxXtFxVmfWXzAeqkWld27981589 = -673261995;    double CBkBaYqKzocjxXtFxVmfWXzAeqkWld67879444 = -53294015;    double CBkBaYqKzocjxXtFxVmfWXzAeqkWld90132093 = -300222553;    double CBkBaYqKzocjxXtFxVmfWXzAeqkWld36008465 = -937476086;    double CBkBaYqKzocjxXtFxVmfWXzAeqkWld73376312 = -805714623;    double CBkBaYqKzocjxXtFxVmfWXzAeqkWld68555509 = -921941824;    double CBkBaYqKzocjxXtFxVmfWXzAeqkWld82994488 = -206736873;    double CBkBaYqKzocjxXtFxVmfWXzAeqkWld27287705 = -471492496;    double CBkBaYqKzocjxXtFxVmfWXzAeqkWld95769071 = -864960854;    double CBkBaYqKzocjxXtFxVmfWXzAeqkWld86625323 = -648925821;    double CBkBaYqKzocjxXtFxVmfWXzAeqkWld56502577 = -827338854;    double CBkBaYqKzocjxXtFxVmfWXzAeqkWld66719469 = -452461707;    double CBkBaYqKzocjxXtFxVmfWXzAeqkWld33680935 = -564669005;    double CBkBaYqKzocjxXtFxVmfWXzAeqkWld58324350 = -101996475;    double CBkBaYqKzocjxXtFxVmfWXzAeqkWld29577452 = 93520541;    double CBkBaYqKzocjxXtFxVmfWXzAeqkWld26106590 = -725737071;    double CBkBaYqKzocjxXtFxVmfWXzAeqkWld86990478 = -189245755;    double CBkBaYqKzocjxXtFxVmfWXzAeqkWld51787988 = -997922353;    double CBkBaYqKzocjxXtFxVmfWXzAeqkWld46951133 = 67945166;    double CBkBaYqKzocjxXtFxVmfWXzAeqkWld40848639 = -416643501;     CBkBaYqKzocjxXtFxVmfWXzAeqkWld75524019 = CBkBaYqKzocjxXtFxVmfWXzAeqkWld10072624;     CBkBaYqKzocjxXtFxVmfWXzAeqkWld10072624 = CBkBaYqKzocjxXtFxVmfWXzAeqkWld59978626;     CBkBaYqKzocjxXtFxVmfWXzAeqkWld59978626 = CBkBaYqKzocjxXtFxVmfWXzAeqkWld47608172;     CBkBaYqKzocjxXtFxVmfWXzAeqkWld47608172 = CBkBaYqKzocjxXtFxVmfWXzAeqkWld87978752;     CBkBaYqKzocjxXtFxVmfWXzAeqkWld87978752 = CBkBaYqKzocjxXtFxVmfWXzAeqkWld33927838;     CBkBaYqKzocjxXtFxVmfWXzAeqkWld33927838 = CBkBaYqKzocjxXtFxVmfWXzAeqkWld44535965;     CBkBaYqKzocjxXtFxVmfWXzAeqkWld44535965 = CBkBaYqKzocjxXtFxVmfWXzAeqkWld54683830;     CBkBaYqKzocjxXtFxVmfWXzAeqkWld54683830 = CBkBaYqKzocjxXtFxVmfWXzAeqkWld65253705;     CBkBaYqKzocjxXtFxVmfWXzAeqkWld65253705 = CBkBaYqKzocjxXtFxVmfWXzAeqkWld93183235;     CBkBaYqKzocjxXtFxVmfWXzAeqkWld93183235 = CBkBaYqKzocjxXtFxVmfWXzAeqkWld53327021;     CBkBaYqKzocjxXtFxVmfWXzAeqkWld53327021 = CBkBaYqKzocjxXtFxVmfWXzAeqkWld22314826;     CBkBaYqKzocjxXtFxVmfWXzAeqkWld22314826 = CBkBaYqKzocjxXtFxVmfWXzAeqkWld80878249;     CBkBaYqKzocjxXtFxVmfWXzAeqkWld80878249 = CBkBaYqKzocjxXtFxVmfWXzAeqkWld38101131;     CBkBaYqKzocjxXtFxVmfWXzAeqkWld38101131 = CBkBaYqKzocjxXtFxVmfWXzAeqkWld13746107;     CBkBaYqKzocjxXtFxVmfWXzAeqkWld13746107 = CBkBaYqKzocjxXtFxVmfWXzAeqkWld72782300;     CBkBaYqKzocjxXtFxVmfWXzAeqkWld72782300 = CBkBaYqKzocjxXtFxVmfWXzAeqkWld22198768;     CBkBaYqKzocjxXtFxVmfWXzAeqkWld22198768 = CBkBaYqKzocjxXtFxVmfWXzAeqkWld66570770;     CBkBaYqKzocjxXtFxVmfWXzAeqkWld66570770 = CBkBaYqKzocjxXtFxVmfWXzAeqkWld62295792;     CBkBaYqKzocjxXtFxVmfWXzAeqkWld62295792 = CBkBaYqKzocjxXtFxVmfWXzAeqkWld86114169;     CBkBaYqKzocjxXtFxVmfWXzAeqkWld86114169 = CBkBaYqKzocjxXtFxVmfWXzAeqkWld4076099;     CBkBaYqKzocjxXtFxVmfWXzAeqkWld4076099 = CBkBaYqKzocjxXtFxVmfWXzAeqkWld855106;     CBkBaYqKzocjxXtFxVmfWXzAeqkWld855106 = CBkBaYqKzocjxXtFxVmfWXzAeqkWld57455045;     CBkBaYqKzocjxXtFxVmfWXzAeqkWld57455045 = CBkBaYqKzocjxXtFxVmfWXzAeqkWld17816690;     CBkBaYqKzocjxXtFxVmfWXzAeqkWld17816690 = CBkBaYqKzocjxXtFxVmfWXzAeqkWld18300767;     CBkBaYqKzocjxXtFxVmfWXzAeqkWld18300767 = CBkBaYqKzocjxXtFxVmfWXzAeqkWld44436438;     CBkBaYqKzocjxXtFxVmfWXzAeqkWld44436438 = CBkBaYqKzocjxXtFxVmfWXzAeqkWld98828742;     CBkBaYqKzocjxXtFxVmfWXzAeqkWld98828742 = CBkBaYqKzocjxXtFxVmfWXzAeqkWld94098003;     CBkBaYqKzocjxXtFxVmfWXzAeqkWld94098003 = CBkBaYqKzocjxXtFxVmfWXzAeqkWld75685962;     CBkBaYqKzocjxXtFxVmfWXzAeqkWld75685962 = CBkBaYqKzocjxXtFxVmfWXzAeqkWld82334163;     CBkBaYqKzocjxXtFxVmfWXzAeqkWld82334163 = CBkBaYqKzocjxXtFxVmfWXzAeqkWld58260750;     CBkBaYqKzocjxXtFxVmfWXzAeqkWld58260750 = CBkBaYqKzocjxXtFxVmfWXzAeqkWld19279407;     CBkBaYqKzocjxXtFxVmfWXzAeqkWld19279407 = CBkBaYqKzocjxXtFxVmfWXzAeqkWld92138250;     CBkBaYqKzocjxXtFxVmfWXzAeqkWld92138250 = CBkBaYqKzocjxXtFxVmfWXzAeqkWld8747033;     CBkBaYqKzocjxXtFxVmfWXzAeqkWld8747033 = CBkBaYqKzocjxXtFxVmfWXzAeqkWld61294236;     CBkBaYqKzocjxXtFxVmfWXzAeqkWld61294236 = CBkBaYqKzocjxXtFxVmfWXzAeqkWld9120157;     CBkBaYqKzocjxXtFxVmfWXzAeqkWld9120157 = CBkBaYqKzocjxXtFxVmfWXzAeqkWld8881406;     CBkBaYqKzocjxXtFxVmfWXzAeqkWld8881406 = CBkBaYqKzocjxXtFxVmfWXzAeqkWld62988340;     CBkBaYqKzocjxXtFxVmfWXzAeqkWld62988340 = CBkBaYqKzocjxXtFxVmfWXzAeqkWld1866664;     CBkBaYqKzocjxXtFxVmfWXzAeqkWld1866664 = CBkBaYqKzocjxXtFxVmfWXzAeqkWld64676548;     CBkBaYqKzocjxXtFxVmfWXzAeqkWld64676548 = CBkBaYqKzocjxXtFxVmfWXzAeqkWld76544551;     CBkBaYqKzocjxXtFxVmfWXzAeqkWld76544551 = CBkBaYqKzocjxXtFxVmfWXzAeqkWld65988347;     CBkBaYqKzocjxXtFxVmfWXzAeqkWld65988347 = CBkBaYqKzocjxXtFxVmfWXzAeqkWld34707529;     CBkBaYqKzocjxXtFxVmfWXzAeqkWld34707529 = CBkBaYqKzocjxXtFxVmfWXzAeqkWld81873618;     CBkBaYqKzocjxXtFxVmfWXzAeqkWld81873618 = CBkBaYqKzocjxXtFxVmfWXzAeqkWld74896252;     CBkBaYqKzocjxXtFxVmfWXzAeqkWld74896252 = CBkBaYqKzocjxXtFxVmfWXzAeqkWld83208984;     CBkBaYqKzocjxXtFxVmfWXzAeqkWld83208984 = CBkBaYqKzocjxXtFxVmfWXzAeqkWld16454850;     CBkBaYqKzocjxXtFxVmfWXzAeqkWld16454850 = CBkBaYqKzocjxXtFxVmfWXzAeqkWld30949298;     CBkBaYqKzocjxXtFxVmfWXzAeqkWld30949298 = CBkBaYqKzocjxXtFxVmfWXzAeqkWld3965911;     CBkBaYqKzocjxXtFxVmfWXzAeqkWld3965911 = CBkBaYqKzocjxXtFxVmfWXzAeqkWld39677497;     CBkBaYqKzocjxXtFxVmfWXzAeqkWld39677497 = CBkBaYqKzocjxXtFxVmfWXzAeqkWld8957851;     CBkBaYqKzocjxXtFxVmfWXzAeqkWld8957851 = CBkBaYqKzocjxXtFxVmfWXzAeqkWld89705241;     CBkBaYqKzocjxXtFxVmfWXzAeqkWld89705241 = CBkBaYqKzocjxXtFxVmfWXzAeqkWld36284919;     CBkBaYqKzocjxXtFxVmfWXzAeqkWld36284919 = CBkBaYqKzocjxXtFxVmfWXzAeqkWld64850546;     CBkBaYqKzocjxXtFxVmfWXzAeqkWld64850546 = CBkBaYqKzocjxXtFxVmfWXzAeqkWld12977961;     CBkBaYqKzocjxXtFxVmfWXzAeqkWld12977961 = CBkBaYqKzocjxXtFxVmfWXzAeqkWld74668913;     CBkBaYqKzocjxXtFxVmfWXzAeqkWld74668913 = CBkBaYqKzocjxXtFxVmfWXzAeqkWld52617579;     CBkBaYqKzocjxXtFxVmfWXzAeqkWld52617579 = CBkBaYqKzocjxXtFxVmfWXzAeqkWld42161936;     CBkBaYqKzocjxXtFxVmfWXzAeqkWld42161936 = CBkBaYqKzocjxXtFxVmfWXzAeqkWld29307405;     CBkBaYqKzocjxXtFxVmfWXzAeqkWld29307405 = CBkBaYqKzocjxXtFxVmfWXzAeqkWld43542314;     CBkBaYqKzocjxXtFxVmfWXzAeqkWld43542314 = CBkBaYqKzocjxXtFxVmfWXzAeqkWld35099096;     CBkBaYqKzocjxXtFxVmfWXzAeqkWld35099096 = CBkBaYqKzocjxXtFxVmfWXzAeqkWld50437962;     CBkBaYqKzocjxXtFxVmfWXzAeqkWld50437962 = CBkBaYqKzocjxXtFxVmfWXzAeqkWld78997868;     CBkBaYqKzocjxXtFxVmfWXzAeqkWld78997868 = CBkBaYqKzocjxXtFxVmfWXzAeqkWld82919541;     CBkBaYqKzocjxXtFxVmfWXzAeqkWld82919541 = CBkBaYqKzocjxXtFxVmfWXzAeqkWld34922485;     CBkBaYqKzocjxXtFxVmfWXzAeqkWld34922485 = CBkBaYqKzocjxXtFxVmfWXzAeqkWld34047614;     CBkBaYqKzocjxXtFxVmfWXzAeqkWld34047614 = CBkBaYqKzocjxXtFxVmfWXzAeqkWld30176575;     CBkBaYqKzocjxXtFxVmfWXzAeqkWld30176575 = CBkBaYqKzocjxXtFxVmfWXzAeqkWld72131216;     CBkBaYqKzocjxXtFxVmfWXzAeqkWld72131216 = CBkBaYqKzocjxXtFxVmfWXzAeqkWld76806894;     CBkBaYqKzocjxXtFxVmfWXzAeqkWld76806894 = CBkBaYqKzocjxXtFxVmfWXzAeqkWld4625950;     CBkBaYqKzocjxXtFxVmfWXzAeqkWld4625950 = CBkBaYqKzocjxXtFxVmfWXzAeqkWld63900894;     CBkBaYqKzocjxXtFxVmfWXzAeqkWld63900894 = CBkBaYqKzocjxXtFxVmfWXzAeqkWld59210427;     CBkBaYqKzocjxXtFxVmfWXzAeqkWld59210427 = CBkBaYqKzocjxXtFxVmfWXzAeqkWld64704106;     CBkBaYqKzocjxXtFxVmfWXzAeqkWld64704106 = CBkBaYqKzocjxXtFxVmfWXzAeqkWld97619244;     CBkBaYqKzocjxXtFxVmfWXzAeqkWld97619244 = CBkBaYqKzocjxXtFxVmfWXzAeqkWld9569619;     CBkBaYqKzocjxXtFxVmfWXzAeqkWld9569619 = CBkBaYqKzocjxXtFxVmfWXzAeqkWld38087751;     CBkBaYqKzocjxXtFxVmfWXzAeqkWld38087751 = CBkBaYqKzocjxXtFxVmfWXzAeqkWld66147576;     CBkBaYqKzocjxXtFxVmfWXzAeqkWld66147576 = CBkBaYqKzocjxXtFxVmfWXzAeqkWld75581427;     CBkBaYqKzocjxXtFxVmfWXzAeqkWld75581427 = CBkBaYqKzocjxXtFxVmfWXzAeqkWld42920437;     CBkBaYqKzocjxXtFxVmfWXzAeqkWld42920437 = CBkBaYqKzocjxXtFxVmfWXzAeqkWld35091783;     CBkBaYqKzocjxXtFxVmfWXzAeqkWld35091783 = CBkBaYqKzocjxXtFxVmfWXzAeqkWld27981589;     CBkBaYqKzocjxXtFxVmfWXzAeqkWld27981589 = CBkBaYqKzocjxXtFxVmfWXzAeqkWld67879444;     CBkBaYqKzocjxXtFxVmfWXzAeqkWld67879444 = CBkBaYqKzocjxXtFxVmfWXzAeqkWld90132093;     CBkBaYqKzocjxXtFxVmfWXzAeqkWld90132093 = CBkBaYqKzocjxXtFxVmfWXzAeqkWld36008465;     CBkBaYqKzocjxXtFxVmfWXzAeqkWld36008465 = CBkBaYqKzocjxXtFxVmfWXzAeqkWld73376312;     CBkBaYqKzocjxXtFxVmfWXzAeqkWld73376312 = CBkBaYqKzocjxXtFxVmfWXzAeqkWld68555509;     CBkBaYqKzocjxXtFxVmfWXzAeqkWld68555509 = CBkBaYqKzocjxXtFxVmfWXzAeqkWld82994488;     CBkBaYqKzocjxXtFxVmfWXzAeqkWld82994488 = CBkBaYqKzocjxXtFxVmfWXzAeqkWld27287705;     CBkBaYqKzocjxXtFxVmfWXzAeqkWld27287705 = CBkBaYqKzocjxXtFxVmfWXzAeqkWld95769071;     CBkBaYqKzocjxXtFxVmfWXzAeqkWld95769071 = CBkBaYqKzocjxXtFxVmfWXzAeqkWld86625323;     CBkBaYqKzocjxXtFxVmfWXzAeqkWld86625323 = CBkBaYqKzocjxXtFxVmfWXzAeqkWld56502577;     CBkBaYqKzocjxXtFxVmfWXzAeqkWld56502577 = CBkBaYqKzocjxXtFxVmfWXzAeqkWld66719469;     CBkBaYqKzocjxXtFxVmfWXzAeqkWld66719469 = CBkBaYqKzocjxXtFxVmfWXzAeqkWld33680935;     CBkBaYqKzocjxXtFxVmfWXzAeqkWld33680935 = CBkBaYqKzocjxXtFxVmfWXzAeqkWld58324350;     CBkBaYqKzocjxXtFxVmfWXzAeqkWld58324350 = CBkBaYqKzocjxXtFxVmfWXzAeqkWld29577452;     CBkBaYqKzocjxXtFxVmfWXzAeqkWld29577452 = CBkBaYqKzocjxXtFxVmfWXzAeqkWld26106590;     CBkBaYqKzocjxXtFxVmfWXzAeqkWld26106590 = CBkBaYqKzocjxXtFxVmfWXzAeqkWld86990478;     CBkBaYqKzocjxXtFxVmfWXzAeqkWld86990478 = CBkBaYqKzocjxXtFxVmfWXzAeqkWld51787988;     CBkBaYqKzocjxXtFxVmfWXzAeqkWld51787988 = CBkBaYqKzocjxXtFxVmfWXzAeqkWld46951133;     CBkBaYqKzocjxXtFxVmfWXzAeqkWld46951133 = CBkBaYqKzocjxXtFxVmfWXzAeqkWld40848639;     CBkBaYqKzocjxXtFxVmfWXzAeqkWld40848639 = CBkBaYqKzocjxXtFxVmfWXzAeqkWld75524019;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void KJccpmrdmCcHuraVpcbgtKmVt26658786() {     double UCDRBmvubLfuxWFsEncuXvHKjEMEdO97346240 = -984858833;    double UCDRBmvubLfuxWFsEncuXvHKjEMEdO71540428 = -895038891;    double UCDRBmvubLfuxWFsEncuXvHKjEMEdO5705897 = -451651093;    double UCDRBmvubLfuxWFsEncuXvHKjEMEdO78983317 = -112044613;    double UCDRBmvubLfuxWFsEncuXvHKjEMEdO48113083 = -43708291;    double UCDRBmvubLfuxWFsEncuXvHKjEMEdO57946154 = -464321501;    double UCDRBmvubLfuxWFsEncuXvHKjEMEdO73556549 = -788305633;    double UCDRBmvubLfuxWFsEncuXvHKjEMEdO41546460 = -582858429;    double UCDRBmvubLfuxWFsEncuXvHKjEMEdO61777344 = -377705210;    double UCDRBmvubLfuxWFsEncuXvHKjEMEdO54466461 = -46426090;    double UCDRBmvubLfuxWFsEncuXvHKjEMEdO24243290 = -462022996;    double UCDRBmvubLfuxWFsEncuXvHKjEMEdO38496709 = -255783934;    double UCDRBmvubLfuxWFsEncuXvHKjEMEdO13867192 = -446377300;    double UCDRBmvubLfuxWFsEncuXvHKjEMEdO5067599 = -813704947;    double UCDRBmvubLfuxWFsEncuXvHKjEMEdO9003902 = -755673939;    double UCDRBmvubLfuxWFsEncuXvHKjEMEdO20753026 = -702950369;    double UCDRBmvubLfuxWFsEncuXvHKjEMEdO15647827 = -722460165;    double UCDRBmvubLfuxWFsEncuXvHKjEMEdO29096073 = -448837474;    double UCDRBmvubLfuxWFsEncuXvHKjEMEdO66933016 = -968160140;    double UCDRBmvubLfuxWFsEncuXvHKjEMEdO67223812 = -761208321;    double UCDRBmvubLfuxWFsEncuXvHKjEMEdO61230383 = -170494319;    double UCDRBmvubLfuxWFsEncuXvHKjEMEdO65257084 = 61026406;    double UCDRBmvubLfuxWFsEncuXvHKjEMEdO66926449 = -816043757;    double UCDRBmvubLfuxWFsEncuXvHKjEMEdO55094312 = -418101579;    double UCDRBmvubLfuxWFsEncuXvHKjEMEdO92231433 = -381539876;    double UCDRBmvubLfuxWFsEncuXvHKjEMEdO34012292 = -258189851;    double UCDRBmvubLfuxWFsEncuXvHKjEMEdO71865346 = -245979628;    double UCDRBmvubLfuxWFsEncuXvHKjEMEdO29677829 = -794270918;    double UCDRBmvubLfuxWFsEncuXvHKjEMEdO23582875 = 81513795;    double UCDRBmvubLfuxWFsEncuXvHKjEMEdO28151241 = -458120883;    double UCDRBmvubLfuxWFsEncuXvHKjEMEdO9426016 = -843657750;    double UCDRBmvubLfuxWFsEncuXvHKjEMEdO38170733 = -617933355;    double UCDRBmvubLfuxWFsEncuXvHKjEMEdO17457716 = -427670650;    double UCDRBmvubLfuxWFsEncuXvHKjEMEdO81286149 = -653029842;    double UCDRBmvubLfuxWFsEncuXvHKjEMEdO42128449 = -247165495;    double UCDRBmvubLfuxWFsEncuXvHKjEMEdO78697116 = -94178470;    double UCDRBmvubLfuxWFsEncuXvHKjEMEdO51963662 = -898509651;    double UCDRBmvubLfuxWFsEncuXvHKjEMEdO66926202 = -582829296;    double UCDRBmvubLfuxWFsEncuXvHKjEMEdO62247110 = -109854803;    double UCDRBmvubLfuxWFsEncuXvHKjEMEdO77347194 = -97631220;    double UCDRBmvubLfuxWFsEncuXvHKjEMEdO30920398 = -955041153;    double UCDRBmvubLfuxWFsEncuXvHKjEMEdO82490518 = -199849126;    double UCDRBmvubLfuxWFsEncuXvHKjEMEdO82074928 = -251892271;    double UCDRBmvubLfuxWFsEncuXvHKjEMEdO29968477 = -679138693;    double UCDRBmvubLfuxWFsEncuXvHKjEMEdO54812064 = -327544785;    double UCDRBmvubLfuxWFsEncuXvHKjEMEdO22415463 = -929301552;    double UCDRBmvubLfuxWFsEncuXvHKjEMEdO42122961 = -438749848;    double UCDRBmvubLfuxWFsEncuXvHKjEMEdO12789050 = -304377557;    double UCDRBmvubLfuxWFsEncuXvHKjEMEdO11030003 = -714716555;    double UCDRBmvubLfuxWFsEncuXvHKjEMEdO55724974 = -293119386;    double UCDRBmvubLfuxWFsEncuXvHKjEMEdO97419669 = -320081392;    double UCDRBmvubLfuxWFsEncuXvHKjEMEdO86093905 = -841366260;    double UCDRBmvubLfuxWFsEncuXvHKjEMEdO27507783 = -498902791;    double UCDRBmvubLfuxWFsEncuXvHKjEMEdO92875668 = -304583332;    double UCDRBmvubLfuxWFsEncuXvHKjEMEdO65428402 = 26628890;    double UCDRBmvubLfuxWFsEncuXvHKjEMEdO32089157 = -945885240;    double UCDRBmvubLfuxWFsEncuXvHKjEMEdO4613979 = 21004866;    double UCDRBmvubLfuxWFsEncuXvHKjEMEdO50611585 = 66450486;    double UCDRBmvubLfuxWFsEncuXvHKjEMEdO86751884 = -730504737;    double UCDRBmvubLfuxWFsEncuXvHKjEMEdO14100792 = -785518441;    double UCDRBmvubLfuxWFsEncuXvHKjEMEdO86080808 = -118341874;    double UCDRBmvubLfuxWFsEncuXvHKjEMEdO43878721 = -994034715;    double UCDRBmvubLfuxWFsEncuXvHKjEMEdO17963585 = -564372224;    double UCDRBmvubLfuxWFsEncuXvHKjEMEdO33626104 = -919584327;    double UCDRBmvubLfuxWFsEncuXvHKjEMEdO45040445 = -202768341;    double UCDRBmvubLfuxWFsEncuXvHKjEMEdO86072557 = -844089642;    double UCDRBmvubLfuxWFsEncuXvHKjEMEdO21038994 = -828113284;    double UCDRBmvubLfuxWFsEncuXvHKjEMEdO32581042 = -793347458;    double UCDRBmvubLfuxWFsEncuXvHKjEMEdO62939149 = -466539452;    double UCDRBmvubLfuxWFsEncuXvHKjEMEdO30306786 = -561495469;    double UCDRBmvubLfuxWFsEncuXvHKjEMEdO68789364 = -804440718;    double UCDRBmvubLfuxWFsEncuXvHKjEMEdO48721625 = -39630869;    double UCDRBmvubLfuxWFsEncuXvHKjEMEdO66848963 = -238982672;    double UCDRBmvubLfuxWFsEncuXvHKjEMEdO89585822 = -770528921;    double UCDRBmvubLfuxWFsEncuXvHKjEMEdO36303415 = -806167169;    double UCDRBmvubLfuxWFsEncuXvHKjEMEdO78739865 = -970645194;    double UCDRBmvubLfuxWFsEncuXvHKjEMEdO83182156 = -687081323;    double UCDRBmvubLfuxWFsEncuXvHKjEMEdO36957973 = -36905065;    double UCDRBmvubLfuxWFsEncuXvHKjEMEdO282249 = 9443205;    double UCDRBmvubLfuxWFsEncuXvHKjEMEdO69815970 = -452238324;    double UCDRBmvubLfuxWFsEncuXvHKjEMEdO91889331 = -819440003;    double UCDRBmvubLfuxWFsEncuXvHKjEMEdO59076296 = -941602071;    double UCDRBmvubLfuxWFsEncuXvHKjEMEdO18647827 = 20445637;    double UCDRBmvubLfuxWFsEncuXvHKjEMEdO67857900 = -625366819;    double UCDRBmvubLfuxWFsEncuXvHKjEMEdO30731571 = -38039492;    double UCDRBmvubLfuxWFsEncuXvHKjEMEdO23332111 = 97708510;    double UCDRBmvubLfuxWFsEncuXvHKjEMEdO10662950 = -19030564;    double UCDRBmvubLfuxWFsEncuXvHKjEMEdO24582048 = -23087319;    double UCDRBmvubLfuxWFsEncuXvHKjEMEdO15857747 = -579658732;    double UCDRBmvubLfuxWFsEncuXvHKjEMEdO10039293 = -301280256;    double UCDRBmvubLfuxWFsEncuXvHKjEMEdO74083137 = -15183336;    double UCDRBmvubLfuxWFsEncuXvHKjEMEdO1352078 = -864960138;    double UCDRBmvubLfuxWFsEncuXvHKjEMEdO80174318 = -852324559;    double UCDRBmvubLfuxWFsEncuXvHKjEMEdO48146319 = -324336362;    double UCDRBmvubLfuxWFsEncuXvHKjEMEdO91266386 = -979289346;    double UCDRBmvubLfuxWFsEncuXvHKjEMEdO87041676 = -961006438;    double UCDRBmvubLfuxWFsEncuXvHKjEMEdO64526933 = -635476902;    double UCDRBmvubLfuxWFsEncuXvHKjEMEdO48448825 = -332307944;    double UCDRBmvubLfuxWFsEncuXvHKjEMEdO84928031 = -376370353;    double UCDRBmvubLfuxWFsEncuXvHKjEMEdO68739506 = -984858833;     UCDRBmvubLfuxWFsEncuXvHKjEMEdO97346240 = UCDRBmvubLfuxWFsEncuXvHKjEMEdO71540428;     UCDRBmvubLfuxWFsEncuXvHKjEMEdO71540428 = UCDRBmvubLfuxWFsEncuXvHKjEMEdO5705897;     UCDRBmvubLfuxWFsEncuXvHKjEMEdO5705897 = UCDRBmvubLfuxWFsEncuXvHKjEMEdO78983317;     UCDRBmvubLfuxWFsEncuXvHKjEMEdO78983317 = UCDRBmvubLfuxWFsEncuXvHKjEMEdO48113083;     UCDRBmvubLfuxWFsEncuXvHKjEMEdO48113083 = UCDRBmvubLfuxWFsEncuXvHKjEMEdO57946154;     UCDRBmvubLfuxWFsEncuXvHKjEMEdO57946154 = UCDRBmvubLfuxWFsEncuXvHKjEMEdO73556549;     UCDRBmvubLfuxWFsEncuXvHKjEMEdO73556549 = UCDRBmvubLfuxWFsEncuXvHKjEMEdO41546460;     UCDRBmvubLfuxWFsEncuXvHKjEMEdO41546460 = UCDRBmvubLfuxWFsEncuXvHKjEMEdO61777344;     UCDRBmvubLfuxWFsEncuXvHKjEMEdO61777344 = UCDRBmvubLfuxWFsEncuXvHKjEMEdO54466461;     UCDRBmvubLfuxWFsEncuXvHKjEMEdO54466461 = UCDRBmvubLfuxWFsEncuXvHKjEMEdO24243290;     UCDRBmvubLfuxWFsEncuXvHKjEMEdO24243290 = UCDRBmvubLfuxWFsEncuXvHKjEMEdO38496709;     UCDRBmvubLfuxWFsEncuXvHKjEMEdO38496709 = UCDRBmvubLfuxWFsEncuXvHKjEMEdO13867192;     UCDRBmvubLfuxWFsEncuXvHKjEMEdO13867192 = UCDRBmvubLfuxWFsEncuXvHKjEMEdO5067599;     UCDRBmvubLfuxWFsEncuXvHKjEMEdO5067599 = UCDRBmvubLfuxWFsEncuXvHKjEMEdO9003902;     UCDRBmvubLfuxWFsEncuXvHKjEMEdO9003902 = UCDRBmvubLfuxWFsEncuXvHKjEMEdO20753026;     UCDRBmvubLfuxWFsEncuXvHKjEMEdO20753026 = UCDRBmvubLfuxWFsEncuXvHKjEMEdO15647827;     UCDRBmvubLfuxWFsEncuXvHKjEMEdO15647827 = UCDRBmvubLfuxWFsEncuXvHKjEMEdO29096073;     UCDRBmvubLfuxWFsEncuXvHKjEMEdO29096073 = UCDRBmvubLfuxWFsEncuXvHKjEMEdO66933016;     UCDRBmvubLfuxWFsEncuXvHKjEMEdO66933016 = UCDRBmvubLfuxWFsEncuXvHKjEMEdO67223812;     UCDRBmvubLfuxWFsEncuXvHKjEMEdO67223812 = UCDRBmvubLfuxWFsEncuXvHKjEMEdO61230383;     UCDRBmvubLfuxWFsEncuXvHKjEMEdO61230383 = UCDRBmvubLfuxWFsEncuXvHKjEMEdO65257084;     UCDRBmvubLfuxWFsEncuXvHKjEMEdO65257084 = UCDRBmvubLfuxWFsEncuXvHKjEMEdO66926449;     UCDRBmvubLfuxWFsEncuXvHKjEMEdO66926449 = UCDRBmvubLfuxWFsEncuXvHKjEMEdO55094312;     UCDRBmvubLfuxWFsEncuXvHKjEMEdO55094312 = UCDRBmvubLfuxWFsEncuXvHKjEMEdO92231433;     UCDRBmvubLfuxWFsEncuXvHKjEMEdO92231433 = UCDRBmvubLfuxWFsEncuXvHKjEMEdO34012292;     UCDRBmvubLfuxWFsEncuXvHKjEMEdO34012292 = UCDRBmvubLfuxWFsEncuXvHKjEMEdO71865346;     UCDRBmvubLfuxWFsEncuXvHKjEMEdO71865346 = UCDRBmvubLfuxWFsEncuXvHKjEMEdO29677829;     UCDRBmvubLfuxWFsEncuXvHKjEMEdO29677829 = UCDRBmvubLfuxWFsEncuXvHKjEMEdO23582875;     UCDRBmvubLfuxWFsEncuXvHKjEMEdO23582875 = UCDRBmvubLfuxWFsEncuXvHKjEMEdO28151241;     UCDRBmvubLfuxWFsEncuXvHKjEMEdO28151241 = UCDRBmvubLfuxWFsEncuXvHKjEMEdO9426016;     UCDRBmvubLfuxWFsEncuXvHKjEMEdO9426016 = UCDRBmvubLfuxWFsEncuXvHKjEMEdO38170733;     UCDRBmvubLfuxWFsEncuXvHKjEMEdO38170733 = UCDRBmvubLfuxWFsEncuXvHKjEMEdO17457716;     UCDRBmvubLfuxWFsEncuXvHKjEMEdO17457716 = UCDRBmvubLfuxWFsEncuXvHKjEMEdO81286149;     UCDRBmvubLfuxWFsEncuXvHKjEMEdO81286149 = UCDRBmvubLfuxWFsEncuXvHKjEMEdO42128449;     UCDRBmvubLfuxWFsEncuXvHKjEMEdO42128449 = UCDRBmvubLfuxWFsEncuXvHKjEMEdO78697116;     UCDRBmvubLfuxWFsEncuXvHKjEMEdO78697116 = UCDRBmvubLfuxWFsEncuXvHKjEMEdO51963662;     UCDRBmvubLfuxWFsEncuXvHKjEMEdO51963662 = UCDRBmvubLfuxWFsEncuXvHKjEMEdO66926202;     UCDRBmvubLfuxWFsEncuXvHKjEMEdO66926202 = UCDRBmvubLfuxWFsEncuXvHKjEMEdO62247110;     UCDRBmvubLfuxWFsEncuXvHKjEMEdO62247110 = UCDRBmvubLfuxWFsEncuXvHKjEMEdO77347194;     UCDRBmvubLfuxWFsEncuXvHKjEMEdO77347194 = UCDRBmvubLfuxWFsEncuXvHKjEMEdO30920398;     UCDRBmvubLfuxWFsEncuXvHKjEMEdO30920398 = UCDRBmvubLfuxWFsEncuXvHKjEMEdO82490518;     UCDRBmvubLfuxWFsEncuXvHKjEMEdO82490518 = UCDRBmvubLfuxWFsEncuXvHKjEMEdO82074928;     UCDRBmvubLfuxWFsEncuXvHKjEMEdO82074928 = UCDRBmvubLfuxWFsEncuXvHKjEMEdO29968477;     UCDRBmvubLfuxWFsEncuXvHKjEMEdO29968477 = UCDRBmvubLfuxWFsEncuXvHKjEMEdO54812064;     UCDRBmvubLfuxWFsEncuXvHKjEMEdO54812064 = UCDRBmvubLfuxWFsEncuXvHKjEMEdO22415463;     UCDRBmvubLfuxWFsEncuXvHKjEMEdO22415463 = UCDRBmvubLfuxWFsEncuXvHKjEMEdO42122961;     UCDRBmvubLfuxWFsEncuXvHKjEMEdO42122961 = UCDRBmvubLfuxWFsEncuXvHKjEMEdO12789050;     UCDRBmvubLfuxWFsEncuXvHKjEMEdO12789050 = UCDRBmvubLfuxWFsEncuXvHKjEMEdO11030003;     UCDRBmvubLfuxWFsEncuXvHKjEMEdO11030003 = UCDRBmvubLfuxWFsEncuXvHKjEMEdO55724974;     UCDRBmvubLfuxWFsEncuXvHKjEMEdO55724974 = UCDRBmvubLfuxWFsEncuXvHKjEMEdO97419669;     UCDRBmvubLfuxWFsEncuXvHKjEMEdO97419669 = UCDRBmvubLfuxWFsEncuXvHKjEMEdO86093905;     UCDRBmvubLfuxWFsEncuXvHKjEMEdO86093905 = UCDRBmvubLfuxWFsEncuXvHKjEMEdO27507783;     UCDRBmvubLfuxWFsEncuXvHKjEMEdO27507783 = UCDRBmvubLfuxWFsEncuXvHKjEMEdO92875668;     UCDRBmvubLfuxWFsEncuXvHKjEMEdO92875668 = UCDRBmvubLfuxWFsEncuXvHKjEMEdO65428402;     UCDRBmvubLfuxWFsEncuXvHKjEMEdO65428402 = UCDRBmvubLfuxWFsEncuXvHKjEMEdO32089157;     UCDRBmvubLfuxWFsEncuXvHKjEMEdO32089157 = UCDRBmvubLfuxWFsEncuXvHKjEMEdO4613979;     UCDRBmvubLfuxWFsEncuXvHKjEMEdO4613979 = UCDRBmvubLfuxWFsEncuXvHKjEMEdO50611585;     UCDRBmvubLfuxWFsEncuXvHKjEMEdO50611585 = UCDRBmvubLfuxWFsEncuXvHKjEMEdO86751884;     UCDRBmvubLfuxWFsEncuXvHKjEMEdO86751884 = UCDRBmvubLfuxWFsEncuXvHKjEMEdO14100792;     UCDRBmvubLfuxWFsEncuXvHKjEMEdO14100792 = UCDRBmvubLfuxWFsEncuXvHKjEMEdO86080808;     UCDRBmvubLfuxWFsEncuXvHKjEMEdO86080808 = UCDRBmvubLfuxWFsEncuXvHKjEMEdO43878721;     UCDRBmvubLfuxWFsEncuXvHKjEMEdO43878721 = UCDRBmvubLfuxWFsEncuXvHKjEMEdO17963585;     UCDRBmvubLfuxWFsEncuXvHKjEMEdO17963585 = UCDRBmvubLfuxWFsEncuXvHKjEMEdO33626104;     UCDRBmvubLfuxWFsEncuXvHKjEMEdO33626104 = UCDRBmvubLfuxWFsEncuXvHKjEMEdO45040445;     UCDRBmvubLfuxWFsEncuXvHKjEMEdO45040445 = UCDRBmvubLfuxWFsEncuXvHKjEMEdO86072557;     UCDRBmvubLfuxWFsEncuXvHKjEMEdO86072557 = UCDRBmvubLfuxWFsEncuXvHKjEMEdO21038994;     UCDRBmvubLfuxWFsEncuXvHKjEMEdO21038994 = UCDRBmvubLfuxWFsEncuXvHKjEMEdO32581042;     UCDRBmvubLfuxWFsEncuXvHKjEMEdO32581042 = UCDRBmvubLfuxWFsEncuXvHKjEMEdO62939149;     UCDRBmvubLfuxWFsEncuXvHKjEMEdO62939149 = UCDRBmvubLfuxWFsEncuXvHKjEMEdO30306786;     UCDRBmvubLfuxWFsEncuXvHKjEMEdO30306786 = UCDRBmvubLfuxWFsEncuXvHKjEMEdO68789364;     UCDRBmvubLfuxWFsEncuXvHKjEMEdO68789364 = UCDRBmvubLfuxWFsEncuXvHKjEMEdO48721625;     UCDRBmvubLfuxWFsEncuXvHKjEMEdO48721625 = UCDRBmvubLfuxWFsEncuXvHKjEMEdO66848963;     UCDRBmvubLfuxWFsEncuXvHKjEMEdO66848963 = UCDRBmvubLfuxWFsEncuXvHKjEMEdO89585822;     UCDRBmvubLfuxWFsEncuXvHKjEMEdO89585822 = UCDRBmvubLfuxWFsEncuXvHKjEMEdO36303415;     UCDRBmvubLfuxWFsEncuXvHKjEMEdO36303415 = UCDRBmvubLfuxWFsEncuXvHKjEMEdO78739865;     UCDRBmvubLfuxWFsEncuXvHKjEMEdO78739865 = UCDRBmvubLfuxWFsEncuXvHKjEMEdO83182156;     UCDRBmvubLfuxWFsEncuXvHKjEMEdO83182156 = UCDRBmvubLfuxWFsEncuXvHKjEMEdO36957973;     UCDRBmvubLfuxWFsEncuXvHKjEMEdO36957973 = UCDRBmvubLfuxWFsEncuXvHKjEMEdO282249;     UCDRBmvubLfuxWFsEncuXvHKjEMEdO282249 = UCDRBmvubLfuxWFsEncuXvHKjEMEdO69815970;     UCDRBmvubLfuxWFsEncuXvHKjEMEdO69815970 = UCDRBmvubLfuxWFsEncuXvHKjEMEdO91889331;     UCDRBmvubLfuxWFsEncuXvHKjEMEdO91889331 = UCDRBmvubLfuxWFsEncuXvHKjEMEdO59076296;     UCDRBmvubLfuxWFsEncuXvHKjEMEdO59076296 = UCDRBmvubLfuxWFsEncuXvHKjEMEdO18647827;     UCDRBmvubLfuxWFsEncuXvHKjEMEdO18647827 = UCDRBmvubLfuxWFsEncuXvHKjEMEdO67857900;     UCDRBmvubLfuxWFsEncuXvHKjEMEdO67857900 = UCDRBmvubLfuxWFsEncuXvHKjEMEdO30731571;     UCDRBmvubLfuxWFsEncuXvHKjEMEdO30731571 = UCDRBmvubLfuxWFsEncuXvHKjEMEdO23332111;     UCDRBmvubLfuxWFsEncuXvHKjEMEdO23332111 = UCDRBmvubLfuxWFsEncuXvHKjEMEdO10662950;     UCDRBmvubLfuxWFsEncuXvHKjEMEdO10662950 = UCDRBmvubLfuxWFsEncuXvHKjEMEdO24582048;     UCDRBmvubLfuxWFsEncuXvHKjEMEdO24582048 = UCDRBmvubLfuxWFsEncuXvHKjEMEdO15857747;     UCDRBmvubLfuxWFsEncuXvHKjEMEdO15857747 = UCDRBmvubLfuxWFsEncuXvHKjEMEdO10039293;     UCDRBmvubLfuxWFsEncuXvHKjEMEdO10039293 = UCDRBmvubLfuxWFsEncuXvHKjEMEdO74083137;     UCDRBmvubLfuxWFsEncuXvHKjEMEdO74083137 = UCDRBmvubLfuxWFsEncuXvHKjEMEdO1352078;     UCDRBmvubLfuxWFsEncuXvHKjEMEdO1352078 = UCDRBmvubLfuxWFsEncuXvHKjEMEdO80174318;     UCDRBmvubLfuxWFsEncuXvHKjEMEdO80174318 = UCDRBmvubLfuxWFsEncuXvHKjEMEdO48146319;     UCDRBmvubLfuxWFsEncuXvHKjEMEdO48146319 = UCDRBmvubLfuxWFsEncuXvHKjEMEdO91266386;     UCDRBmvubLfuxWFsEncuXvHKjEMEdO91266386 = UCDRBmvubLfuxWFsEncuXvHKjEMEdO87041676;     UCDRBmvubLfuxWFsEncuXvHKjEMEdO87041676 = UCDRBmvubLfuxWFsEncuXvHKjEMEdO64526933;     UCDRBmvubLfuxWFsEncuXvHKjEMEdO64526933 = UCDRBmvubLfuxWFsEncuXvHKjEMEdO48448825;     UCDRBmvubLfuxWFsEncuXvHKjEMEdO48448825 = UCDRBmvubLfuxWFsEncuXvHKjEMEdO84928031;     UCDRBmvubLfuxWFsEncuXvHKjEMEdO84928031 = UCDRBmvubLfuxWFsEncuXvHKjEMEdO68739506;     UCDRBmvubLfuxWFsEncuXvHKjEMEdO68739506 = UCDRBmvubLfuxWFsEncuXvHKjEMEdO97346240;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void buEChSaBxelKzZUAsYSMSwtPp88506044() {     double UhVznWnQqTPrBVaIUizCdpvwtjNcZO48510323 = -807449176;    double UhVznWnQqTPrBVaIUizCdpvwtjNcZO2907031 = -348589569;    double UhVznWnQqTPrBVaIUizCdpvwtjNcZO72777459 = -13702779;    double UhVznWnQqTPrBVaIUizCdpvwtjNcZO55507037 = 52768770;    double UhVznWnQqTPrBVaIUizCdpvwtjNcZO95637194 = -605908187;    double UhVznWnQqTPrBVaIUizCdpvwtjNcZO26770140 = -473716320;    double UhVznWnQqTPrBVaIUizCdpvwtjNcZO52745574 = -557384513;    double UhVznWnQqTPrBVaIUizCdpvwtjNcZO40780759 = 51600496;    double UhVznWnQqTPrBVaIUizCdpvwtjNcZO95176093 = 16200630;    double UhVznWnQqTPrBVaIUizCdpvwtjNcZO89422739 = -352356008;    double UhVznWnQqTPrBVaIUizCdpvwtjNcZO73231003 = 57649159;    double UhVznWnQqTPrBVaIUizCdpvwtjNcZO23423698 = -878680109;    double UhVznWnQqTPrBVaIUizCdpvwtjNcZO98881661 = 3467495;    double UhVznWnQqTPrBVaIUizCdpvwtjNcZO42031252 = -7906586;    double UhVznWnQqTPrBVaIUizCdpvwtjNcZO66713787 = -495478706;    double UhVznWnQqTPrBVaIUizCdpvwtjNcZO10759660 = -808128974;    double UhVznWnQqTPrBVaIUizCdpvwtjNcZO71096818 = 81285677;    double UhVznWnQqTPrBVaIUizCdpvwtjNcZO94328414 = -778463817;    double UhVznWnQqTPrBVaIUizCdpvwtjNcZO10290728 = -952090122;    double UhVznWnQqTPrBVaIUizCdpvwtjNcZO61620508 = -222111524;    double UhVznWnQqTPrBVaIUizCdpvwtjNcZO42918338 = -804360255;    double UhVznWnQqTPrBVaIUizCdpvwtjNcZO46559563 = -188431336;    double UhVznWnQqTPrBVaIUizCdpvwtjNcZO11332442 = -263185810;    double UhVznWnQqTPrBVaIUizCdpvwtjNcZO2172505 = -16720061;    double UhVznWnQqTPrBVaIUizCdpvwtjNcZO30480402 = 56773986;    double UhVznWnQqTPrBVaIUizCdpvwtjNcZO9564643 = -395296862;    double UhVznWnQqTPrBVaIUizCdpvwtjNcZO6862746 = -778405610;    double UhVznWnQqTPrBVaIUizCdpvwtjNcZO92878954 = -762562371;    double UhVznWnQqTPrBVaIUizCdpvwtjNcZO52015746 = 62855779;    double UhVznWnQqTPrBVaIUizCdpvwtjNcZO10886093 = 48628619;    double UhVznWnQqTPrBVaIUizCdpvwtjNcZO86931963 = -788045046;    double UhVznWnQqTPrBVaIUizCdpvwtjNcZO97274455 = -457346784;    double UhVznWnQqTPrBVaIUizCdpvwtjNcZO45284243 = -425257140;    double UhVznWnQqTPrBVaIUizCdpvwtjNcZO88743129 = -642001518;    double UhVznWnQqTPrBVaIUizCdpvwtjNcZO27296464 = -809351243;    double UhVznWnQqTPrBVaIUizCdpvwtjNcZO31109007 = -109133648;    double UhVznWnQqTPrBVaIUizCdpvwtjNcZO63195800 = -859186919;    double UhVznWnQqTPrBVaIUizCdpvwtjNcZO87989255 = -275521625;    double UhVznWnQqTPrBVaIUizCdpvwtjNcZO79407864 = -639212863;    double UhVznWnQqTPrBVaIUizCdpvwtjNcZO66787434 = -647003544;    double UhVznWnQqTPrBVaIUizCdpvwtjNcZO13078627 = 6894569;    double UhVznWnQqTPrBVaIUizCdpvwtjNcZO56207359 = -311718216;    double UhVznWnQqTPrBVaIUizCdpvwtjNcZO40758727 = -868235288;    double UhVznWnQqTPrBVaIUizCdpvwtjNcZO30786933 = -72934334;    double UhVznWnQqTPrBVaIUizCdpvwtjNcZO22791868 = -678846422;    double UhVznWnQqTPrBVaIUizCdpvwtjNcZO95644075 = -686441298;    double UhVznWnQqTPrBVaIUizCdpvwtjNcZO69357662 = -984968191;    double UhVznWnQqTPrBVaIUizCdpvwtjNcZO4398173 = -199504607;    double UhVznWnQqTPrBVaIUizCdpvwtjNcZO31311032 = -477832870;    double UhVznWnQqTPrBVaIUizCdpvwtjNcZO83390387 = -676190579;    double UhVznWnQqTPrBVaIUizCdpvwtjNcZO30951535 = -395953604;    double UhVznWnQqTPrBVaIUizCdpvwtjNcZO55158322 = -479670367;    double UhVznWnQqTPrBVaIUizCdpvwtjNcZO39103339 = -426753896;    double UhVznWnQqTPrBVaIUizCdpvwtjNcZO40923757 = -366630746;    double UhVznWnQqTPrBVaIUizCdpvwtjNcZO45587706 = -680451223;    double UhVznWnQqTPrBVaIUizCdpvwtjNcZO1950760 = -519017840;    double UhVznWnQqTPrBVaIUizCdpvwtjNcZO91574589 = 14596240;    double UhVznWnQqTPrBVaIUizCdpvwtjNcZO70604954 = -996982718;    double UhVznWnQqTPrBVaIUizCdpvwtjNcZO25026636 = 95994784;    double UhVznWnQqTPrBVaIUizCdpvwtjNcZO86072552 = -110611325;    double UhVznWnQqTPrBVaIUizCdpvwtjNcZO19907394 = -695310710;    double UhVznWnQqTPrBVaIUizCdpvwtjNcZO59866620 = -794822143;    double UhVznWnQqTPrBVaIUizCdpvwtjNcZO88765012 = 88744716;    double UhVznWnQqTPrBVaIUizCdpvwtjNcZO84290001 = 67572011;    double UhVznWnQqTPrBVaIUizCdpvwtjNcZO2490776 = -564310962;    double UhVznWnQqTPrBVaIUizCdpvwtjNcZO75956548 = -485004058;    double UhVznWnQqTPrBVaIUizCdpvwtjNcZO78139455 = -353422970;    double UhVznWnQqTPrBVaIUizCdpvwtjNcZO10138532 = -354530987;    double UhVznWnQqTPrBVaIUizCdpvwtjNcZO14734789 = -198555343;    double UhVznWnQqTPrBVaIUizCdpvwtjNcZO35604780 = -286345059;    double UhVznWnQqTPrBVaIUizCdpvwtjNcZO47563859 = -948942056;    double UhVznWnQqTPrBVaIUizCdpvwtjNcZO83107563 = -643192698;    double UhVznWnQqTPrBVaIUizCdpvwtjNcZO14920551 = -39250955;    double UhVznWnQqTPrBVaIUizCdpvwtjNcZO43503294 = -205086578;    double UhVznWnQqTPrBVaIUizCdpvwtjNcZO48541881 = -129006093;    double UhVznWnQqTPrBVaIUizCdpvwtjNcZO86710979 = -392642039;    double UhVznWnQqTPrBVaIUizCdpvwtjNcZO5800837 = -320196049;    double UhVznWnQqTPrBVaIUizCdpvwtjNcZO80545508 = -90251476;    double UhVznWnQqTPrBVaIUizCdpvwtjNcZO79380637 = -337873640;    double UhVznWnQqTPrBVaIUizCdpvwtjNcZO34836326 = -256784716;    double UhVznWnQqTPrBVaIUizCdpvwtjNcZO40206980 = -410328672;    double UhVznWnQqTPrBVaIUizCdpvwtjNcZO2464574 = -478901004;    double UhVznWnQqTPrBVaIUizCdpvwtjNcZO61567922 = -184729502;    double UhVznWnQqTPrBVaIUizCdpvwtjNcZO68625359 = -260953642;    double UhVznWnQqTPrBVaIUizCdpvwtjNcZO79934558 = -555417777;    double UhVznWnQqTPrBVaIUizCdpvwtjNcZO31773642 = -208374679;    double UhVznWnQqTPrBVaIUizCdpvwtjNcZO58171116 = 69407112;    double UhVznWnQqTPrBVaIUizCdpvwtjNcZO4360486 = 41373605;    double UhVznWnQqTPrBVaIUizCdpvwtjNcZO43155424 = -961550295;    double UhVznWnQqTPrBVaIUizCdpvwtjNcZO25345704 = -190333403;    double UhVznWnQqTPrBVaIUizCdpvwtjNcZO39534418 = -23729888;    double UhVznWnQqTPrBVaIUizCdpvwtjNcZO92590846 = -862204201;    double UhVznWnQqTPrBVaIUizCdpvwtjNcZO62962619 = -271516410;    double UhVznWnQqTPrBVaIUizCdpvwtjNcZO93335311 = -428601538;    double UhVznWnQqTPrBVaIUizCdpvwtjNcZO46880041 = -951692834;    double UhVznWnQqTPrBVaIUizCdpvwtjNcZO53212007 = -198283289;    double UhVznWnQqTPrBVaIUizCdpvwtjNcZO67442347 = -300462933;    double UhVznWnQqTPrBVaIUizCdpvwtjNcZO56468726 = -835807299;    double UhVznWnQqTPrBVaIUizCdpvwtjNcZO28296158 = -508623372;    double UhVznWnQqTPrBVaIUizCdpvwtjNcZO46835320 = -807449176;     UhVznWnQqTPrBVaIUizCdpvwtjNcZO48510323 = UhVznWnQqTPrBVaIUizCdpvwtjNcZO2907031;     UhVznWnQqTPrBVaIUizCdpvwtjNcZO2907031 = UhVznWnQqTPrBVaIUizCdpvwtjNcZO72777459;     UhVznWnQqTPrBVaIUizCdpvwtjNcZO72777459 = UhVznWnQqTPrBVaIUizCdpvwtjNcZO55507037;     UhVznWnQqTPrBVaIUizCdpvwtjNcZO55507037 = UhVznWnQqTPrBVaIUizCdpvwtjNcZO95637194;     UhVznWnQqTPrBVaIUizCdpvwtjNcZO95637194 = UhVznWnQqTPrBVaIUizCdpvwtjNcZO26770140;     UhVznWnQqTPrBVaIUizCdpvwtjNcZO26770140 = UhVznWnQqTPrBVaIUizCdpvwtjNcZO52745574;     UhVznWnQqTPrBVaIUizCdpvwtjNcZO52745574 = UhVznWnQqTPrBVaIUizCdpvwtjNcZO40780759;     UhVznWnQqTPrBVaIUizCdpvwtjNcZO40780759 = UhVznWnQqTPrBVaIUizCdpvwtjNcZO95176093;     UhVznWnQqTPrBVaIUizCdpvwtjNcZO95176093 = UhVznWnQqTPrBVaIUizCdpvwtjNcZO89422739;     UhVznWnQqTPrBVaIUizCdpvwtjNcZO89422739 = UhVznWnQqTPrBVaIUizCdpvwtjNcZO73231003;     UhVznWnQqTPrBVaIUizCdpvwtjNcZO73231003 = UhVznWnQqTPrBVaIUizCdpvwtjNcZO23423698;     UhVznWnQqTPrBVaIUizCdpvwtjNcZO23423698 = UhVznWnQqTPrBVaIUizCdpvwtjNcZO98881661;     UhVznWnQqTPrBVaIUizCdpvwtjNcZO98881661 = UhVznWnQqTPrBVaIUizCdpvwtjNcZO42031252;     UhVznWnQqTPrBVaIUizCdpvwtjNcZO42031252 = UhVznWnQqTPrBVaIUizCdpvwtjNcZO66713787;     UhVznWnQqTPrBVaIUizCdpvwtjNcZO66713787 = UhVznWnQqTPrBVaIUizCdpvwtjNcZO10759660;     UhVznWnQqTPrBVaIUizCdpvwtjNcZO10759660 = UhVznWnQqTPrBVaIUizCdpvwtjNcZO71096818;     UhVznWnQqTPrBVaIUizCdpvwtjNcZO71096818 = UhVznWnQqTPrBVaIUizCdpvwtjNcZO94328414;     UhVznWnQqTPrBVaIUizCdpvwtjNcZO94328414 = UhVznWnQqTPrBVaIUizCdpvwtjNcZO10290728;     UhVznWnQqTPrBVaIUizCdpvwtjNcZO10290728 = UhVznWnQqTPrBVaIUizCdpvwtjNcZO61620508;     UhVznWnQqTPrBVaIUizCdpvwtjNcZO61620508 = UhVznWnQqTPrBVaIUizCdpvwtjNcZO42918338;     UhVznWnQqTPrBVaIUizCdpvwtjNcZO42918338 = UhVznWnQqTPrBVaIUizCdpvwtjNcZO46559563;     UhVznWnQqTPrBVaIUizCdpvwtjNcZO46559563 = UhVznWnQqTPrBVaIUizCdpvwtjNcZO11332442;     UhVznWnQqTPrBVaIUizCdpvwtjNcZO11332442 = UhVznWnQqTPrBVaIUizCdpvwtjNcZO2172505;     UhVznWnQqTPrBVaIUizCdpvwtjNcZO2172505 = UhVznWnQqTPrBVaIUizCdpvwtjNcZO30480402;     UhVznWnQqTPrBVaIUizCdpvwtjNcZO30480402 = UhVznWnQqTPrBVaIUizCdpvwtjNcZO9564643;     UhVznWnQqTPrBVaIUizCdpvwtjNcZO9564643 = UhVznWnQqTPrBVaIUizCdpvwtjNcZO6862746;     UhVznWnQqTPrBVaIUizCdpvwtjNcZO6862746 = UhVznWnQqTPrBVaIUizCdpvwtjNcZO92878954;     UhVznWnQqTPrBVaIUizCdpvwtjNcZO92878954 = UhVznWnQqTPrBVaIUizCdpvwtjNcZO52015746;     UhVznWnQqTPrBVaIUizCdpvwtjNcZO52015746 = UhVznWnQqTPrBVaIUizCdpvwtjNcZO10886093;     UhVznWnQqTPrBVaIUizCdpvwtjNcZO10886093 = UhVznWnQqTPrBVaIUizCdpvwtjNcZO86931963;     UhVznWnQqTPrBVaIUizCdpvwtjNcZO86931963 = UhVznWnQqTPrBVaIUizCdpvwtjNcZO97274455;     UhVznWnQqTPrBVaIUizCdpvwtjNcZO97274455 = UhVznWnQqTPrBVaIUizCdpvwtjNcZO45284243;     UhVznWnQqTPrBVaIUizCdpvwtjNcZO45284243 = UhVznWnQqTPrBVaIUizCdpvwtjNcZO88743129;     UhVznWnQqTPrBVaIUizCdpvwtjNcZO88743129 = UhVznWnQqTPrBVaIUizCdpvwtjNcZO27296464;     UhVznWnQqTPrBVaIUizCdpvwtjNcZO27296464 = UhVznWnQqTPrBVaIUizCdpvwtjNcZO31109007;     UhVznWnQqTPrBVaIUizCdpvwtjNcZO31109007 = UhVznWnQqTPrBVaIUizCdpvwtjNcZO63195800;     UhVznWnQqTPrBVaIUizCdpvwtjNcZO63195800 = UhVznWnQqTPrBVaIUizCdpvwtjNcZO87989255;     UhVznWnQqTPrBVaIUizCdpvwtjNcZO87989255 = UhVznWnQqTPrBVaIUizCdpvwtjNcZO79407864;     UhVznWnQqTPrBVaIUizCdpvwtjNcZO79407864 = UhVznWnQqTPrBVaIUizCdpvwtjNcZO66787434;     UhVznWnQqTPrBVaIUizCdpvwtjNcZO66787434 = UhVznWnQqTPrBVaIUizCdpvwtjNcZO13078627;     UhVznWnQqTPrBVaIUizCdpvwtjNcZO13078627 = UhVznWnQqTPrBVaIUizCdpvwtjNcZO56207359;     UhVznWnQqTPrBVaIUizCdpvwtjNcZO56207359 = UhVznWnQqTPrBVaIUizCdpvwtjNcZO40758727;     UhVznWnQqTPrBVaIUizCdpvwtjNcZO40758727 = UhVznWnQqTPrBVaIUizCdpvwtjNcZO30786933;     UhVznWnQqTPrBVaIUizCdpvwtjNcZO30786933 = UhVznWnQqTPrBVaIUizCdpvwtjNcZO22791868;     UhVznWnQqTPrBVaIUizCdpvwtjNcZO22791868 = UhVznWnQqTPrBVaIUizCdpvwtjNcZO95644075;     UhVznWnQqTPrBVaIUizCdpvwtjNcZO95644075 = UhVznWnQqTPrBVaIUizCdpvwtjNcZO69357662;     UhVznWnQqTPrBVaIUizCdpvwtjNcZO69357662 = UhVznWnQqTPrBVaIUizCdpvwtjNcZO4398173;     UhVznWnQqTPrBVaIUizCdpvwtjNcZO4398173 = UhVznWnQqTPrBVaIUizCdpvwtjNcZO31311032;     UhVznWnQqTPrBVaIUizCdpvwtjNcZO31311032 = UhVznWnQqTPrBVaIUizCdpvwtjNcZO83390387;     UhVznWnQqTPrBVaIUizCdpvwtjNcZO83390387 = UhVznWnQqTPrBVaIUizCdpvwtjNcZO30951535;     UhVznWnQqTPrBVaIUizCdpvwtjNcZO30951535 = UhVznWnQqTPrBVaIUizCdpvwtjNcZO55158322;     UhVznWnQqTPrBVaIUizCdpvwtjNcZO55158322 = UhVznWnQqTPrBVaIUizCdpvwtjNcZO39103339;     UhVznWnQqTPrBVaIUizCdpvwtjNcZO39103339 = UhVznWnQqTPrBVaIUizCdpvwtjNcZO40923757;     UhVznWnQqTPrBVaIUizCdpvwtjNcZO40923757 = UhVznWnQqTPrBVaIUizCdpvwtjNcZO45587706;     UhVznWnQqTPrBVaIUizCdpvwtjNcZO45587706 = UhVznWnQqTPrBVaIUizCdpvwtjNcZO1950760;     UhVznWnQqTPrBVaIUizCdpvwtjNcZO1950760 = UhVznWnQqTPrBVaIUizCdpvwtjNcZO91574589;     UhVznWnQqTPrBVaIUizCdpvwtjNcZO91574589 = UhVznWnQqTPrBVaIUizCdpvwtjNcZO70604954;     UhVznWnQqTPrBVaIUizCdpvwtjNcZO70604954 = UhVznWnQqTPrBVaIUizCdpvwtjNcZO25026636;     UhVznWnQqTPrBVaIUizCdpvwtjNcZO25026636 = UhVznWnQqTPrBVaIUizCdpvwtjNcZO86072552;     UhVznWnQqTPrBVaIUizCdpvwtjNcZO86072552 = UhVznWnQqTPrBVaIUizCdpvwtjNcZO19907394;     UhVznWnQqTPrBVaIUizCdpvwtjNcZO19907394 = UhVznWnQqTPrBVaIUizCdpvwtjNcZO59866620;     UhVznWnQqTPrBVaIUizCdpvwtjNcZO59866620 = UhVznWnQqTPrBVaIUizCdpvwtjNcZO88765012;     UhVznWnQqTPrBVaIUizCdpvwtjNcZO88765012 = UhVznWnQqTPrBVaIUizCdpvwtjNcZO84290001;     UhVznWnQqTPrBVaIUizCdpvwtjNcZO84290001 = UhVznWnQqTPrBVaIUizCdpvwtjNcZO2490776;     UhVznWnQqTPrBVaIUizCdpvwtjNcZO2490776 = UhVznWnQqTPrBVaIUizCdpvwtjNcZO75956548;     UhVznWnQqTPrBVaIUizCdpvwtjNcZO75956548 = UhVznWnQqTPrBVaIUizCdpvwtjNcZO78139455;     UhVznWnQqTPrBVaIUizCdpvwtjNcZO78139455 = UhVznWnQqTPrBVaIUizCdpvwtjNcZO10138532;     UhVznWnQqTPrBVaIUizCdpvwtjNcZO10138532 = UhVznWnQqTPrBVaIUizCdpvwtjNcZO14734789;     UhVznWnQqTPrBVaIUizCdpvwtjNcZO14734789 = UhVznWnQqTPrBVaIUizCdpvwtjNcZO35604780;     UhVznWnQqTPrBVaIUizCdpvwtjNcZO35604780 = UhVznWnQqTPrBVaIUizCdpvwtjNcZO47563859;     UhVznWnQqTPrBVaIUizCdpvwtjNcZO47563859 = UhVznWnQqTPrBVaIUizCdpvwtjNcZO83107563;     UhVznWnQqTPrBVaIUizCdpvwtjNcZO83107563 = UhVznWnQqTPrBVaIUizCdpvwtjNcZO14920551;     UhVznWnQqTPrBVaIUizCdpvwtjNcZO14920551 = UhVznWnQqTPrBVaIUizCdpvwtjNcZO43503294;     UhVznWnQqTPrBVaIUizCdpvwtjNcZO43503294 = UhVznWnQqTPrBVaIUizCdpvwtjNcZO48541881;     UhVznWnQqTPrBVaIUizCdpvwtjNcZO48541881 = UhVznWnQqTPrBVaIUizCdpvwtjNcZO86710979;     UhVznWnQqTPrBVaIUizCdpvwtjNcZO86710979 = UhVznWnQqTPrBVaIUizCdpvwtjNcZO5800837;     UhVznWnQqTPrBVaIUizCdpvwtjNcZO5800837 = UhVznWnQqTPrBVaIUizCdpvwtjNcZO80545508;     UhVznWnQqTPrBVaIUizCdpvwtjNcZO80545508 = UhVznWnQqTPrBVaIUizCdpvwtjNcZO79380637;     UhVznWnQqTPrBVaIUizCdpvwtjNcZO79380637 = UhVznWnQqTPrBVaIUizCdpvwtjNcZO34836326;     UhVznWnQqTPrBVaIUizCdpvwtjNcZO34836326 = UhVznWnQqTPrBVaIUizCdpvwtjNcZO40206980;     UhVznWnQqTPrBVaIUizCdpvwtjNcZO40206980 = UhVznWnQqTPrBVaIUizCdpvwtjNcZO2464574;     UhVznWnQqTPrBVaIUizCdpvwtjNcZO2464574 = UhVznWnQqTPrBVaIUizCdpvwtjNcZO61567922;     UhVznWnQqTPrBVaIUizCdpvwtjNcZO61567922 = UhVznWnQqTPrBVaIUizCdpvwtjNcZO68625359;     UhVznWnQqTPrBVaIUizCdpvwtjNcZO68625359 = UhVznWnQqTPrBVaIUizCdpvwtjNcZO79934558;     UhVznWnQqTPrBVaIUizCdpvwtjNcZO79934558 = UhVznWnQqTPrBVaIUizCdpvwtjNcZO31773642;     UhVznWnQqTPrBVaIUizCdpvwtjNcZO31773642 = UhVznWnQqTPrBVaIUizCdpvwtjNcZO58171116;     UhVznWnQqTPrBVaIUizCdpvwtjNcZO58171116 = UhVznWnQqTPrBVaIUizCdpvwtjNcZO4360486;     UhVznWnQqTPrBVaIUizCdpvwtjNcZO4360486 = UhVznWnQqTPrBVaIUizCdpvwtjNcZO43155424;     UhVznWnQqTPrBVaIUizCdpvwtjNcZO43155424 = UhVznWnQqTPrBVaIUizCdpvwtjNcZO25345704;     UhVznWnQqTPrBVaIUizCdpvwtjNcZO25345704 = UhVznWnQqTPrBVaIUizCdpvwtjNcZO39534418;     UhVznWnQqTPrBVaIUizCdpvwtjNcZO39534418 = UhVznWnQqTPrBVaIUizCdpvwtjNcZO92590846;     UhVznWnQqTPrBVaIUizCdpvwtjNcZO92590846 = UhVznWnQqTPrBVaIUizCdpvwtjNcZO62962619;     UhVznWnQqTPrBVaIUizCdpvwtjNcZO62962619 = UhVznWnQqTPrBVaIUizCdpvwtjNcZO93335311;     UhVznWnQqTPrBVaIUizCdpvwtjNcZO93335311 = UhVznWnQqTPrBVaIUizCdpvwtjNcZO46880041;     UhVznWnQqTPrBVaIUizCdpvwtjNcZO46880041 = UhVznWnQqTPrBVaIUizCdpvwtjNcZO53212007;     UhVznWnQqTPrBVaIUizCdpvwtjNcZO53212007 = UhVznWnQqTPrBVaIUizCdpvwtjNcZO67442347;     UhVznWnQqTPrBVaIUizCdpvwtjNcZO67442347 = UhVznWnQqTPrBVaIUizCdpvwtjNcZO56468726;     UhVznWnQqTPrBVaIUizCdpvwtjNcZO56468726 = UhVznWnQqTPrBVaIUizCdpvwtjNcZO28296158;     UhVznWnQqTPrBVaIUizCdpvwtjNcZO28296158 = UhVznWnQqTPrBVaIUizCdpvwtjNcZO46835320;     UhVznWnQqTPrBVaIUizCdpvwtjNcZO46835320 = UhVznWnQqTPrBVaIUizCdpvwtjNcZO48510323;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void kHaqcErOTTaRQFSlPwNqHGfvx98110770() {     double rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW70332544 = -275664508;    double rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW64374835 = -731188422;    double rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW18504730 = -60920311;    double rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW86882183 = -152015406;    double rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW55771526 = -483159109;    double rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW50788455 = -485259478;    double rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW81766159 = -620702637;    double rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW27643388 = 43419648;    double rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW91699733 = 30405212;    double rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW50705965 = -222574405;    double rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW44147272 = -598108544;    double rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW39605581 = -981861716;    double rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW31870604 = -534566294;    double rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW8997720 = -857983383;    double rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW61971582 = -422320625;    double rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW58730385 = -150495515;    double rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW64545878 = -304539041;    double rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW56853717 = -700184735;    double rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW14927952 = 74774221;    double rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW42730151 = -713356579;    double rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW72624 = -536438958;    double rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW10961542 = -259182500;    double rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW20803846 = -919213165;    double rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW39450127 = -426818927;    double rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW4411069 = -954122987;    double rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW99140496 = -722482390;    double rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW79899349 = -305209654;    double rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW28458780 = -627010604;    double rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW99912658 = -704090139;    double rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW56703170 = -327585575;    double rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW38097229 = -93772793;    double rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW16165781 = -233235615;    double rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW70603707 = -167861023;    double rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW61282247 = -317821145;    double rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW8130676 = -959169845;    double rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW685967 = -123549628;    double rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW6278058 = -908804015;    double rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW91927117 = -857064383;    double rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW39788310 = -411618143;    double rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW79458080 = -4552545;    double rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW67454473 = -427244689;    double rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW72709530 = 815706;    double rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW88126126 = -912202103;    double rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW78881792 = 18259497;    double rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW2707680 = -865535051;    double rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW34850555 = -389873529;    double rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW95025773 = -65975711;    double rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW86237924 = 61999405;    double rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW38375124 = -662949292;    double rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW99437863 = -655245764;    double rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW19413354 = -439842930;    double rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW51546986 = -805048448;    double rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW30326203 = -390349036;    double rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW68948879 = -557639806;    double rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW98038147 = -641572972;    double rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW59371003 = 83517992;    double rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW43570989 = -811975258;    double rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW79054603 = -634101385;    double rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW82471115 = -197892420;    double rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW56631030 = -760676719;    double rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW70889105 = -80049824;    double rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW53307379 = -993692034;    double rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW27730729 = -252490214;    double rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW34996564 = -642009213;    double rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW12608736 = -28801612;    double rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW27981491 = -264872930;    double rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW69001874 = -714000693;    double rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW70588357 = -116745149;    double rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW867044 = -898813538;    double rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW61285615 = -198770998;    double rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW52452328 = -241691500;    double rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW72618761 = -447474659;    double rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW17065408 = -188566592;    double rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW35469871 = -920673234;    double rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW75275678 = -186111891;    double rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW27363093 = -437254664;    double rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW22835416 = -346980398;    double rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW41922054 = -837472662;    double rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW36742448 = -561283876;    double rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW69560513 = -464249459;    double rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW4114723 = -556506680;    double rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW93661425 = -267209059;    double rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW90083655 = -964061313;    double rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW474796 = 51155625;    double rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW37289816 = -887742646;    double rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW86550243 = -288724346;    double rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW85839577 = -842886579;    double rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW1654829 = -610221218;    double rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW63244099 = -676248174;    double rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW48759673 = -942687838;    double rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW57114978 = -311574370;    double rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW27223454 = -174702631;    double rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW9456002 = -559171964;    double rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW83157280 = -650941425;    double rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW8568975 = -924502722;    double rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW14147094 = -433552656;    double rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW44978802 = -746694080;    double rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW53129562 = -170192890;    double rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW66273056 = -952938891;    double rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW74726188 = -275664508;     rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW70332544 = rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW64374835;     rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW64374835 = rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW18504730;     rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW18504730 = rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW86882183;     rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW86882183 = rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW55771526;     rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW55771526 = rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW50788455;     rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW50788455 = rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW81766159;     rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW81766159 = rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW27643388;     rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW27643388 = rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW91699733;     rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW91699733 = rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW50705965;     rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW50705965 = rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW44147272;     rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW44147272 = rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW39605581;     rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW39605581 = rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW31870604;     rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW31870604 = rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW8997720;     rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW8997720 = rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW61971582;     rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW61971582 = rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW58730385;     rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW58730385 = rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW64545878;     rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW64545878 = rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW56853717;     rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW56853717 = rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW14927952;     rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW14927952 = rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW42730151;     rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW42730151 = rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW72624;     rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW72624 = rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW10961542;     rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW10961542 = rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW20803846;     rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW20803846 = rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW39450127;     rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW39450127 = rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW4411069;     rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW4411069 = rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW99140496;     rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW99140496 = rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW79899349;     rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW79899349 = rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW28458780;     rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW28458780 = rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW99912658;     rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW99912658 = rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW56703170;     rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW56703170 = rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW38097229;     rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW38097229 = rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW16165781;     rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW16165781 = rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW70603707;     rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW70603707 = rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW61282247;     rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW61282247 = rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW8130676;     rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW8130676 = rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW685967;     rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW685967 = rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW6278058;     rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW6278058 = rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW91927117;     rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW91927117 = rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW39788310;     rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW39788310 = rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW79458080;     rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW79458080 = rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW67454473;     rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW67454473 = rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW72709530;     rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW72709530 = rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW88126126;     rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW88126126 = rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW78881792;     rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW78881792 = rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW2707680;     rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW2707680 = rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW34850555;     rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW34850555 = rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW95025773;     rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW95025773 = rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW86237924;     rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW86237924 = rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW38375124;     rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW38375124 = rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW99437863;     rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW99437863 = rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW19413354;     rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW19413354 = rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW51546986;     rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW51546986 = rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW30326203;     rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW30326203 = rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW68948879;     rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW68948879 = rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW98038147;     rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW98038147 = rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW59371003;     rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW59371003 = rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW43570989;     rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW43570989 = rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW79054603;     rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW79054603 = rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW82471115;     rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW82471115 = rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW56631030;     rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW56631030 = rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW70889105;     rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW70889105 = rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW53307379;     rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW53307379 = rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW27730729;     rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW27730729 = rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW34996564;     rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW34996564 = rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW12608736;     rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW12608736 = rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW27981491;     rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW27981491 = rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW69001874;     rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW69001874 = rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW70588357;     rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW70588357 = rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW867044;     rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW867044 = rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW61285615;     rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW61285615 = rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW52452328;     rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW52452328 = rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW72618761;     rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW72618761 = rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW17065408;     rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW17065408 = rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW35469871;     rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW35469871 = rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW75275678;     rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW75275678 = rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW27363093;     rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW27363093 = rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW22835416;     rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW22835416 = rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW41922054;     rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW41922054 = rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW36742448;     rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW36742448 = rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW69560513;     rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW69560513 = rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW4114723;     rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW4114723 = rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW93661425;     rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW93661425 = rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW90083655;     rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW90083655 = rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW474796;     rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW474796 = rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW37289816;     rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW37289816 = rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW86550243;     rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW86550243 = rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW85839577;     rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW85839577 = rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW1654829;     rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW1654829 = rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW63244099;     rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW63244099 = rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW48759673;     rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW48759673 = rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW57114978;     rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW57114978 = rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW27223454;     rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW27223454 = rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW9456002;     rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW9456002 = rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW83157280;     rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW83157280 = rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW8568975;     rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW8568975 = rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW14147094;     rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW14147094 = rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW44978802;     rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW44978802 = rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW53129562;     rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW53129562 = rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW66273056;     rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW66273056 = rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW74726188;     rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW74726188 = rqnFsNtYaIFQIBZzWXFuAIFhXNKNCW70332544;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void UkOAcKghxHKLYGqusktmCFuad59958029() {     double wZzsrMXrjYHTGGCwaMPQbZkYihSxxn21496627 = -98254850;    double wZzsrMXrjYHTGGCwaMPQbZkYihSxxn95741437 = -184739101;    double wZzsrMXrjYHTGGCwaMPQbZkYihSxxn85576293 = -722971997;    double wZzsrMXrjYHTGGCwaMPQbZkYihSxxn63405903 = 12797977;    double wZzsrMXrjYHTGGCwaMPQbZkYihSxxn3295638 = 54640996;    double wZzsrMXrjYHTGGCwaMPQbZkYihSxxn19612441 = -494654296;    double wZzsrMXrjYHTGGCwaMPQbZkYihSxxn60955184 = -389781518;    double wZzsrMXrjYHTGGCwaMPQbZkYihSxxn26877687 = -422121427;    double wZzsrMXrjYHTGGCwaMPQbZkYihSxxn25098483 = -675688947;    double wZzsrMXrjYHTGGCwaMPQbZkYihSxxn85662243 = -528504323;    double wZzsrMXrjYHTGGCwaMPQbZkYihSxxn93134984 = -78436389;    double wZzsrMXrjYHTGGCwaMPQbZkYihSxxn24532570 = -504757892;    double wZzsrMXrjYHTGGCwaMPQbZkYihSxxn16885074 = -84721499;    double wZzsrMXrjYHTGGCwaMPQbZkYihSxxn45961373 = -52185022;    double wZzsrMXrjYHTGGCwaMPQbZkYihSxxn19681468 = -162125392;    double wZzsrMXrjYHTGGCwaMPQbZkYihSxxn48737018 = -255674120;    double wZzsrMXrjYHTGGCwaMPQbZkYihSxxn19994870 = -600793199;    double wZzsrMXrjYHTGGCwaMPQbZkYihSxxn22086059 = 70188922;    double wZzsrMXrjYHTGGCwaMPQbZkYihSxxn58285663 = 90844240;    double wZzsrMXrjYHTGGCwaMPQbZkYihSxxn37126847 = -174259782;    double wZzsrMXrjYHTGGCwaMPQbZkYihSxxn81760578 = -70304893;    double wZzsrMXrjYHTGGCwaMPQbZkYihSxxn92264021 = -508640243;    double wZzsrMXrjYHTGGCwaMPQbZkYihSxxn65209838 = -366355217;    double wZzsrMXrjYHTGGCwaMPQbZkYihSxxn86528320 = -25437409;    double wZzsrMXrjYHTGGCwaMPQbZkYihSxxn42660036 = -515809124;    double wZzsrMXrjYHTGGCwaMPQbZkYihSxxn74692846 = -859589402;    double wZzsrMXrjYHTGGCwaMPQbZkYihSxxn14896750 = -837635636;    double wZzsrMXrjYHTGGCwaMPQbZkYihSxxn91659905 = -595302058;    double wZzsrMXrjYHTGGCwaMPQbZkYihSxxn28345531 = -722748154;    double wZzsrMXrjYHTGGCwaMPQbZkYihSxxn39438022 = -920836072;    double wZzsrMXrjYHTGGCwaMPQbZkYihSxxn15603177 = -38160090;    double wZzsrMXrjYHTGGCwaMPQbZkYihSxxn75269503 = -72649044;    double wZzsrMXrjYHTGGCwaMPQbZkYihSxxn98430234 = -165447513;    double wZzsrMXrjYHTGGCwaMPQbZkYihSxxn68739226 = -306792821;    double wZzsrMXrjYHTGGCwaMPQbZkYihSxxn93298690 = -421355593;    double wZzsrMXrjYHTGGCwaMPQbZkYihSxxn53097857 = -138504806;    double wZzsrMXrjYHTGGCwaMPQbZkYihSxxn17510196 = -869481283;    double wZzsrMXrjYHTGGCwaMPQbZkYihSxxn12990170 = -549756712;    double wZzsrMXrjYHTGGCwaMPQbZkYihSxxn56949064 = -940976203;    double wZzsrMXrjYHTGGCwaMPQbZkYihSxxn68898321 = -553924870;    double wZzsrMXrjYHTGGCwaMPQbZkYihSxxn49612703 = -565308967;    double wZzsrMXrjYHTGGCwaMPQbZkYihSxxn46426371 = -111053384;    double wZzsrMXrjYHTGGCwaMPQbZkYihSxxn46809925 = -428545120;    double wZzsrMXrjYHTGGCwaMPQbZkYihSxxn79700248 = -475536144;    double wZzsrMXrjYHTGGCwaMPQbZkYihSxxn70687483 = -116836687;    double wZzsrMXrjYHTGGCwaMPQbZkYihSxxn8079168 = -147013275;    double wZzsrMXrjYHTGGCwaMPQbZkYihSxxn22260475 = -612194054;    double wZzsrMXrjYHTGGCwaMPQbZkYihSxxn77847047 = -933127645;    double wZzsrMXrjYHTGGCwaMPQbZkYihSxxn58656153 = -426065607;    double wZzsrMXrjYHTGGCwaMPQbZkYihSxxn27103277 = 61683044;    double wZzsrMXrjYHTGGCwaMPQbZkYihSxxn52945218 = -515715141;    double wZzsrMXrjYHTGGCwaMPQbZkYihSxxn20611403 = -443352555;    double wZzsrMXrjYHTGGCwaMPQbZkYihSxxn41921759 = -318200142;    double wZzsrMXrjYHTGGCwaMPQbZkYihSxxn16996968 = -619687220;    double wZzsrMXrjYHTGGCwaMPQbZkYihSxxn78197450 = -248653085;    double wZzsrMXrjYHTGGCwaMPQbZkYihSxxn29232606 = -589614608;    double wZzsrMXrjYHTGGCwaMPQbZkYihSxxn30531600 = -818383884;    double wZzsrMXrjYHTGGCwaMPQbZkYihSxxn99047973 = -597534589;    double wZzsrMXrjYHTGGCwaMPQbZkYihSxxn20745867 = -471392899;    double wZzsrMXrjYHTGGCwaMPQbZkYihSxxn28602791 = -85769603;    double wZzsrMXrjYHTGGCwaMPQbZkYihSxxn4715692 = -657018660;    double wZzsrMXrjYHTGGCwaMPQbZkYihSxxn69295279 = -794479461;    double wZzsrMXrjYHTGGCwaMPQbZkYihSxxn98532155 = -699373273;    double wZzsrMXrjYHTGGCwaMPQbZkYihSxxn85660461 = -754852875;    double wZzsrMXrjYHTGGCwaMPQbZkYihSxxn70059067 = -390344234;    double wZzsrMXrjYHTGGCwaMPQbZkYihSxxn17865482 = 94212654;    double wZzsrMXrjYHTGGCwaMPQbZkYihSxxn26102336 = -239310379;    double wZzsrMXrjYHTGGCwaMPQbZkYihSxxn48145847 = -777928679;    double wZzsrMXrjYHTGGCwaMPQbZkYihSxxn52662683 = -630829430;    double wZzsrMXrjYHTGGCwaMPQbZkYihSxxn66583610 = 76379413;    double wZzsrMXrjYHTGGCwaMPQbZkYihSxxn31226823 = -386192838;    double wZzsrMXrjYHTGGCwaMPQbZkYihSxxn7004700 = 48963512;    double wZzsrMXrjYHTGGCwaMPQbZkYihSxxn65136995 = 11165125;    double wZzsrMXrjYHTGGCwaMPQbZkYihSxxn89387342 = -355230891;    double wZzsrMXrjYHTGGCwaMPQbZkYihSxxn87514144 = -608950816;    double wZzsrMXrjYHTGGCwaMPQbZkYihSxxn35334207 = -959251510;    double wZzsrMXrjYHTGGCwaMPQbZkYihSxxn45454096 = 19904877;    double wZzsrMXrjYHTGGCwaMPQbZkYihSxxn85509589 = -890819073;    double wZzsrMXrjYHTGGCwaMPQbZkYihSxxn15840837 = -908600722;    double wZzsrMXrjYHTGGCwaMPQbZkYihSxxn34580869 = -268795850;    double wZzsrMXrjYHTGGCwaMPQbZkYihSxxn52432372 = -147395348;    double wZzsrMXrjYHTGGCwaMPQbZkYihSxxn37049702 = -904507992;    double wZzsrMXrjYHTGGCwaMPQbZkYihSxxn33003752 = -69236452;    double wZzsrMXrjYHTGGCwaMPQbZkYihSxxn1242254 = -684431199;    double wZzsrMXrjYHTGGCwaMPQbZkYihSxxn86492803 = -305120931;    double wZzsrMXrjYHTGGCwaMPQbZkYihSxxn94991774 = -594807535;    double wZzsrMXrjYHTGGCwaMPQbZkYihSxxn33347745 = -754448903;    double wZzsrMXrjYHTGGCwaMPQbZkYihSxxn81433266 = -545760294;    double wZzsrMXrjYHTGGCwaMPQbZkYihSxxn90541775 = 41860263;    double wZzsrMXrjYHTGGCwaMPQbZkYihSxxn64066084 = -831740985;    double wZzsrMXrjYHTGGCwaMPQbZkYihSxxn22566258 = -320120922;    double wZzsrMXrjYHTGGCwaMPQbZkYihSxxn18462223 = -171946694;    double wZzsrMXrjYHTGGCwaMPQbZkYihSxxn92244303 = 21636186;    double wZzsrMXrjYHTGGCwaMPQbZkYihSxxn28346273 = -755206601;    double wZzsrMXrjYHTGGCwaMPQbZkYihSxxn64182629 = -896906210;    double wZzsrMXrjYHTGGCwaMPQbZkYihSxxn80317423 = -770829506;    double wZzsrMXrjYHTGGCwaMPQbZkYihSxxn47894215 = -411680111;    double wZzsrMXrjYHTGGCwaMPQbZkYihSxxn61149463 = -673692245;    double wZzsrMXrjYHTGGCwaMPQbZkYihSxxn9641182 = 14808089;    double wZzsrMXrjYHTGGCwaMPQbZkYihSxxn52822002 = -98254850;     wZzsrMXrjYHTGGCwaMPQbZkYihSxxn21496627 = wZzsrMXrjYHTGGCwaMPQbZkYihSxxn95741437;     wZzsrMXrjYHTGGCwaMPQbZkYihSxxn95741437 = wZzsrMXrjYHTGGCwaMPQbZkYihSxxn85576293;     wZzsrMXrjYHTGGCwaMPQbZkYihSxxn85576293 = wZzsrMXrjYHTGGCwaMPQbZkYihSxxn63405903;     wZzsrMXrjYHTGGCwaMPQbZkYihSxxn63405903 = wZzsrMXrjYHTGGCwaMPQbZkYihSxxn3295638;     wZzsrMXrjYHTGGCwaMPQbZkYihSxxn3295638 = wZzsrMXrjYHTGGCwaMPQbZkYihSxxn19612441;     wZzsrMXrjYHTGGCwaMPQbZkYihSxxn19612441 = wZzsrMXrjYHTGGCwaMPQbZkYihSxxn60955184;     wZzsrMXrjYHTGGCwaMPQbZkYihSxxn60955184 = wZzsrMXrjYHTGGCwaMPQbZkYihSxxn26877687;     wZzsrMXrjYHTGGCwaMPQbZkYihSxxn26877687 = wZzsrMXrjYHTGGCwaMPQbZkYihSxxn25098483;     wZzsrMXrjYHTGGCwaMPQbZkYihSxxn25098483 = wZzsrMXrjYHTGGCwaMPQbZkYihSxxn85662243;     wZzsrMXrjYHTGGCwaMPQbZkYihSxxn85662243 = wZzsrMXrjYHTGGCwaMPQbZkYihSxxn93134984;     wZzsrMXrjYHTGGCwaMPQbZkYihSxxn93134984 = wZzsrMXrjYHTGGCwaMPQbZkYihSxxn24532570;     wZzsrMXrjYHTGGCwaMPQbZkYihSxxn24532570 = wZzsrMXrjYHTGGCwaMPQbZkYihSxxn16885074;     wZzsrMXrjYHTGGCwaMPQbZkYihSxxn16885074 = wZzsrMXrjYHTGGCwaMPQbZkYihSxxn45961373;     wZzsrMXrjYHTGGCwaMPQbZkYihSxxn45961373 = wZzsrMXrjYHTGGCwaMPQbZkYihSxxn19681468;     wZzsrMXrjYHTGGCwaMPQbZkYihSxxn19681468 = wZzsrMXrjYHTGGCwaMPQbZkYihSxxn48737018;     wZzsrMXrjYHTGGCwaMPQbZkYihSxxn48737018 = wZzsrMXrjYHTGGCwaMPQbZkYihSxxn19994870;     wZzsrMXrjYHTGGCwaMPQbZkYihSxxn19994870 = wZzsrMXrjYHTGGCwaMPQbZkYihSxxn22086059;     wZzsrMXrjYHTGGCwaMPQbZkYihSxxn22086059 = wZzsrMXrjYHTGGCwaMPQbZkYihSxxn58285663;     wZzsrMXrjYHTGGCwaMPQbZkYihSxxn58285663 = wZzsrMXrjYHTGGCwaMPQbZkYihSxxn37126847;     wZzsrMXrjYHTGGCwaMPQbZkYihSxxn37126847 = wZzsrMXrjYHTGGCwaMPQbZkYihSxxn81760578;     wZzsrMXrjYHTGGCwaMPQbZkYihSxxn81760578 = wZzsrMXrjYHTGGCwaMPQbZkYihSxxn92264021;     wZzsrMXrjYHTGGCwaMPQbZkYihSxxn92264021 = wZzsrMXrjYHTGGCwaMPQbZkYihSxxn65209838;     wZzsrMXrjYHTGGCwaMPQbZkYihSxxn65209838 = wZzsrMXrjYHTGGCwaMPQbZkYihSxxn86528320;     wZzsrMXrjYHTGGCwaMPQbZkYihSxxn86528320 = wZzsrMXrjYHTGGCwaMPQbZkYihSxxn42660036;     wZzsrMXrjYHTGGCwaMPQbZkYihSxxn42660036 = wZzsrMXrjYHTGGCwaMPQbZkYihSxxn74692846;     wZzsrMXrjYHTGGCwaMPQbZkYihSxxn74692846 = wZzsrMXrjYHTGGCwaMPQbZkYihSxxn14896750;     wZzsrMXrjYHTGGCwaMPQbZkYihSxxn14896750 = wZzsrMXrjYHTGGCwaMPQbZkYihSxxn91659905;     wZzsrMXrjYHTGGCwaMPQbZkYihSxxn91659905 = wZzsrMXrjYHTGGCwaMPQbZkYihSxxn28345531;     wZzsrMXrjYHTGGCwaMPQbZkYihSxxn28345531 = wZzsrMXrjYHTGGCwaMPQbZkYihSxxn39438022;     wZzsrMXrjYHTGGCwaMPQbZkYihSxxn39438022 = wZzsrMXrjYHTGGCwaMPQbZkYihSxxn15603177;     wZzsrMXrjYHTGGCwaMPQbZkYihSxxn15603177 = wZzsrMXrjYHTGGCwaMPQbZkYihSxxn75269503;     wZzsrMXrjYHTGGCwaMPQbZkYihSxxn75269503 = wZzsrMXrjYHTGGCwaMPQbZkYihSxxn98430234;     wZzsrMXrjYHTGGCwaMPQbZkYihSxxn98430234 = wZzsrMXrjYHTGGCwaMPQbZkYihSxxn68739226;     wZzsrMXrjYHTGGCwaMPQbZkYihSxxn68739226 = wZzsrMXrjYHTGGCwaMPQbZkYihSxxn93298690;     wZzsrMXrjYHTGGCwaMPQbZkYihSxxn93298690 = wZzsrMXrjYHTGGCwaMPQbZkYihSxxn53097857;     wZzsrMXrjYHTGGCwaMPQbZkYihSxxn53097857 = wZzsrMXrjYHTGGCwaMPQbZkYihSxxn17510196;     wZzsrMXrjYHTGGCwaMPQbZkYihSxxn17510196 = wZzsrMXrjYHTGGCwaMPQbZkYihSxxn12990170;     wZzsrMXrjYHTGGCwaMPQbZkYihSxxn12990170 = wZzsrMXrjYHTGGCwaMPQbZkYihSxxn56949064;     wZzsrMXrjYHTGGCwaMPQbZkYihSxxn56949064 = wZzsrMXrjYHTGGCwaMPQbZkYihSxxn68898321;     wZzsrMXrjYHTGGCwaMPQbZkYihSxxn68898321 = wZzsrMXrjYHTGGCwaMPQbZkYihSxxn49612703;     wZzsrMXrjYHTGGCwaMPQbZkYihSxxn49612703 = wZzsrMXrjYHTGGCwaMPQbZkYihSxxn46426371;     wZzsrMXrjYHTGGCwaMPQbZkYihSxxn46426371 = wZzsrMXrjYHTGGCwaMPQbZkYihSxxn46809925;     wZzsrMXrjYHTGGCwaMPQbZkYihSxxn46809925 = wZzsrMXrjYHTGGCwaMPQbZkYihSxxn79700248;     wZzsrMXrjYHTGGCwaMPQbZkYihSxxn79700248 = wZzsrMXrjYHTGGCwaMPQbZkYihSxxn70687483;     wZzsrMXrjYHTGGCwaMPQbZkYihSxxn70687483 = wZzsrMXrjYHTGGCwaMPQbZkYihSxxn8079168;     wZzsrMXrjYHTGGCwaMPQbZkYihSxxn8079168 = wZzsrMXrjYHTGGCwaMPQbZkYihSxxn22260475;     wZzsrMXrjYHTGGCwaMPQbZkYihSxxn22260475 = wZzsrMXrjYHTGGCwaMPQbZkYihSxxn77847047;     wZzsrMXrjYHTGGCwaMPQbZkYihSxxn77847047 = wZzsrMXrjYHTGGCwaMPQbZkYihSxxn58656153;     wZzsrMXrjYHTGGCwaMPQbZkYihSxxn58656153 = wZzsrMXrjYHTGGCwaMPQbZkYihSxxn27103277;     wZzsrMXrjYHTGGCwaMPQbZkYihSxxn27103277 = wZzsrMXrjYHTGGCwaMPQbZkYihSxxn52945218;     wZzsrMXrjYHTGGCwaMPQbZkYihSxxn52945218 = wZzsrMXrjYHTGGCwaMPQbZkYihSxxn20611403;     wZzsrMXrjYHTGGCwaMPQbZkYihSxxn20611403 = wZzsrMXrjYHTGGCwaMPQbZkYihSxxn41921759;     wZzsrMXrjYHTGGCwaMPQbZkYihSxxn41921759 = wZzsrMXrjYHTGGCwaMPQbZkYihSxxn16996968;     wZzsrMXrjYHTGGCwaMPQbZkYihSxxn16996968 = wZzsrMXrjYHTGGCwaMPQbZkYihSxxn78197450;     wZzsrMXrjYHTGGCwaMPQbZkYihSxxn78197450 = wZzsrMXrjYHTGGCwaMPQbZkYihSxxn29232606;     wZzsrMXrjYHTGGCwaMPQbZkYihSxxn29232606 = wZzsrMXrjYHTGGCwaMPQbZkYihSxxn30531600;     wZzsrMXrjYHTGGCwaMPQbZkYihSxxn30531600 = wZzsrMXrjYHTGGCwaMPQbZkYihSxxn99047973;     wZzsrMXrjYHTGGCwaMPQbZkYihSxxn99047973 = wZzsrMXrjYHTGGCwaMPQbZkYihSxxn20745867;     wZzsrMXrjYHTGGCwaMPQbZkYihSxxn20745867 = wZzsrMXrjYHTGGCwaMPQbZkYihSxxn28602791;     wZzsrMXrjYHTGGCwaMPQbZkYihSxxn28602791 = wZzsrMXrjYHTGGCwaMPQbZkYihSxxn4715692;     wZzsrMXrjYHTGGCwaMPQbZkYihSxxn4715692 = wZzsrMXrjYHTGGCwaMPQbZkYihSxxn69295279;     wZzsrMXrjYHTGGCwaMPQbZkYihSxxn69295279 = wZzsrMXrjYHTGGCwaMPQbZkYihSxxn98532155;     wZzsrMXrjYHTGGCwaMPQbZkYihSxxn98532155 = wZzsrMXrjYHTGGCwaMPQbZkYihSxxn85660461;     wZzsrMXrjYHTGGCwaMPQbZkYihSxxn85660461 = wZzsrMXrjYHTGGCwaMPQbZkYihSxxn70059067;     wZzsrMXrjYHTGGCwaMPQbZkYihSxxn70059067 = wZzsrMXrjYHTGGCwaMPQbZkYihSxxn17865482;     wZzsrMXrjYHTGGCwaMPQbZkYihSxxn17865482 = wZzsrMXrjYHTGGCwaMPQbZkYihSxxn26102336;     wZzsrMXrjYHTGGCwaMPQbZkYihSxxn26102336 = wZzsrMXrjYHTGGCwaMPQbZkYihSxxn48145847;     wZzsrMXrjYHTGGCwaMPQbZkYihSxxn48145847 = wZzsrMXrjYHTGGCwaMPQbZkYihSxxn52662683;     wZzsrMXrjYHTGGCwaMPQbZkYihSxxn52662683 = wZzsrMXrjYHTGGCwaMPQbZkYihSxxn66583610;     wZzsrMXrjYHTGGCwaMPQbZkYihSxxn66583610 = wZzsrMXrjYHTGGCwaMPQbZkYihSxxn31226823;     wZzsrMXrjYHTGGCwaMPQbZkYihSxxn31226823 = wZzsrMXrjYHTGGCwaMPQbZkYihSxxn7004700;     wZzsrMXrjYHTGGCwaMPQbZkYihSxxn7004700 = wZzsrMXrjYHTGGCwaMPQbZkYihSxxn65136995;     wZzsrMXrjYHTGGCwaMPQbZkYihSxxn65136995 = wZzsrMXrjYHTGGCwaMPQbZkYihSxxn89387342;     wZzsrMXrjYHTGGCwaMPQbZkYihSxxn89387342 = wZzsrMXrjYHTGGCwaMPQbZkYihSxxn87514144;     wZzsrMXrjYHTGGCwaMPQbZkYihSxxn87514144 = wZzsrMXrjYHTGGCwaMPQbZkYihSxxn35334207;     wZzsrMXrjYHTGGCwaMPQbZkYihSxxn35334207 = wZzsrMXrjYHTGGCwaMPQbZkYihSxxn45454096;     wZzsrMXrjYHTGGCwaMPQbZkYihSxxn45454096 = wZzsrMXrjYHTGGCwaMPQbZkYihSxxn85509589;     wZzsrMXrjYHTGGCwaMPQbZkYihSxxn85509589 = wZzsrMXrjYHTGGCwaMPQbZkYihSxxn15840837;     wZzsrMXrjYHTGGCwaMPQbZkYihSxxn15840837 = wZzsrMXrjYHTGGCwaMPQbZkYihSxxn34580869;     wZzsrMXrjYHTGGCwaMPQbZkYihSxxn34580869 = wZzsrMXrjYHTGGCwaMPQbZkYihSxxn52432372;     wZzsrMXrjYHTGGCwaMPQbZkYihSxxn52432372 = wZzsrMXrjYHTGGCwaMPQbZkYihSxxn37049702;     wZzsrMXrjYHTGGCwaMPQbZkYihSxxn37049702 = wZzsrMXrjYHTGGCwaMPQbZkYihSxxn33003752;     wZzsrMXrjYHTGGCwaMPQbZkYihSxxn33003752 = wZzsrMXrjYHTGGCwaMPQbZkYihSxxn1242254;     wZzsrMXrjYHTGGCwaMPQbZkYihSxxn1242254 = wZzsrMXrjYHTGGCwaMPQbZkYihSxxn86492803;     wZzsrMXrjYHTGGCwaMPQbZkYihSxxn86492803 = wZzsrMXrjYHTGGCwaMPQbZkYihSxxn94991774;     wZzsrMXrjYHTGGCwaMPQbZkYihSxxn94991774 = wZzsrMXrjYHTGGCwaMPQbZkYihSxxn33347745;     wZzsrMXrjYHTGGCwaMPQbZkYihSxxn33347745 = wZzsrMXrjYHTGGCwaMPQbZkYihSxxn81433266;     wZzsrMXrjYHTGGCwaMPQbZkYihSxxn81433266 = wZzsrMXrjYHTGGCwaMPQbZkYihSxxn90541775;     wZzsrMXrjYHTGGCwaMPQbZkYihSxxn90541775 = wZzsrMXrjYHTGGCwaMPQbZkYihSxxn64066084;     wZzsrMXrjYHTGGCwaMPQbZkYihSxxn64066084 = wZzsrMXrjYHTGGCwaMPQbZkYihSxxn22566258;     wZzsrMXrjYHTGGCwaMPQbZkYihSxxn22566258 = wZzsrMXrjYHTGGCwaMPQbZkYihSxxn18462223;     wZzsrMXrjYHTGGCwaMPQbZkYihSxxn18462223 = wZzsrMXrjYHTGGCwaMPQbZkYihSxxn92244303;     wZzsrMXrjYHTGGCwaMPQbZkYihSxxn92244303 = wZzsrMXrjYHTGGCwaMPQbZkYihSxxn28346273;     wZzsrMXrjYHTGGCwaMPQbZkYihSxxn28346273 = wZzsrMXrjYHTGGCwaMPQbZkYihSxxn64182629;     wZzsrMXrjYHTGGCwaMPQbZkYihSxxn64182629 = wZzsrMXrjYHTGGCwaMPQbZkYihSxxn80317423;     wZzsrMXrjYHTGGCwaMPQbZkYihSxxn80317423 = wZzsrMXrjYHTGGCwaMPQbZkYihSxxn47894215;     wZzsrMXrjYHTGGCwaMPQbZkYihSxxn47894215 = wZzsrMXrjYHTGGCwaMPQbZkYihSxxn61149463;     wZzsrMXrjYHTGGCwaMPQbZkYihSxxn61149463 = wZzsrMXrjYHTGGCwaMPQbZkYihSxxn9641182;     wZzsrMXrjYHTGGCwaMPQbZkYihSxxn9641182 = wZzsrMXrjYHTGGCwaMPQbZkYihSxxn52822002;     wZzsrMXrjYHTGGCwaMPQbZkYihSxxn52822002 = wZzsrMXrjYHTGGCwaMPQbZkYihSxxn21496627;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void XOnhqgisHmxZksxsuwPqOXOTb69562755() {     double BAvmnBvqHlnCFUzejoBHnhYdjihVOA43318848 = -666470182;    double BAvmnBvqHlnCFUzejoBHnhYdjihVOA57209242 = -567337954;    double BAvmnBvqHlnCFUzejoBHnhYdjihVOA31303564 = -770189529;    double BAvmnBvqHlnCFUzejoBHnhYdjihVOA94781049 = -191986198;    double BAvmnBvqHlnCFUzejoBHnhYdjihVOA63429968 = -922609926;    double BAvmnBvqHlnCFUzejoBHnhYdjihVOA43630756 = -506197454;    double BAvmnBvqHlnCFUzejoBHnhYdjihVOA89975768 = -453099642;    double BAvmnBvqHlnCFUzejoBHnhYdjihVOA13740316 = -430302275;    double BAvmnBvqHlnCFUzejoBHnhYdjihVOA21622123 = -661484365;    double BAvmnBvqHlnCFUzejoBHnhYdjihVOA46945469 = -398722720;    double BAvmnBvqHlnCFUzejoBHnhYdjihVOA64051253 = -734194092;    double BAvmnBvqHlnCFUzejoBHnhYdjihVOA40714453 = -607939498;    double BAvmnBvqHlnCFUzejoBHnhYdjihVOA49874016 = -622755288;    double BAvmnBvqHlnCFUzejoBHnhYdjihVOA12927841 = -902261819;    double BAvmnBvqHlnCFUzejoBHnhYdjihVOA14939263 = -88967311;    double BAvmnBvqHlnCFUzejoBHnhYdjihVOA96707744 = -698040661;    double BAvmnBvqHlnCFUzejoBHnhYdjihVOA13443930 = -986617917;    double BAvmnBvqHlnCFUzejoBHnhYdjihVOA84611362 = -951531996;    double BAvmnBvqHlnCFUzejoBHnhYdjihVOA62922887 = 17708583;    double BAvmnBvqHlnCFUzejoBHnhYdjihVOA18236490 = -665504838;    double BAvmnBvqHlnCFUzejoBHnhYdjihVOA38914864 = -902383596;    double BAvmnBvqHlnCFUzejoBHnhYdjihVOA56665999 = -579391407;    double BAvmnBvqHlnCFUzejoBHnhYdjihVOA74681242 = 77617428;    double BAvmnBvqHlnCFUzejoBHnhYdjihVOA23805942 = -435536274;    double BAvmnBvqHlnCFUzejoBHnhYdjihVOA16590704 = -426706097;    double BAvmnBvqHlnCFUzejoBHnhYdjihVOA64268700 = -86774930;    double BAvmnBvqHlnCFUzejoBHnhYdjihVOA87933353 = -364439681;    double BAvmnBvqHlnCFUzejoBHnhYdjihVOA27239731 = -459750291;    double BAvmnBvqHlnCFUzejoBHnhYdjihVOA76242443 = -389694072;    double BAvmnBvqHlnCFUzejoBHnhYdjihVOA85255099 = -197050267;    double BAvmnBvqHlnCFUzejoBHnhYdjihVOA66768442 = -443887837;    double BAvmnBvqHlnCFUzejoBHnhYdjihVOA94160828 = -948537875;    double BAvmnBvqHlnCFUzejoBHnhYdjihVOA23749699 = 91948604;    double BAvmnBvqHlnCFUzejoBHnhYdjihVOA41278344 = 17387552;    double BAvmnBvqHlnCFUzejoBHnhYdjihVOA74132902 = -571174195;    double BAvmnBvqHlnCFUzejoBHnhYdjihVOA22674818 = -152920786;    double BAvmnBvqHlnCFUzejoBHnhYdjihVOA60592452 = -919098379;    double BAvmnBvqHlnCFUzejoBHnhYdjihVOA16928033 = -31299470;    double BAvmnBvqHlnCFUzejoBHnhYdjihVOA17329510 = -713381484;    double BAvmnBvqHlnCFUzejoBHnhYdjihVOA81568966 = 88526129;    double BAvmnBvqHlnCFUzejoBHnhYdjihVOA3988549 = -999448225;    double BAvmnBvqHlnCFUzejoBHnhYdjihVOA62928542 = -898519461;    double BAvmnBvqHlnCFUzejoBHnhYdjihVOA94177323 = -472511935;    double BAvmnBvqHlnCFUzejoBHnhYdjihVOA27795108 = -384342314;    double BAvmnBvqHlnCFUzejoBHnhYdjihVOA50603295 = -303525316;    double BAvmnBvqHlnCFUzejoBHnhYdjihVOA47285647 = -950445505;    double BAvmnBvqHlnCFUzejoBHnhYdjihVOA47928586 = -793201574;    double BAvmnBvqHlnCFUzejoBHnhYdjihVOA59686799 = -671623633;    double BAvmnBvqHlnCFUzejoBHnhYdjihVOA65720246 = -611182029;    double BAvmnBvqHlnCFUzejoBHnhYdjihVOA43150753 = 82627859;    double BAvmnBvqHlnCFUzejoBHnhYdjihVOA41407038 = -559604467;    double BAvmnBvqHlnCFUzejoBHnhYdjihVOA17000067 = -768730636;    double BAvmnBvqHlnCFUzejoBHnhYdjihVOA33144623 = -281795281;    double BAvmnBvqHlnCFUzejoBHnhYdjihVOA45022090 = -810696279;    double BAvmnBvqHlnCFUzejoBHnhYdjihVOA30647892 = -209774834;    double BAvmnBvqHlnCFUzejoBHnhYdjihVOA86652848 = 12921225;    double BAvmnBvqHlnCFUzejoBHnhYdjihVOA82527999 = -544955382;    double BAvmnBvqHlnCFUzejoBHnhYdjihVOA7497622 = -234653255;    double BAvmnBvqHlnCFUzejoBHnhYdjihVOA78190346 = -765280102;    double BAvmnBvqHlnCFUzejoBHnhYdjihVOA99161268 = -735834997;    double BAvmnBvqHlnCFUzejoBHnhYdjihVOA55697403 = -41757774;    double BAvmnBvqHlnCFUzejoBHnhYdjihVOA62736038 = -993349352;    double BAvmnBvqHlnCFUzejoBHnhYdjihVOA37497872 = 59391796;    double BAvmnBvqHlnCFUzejoBHnhYdjihVOA36367024 = -364434099;    double BAvmnBvqHlnCFUzejoBHnhYdjihVOA80177027 = -954834884;    double BAvmnBvqHlnCFUzejoBHnhYdjihVOA69890424 = -785656218;    double BAvmnBvqHlnCFUzejoBHnhYdjihVOA16964754 = -599888103;    double BAvmnBvqHlnCFUzejoBHnhYdjihVOA8595673 = -540142840;    double BAvmnBvqHlnCFUzejoBHnhYdjihVOA38794938 = -231087625;    double BAvmnBvqHlnCFUzejoBHnhYdjihVOA92264445 = -936046526;    double BAvmnBvqHlnCFUzejoBHnhYdjihVOA36115292 = -778942282;    double BAvmnBvqHlnCFUzejoBHnhYdjihVOA96515897 = -855318448;    double BAvmnBvqHlnCFUzejoBHnhYdjihVOA67281852 = -138150512;    double BAvmnBvqHlnCFUzejoBHnhYdjihVOA81353920 = 29182453;    double BAvmnBvqHlnCFUzejoBHnhYdjihVOA14247941 = -666056614;    double BAvmnBvqHlnCFUzejoBHnhYdjihVOA75986321 = 96135865;    double BAvmnBvqHlnCFUzejoBHnhYdjihVOA62488675 = -6879473;    double BAvmnBvqHlnCFUzejoBHnhYdjihVOA46886135 = -538040259;    double BAvmnBvqHlnCFUzejoBHnhYdjihVOA73202647 = -32010958;    double BAvmnBvqHlnCFUzejoBHnhYdjihVOA69305057 = -476260593;    double BAvmnBvqHlnCFUzejoBHnhYdjihVOA16340115 = -293573356;    double BAvmnBvqHlnCFUzejoBHnhYdjihVOA28246554 = -692816048;    double BAvmnBvqHlnCFUzejoBHnhYdjihVOA61519485 = -848568262;    double BAvmnBvqHlnCFUzejoBHnhYdjihVOA33091690 = -372321932;    double BAvmnBvqHlnCFUzejoBHnhYdjihVOA43848062 = -637445800;    double BAvmnBvqHlnCFUzejoBHnhYdjihVOA49768376 = -675157201;    double BAvmnBvqHlnCFUzejoBHnhYdjihVOA61016206 = -566742594;    double BAvmnBvqHlnCFUzejoBHnhYdjihVOA78727609 = -97355117;    double BAvmnBvqHlnCFUzejoBHnhYdjihVOA10630452 = -772837615;    double BAvmnBvqHlnCFUzejoBHnhYdjihVOA87480053 = -484095420;    double BAvmnBvqHlnCFUzejoBHnhYdjihVOA40146818 = -607965404;    double BAvmnBvqHlnCFUzejoBHnhYdjihVOA53094831 = -584445125;    double BAvmnBvqHlnCFUzejoBHnhYdjihVOA38737686 = -266019368;    double BAvmnBvqHlnCFUzejoBHnhYdjihVOA18168242 = -977546488;    double BAvmnBvqHlnCFUzejoBHnhYdjihVOA25871564 = -869716097;    double BAvmnBvqHlnCFUzejoBHnhYdjihVOA41252511 = 93901127;    double BAvmnBvqHlnCFUzejoBHnhYdjihVOA25430670 = -857911258;    double BAvmnBvqHlnCFUzejoBHnhYdjihVOA57810300 = -8077837;    double BAvmnBvqHlnCFUzejoBHnhYdjihVOA47618080 = -429507430;    double BAvmnBvqHlnCFUzejoBHnhYdjihVOA80712870 = -666470182;     BAvmnBvqHlnCFUzejoBHnhYdjihVOA43318848 = BAvmnBvqHlnCFUzejoBHnhYdjihVOA57209242;     BAvmnBvqHlnCFUzejoBHnhYdjihVOA57209242 = BAvmnBvqHlnCFUzejoBHnhYdjihVOA31303564;     BAvmnBvqHlnCFUzejoBHnhYdjihVOA31303564 = BAvmnBvqHlnCFUzejoBHnhYdjihVOA94781049;     BAvmnBvqHlnCFUzejoBHnhYdjihVOA94781049 = BAvmnBvqHlnCFUzejoBHnhYdjihVOA63429968;     BAvmnBvqHlnCFUzejoBHnhYdjihVOA63429968 = BAvmnBvqHlnCFUzejoBHnhYdjihVOA43630756;     BAvmnBvqHlnCFUzejoBHnhYdjihVOA43630756 = BAvmnBvqHlnCFUzejoBHnhYdjihVOA89975768;     BAvmnBvqHlnCFUzejoBHnhYdjihVOA89975768 = BAvmnBvqHlnCFUzejoBHnhYdjihVOA13740316;     BAvmnBvqHlnCFUzejoBHnhYdjihVOA13740316 = BAvmnBvqHlnCFUzejoBHnhYdjihVOA21622123;     BAvmnBvqHlnCFUzejoBHnhYdjihVOA21622123 = BAvmnBvqHlnCFUzejoBHnhYdjihVOA46945469;     BAvmnBvqHlnCFUzejoBHnhYdjihVOA46945469 = BAvmnBvqHlnCFUzejoBHnhYdjihVOA64051253;     BAvmnBvqHlnCFUzejoBHnhYdjihVOA64051253 = BAvmnBvqHlnCFUzejoBHnhYdjihVOA40714453;     BAvmnBvqHlnCFUzejoBHnhYdjihVOA40714453 = BAvmnBvqHlnCFUzejoBHnhYdjihVOA49874016;     BAvmnBvqHlnCFUzejoBHnhYdjihVOA49874016 = BAvmnBvqHlnCFUzejoBHnhYdjihVOA12927841;     BAvmnBvqHlnCFUzejoBHnhYdjihVOA12927841 = BAvmnBvqHlnCFUzejoBHnhYdjihVOA14939263;     BAvmnBvqHlnCFUzejoBHnhYdjihVOA14939263 = BAvmnBvqHlnCFUzejoBHnhYdjihVOA96707744;     BAvmnBvqHlnCFUzejoBHnhYdjihVOA96707744 = BAvmnBvqHlnCFUzejoBHnhYdjihVOA13443930;     BAvmnBvqHlnCFUzejoBHnhYdjihVOA13443930 = BAvmnBvqHlnCFUzejoBHnhYdjihVOA84611362;     BAvmnBvqHlnCFUzejoBHnhYdjihVOA84611362 = BAvmnBvqHlnCFUzejoBHnhYdjihVOA62922887;     BAvmnBvqHlnCFUzejoBHnhYdjihVOA62922887 = BAvmnBvqHlnCFUzejoBHnhYdjihVOA18236490;     BAvmnBvqHlnCFUzejoBHnhYdjihVOA18236490 = BAvmnBvqHlnCFUzejoBHnhYdjihVOA38914864;     BAvmnBvqHlnCFUzejoBHnhYdjihVOA38914864 = BAvmnBvqHlnCFUzejoBHnhYdjihVOA56665999;     BAvmnBvqHlnCFUzejoBHnhYdjihVOA56665999 = BAvmnBvqHlnCFUzejoBHnhYdjihVOA74681242;     BAvmnBvqHlnCFUzejoBHnhYdjihVOA74681242 = BAvmnBvqHlnCFUzejoBHnhYdjihVOA23805942;     BAvmnBvqHlnCFUzejoBHnhYdjihVOA23805942 = BAvmnBvqHlnCFUzejoBHnhYdjihVOA16590704;     BAvmnBvqHlnCFUzejoBHnhYdjihVOA16590704 = BAvmnBvqHlnCFUzejoBHnhYdjihVOA64268700;     BAvmnBvqHlnCFUzejoBHnhYdjihVOA64268700 = BAvmnBvqHlnCFUzejoBHnhYdjihVOA87933353;     BAvmnBvqHlnCFUzejoBHnhYdjihVOA87933353 = BAvmnBvqHlnCFUzejoBHnhYdjihVOA27239731;     BAvmnBvqHlnCFUzejoBHnhYdjihVOA27239731 = BAvmnBvqHlnCFUzejoBHnhYdjihVOA76242443;     BAvmnBvqHlnCFUzejoBHnhYdjihVOA76242443 = BAvmnBvqHlnCFUzejoBHnhYdjihVOA85255099;     BAvmnBvqHlnCFUzejoBHnhYdjihVOA85255099 = BAvmnBvqHlnCFUzejoBHnhYdjihVOA66768442;     BAvmnBvqHlnCFUzejoBHnhYdjihVOA66768442 = BAvmnBvqHlnCFUzejoBHnhYdjihVOA94160828;     BAvmnBvqHlnCFUzejoBHnhYdjihVOA94160828 = BAvmnBvqHlnCFUzejoBHnhYdjihVOA23749699;     BAvmnBvqHlnCFUzejoBHnhYdjihVOA23749699 = BAvmnBvqHlnCFUzejoBHnhYdjihVOA41278344;     BAvmnBvqHlnCFUzejoBHnhYdjihVOA41278344 = BAvmnBvqHlnCFUzejoBHnhYdjihVOA74132902;     BAvmnBvqHlnCFUzejoBHnhYdjihVOA74132902 = BAvmnBvqHlnCFUzejoBHnhYdjihVOA22674818;     BAvmnBvqHlnCFUzejoBHnhYdjihVOA22674818 = BAvmnBvqHlnCFUzejoBHnhYdjihVOA60592452;     BAvmnBvqHlnCFUzejoBHnhYdjihVOA60592452 = BAvmnBvqHlnCFUzejoBHnhYdjihVOA16928033;     BAvmnBvqHlnCFUzejoBHnhYdjihVOA16928033 = BAvmnBvqHlnCFUzejoBHnhYdjihVOA17329510;     BAvmnBvqHlnCFUzejoBHnhYdjihVOA17329510 = BAvmnBvqHlnCFUzejoBHnhYdjihVOA81568966;     BAvmnBvqHlnCFUzejoBHnhYdjihVOA81568966 = BAvmnBvqHlnCFUzejoBHnhYdjihVOA3988549;     BAvmnBvqHlnCFUzejoBHnhYdjihVOA3988549 = BAvmnBvqHlnCFUzejoBHnhYdjihVOA62928542;     BAvmnBvqHlnCFUzejoBHnhYdjihVOA62928542 = BAvmnBvqHlnCFUzejoBHnhYdjihVOA94177323;     BAvmnBvqHlnCFUzejoBHnhYdjihVOA94177323 = BAvmnBvqHlnCFUzejoBHnhYdjihVOA27795108;     BAvmnBvqHlnCFUzejoBHnhYdjihVOA27795108 = BAvmnBvqHlnCFUzejoBHnhYdjihVOA50603295;     BAvmnBvqHlnCFUzejoBHnhYdjihVOA50603295 = BAvmnBvqHlnCFUzejoBHnhYdjihVOA47285647;     BAvmnBvqHlnCFUzejoBHnhYdjihVOA47285647 = BAvmnBvqHlnCFUzejoBHnhYdjihVOA47928586;     BAvmnBvqHlnCFUzejoBHnhYdjihVOA47928586 = BAvmnBvqHlnCFUzejoBHnhYdjihVOA59686799;     BAvmnBvqHlnCFUzejoBHnhYdjihVOA59686799 = BAvmnBvqHlnCFUzejoBHnhYdjihVOA65720246;     BAvmnBvqHlnCFUzejoBHnhYdjihVOA65720246 = BAvmnBvqHlnCFUzejoBHnhYdjihVOA43150753;     BAvmnBvqHlnCFUzejoBHnhYdjihVOA43150753 = BAvmnBvqHlnCFUzejoBHnhYdjihVOA41407038;     BAvmnBvqHlnCFUzejoBHnhYdjihVOA41407038 = BAvmnBvqHlnCFUzejoBHnhYdjihVOA17000067;     BAvmnBvqHlnCFUzejoBHnhYdjihVOA17000067 = BAvmnBvqHlnCFUzejoBHnhYdjihVOA33144623;     BAvmnBvqHlnCFUzejoBHnhYdjihVOA33144623 = BAvmnBvqHlnCFUzejoBHnhYdjihVOA45022090;     BAvmnBvqHlnCFUzejoBHnhYdjihVOA45022090 = BAvmnBvqHlnCFUzejoBHnhYdjihVOA30647892;     BAvmnBvqHlnCFUzejoBHnhYdjihVOA30647892 = BAvmnBvqHlnCFUzejoBHnhYdjihVOA86652848;     BAvmnBvqHlnCFUzejoBHnhYdjihVOA86652848 = BAvmnBvqHlnCFUzejoBHnhYdjihVOA82527999;     BAvmnBvqHlnCFUzejoBHnhYdjihVOA82527999 = BAvmnBvqHlnCFUzejoBHnhYdjihVOA7497622;     BAvmnBvqHlnCFUzejoBHnhYdjihVOA7497622 = BAvmnBvqHlnCFUzejoBHnhYdjihVOA78190346;     BAvmnBvqHlnCFUzejoBHnhYdjihVOA78190346 = BAvmnBvqHlnCFUzejoBHnhYdjihVOA99161268;     BAvmnBvqHlnCFUzejoBHnhYdjihVOA99161268 = BAvmnBvqHlnCFUzejoBHnhYdjihVOA55697403;     BAvmnBvqHlnCFUzejoBHnhYdjihVOA55697403 = BAvmnBvqHlnCFUzejoBHnhYdjihVOA62736038;     BAvmnBvqHlnCFUzejoBHnhYdjihVOA62736038 = BAvmnBvqHlnCFUzejoBHnhYdjihVOA37497872;     BAvmnBvqHlnCFUzejoBHnhYdjihVOA37497872 = BAvmnBvqHlnCFUzejoBHnhYdjihVOA36367024;     BAvmnBvqHlnCFUzejoBHnhYdjihVOA36367024 = BAvmnBvqHlnCFUzejoBHnhYdjihVOA80177027;     BAvmnBvqHlnCFUzejoBHnhYdjihVOA80177027 = BAvmnBvqHlnCFUzejoBHnhYdjihVOA69890424;     BAvmnBvqHlnCFUzejoBHnhYdjihVOA69890424 = BAvmnBvqHlnCFUzejoBHnhYdjihVOA16964754;     BAvmnBvqHlnCFUzejoBHnhYdjihVOA16964754 = BAvmnBvqHlnCFUzejoBHnhYdjihVOA8595673;     BAvmnBvqHlnCFUzejoBHnhYdjihVOA8595673 = BAvmnBvqHlnCFUzejoBHnhYdjihVOA38794938;     BAvmnBvqHlnCFUzejoBHnhYdjihVOA38794938 = BAvmnBvqHlnCFUzejoBHnhYdjihVOA92264445;     BAvmnBvqHlnCFUzejoBHnhYdjihVOA92264445 = BAvmnBvqHlnCFUzejoBHnhYdjihVOA36115292;     BAvmnBvqHlnCFUzejoBHnhYdjihVOA36115292 = BAvmnBvqHlnCFUzejoBHnhYdjihVOA96515897;     BAvmnBvqHlnCFUzejoBHnhYdjihVOA96515897 = BAvmnBvqHlnCFUzejoBHnhYdjihVOA67281852;     BAvmnBvqHlnCFUzejoBHnhYdjihVOA67281852 = BAvmnBvqHlnCFUzejoBHnhYdjihVOA81353920;     BAvmnBvqHlnCFUzejoBHnhYdjihVOA81353920 = BAvmnBvqHlnCFUzejoBHnhYdjihVOA14247941;     BAvmnBvqHlnCFUzejoBHnhYdjihVOA14247941 = BAvmnBvqHlnCFUzejoBHnhYdjihVOA75986321;     BAvmnBvqHlnCFUzejoBHnhYdjihVOA75986321 = BAvmnBvqHlnCFUzejoBHnhYdjihVOA62488675;     BAvmnBvqHlnCFUzejoBHnhYdjihVOA62488675 = BAvmnBvqHlnCFUzejoBHnhYdjihVOA46886135;     BAvmnBvqHlnCFUzejoBHnhYdjihVOA46886135 = BAvmnBvqHlnCFUzejoBHnhYdjihVOA73202647;     BAvmnBvqHlnCFUzejoBHnhYdjihVOA73202647 = BAvmnBvqHlnCFUzejoBHnhYdjihVOA69305057;     BAvmnBvqHlnCFUzejoBHnhYdjihVOA69305057 = BAvmnBvqHlnCFUzejoBHnhYdjihVOA16340115;     BAvmnBvqHlnCFUzejoBHnhYdjihVOA16340115 = BAvmnBvqHlnCFUzejoBHnhYdjihVOA28246554;     BAvmnBvqHlnCFUzejoBHnhYdjihVOA28246554 = BAvmnBvqHlnCFUzejoBHnhYdjihVOA61519485;     BAvmnBvqHlnCFUzejoBHnhYdjihVOA61519485 = BAvmnBvqHlnCFUzejoBHnhYdjihVOA33091690;     BAvmnBvqHlnCFUzejoBHnhYdjihVOA33091690 = BAvmnBvqHlnCFUzejoBHnhYdjihVOA43848062;     BAvmnBvqHlnCFUzejoBHnhYdjihVOA43848062 = BAvmnBvqHlnCFUzejoBHnhYdjihVOA49768376;     BAvmnBvqHlnCFUzejoBHnhYdjihVOA49768376 = BAvmnBvqHlnCFUzejoBHnhYdjihVOA61016206;     BAvmnBvqHlnCFUzejoBHnhYdjihVOA61016206 = BAvmnBvqHlnCFUzejoBHnhYdjihVOA78727609;     BAvmnBvqHlnCFUzejoBHnhYdjihVOA78727609 = BAvmnBvqHlnCFUzejoBHnhYdjihVOA10630452;     BAvmnBvqHlnCFUzejoBHnhYdjihVOA10630452 = BAvmnBvqHlnCFUzejoBHnhYdjihVOA87480053;     BAvmnBvqHlnCFUzejoBHnhYdjihVOA87480053 = BAvmnBvqHlnCFUzejoBHnhYdjihVOA40146818;     BAvmnBvqHlnCFUzejoBHnhYdjihVOA40146818 = BAvmnBvqHlnCFUzejoBHnhYdjihVOA53094831;     BAvmnBvqHlnCFUzejoBHnhYdjihVOA53094831 = BAvmnBvqHlnCFUzejoBHnhYdjihVOA38737686;     BAvmnBvqHlnCFUzejoBHnhYdjihVOA38737686 = BAvmnBvqHlnCFUzejoBHnhYdjihVOA18168242;     BAvmnBvqHlnCFUzejoBHnhYdjihVOA18168242 = BAvmnBvqHlnCFUzejoBHnhYdjihVOA25871564;     BAvmnBvqHlnCFUzejoBHnhYdjihVOA25871564 = BAvmnBvqHlnCFUzejoBHnhYdjihVOA41252511;     BAvmnBvqHlnCFUzejoBHnhYdjihVOA41252511 = BAvmnBvqHlnCFUzejoBHnhYdjihVOA25430670;     BAvmnBvqHlnCFUzejoBHnhYdjihVOA25430670 = BAvmnBvqHlnCFUzejoBHnhYdjihVOA57810300;     BAvmnBvqHlnCFUzejoBHnhYdjihVOA57810300 = BAvmnBvqHlnCFUzejoBHnhYdjihVOA47618080;     BAvmnBvqHlnCFUzejoBHnhYdjihVOA47618080 = BAvmnBvqHlnCFUzejoBHnhYdjihVOA80712870;     BAvmnBvqHlnCFUzejoBHnhYdjihVOA80712870 = BAvmnBvqHlnCFUzejoBHnhYdjihVOA43318848;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void AYQigXBaowpkLwSQDTqwVRYtF50928488() {     double nPdVktLmUoitdApGejWuknlQbudQai4080646 = -474685867;    double nPdVktLmUoitdApGejWuknlQbudQai55438615 = -920395236;    double nPdVktLmUoitdApGejWuknlQbudQai60048212 = -692099984;    double nPdVktLmUoitdApGejWuknlQbudQai70910562 = -669648485;    double nPdVktLmUoitdApGejWuknlQbudQai20037281 = -718228019;    double nPdVktLmUoitdApGejWuknlQbudQai1430504 = -448993743;    double nPdVktLmUoitdApGejWuknlQbudQai24386442 = 99238008;    double nPdVktLmUoitdApGejWuknlQbudQai96496385 = -774010397;    double nPdVktLmUoitdApGejWuknlQbudQai98149274 = -596839506;    double nPdVktLmUoitdApGejWuknlQbudQai65766384 = 88290226;    double nPdVktLmUoitdApGejWuknlQbudQai33253747 = -76196359;    double nPdVktLmUoitdApGejWuknlQbudQai56739724 = -841987333;    double nPdVktLmUoitdApGejWuknlQbudQai47679820 = -348674393;    double nPdVktLmUoitdApGejWuknlQbudQai19804279 = -464333542;    double nPdVktLmUoitdApGejWuknlQbudQai8663927 = -630620387;    double nPdVktLmUoitdApGejWuknlQbudQai89827494 = -250393244;    double nPdVktLmUoitdApGejWuknlQbudQai90890835 = -706184713;    double nPdVktLmUoitdApGejWuknlQbudQai33761901 = -726226539;    double nPdVktLmUoitdApGejWuknlQbudQai6615735 = -500845462;    double nPdVktLmUoitdApGejWuknlQbudQai24531854 = -85810580;    double nPdVktLmUoitdApGejWuknlQbudQai81146580 = -891653763;    double nPdVktLmUoitdApGejWuknlQbudQai61884010 = -868753056;    double nPdVktLmUoitdApGejWuknlQbudQai2059461 = -394080243;    double nPdVktLmUoitdApGejWuknlQbudQai74701847 = -178262862;    double nPdVktLmUoitdApGejWuknlQbudQai48707004 = -162856361;    double nPdVktLmUoitdApGejWuknlQbudQai5092439 = -931447930;    double nPdVktLmUoitdApGejWuknlQbudQai43715428 = -171145732;    double nPdVktLmUoitdApGejWuknlQbudQai46701144 = -347181587;    double nPdVktLmUoitdApGejWuknlQbudQai1290047 = -311427124;    double nPdVktLmUoitdApGejWuknlQbudQai12440950 = -918426163;    double nPdVktLmUoitdApGejWuknlQbudQai60835538 = -386721152;    double nPdVktLmUoitdApGejWuknlQbudQai99848847 = -557213861;    double nPdVktLmUoitdApGejWuknlQbudQai29295159 = -110098704;    double nPdVktLmUoitdApGejWuknlQbudQai31189057 = -879297622;    double nPdVktLmUoitdApGejWuknlQbudQai93648768 = -716741447;    double nPdVktLmUoitdApGejWuknlQbudQai42969557 = -184591109;    double nPdVktLmUoitdApGejWuknlQbudQai84470926 = -322640937;    double nPdVktLmUoitdApGejWuknlQbudQai68872003 = -769628519;    double nPdVktLmUoitdApGejWuknlQbudQai94679807 = -508275707;    double nPdVktLmUoitdApGejWuknlQbudQai50866638 = -7369222;    double nPdVktLmUoitdApGejWuknlQbudQai47400675 = -759188124;    double nPdVktLmUoitdApGejWuknlQbudQai10300149 = -966881950;    double nPdVktLmUoitdApGejWuknlQbudQai3669526 = -132517218;    double nPdVktLmUoitdApGejWuknlQbudQai63045094 = -312811582;    double nPdVktLmUoitdApGejWuknlQbudQai48566901 = -257830171;    double nPdVktLmUoitdApGejWuknlQbudQai75200396 = -172518242;    double nPdVktLmUoitdApGejWuknlQbudQai23727561 = -560955429;    double nPdVktLmUoitdApGejWuknlQbudQai54146421 = 77686428;    double nPdVktLmUoitdApGejWuknlQbudQai95726325 = -492294998;    double nPdVktLmUoitdApGejWuknlQbudQai30972203 = -724939573;    double nPdVktLmUoitdApGejWuknlQbudQai72110310 = -526946151;    double nPdVktLmUoitdApGejWuknlQbudQai39012822 = -7741561;    double nPdVktLmUoitdApGejWuknlQbudQai76293606 = -201581339;    double nPdVktLmUoitdApGejWuknlQbudQai13782134 = -174932686;    double nPdVktLmUoitdApGejWuknlQbudQai69781907 = -941564214;    double nPdVktLmUoitdApGejWuknlQbudQai42196635 = -605932811;    double nPdVktLmUoitdApGejWuknlQbudQai53379154 = -426314993;    double nPdVktLmUoitdApGejWuknlQbudQai85346364 = -413837122;    double nPdVktLmUoitdApGejWuknlQbudQai22203559 = -406792124;    double nPdVktLmUoitdApGejWuknlQbudQai14944843 = -786780089;    double nPdVktLmUoitdApGejWuknlQbudQai57715076 = -177848011;    double nPdVktLmUoitdApGejWuknlQbudQai77685298 = -553580405;    double nPdVktLmUoitdApGejWuknlQbudQai95206339 = -362583273;    double nPdVktLmUoitdApGejWuknlQbudQai85708325 = -678413344;    double nPdVktLmUoitdApGejWuknlQbudQai4930846 = -524988622;    double nPdVktLmUoitdApGejWuknlQbudQai33404899 = -518982499;    double nPdVktLmUoitdApGejWuknlQbudQai27444566 = -631888629;    double nPdVktLmUoitdApGejWuknlQbudQai16490764 = -469376771;    double nPdVktLmUoitdApGejWuknlQbudQai26155510 = -747592096;    double nPdVktLmUoitdApGejWuknlQbudQai65694369 = -346029278;    double nPdVktLmUoitdApGejWuknlQbudQai5356569 = -927752308;    double nPdVktLmUoitdApGejWuknlQbudQai22018833 = -936556195;    double nPdVktLmUoitdApGejWuknlQbudQai39082094 = -117950832;    double nPdVktLmUoitdApGejWuknlQbudQai55749096 = -393476241;    double nPdVktLmUoitdApGejWuknlQbudQai77131179 = -326622456;    double nPdVktLmUoitdApGejWuknlQbudQai70846432 = -924771814;    double nPdVktLmUoitdApGejWuknlQbudQai58214485 = -636235839;    double nPdVktLmUoitdApGejWuknlQbudQai39014367 = 18731339;    double nPdVktLmUoitdApGejWuknlQbudQai26134946 = -920432692;    double nPdVktLmUoitdApGejWuknlQbudQai73506608 = -990338120;    double nPdVktLmUoitdApGejWuknlQbudQai81364877 = -270492502;    double nPdVktLmUoitdApGejWuknlQbudQai89569007 = -148832160;    double nPdVktLmUoitdApGejWuknlQbudQai50974818 = -854886590;    double nPdVktLmUoitdApGejWuknlQbudQai70317843 = -586487552;    double nPdVktLmUoitdApGejWuknlQbudQai40330640 = -291480012;    double nPdVktLmUoitdApGejWuknlQbudQai21822717 = -278979592;    double nPdVktLmUoitdApGejWuknlQbudQai23555242 = -255632523;    double nPdVktLmUoitdApGejWuknlQbudQai15513026 = -935166019;    double nPdVktLmUoitdApGejWuknlQbudQai61407149 = -937733408;    double nPdVktLmUoitdApGejWuknlQbudQai51452134 = -10808636;    double nPdVktLmUoitdApGejWuknlQbudQai89590402 = -758276116;    double nPdVktLmUoitdApGejWuknlQbudQai99124561 = -908803815;    double nPdVktLmUoitdApGejWuknlQbudQai46668444 = -262836395;    double nPdVktLmUoitdApGejWuknlQbudQai79734965 = -721495618;    double nPdVktLmUoitdApGejWuknlQbudQai93151562 = -829521211;    double nPdVktLmUoitdApGejWuknlQbudQai69715376 = -105607720;    double nPdVktLmUoitdApGejWuknlQbudQai15093810 = -504298677;    double nPdVktLmUoitdApGejWuknlQbudQai17961200 = -454103875;    double nPdVktLmUoitdApGejWuknlQbudQai58114249 = -787822961;    double nPdVktLmUoitdApGejWuknlQbudQai15162003 = -474685867;     nPdVktLmUoitdApGejWuknlQbudQai4080646 = nPdVktLmUoitdApGejWuknlQbudQai55438615;     nPdVktLmUoitdApGejWuknlQbudQai55438615 = nPdVktLmUoitdApGejWuknlQbudQai60048212;     nPdVktLmUoitdApGejWuknlQbudQai60048212 = nPdVktLmUoitdApGejWuknlQbudQai70910562;     nPdVktLmUoitdApGejWuknlQbudQai70910562 = nPdVktLmUoitdApGejWuknlQbudQai20037281;     nPdVktLmUoitdApGejWuknlQbudQai20037281 = nPdVktLmUoitdApGejWuknlQbudQai1430504;     nPdVktLmUoitdApGejWuknlQbudQai1430504 = nPdVktLmUoitdApGejWuknlQbudQai24386442;     nPdVktLmUoitdApGejWuknlQbudQai24386442 = nPdVktLmUoitdApGejWuknlQbudQai96496385;     nPdVktLmUoitdApGejWuknlQbudQai96496385 = nPdVktLmUoitdApGejWuknlQbudQai98149274;     nPdVktLmUoitdApGejWuknlQbudQai98149274 = nPdVktLmUoitdApGejWuknlQbudQai65766384;     nPdVktLmUoitdApGejWuknlQbudQai65766384 = nPdVktLmUoitdApGejWuknlQbudQai33253747;     nPdVktLmUoitdApGejWuknlQbudQai33253747 = nPdVktLmUoitdApGejWuknlQbudQai56739724;     nPdVktLmUoitdApGejWuknlQbudQai56739724 = nPdVktLmUoitdApGejWuknlQbudQai47679820;     nPdVktLmUoitdApGejWuknlQbudQai47679820 = nPdVktLmUoitdApGejWuknlQbudQai19804279;     nPdVktLmUoitdApGejWuknlQbudQai19804279 = nPdVktLmUoitdApGejWuknlQbudQai8663927;     nPdVktLmUoitdApGejWuknlQbudQai8663927 = nPdVktLmUoitdApGejWuknlQbudQai89827494;     nPdVktLmUoitdApGejWuknlQbudQai89827494 = nPdVktLmUoitdApGejWuknlQbudQai90890835;     nPdVktLmUoitdApGejWuknlQbudQai90890835 = nPdVktLmUoitdApGejWuknlQbudQai33761901;     nPdVktLmUoitdApGejWuknlQbudQai33761901 = nPdVktLmUoitdApGejWuknlQbudQai6615735;     nPdVktLmUoitdApGejWuknlQbudQai6615735 = nPdVktLmUoitdApGejWuknlQbudQai24531854;     nPdVktLmUoitdApGejWuknlQbudQai24531854 = nPdVktLmUoitdApGejWuknlQbudQai81146580;     nPdVktLmUoitdApGejWuknlQbudQai81146580 = nPdVktLmUoitdApGejWuknlQbudQai61884010;     nPdVktLmUoitdApGejWuknlQbudQai61884010 = nPdVktLmUoitdApGejWuknlQbudQai2059461;     nPdVktLmUoitdApGejWuknlQbudQai2059461 = nPdVktLmUoitdApGejWuknlQbudQai74701847;     nPdVktLmUoitdApGejWuknlQbudQai74701847 = nPdVktLmUoitdApGejWuknlQbudQai48707004;     nPdVktLmUoitdApGejWuknlQbudQai48707004 = nPdVktLmUoitdApGejWuknlQbudQai5092439;     nPdVktLmUoitdApGejWuknlQbudQai5092439 = nPdVktLmUoitdApGejWuknlQbudQai43715428;     nPdVktLmUoitdApGejWuknlQbudQai43715428 = nPdVktLmUoitdApGejWuknlQbudQai46701144;     nPdVktLmUoitdApGejWuknlQbudQai46701144 = nPdVktLmUoitdApGejWuknlQbudQai1290047;     nPdVktLmUoitdApGejWuknlQbudQai1290047 = nPdVktLmUoitdApGejWuknlQbudQai12440950;     nPdVktLmUoitdApGejWuknlQbudQai12440950 = nPdVktLmUoitdApGejWuknlQbudQai60835538;     nPdVktLmUoitdApGejWuknlQbudQai60835538 = nPdVktLmUoitdApGejWuknlQbudQai99848847;     nPdVktLmUoitdApGejWuknlQbudQai99848847 = nPdVktLmUoitdApGejWuknlQbudQai29295159;     nPdVktLmUoitdApGejWuknlQbudQai29295159 = nPdVktLmUoitdApGejWuknlQbudQai31189057;     nPdVktLmUoitdApGejWuknlQbudQai31189057 = nPdVktLmUoitdApGejWuknlQbudQai93648768;     nPdVktLmUoitdApGejWuknlQbudQai93648768 = nPdVktLmUoitdApGejWuknlQbudQai42969557;     nPdVktLmUoitdApGejWuknlQbudQai42969557 = nPdVktLmUoitdApGejWuknlQbudQai84470926;     nPdVktLmUoitdApGejWuknlQbudQai84470926 = nPdVktLmUoitdApGejWuknlQbudQai68872003;     nPdVktLmUoitdApGejWuknlQbudQai68872003 = nPdVktLmUoitdApGejWuknlQbudQai94679807;     nPdVktLmUoitdApGejWuknlQbudQai94679807 = nPdVktLmUoitdApGejWuknlQbudQai50866638;     nPdVktLmUoitdApGejWuknlQbudQai50866638 = nPdVktLmUoitdApGejWuknlQbudQai47400675;     nPdVktLmUoitdApGejWuknlQbudQai47400675 = nPdVktLmUoitdApGejWuknlQbudQai10300149;     nPdVktLmUoitdApGejWuknlQbudQai10300149 = nPdVktLmUoitdApGejWuknlQbudQai3669526;     nPdVktLmUoitdApGejWuknlQbudQai3669526 = nPdVktLmUoitdApGejWuknlQbudQai63045094;     nPdVktLmUoitdApGejWuknlQbudQai63045094 = nPdVktLmUoitdApGejWuknlQbudQai48566901;     nPdVktLmUoitdApGejWuknlQbudQai48566901 = nPdVktLmUoitdApGejWuknlQbudQai75200396;     nPdVktLmUoitdApGejWuknlQbudQai75200396 = nPdVktLmUoitdApGejWuknlQbudQai23727561;     nPdVktLmUoitdApGejWuknlQbudQai23727561 = nPdVktLmUoitdApGejWuknlQbudQai54146421;     nPdVktLmUoitdApGejWuknlQbudQai54146421 = nPdVktLmUoitdApGejWuknlQbudQai95726325;     nPdVktLmUoitdApGejWuknlQbudQai95726325 = nPdVktLmUoitdApGejWuknlQbudQai30972203;     nPdVktLmUoitdApGejWuknlQbudQai30972203 = nPdVktLmUoitdApGejWuknlQbudQai72110310;     nPdVktLmUoitdApGejWuknlQbudQai72110310 = nPdVktLmUoitdApGejWuknlQbudQai39012822;     nPdVktLmUoitdApGejWuknlQbudQai39012822 = nPdVktLmUoitdApGejWuknlQbudQai76293606;     nPdVktLmUoitdApGejWuknlQbudQai76293606 = nPdVktLmUoitdApGejWuknlQbudQai13782134;     nPdVktLmUoitdApGejWuknlQbudQai13782134 = nPdVktLmUoitdApGejWuknlQbudQai69781907;     nPdVktLmUoitdApGejWuknlQbudQai69781907 = nPdVktLmUoitdApGejWuknlQbudQai42196635;     nPdVktLmUoitdApGejWuknlQbudQai42196635 = nPdVktLmUoitdApGejWuknlQbudQai53379154;     nPdVktLmUoitdApGejWuknlQbudQai53379154 = nPdVktLmUoitdApGejWuknlQbudQai85346364;     nPdVktLmUoitdApGejWuknlQbudQai85346364 = nPdVktLmUoitdApGejWuknlQbudQai22203559;     nPdVktLmUoitdApGejWuknlQbudQai22203559 = nPdVktLmUoitdApGejWuknlQbudQai14944843;     nPdVktLmUoitdApGejWuknlQbudQai14944843 = nPdVktLmUoitdApGejWuknlQbudQai57715076;     nPdVktLmUoitdApGejWuknlQbudQai57715076 = nPdVktLmUoitdApGejWuknlQbudQai77685298;     nPdVktLmUoitdApGejWuknlQbudQai77685298 = nPdVktLmUoitdApGejWuknlQbudQai95206339;     nPdVktLmUoitdApGejWuknlQbudQai95206339 = nPdVktLmUoitdApGejWuknlQbudQai85708325;     nPdVktLmUoitdApGejWuknlQbudQai85708325 = nPdVktLmUoitdApGejWuknlQbudQai4930846;     nPdVktLmUoitdApGejWuknlQbudQai4930846 = nPdVktLmUoitdApGejWuknlQbudQai33404899;     nPdVktLmUoitdApGejWuknlQbudQai33404899 = nPdVktLmUoitdApGejWuknlQbudQai27444566;     nPdVktLmUoitdApGejWuknlQbudQai27444566 = nPdVktLmUoitdApGejWuknlQbudQai16490764;     nPdVktLmUoitdApGejWuknlQbudQai16490764 = nPdVktLmUoitdApGejWuknlQbudQai26155510;     nPdVktLmUoitdApGejWuknlQbudQai26155510 = nPdVktLmUoitdApGejWuknlQbudQai65694369;     nPdVktLmUoitdApGejWuknlQbudQai65694369 = nPdVktLmUoitdApGejWuknlQbudQai5356569;     nPdVktLmUoitdApGejWuknlQbudQai5356569 = nPdVktLmUoitdApGejWuknlQbudQai22018833;     nPdVktLmUoitdApGejWuknlQbudQai22018833 = nPdVktLmUoitdApGejWuknlQbudQai39082094;     nPdVktLmUoitdApGejWuknlQbudQai39082094 = nPdVktLmUoitdApGejWuknlQbudQai55749096;     nPdVktLmUoitdApGejWuknlQbudQai55749096 = nPdVktLmUoitdApGejWuknlQbudQai77131179;     nPdVktLmUoitdApGejWuknlQbudQai77131179 = nPdVktLmUoitdApGejWuknlQbudQai70846432;     nPdVktLmUoitdApGejWuknlQbudQai70846432 = nPdVktLmUoitdApGejWuknlQbudQai58214485;     nPdVktLmUoitdApGejWuknlQbudQai58214485 = nPdVktLmUoitdApGejWuknlQbudQai39014367;     nPdVktLmUoitdApGejWuknlQbudQai39014367 = nPdVktLmUoitdApGejWuknlQbudQai26134946;     nPdVktLmUoitdApGejWuknlQbudQai26134946 = nPdVktLmUoitdApGejWuknlQbudQai73506608;     nPdVktLmUoitdApGejWuknlQbudQai73506608 = nPdVktLmUoitdApGejWuknlQbudQai81364877;     nPdVktLmUoitdApGejWuknlQbudQai81364877 = nPdVktLmUoitdApGejWuknlQbudQai89569007;     nPdVktLmUoitdApGejWuknlQbudQai89569007 = nPdVktLmUoitdApGejWuknlQbudQai50974818;     nPdVktLmUoitdApGejWuknlQbudQai50974818 = nPdVktLmUoitdApGejWuknlQbudQai70317843;     nPdVktLmUoitdApGejWuknlQbudQai70317843 = nPdVktLmUoitdApGejWuknlQbudQai40330640;     nPdVktLmUoitdApGejWuknlQbudQai40330640 = nPdVktLmUoitdApGejWuknlQbudQai21822717;     nPdVktLmUoitdApGejWuknlQbudQai21822717 = nPdVktLmUoitdApGejWuknlQbudQai23555242;     nPdVktLmUoitdApGejWuknlQbudQai23555242 = nPdVktLmUoitdApGejWuknlQbudQai15513026;     nPdVktLmUoitdApGejWuknlQbudQai15513026 = nPdVktLmUoitdApGejWuknlQbudQai61407149;     nPdVktLmUoitdApGejWuknlQbudQai61407149 = nPdVktLmUoitdApGejWuknlQbudQai51452134;     nPdVktLmUoitdApGejWuknlQbudQai51452134 = nPdVktLmUoitdApGejWuknlQbudQai89590402;     nPdVktLmUoitdApGejWuknlQbudQai89590402 = nPdVktLmUoitdApGejWuknlQbudQai99124561;     nPdVktLmUoitdApGejWuknlQbudQai99124561 = nPdVktLmUoitdApGejWuknlQbudQai46668444;     nPdVktLmUoitdApGejWuknlQbudQai46668444 = nPdVktLmUoitdApGejWuknlQbudQai79734965;     nPdVktLmUoitdApGejWuknlQbudQai79734965 = nPdVktLmUoitdApGejWuknlQbudQai93151562;     nPdVktLmUoitdApGejWuknlQbudQai93151562 = nPdVktLmUoitdApGejWuknlQbudQai69715376;     nPdVktLmUoitdApGejWuknlQbudQai69715376 = nPdVktLmUoitdApGejWuknlQbudQai15093810;     nPdVktLmUoitdApGejWuknlQbudQai15093810 = nPdVktLmUoitdApGejWuknlQbudQai17961200;     nPdVktLmUoitdApGejWuknlQbudQai17961200 = nPdVktLmUoitdApGejWuknlQbudQai58114249;     nPdVktLmUoitdApGejWuknlQbudQai58114249 = nPdVktLmUoitdApGejWuknlQbudQai15162003;     nPdVktLmUoitdApGejWuknlQbudQai15162003 = nPdVktLmUoitdApGejWuknlQbudQai4080646;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void IOzeLARLvqiDSSIYqUwCFDoip41014740() {     double gRXjYxqqDHXzVWztcYTCbOzAqyUhSc16305152 = 42724144;    double gRXjYxqqDHXzVWztcYTCbOzAqyUhSc50043649 = -403487485;    double gRXjYxqqDHXzVWztcYTCbOzAqyUhSc44102397 = -379458747;    double gRXjYxqqDHXzVWztcYTCbOzAqyUhSc2679916 = -231956991;    double gRXjYxqqDHXzVWztcYTCbOzAqyUhSc71088411 = -262060744;    double gRXjYxqqDHXzVWztcYTCbOzAqyUhSc36473057 = -527135430;    double gRXjYxqqDHXzVWztcYTCbOzAqyUhSc98185377 = -285496647;    double gRXjYxqqDHXzVWztcYTCbOzAqyUhSc99837243 = -904024199;    double gRXjYxqqDHXzVWztcYTCbOzAqyUhSc51544512 = -253373942;    double gRXjYxqqDHXzVWztcYTCbOzAqyUhSc43184973 = -574871035;    double gRXjYxqqDHXzVWztcYTCbOzAqyUhSc83955235 = -870279640;    double gRXjYxqqDHXzVWztcYTCbOzAqyUhSc41823325 = -234017280;    double gRXjYxqqDHXzVWztcYTCbOzAqyUhSc67877428 = -710944282;    double gRXjYxqqDHXzVWztcYTCbOzAqyUhSc16857962 = -946540255;    double gRXjYxqqDHXzVWztcYTCbOzAqyUhSc67906943 = -855613998;    double gRXjYxqqDHXzVWztcYTCbOzAqyUhSc34685103 = -145585806;    double gRXjYxqqDHXzVWztcYTCbOzAqyUhSc62341980 = -568696794;    double gRXjYxqqDHXzVWztcYTCbOzAqyUhSc12369007 = -102879257;    double gRXjYxqqDHXzVWztcYTCbOzAqyUhSc10917823 = -39357055;    double gRXjYxqqDHXzVWztcYTCbOzAqyUhSc93742828 = -617653096;    double gRXjYxqqDHXzVWztcYTCbOzAqyUhSc77757103 = -168328234;    double gRXjYxqqDHXzVWztcYTCbOzAqyUhSc2370457 = -899600314;    double gRXjYxqqDHXzVWztcYTCbOzAqyUhSc28558640 = -25551980;    double gRXjYxqqDHXzVWztcYTCbOzAqyUhSc8161758 = -444253622;    double gRXjYxqqDHXzVWztcYTCbOzAqyUhSc28770339 = -999289207;    double gRXjYxqqDHXzVWztcYTCbOzAqyUhSc29396905 = -551067469;    double gRXjYxqqDHXzVWztcYTCbOzAqyUhSc95967356 = -423669707;    double gRXjYxqqDHXzVWztcYTCbOzAqyUhSc26020682 = -292489977;    double gRXjYxqqDHXzVWztcYTCbOzAqyUhSc52572227 = -75298006;    double gRXjYxqqDHXzVWztcYTCbOzAqyUhSc13807029 = -66514958;    double gRXjYxqqDHXzVWztcYTCbOzAqyUhSc95439655 = -794002880;    double gRXjYxqqDHXzVWztcYTCbOzAqyUhSc72155877 = -563840135;    double gRXjYxqqDHXzVWztcYTCbOzAqyUhSc76895690 = -748241769;    double gRXjYxqqDHXzVWztcYTCbOzAqyUhSc21274441 = -747403751;    double gRXjYxqqDHXzVWztcYTCbOzAqyUhSc40135130 = -183178545;    double gRXjYxqqDHXzVWztcYTCbOzAqyUhSc44663668 = -182291944;    double gRXjYxqqDHXzVWztcYTCbOzAqyUhSc14906848 = -929392743;    double gRXjYxqqDHXzVWztcYTCbOzAqyUhSc41928947 = -305534557;    double gRXjYxqqDHXzVWztcYTCbOzAqyUhSc94870710 = 84855175;    double gRXjYxqqDHXzVWztcYTCbOzAqyUhSc83679853 = -918395196;    double gRXjYxqqDHXzVWztcYTCbOzAqyUhSc40522624 = -471651760;    double gRXjYxqqDHXzVWztcYTCbOzAqyUhSc53147554 = -697854629;    double gRXjYxqqDHXzVWztcYTCbOzAqyUhSc228522 = -32821767;    double gRXjYxqqDHXzVWztcYTCbOzAqyUhSc76708423 = -786944124;    double gRXjYxqqDHXzVWztcYTCbOzAqyUhSc98498910 = -841515582;    double gRXjYxqqDHXzVWztcYTCbOzAqyUhSc59720738 = -411017481;    double gRXjYxqqDHXzVWztcYTCbOzAqyUhSc831398 = -420427438;    double gRXjYxqqDHXzVWztcYTCbOzAqyUhSc33135674 = -305246671;    double gRXjYxqqDHXzVWztcYTCbOzAqyUhSc93065367 = -559414766;    double gRXjYxqqDHXzVWztcYTCbOzAqyUhSc86863642 = -279498519;    double gRXjYxqqDHXzVWztcYTCbOzAqyUhSc63400721 = -679366005;    double gRXjYxqqDHXzVWztcYTCbOzAqyUhSc82453146 = -732412824;    double gRXjYxqqDHXzVWztcYTCbOzAqyUhSc35963043 = -173241526;    double gRXjYxqqDHXzVWztcYTCbOzAqyUhSc21095301 = 36247247;    double gRXjYxqqDHXzVWztcYTCbOzAqyUhSc63257637 = -877976695;    double gRXjYxqqDHXzVWztcYTCbOzAqyUhSc13934695 = -57675543;    double gRXjYxqqDHXzVWztcYTCbOzAqyUhSc21485010 = -277935506;    double gRXjYxqqDHXzVWztcYTCbOzAqyUhSc35940640 = -935205126;    double gRXjYxqqDHXzVWztcYTCbOzAqyUhSc73909577 = -232667784;    double gRXjYxqqDHXzVWztcYTCbOzAqyUhSc41691507 = -710993275;    double gRXjYxqqDHXzVWztcYTCbOzAqyUhSc40505701 = -3465723;    double gRXjYxqqDHXzVWztcYTCbOzAqyUhSc72164696 = -993006670;    double gRXjYxqqDHXzVWztcYTCbOzAqyUhSc47265016 = -728726194;    double gRXjYxqqDHXzVWztcYTCbOzAqyUhSc37737484 = -86858984;    double gRXjYxqqDHXzVWztcYTCbOzAqyUhSc47745318 = -780868155;    double gRXjYxqqDHXzVWztcYTCbOzAqyUhSc11799358 = -206439506;    double gRXjYxqqDHXzVWztcYTCbOzAqyUhSc64927634 = -485775512;    double gRXjYxqqDHXzVWztcYTCbOzAqyUhSc46602988 = -963540531;    double gRXjYxqqDHXzVWztcYTCbOzAqyUhSc76722832 = -663361711;    double gRXjYxqqDHXzVWztcYTCbOzAqyUhSc23243276 = -573322055;    double gRXjYxqqDHXzVWztcYTCbOzAqyUhSc19778256 = -216193064;    double gRXjYxqqDHXzVWztcYTCbOzAqyUhSc20413034 = -163162238;    double gRXjYxqqDHXzVWztcYTCbOzAqyUhSc17498297 = -87734433;    double gRXjYxqqDHXzVWztcYTCbOzAqyUhSc27237970 = -120961860;    double gRXjYxqqDHXzVWztcYTCbOzAqyUhSc53220204 = -46001336;    double gRXjYxqqDHXzVWztcYTCbOzAqyUhSc24609549 = -470473606;    double gRXjYxqqDHXzVWztcYTCbOzAqyUhSc2141935 = -766778547;    double gRXjYxqqDHXzVWztcYTCbOzAqyUhSc51850217 = -238607857;    double gRXjYxqqDHXzVWztcYTCbOzAqyUhSc9662848 = -602738040;    double gRXjYxqqDHXzVWztcYTCbOzAqyUhSc69049600 = -488271727;    double gRXjYxqqDHXzVWztcYTCbOzAqyUhSc28565507 = -30640032;    double gRXjYxqqDHXzVWztcYTCbOzAqyUhSc62831683 = -18423037;    double gRXjYxqqDHXzVWztcYTCbOzAqyUhSc32955314 = -733075211;    double gRXjYxqqDHXzVWztcYTCbOzAqyUhSc65708585 = -795799488;    double gRXjYxqqDHXzVWztcYTCbOzAqyUhSc50406307 = -387148954;    double gRXjYxqqDHXzVWztcYTCbOzAqyUhSc12986509 = 38409943;    double gRXjYxqqDHXzVWztcYTCbOzAqyUhSc36192834 = -290598609;    double gRXjYxqqDHXzVWztcYTCbOzAqyUhSc55800390 = -684489016;    double gRXjYxqqDHXzVWztcYTCbOzAqyUhSc58016804 = -869427056;    double gRXjYxqqDHXzVWztcYTCbOzAqyUhSc26200435 = -25503002;    double gRXjYxqqDHXzVWztcYTCbOzAqyUhSc23178658 = -904356438;    double gRXjYxqqDHXzVWztcYTCbOzAqyUhSc78966207 = -994187618;    double gRXjYxqqDHXzVWztcYTCbOzAqyUhSc68019370 = 27133227;    double gRXjYxqqDHXzVWztcYTCbOzAqyUhSc53179203 = -204151550;    double gRXjYxqqDHXzVWztcYTCbOzAqyUhSc43174152 = -814929473;    double gRXjYxqqDHXzVWztcYTCbOzAqyUhSc68357927 = -478645091;    double gRXjYxqqDHXzVWztcYTCbOzAqyUhSc5882539 = -969128436;    double gRXjYxqqDHXzVWztcYTCbOzAqyUhSc62491038 = -945962783;    double gRXjYxqqDHXzVWztcYTCbOzAqyUhSc28963105 = 93924031;    double gRXjYxqqDHXzVWztcYTCbOzAqyUhSc86699552 = 42724144;     gRXjYxqqDHXzVWztcYTCbOzAqyUhSc16305152 = gRXjYxqqDHXzVWztcYTCbOzAqyUhSc50043649;     gRXjYxqqDHXzVWztcYTCbOzAqyUhSc50043649 = gRXjYxqqDHXzVWztcYTCbOzAqyUhSc44102397;     gRXjYxqqDHXzVWztcYTCbOzAqyUhSc44102397 = gRXjYxqqDHXzVWztcYTCbOzAqyUhSc2679916;     gRXjYxqqDHXzVWztcYTCbOzAqyUhSc2679916 = gRXjYxqqDHXzVWztcYTCbOzAqyUhSc71088411;     gRXjYxqqDHXzVWztcYTCbOzAqyUhSc71088411 = gRXjYxqqDHXzVWztcYTCbOzAqyUhSc36473057;     gRXjYxqqDHXzVWztcYTCbOzAqyUhSc36473057 = gRXjYxqqDHXzVWztcYTCbOzAqyUhSc98185377;     gRXjYxqqDHXzVWztcYTCbOzAqyUhSc98185377 = gRXjYxqqDHXzVWztcYTCbOzAqyUhSc99837243;     gRXjYxqqDHXzVWztcYTCbOzAqyUhSc99837243 = gRXjYxqqDHXzVWztcYTCbOzAqyUhSc51544512;     gRXjYxqqDHXzVWztcYTCbOzAqyUhSc51544512 = gRXjYxqqDHXzVWztcYTCbOzAqyUhSc43184973;     gRXjYxqqDHXzVWztcYTCbOzAqyUhSc43184973 = gRXjYxqqDHXzVWztcYTCbOzAqyUhSc83955235;     gRXjYxqqDHXzVWztcYTCbOzAqyUhSc83955235 = gRXjYxqqDHXzVWztcYTCbOzAqyUhSc41823325;     gRXjYxqqDHXzVWztcYTCbOzAqyUhSc41823325 = gRXjYxqqDHXzVWztcYTCbOzAqyUhSc67877428;     gRXjYxqqDHXzVWztcYTCbOzAqyUhSc67877428 = gRXjYxqqDHXzVWztcYTCbOzAqyUhSc16857962;     gRXjYxqqDHXzVWztcYTCbOzAqyUhSc16857962 = gRXjYxqqDHXzVWztcYTCbOzAqyUhSc67906943;     gRXjYxqqDHXzVWztcYTCbOzAqyUhSc67906943 = gRXjYxqqDHXzVWztcYTCbOzAqyUhSc34685103;     gRXjYxqqDHXzVWztcYTCbOzAqyUhSc34685103 = gRXjYxqqDHXzVWztcYTCbOzAqyUhSc62341980;     gRXjYxqqDHXzVWztcYTCbOzAqyUhSc62341980 = gRXjYxqqDHXzVWztcYTCbOzAqyUhSc12369007;     gRXjYxqqDHXzVWztcYTCbOzAqyUhSc12369007 = gRXjYxqqDHXzVWztcYTCbOzAqyUhSc10917823;     gRXjYxqqDHXzVWztcYTCbOzAqyUhSc10917823 = gRXjYxqqDHXzVWztcYTCbOzAqyUhSc93742828;     gRXjYxqqDHXzVWztcYTCbOzAqyUhSc93742828 = gRXjYxqqDHXzVWztcYTCbOzAqyUhSc77757103;     gRXjYxqqDHXzVWztcYTCbOzAqyUhSc77757103 = gRXjYxqqDHXzVWztcYTCbOzAqyUhSc2370457;     gRXjYxqqDHXzVWztcYTCbOzAqyUhSc2370457 = gRXjYxqqDHXzVWztcYTCbOzAqyUhSc28558640;     gRXjYxqqDHXzVWztcYTCbOzAqyUhSc28558640 = gRXjYxqqDHXzVWztcYTCbOzAqyUhSc8161758;     gRXjYxqqDHXzVWztcYTCbOzAqyUhSc8161758 = gRXjYxqqDHXzVWztcYTCbOzAqyUhSc28770339;     gRXjYxqqDHXzVWztcYTCbOzAqyUhSc28770339 = gRXjYxqqDHXzVWztcYTCbOzAqyUhSc29396905;     gRXjYxqqDHXzVWztcYTCbOzAqyUhSc29396905 = gRXjYxqqDHXzVWztcYTCbOzAqyUhSc95967356;     gRXjYxqqDHXzVWztcYTCbOzAqyUhSc95967356 = gRXjYxqqDHXzVWztcYTCbOzAqyUhSc26020682;     gRXjYxqqDHXzVWztcYTCbOzAqyUhSc26020682 = gRXjYxqqDHXzVWztcYTCbOzAqyUhSc52572227;     gRXjYxqqDHXzVWztcYTCbOzAqyUhSc52572227 = gRXjYxqqDHXzVWztcYTCbOzAqyUhSc13807029;     gRXjYxqqDHXzVWztcYTCbOzAqyUhSc13807029 = gRXjYxqqDHXzVWztcYTCbOzAqyUhSc95439655;     gRXjYxqqDHXzVWztcYTCbOzAqyUhSc95439655 = gRXjYxqqDHXzVWztcYTCbOzAqyUhSc72155877;     gRXjYxqqDHXzVWztcYTCbOzAqyUhSc72155877 = gRXjYxqqDHXzVWztcYTCbOzAqyUhSc76895690;     gRXjYxqqDHXzVWztcYTCbOzAqyUhSc76895690 = gRXjYxqqDHXzVWztcYTCbOzAqyUhSc21274441;     gRXjYxqqDHXzVWztcYTCbOzAqyUhSc21274441 = gRXjYxqqDHXzVWztcYTCbOzAqyUhSc40135130;     gRXjYxqqDHXzVWztcYTCbOzAqyUhSc40135130 = gRXjYxqqDHXzVWztcYTCbOzAqyUhSc44663668;     gRXjYxqqDHXzVWztcYTCbOzAqyUhSc44663668 = gRXjYxqqDHXzVWztcYTCbOzAqyUhSc14906848;     gRXjYxqqDHXzVWztcYTCbOzAqyUhSc14906848 = gRXjYxqqDHXzVWztcYTCbOzAqyUhSc41928947;     gRXjYxqqDHXzVWztcYTCbOzAqyUhSc41928947 = gRXjYxqqDHXzVWztcYTCbOzAqyUhSc94870710;     gRXjYxqqDHXzVWztcYTCbOzAqyUhSc94870710 = gRXjYxqqDHXzVWztcYTCbOzAqyUhSc83679853;     gRXjYxqqDHXzVWztcYTCbOzAqyUhSc83679853 = gRXjYxqqDHXzVWztcYTCbOzAqyUhSc40522624;     gRXjYxqqDHXzVWztcYTCbOzAqyUhSc40522624 = gRXjYxqqDHXzVWztcYTCbOzAqyUhSc53147554;     gRXjYxqqDHXzVWztcYTCbOzAqyUhSc53147554 = gRXjYxqqDHXzVWztcYTCbOzAqyUhSc228522;     gRXjYxqqDHXzVWztcYTCbOzAqyUhSc228522 = gRXjYxqqDHXzVWztcYTCbOzAqyUhSc76708423;     gRXjYxqqDHXzVWztcYTCbOzAqyUhSc76708423 = gRXjYxqqDHXzVWztcYTCbOzAqyUhSc98498910;     gRXjYxqqDHXzVWztcYTCbOzAqyUhSc98498910 = gRXjYxqqDHXzVWztcYTCbOzAqyUhSc59720738;     gRXjYxqqDHXzVWztcYTCbOzAqyUhSc59720738 = gRXjYxqqDHXzVWztcYTCbOzAqyUhSc831398;     gRXjYxqqDHXzVWztcYTCbOzAqyUhSc831398 = gRXjYxqqDHXzVWztcYTCbOzAqyUhSc33135674;     gRXjYxqqDHXzVWztcYTCbOzAqyUhSc33135674 = gRXjYxqqDHXzVWztcYTCbOzAqyUhSc93065367;     gRXjYxqqDHXzVWztcYTCbOzAqyUhSc93065367 = gRXjYxqqDHXzVWztcYTCbOzAqyUhSc86863642;     gRXjYxqqDHXzVWztcYTCbOzAqyUhSc86863642 = gRXjYxqqDHXzVWztcYTCbOzAqyUhSc63400721;     gRXjYxqqDHXzVWztcYTCbOzAqyUhSc63400721 = gRXjYxqqDHXzVWztcYTCbOzAqyUhSc82453146;     gRXjYxqqDHXzVWztcYTCbOzAqyUhSc82453146 = gRXjYxqqDHXzVWztcYTCbOzAqyUhSc35963043;     gRXjYxqqDHXzVWztcYTCbOzAqyUhSc35963043 = gRXjYxqqDHXzVWztcYTCbOzAqyUhSc21095301;     gRXjYxqqDHXzVWztcYTCbOzAqyUhSc21095301 = gRXjYxqqDHXzVWztcYTCbOzAqyUhSc63257637;     gRXjYxqqDHXzVWztcYTCbOzAqyUhSc63257637 = gRXjYxqqDHXzVWztcYTCbOzAqyUhSc13934695;     gRXjYxqqDHXzVWztcYTCbOzAqyUhSc13934695 = gRXjYxqqDHXzVWztcYTCbOzAqyUhSc21485010;     gRXjYxqqDHXzVWztcYTCbOzAqyUhSc21485010 = gRXjYxqqDHXzVWztcYTCbOzAqyUhSc35940640;     gRXjYxqqDHXzVWztcYTCbOzAqyUhSc35940640 = gRXjYxqqDHXzVWztcYTCbOzAqyUhSc73909577;     gRXjYxqqDHXzVWztcYTCbOzAqyUhSc73909577 = gRXjYxqqDHXzVWztcYTCbOzAqyUhSc41691507;     gRXjYxqqDHXzVWztcYTCbOzAqyUhSc41691507 = gRXjYxqqDHXzVWztcYTCbOzAqyUhSc40505701;     gRXjYxqqDHXzVWztcYTCbOzAqyUhSc40505701 = gRXjYxqqDHXzVWztcYTCbOzAqyUhSc72164696;     gRXjYxqqDHXzVWztcYTCbOzAqyUhSc72164696 = gRXjYxqqDHXzVWztcYTCbOzAqyUhSc47265016;     gRXjYxqqDHXzVWztcYTCbOzAqyUhSc47265016 = gRXjYxqqDHXzVWztcYTCbOzAqyUhSc37737484;     gRXjYxqqDHXzVWztcYTCbOzAqyUhSc37737484 = gRXjYxqqDHXzVWztcYTCbOzAqyUhSc47745318;     gRXjYxqqDHXzVWztcYTCbOzAqyUhSc47745318 = gRXjYxqqDHXzVWztcYTCbOzAqyUhSc11799358;     gRXjYxqqDHXzVWztcYTCbOzAqyUhSc11799358 = gRXjYxqqDHXzVWztcYTCbOzAqyUhSc64927634;     gRXjYxqqDHXzVWztcYTCbOzAqyUhSc64927634 = gRXjYxqqDHXzVWztcYTCbOzAqyUhSc46602988;     gRXjYxqqDHXzVWztcYTCbOzAqyUhSc46602988 = gRXjYxqqDHXzVWztcYTCbOzAqyUhSc76722832;     gRXjYxqqDHXzVWztcYTCbOzAqyUhSc76722832 = gRXjYxqqDHXzVWztcYTCbOzAqyUhSc23243276;     gRXjYxqqDHXzVWztcYTCbOzAqyUhSc23243276 = gRXjYxqqDHXzVWztcYTCbOzAqyUhSc19778256;     gRXjYxqqDHXzVWztcYTCbOzAqyUhSc19778256 = gRXjYxqqDHXzVWztcYTCbOzAqyUhSc20413034;     gRXjYxqqDHXzVWztcYTCbOzAqyUhSc20413034 = gRXjYxqqDHXzVWztcYTCbOzAqyUhSc17498297;     gRXjYxqqDHXzVWztcYTCbOzAqyUhSc17498297 = gRXjYxqqDHXzVWztcYTCbOzAqyUhSc27237970;     gRXjYxqqDHXzVWztcYTCbOzAqyUhSc27237970 = gRXjYxqqDHXzVWztcYTCbOzAqyUhSc53220204;     gRXjYxqqDHXzVWztcYTCbOzAqyUhSc53220204 = gRXjYxqqDHXzVWztcYTCbOzAqyUhSc24609549;     gRXjYxqqDHXzVWztcYTCbOzAqyUhSc24609549 = gRXjYxqqDHXzVWztcYTCbOzAqyUhSc2141935;     gRXjYxqqDHXzVWztcYTCbOzAqyUhSc2141935 = gRXjYxqqDHXzVWztcYTCbOzAqyUhSc51850217;     gRXjYxqqDHXzVWztcYTCbOzAqyUhSc51850217 = gRXjYxqqDHXzVWztcYTCbOzAqyUhSc9662848;     gRXjYxqqDHXzVWztcYTCbOzAqyUhSc9662848 = gRXjYxqqDHXzVWztcYTCbOzAqyUhSc69049600;     gRXjYxqqDHXzVWztcYTCbOzAqyUhSc69049600 = gRXjYxqqDHXzVWztcYTCbOzAqyUhSc28565507;     gRXjYxqqDHXzVWztcYTCbOzAqyUhSc28565507 = gRXjYxqqDHXzVWztcYTCbOzAqyUhSc62831683;     gRXjYxqqDHXzVWztcYTCbOzAqyUhSc62831683 = gRXjYxqqDHXzVWztcYTCbOzAqyUhSc32955314;     gRXjYxqqDHXzVWztcYTCbOzAqyUhSc32955314 = gRXjYxqqDHXzVWztcYTCbOzAqyUhSc65708585;     gRXjYxqqDHXzVWztcYTCbOzAqyUhSc65708585 = gRXjYxqqDHXzVWztcYTCbOzAqyUhSc50406307;     gRXjYxqqDHXzVWztcYTCbOzAqyUhSc50406307 = gRXjYxqqDHXzVWztcYTCbOzAqyUhSc12986509;     gRXjYxqqDHXzVWztcYTCbOzAqyUhSc12986509 = gRXjYxqqDHXzVWztcYTCbOzAqyUhSc36192834;     gRXjYxqqDHXzVWztcYTCbOzAqyUhSc36192834 = gRXjYxqqDHXzVWztcYTCbOzAqyUhSc55800390;     gRXjYxqqDHXzVWztcYTCbOzAqyUhSc55800390 = gRXjYxqqDHXzVWztcYTCbOzAqyUhSc58016804;     gRXjYxqqDHXzVWztcYTCbOzAqyUhSc58016804 = gRXjYxqqDHXzVWztcYTCbOzAqyUhSc26200435;     gRXjYxqqDHXzVWztcYTCbOzAqyUhSc26200435 = gRXjYxqqDHXzVWztcYTCbOzAqyUhSc23178658;     gRXjYxqqDHXzVWztcYTCbOzAqyUhSc23178658 = gRXjYxqqDHXzVWztcYTCbOzAqyUhSc78966207;     gRXjYxqqDHXzVWztcYTCbOzAqyUhSc78966207 = gRXjYxqqDHXzVWztcYTCbOzAqyUhSc68019370;     gRXjYxqqDHXzVWztcYTCbOzAqyUhSc68019370 = gRXjYxqqDHXzVWztcYTCbOzAqyUhSc53179203;     gRXjYxqqDHXzVWztcYTCbOzAqyUhSc53179203 = gRXjYxqqDHXzVWztcYTCbOzAqyUhSc43174152;     gRXjYxqqDHXzVWztcYTCbOzAqyUhSc43174152 = gRXjYxqqDHXzVWztcYTCbOzAqyUhSc68357927;     gRXjYxqqDHXzVWztcYTCbOzAqyUhSc68357927 = gRXjYxqqDHXzVWztcYTCbOzAqyUhSc5882539;     gRXjYxqqDHXzVWztcYTCbOzAqyUhSc5882539 = gRXjYxqqDHXzVWztcYTCbOzAqyUhSc62491038;     gRXjYxqqDHXzVWztcYTCbOzAqyUhSc62491038 = gRXjYxqqDHXzVWztcYTCbOzAqyUhSc28963105;     gRXjYxqqDHXzVWztcYTCbOzAqyUhSc28963105 = gRXjYxqqDHXzVWztcYTCbOzAqyUhSc86699552;     gRXjYxqqDHXzVWztcYTCbOzAqyUhSc86699552 = gRXjYxqqDHXzVWztcYTCbOzAqyUhSc16305152;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void zimgcBDGjoEjpAneDvvRDXkhP2861999() {     double YOmqBnEsJONuKNrcnywVVwNhvLxXwP67469234 = -879866199;    double YOmqBnEsJONuKNrcnywVVwNhvLxXwP81410252 = -957038164;    double YOmqBnEsJONuKNrcnywVVwNhvLxXwP11173961 = 58489568;    double YOmqBnEsJONuKNrcnywVVwNhvLxXwP79203635 = -67143608;    double YOmqBnEsJONuKNrcnywVVwNhvLxXwP18612523 = -824260639;    double YOmqBnEsJONuKNrcnywVVwNhvLxXwP5297043 = -536530249;    double YOmqBnEsJONuKNrcnywVVwNhvLxXwP77374402 = -54575528;    double YOmqBnEsJONuKNrcnywVVwNhvLxXwP99071542 = -269565274;    double YOmqBnEsJONuKNrcnywVVwNhvLxXwP84943261 = -959468101;    double YOmqBnEsJONuKNrcnywVVwNhvLxXwP78141252 = -880800953;    double YOmqBnEsJONuKNrcnywVVwNhvLxXwP32942948 = -350607486;    double YOmqBnEsJONuKNrcnywVVwNhvLxXwP26750314 = -856913456;    double YOmqBnEsJONuKNrcnywVVwNhvLxXwP52891898 = -261099487;    double YOmqBnEsJONuKNrcnywVVwNhvLxXwP53821616 = -140741894;    double YOmqBnEsJONuKNrcnywVVwNhvLxXwP25616829 = -595418765;    double YOmqBnEsJONuKNrcnywVVwNhvLxXwP24691736 = -250764411;    double YOmqBnEsJONuKNrcnywVVwNhvLxXwP17790973 = -864950952;    double YOmqBnEsJONuKNrcnywVVwNhvLxXwP77601348 = -432505600;    double YOmqBnEsJONuKNrcnywVVwNhvLxXwP54275535 = -23287037;    double YOmqBnEsJONuKNrcnywVVwNhvLxXwP88139524 = -78556298;    double YOmqBnEsJONuKNrcnywVVwNhvLxXwP59445058 = -802194170;    double YOmqBnEsJONuKNrcnywVVwNhvLxXwP83672936 = -49058056;    double YOmqBnEsJONuKNrcnywVVwNhvLxXwP72964632 = -572694033;    double YOmqBnEsJONuKNrcnywVVwNhvLxXwP55239951 = -42872103;    double YOmqBnEsJONuKNrcnywVVwNhvLxXwP67019306 = -560975345;    double YOmqBnEsJONuKNrcnywVVwNhvLxXwP4949255 = -688174481;    double YOmqBnEsJONuKNrcnywVVwNhvLxXwP30964757 = -956095690;    double YOmqBnEsJONuKNrcnywVVwNhvLxXwP89221806 = -260781431;    double YOmqBnEsJONuKNrcnywVVwNhvLxXwP81005099 = -93956022;    double YOmqBnEsJONuKNrcnywVVwNhvLxXwP96541880 = -659765456;    double YOmqBnEsJONuKNrcnywVVwNhvLxXwP72945603 = -738390177;    double YOmqBnEsJONuKNrcnywVVwNhvLxXwP31259599 = -403253564;    double YOmqBnEsJONuKNrcnywVVwNhvLxXwP4722218 = -745828259;    double YOmqBnEsJONuKNrcnywVVwNhvLxXwP28731421 = -736375426;    double YOmqBnEsJONuKNrcnywVVwNhvLxXwP25303144 = -745364292;    double YOmqBnEsJONuKNrcnywVVwNhvLxXwP97075558 = -197247122;    double YOmqBnEsJONuKNrcnywVVwNhvLxXwP26138986 = -890070011;    double YOmqBnEsJONuKNrcnywVVwNhvLxXwP62992000 = 1773114;    double YOmqBnEsJONuKNrcnywVVwNhvLxXwP12031465 = -444502885;    double YOmqBnEsJONuKNrcnywVVwNhvLxXwP73120093 = -367767521;    double YOmqBnEsJONuKNrcnywVVwNhvLxXwP22680854 = -609716038;    double YOmqBnEsJONuKNrcnywVVwNhvLxXwP26864395 = -809723720;    double YOmqBnEsJONuKNrcnywVVwNhvLxXwP58912321 = -649164784;    double YOmqBnEsJONuKNrcnywVVwNhvLxXwP77526879 = -180739765;    double YOmqBnEsJONuKNrcnywVVwNhvLxXwP66478714 = -92817218;    double YOmqBnEsJONuKNrcnywVVwNhvLxXwP32949351 = -168157227;    double YOmqBnEsJONuKNrcnywVVwNhvLxXwP28066099 = -966645781;    double YOmqBnEsJONuKNrcnywVVwNhvLxXwP24744797 = -200373721;    double YOmqBnEsJONuKNrcnywVVwNhvLxXwP13346397 = -322531081;    double YOmqBnEsJONuKNrcnywVVwNhvLxXwP14529056 = -662569711;    double YOmqBnEsJONuKNrcnywVVwNhvLxXwP96932586 = -755238216;    double YOmqBnEsJONuKNrcnywVVwNhvLxXwP51517563 = -370716931;    double YOmqBnEsJONuKNrcnywVVwNhvLxXwP47558599 = -101092632;    double YOmqBnEsJONuKNrcnywVVwNhvLxXwP69143389 = -25800167;    double YOmqBnEsJONuKNrcnywVVwNhvLxXwP43416940 = -485056808;    double YOmqBnEsJONuKNrcnywVVwNhvLxXwP83796298 = -730808144;    double YOmqBnEsJONuKNrcnywVVwNhvLxXwP8445621 = -284344132;    double YOmqBnEsJONuKNrcnywVVwNhvLxXwP55934010 = -898638330;    double YOmqBnEsJONuKNrcnywVVwNhvLxXwP12184329 = -506168263;    double YOmqBnEsJONuKNrcnywVVwNhvLxXwP13663269 = -36086159;    double YOmqBnEsJONuKNrcnywVVwNhvLxXwP74332286 = -580434560;    double YOmqBnEsJONuKNrcnywVVwNhvLxXwP88152596 = -793794098;    double YOmqBnEsJONuKNrcnywVVwNhvLxXwP18066444 = -75609253;    double YOmqBnEsJONuKNrcnywVVwNhvLxXwP88401381 = -199702646;    double YOmqBnEsJONuKNrcnywVVwNhvLxXwP5195649 = -42410777;    double YOmqBnEsJONuKNrcnywVVwNhvLxXwP1683349 = -947353922;    double YOmqBnEsJONuKNrcnywVVwNhvLxXwP22028097 = -11085198;    double YOmqBnEsJONuKNrcnywVVwNhvLxXwP24160478 = -524724061;    double YOmqBnEsJONuKNrcnywVVwNhvLxXwP28518472 = -395377602;    double YOmqBnEsJONuKNrcnywVVwNhvLxXwP28541271 = -298171644;    double YOmqBnEsJONuKNrcnywVVwNhvLxXwP98552750 = -360694401;    double YOmqBnEsJONuKNrcnywVVwNhvLxXwP54798972 = -766724066;    double YOmqBnEsJONuKNrcnywVVwNhvLxXwP65569884 = -988002716;    double YOmqBnEsJONuKNrcnywVVwNhvLxXwP81155441 = -655519517;    double YOmqBnEsJONuKNrcnywVVwNhvLxXwP65458671 = -468840260;    double YOmqBnEsJONuKNrcnywVVwNhvLxXwP32580663 = -992470451;    double YOmqBnEsJONuKNrcnywVVwNhvLxXwP24760616 = -399893273;    double YOmqBnEsJONuKNrcnywVVwNhvLxXwP95437752 = -291954268;    double YOmqBnEsJONuKNrcnywVVwNhvLxXwP88761236 = -950054886;    double YOmqBnEsJONuKNrcnywVVwNhvLxXwP34069956 = -292818119;    double YOmqBnEsJONuKNrcnywVVwNhvLxXwP76883156 = -721528701;    double YOmqBnEsJONuKNrcnywVVwNhvLxXwP6219960 = -655721969;    double YOmqBnEsJONuKNrcnywVVwNhvLxXwP75875410 = -938250350;    double YOmqBnEsJONuKNrcnywVVwNhvLxXwP66476043 = -431386311;    double YOmqBnEsJONuKNrcnywVVwNhvLxXwP99609293 = -904527240;    double YOmqBnEsJONuKNrcnywVVwNhvLxXwP21428040 = -267673246;    double YOmqBnEsJONuKNrcnywVVwNhvLxXwP83701000 = -202160932;    double YOmqBnEsJONuKNrcnywVVwNhvLxXwP35578829 = -620028092;    double YOmqBnEsJONuKNrcnywVVwNhvLxXwP85314480 = -151318619;    double YOmqBnEsJONuKNrcnywVVwNhvLxXwP41506845 = 85443851;    double YOmqBnEsJONuKNrcnywVVwNhvLxXwP88629938 = -912902990;    double YOmqBnEsJONuKNrcnywVVwNhvLxXwP70204976 = -991431682;    double YOmqBnEsJONuKNrcnywVVwNhvLxXwP50807671 = -492058623;    double YOmqBnEsJONuKNrcnywVVwNhvLxXwP98368195 = -308416726;    double YOmqBnEsJONuKNrcnywVVwNhvLxXwP98787807 = -787332961;    double YOmqBnEsJONuKNrcnywVVwNhvLxXwP34528258 = -815921941;    double YOmqBnEsJONuKNrcnywVVwNhvLxXwP8797952 = -634114467;    double YOmqBnEsJONuKNrcnywVVwNhvLxXwP70510939 = -349462138;    double YOmqBnEsJONuKNrcnywVVwNhvLxXwP72331230 = -38328988;    double YOmqBnEsJONuKNrcnywVVwNhvLxXwP64795366 = -879866199;     YOmqBnEsJONuKNrcnywVVwNhvLxXwP67469234 = YOmqBnEsJONuKNrcnywVVwNhvLxXwP81410252;     YOmqBnEsJONuKNrcnywVVwNhvLxXwP81410252 = YOmqBnEsJONuKNrcnywVVwNhvLxXwP11173961;     YOmqBnEsJONuKNrcnywVVwNhvLxXwP11173961 = YOmqBnEsJONuKNrcnywVVwNhvLxXwP79203635;     YOmqBnEsJONuKNrcnywVVwNhvLxXwP79203635 = YOmqBnEsJONuKNrcnywVVwNhvLxXwP18612523;     YOmqBnEsJONuKNrcnywVVwNhvLxXwP18612523 = YOmqBnEsJONuKNrcnywVVwNhvLxXwP5297043;     YOmqBnEsJONuKNrcnywVVwNhvLxXwP5297043 = YOmqBnEsJONuKNrcnywVVwNhvLxXwP77374402;     YOmqBnEsJONuKNrcnywVVwNhvLxXwP77374402 = YOmqBnEsJONuKNrcnywVVwNhvLxXwP99071542;     YOmqBnEsJONuKNrcnywVVwNhvLxXwP99071542 = YOmqBnEsJONuKNrcnywVVwNhvLxXwP84943261;     YOmqBnEsJONuKNrcnywVVwNhvLxXwP84943261 = YOmqBnEsJONuKNrcnywVVwNhvLxXwP78141252;     YOmqBnEsJONuKNrcnywVVwNhvLxXwP78141252 = YOmqBnEsJONuKNrcnywVVwNhvLxXwP32942948;     YOmqBnEsJONuKNrcnywVVwNhvLxXwP32942948 = YOmqBnEsJONuKNrcnywVVwNhvLxXwP26750314;     YOmqBnEsJONuKNrcnywVVwNhvLxXwP26750314 = YOmqBnEsJONuKNrcnywVVwNhvLxXwP52891898;     YOmqBnEsJONuKNrcnywVVwNhvLxXwP52891898 = YOmqBnEsJONuKNrcnywVVwNhvLxXwP53821616;     YOmqBnEsJONuKNrcnywVVwNhvLxXwP53821616 = YOmqBnEsJONuKNrcnywVVwNhvLxXwP25616829;     YOmqBnEsJONuKNrcnywVVwNhvLxXwP25616829 = YOmqBnEsJONuKNrcnywVVwNhvLxXwP24691736;     YOmqBnEsJONuKNrcnywVVwNhvLxXwP24691736 = YOmqBnEsJONuKNrcnywVVwNhvLxXwP17790973;     YOmqBnEsJONuKNrcnywVVwNhvLxXwP17790973 = YOmqBnEsJONuKNrcnywVVwNhvLxXwP77601348;     YOmqBnEsJONuKNrcnywVVwNhvLxXwP77601348 = YOmqBnEsJONuKNrcnywVVwNhvLxXwP54275535;     YOmqBnEsJONuKNrcnywVVwNhvLxXwP54275535 = YOmqBnEsJONuKNrcnywVVwNhvLxXwP88139524;     YOmqBnEsJONuKNrcnywVVwNhvLxXwP88139524 = YOmqBnEsJONuKNrcnywVVwNhvLxXwP59445058;     YOmqBnEsJONuKNrcnywVVwNhvLxXwP59445058 = YOmqBnEsJONuKNrcnywVVwNhvLxXwP83672936;     YOmqBnEsJONuKNrcnywVVwNhvLxXwP83672936 = YOmqBnEsJONuKNrcnywVVwNhvLxXwP72964632;     YOmqBnEsJONuKNrcnywVVwNhvLxXwP72964632 = YOmqBnEsJONuKNrcnywVVwNhvLxXwP55239951;     YOmqBnEsJONuKNrcnywVVwNhvLxXwP55239951 = YOmqBnEsJONuKNrcnywVVwNhvLxXwP67019306;     YOmqBnEsJONuKNrcnywVVwNhvLxXwP67019306 = YOmqBnEsJONuKNrcnywVVwNhvLxXwP4949255;     YOmqBnEsJONuKNrcnywVVwNhvLxXwP4949255 = YOmqBnEsJONuKNrcnywVVwNhvLxXwP30964757;     YOmqBnEsJONuKNrcnywVVwNhvLxXwP30964757 = YOmqBnEsJONuKNrcnywVVwNhvLxXwP89221806;     YOmqBnEsJONuKNrcnywVVwNhvLxXwP89221806 = YOmqBnEsJONuKNrcnywVVwNhvLxXwP81005099;     YOmqBnEsJONuKNrcnywVVwNhvLxXwP81005099 = YOmqBnEsJONuKNrcnywVVwNhvLxXwP96541880;     YOmqBnEsJONuKNrcnywVVwNhvLxXwP96541880 = YOmqBnEsJONuKNrcnywVVwNhvLxXwP72945603;     YOmqBnEsJONuKNrcnywVVwNhvLxXwP72945603 = YOmqBnEsJONuKNrcnywVVwNhvLxXwP31259599;     YOmqBnEsJONuKNrcnywVVwNhvLxXwP31259599 = YOmqBnEsJONuKNrcnywVVwNhvLxXwP4722218;     YOmqBnEsJONuKNrcnywVVwNhvLxXwP4722218 = YOmqBnEsJONuKNrcnywVVwNhvLxXwP28731421;     YOmqBnEsJONuKNrcnywVVwNhvLxXwP28731421 = YOmqBnEsJONuKNrcnywVVwNhvLxXwP25303144;     YOmqBnEsJONuKNrcnywVVwNhvLxXwP25303144 = YOmqBnEsJONuKNrcnywVVwNhvLxXwP97075558;     YOmqBnEsJONuKNrcnywVVwNhvLxXwP97075558 = YOmqBnEsJONuKNrcnywVVwNhvLxXwP26138986;     YOmqBnEsJONuKNrcnywVVwNhvLxXwP26138986 = YOmqBnEsJONuKNrcnywVVwNhvLxXwP62992000;     YOmqBnEsJONuKNrcnywVVwNhvLxXwP62992000 = YOmqBnEsJONuKNrcnywVVwNhvLxXwP12031465;     YOmqBnEsJONuKNrcnywVVwNhvLxXwP12031465 = YOmqBnEsJONuKNrcnywVVwNhvLxXwP73120093;     YOmqBnEsJONuKNrcnywVVwNhvLxXwP73120093 = YOmqBnEsJONuKNrcnywVVwNhvLxXwP22680854;     YOmqBnEsJONuKNrcnywVVwNhvLxXwP22680854 = YOmqBnEsJONuKNrcnywVVwNhvLxXwP26864395;     YOmqBnEsJONuKNrcnywVVwNhvLxXwP26864395 = YOmqBnEsJONuKNrcnywVVwNhvLxXwP58912321;     YOmqBnEsJONuKNrcnywVVwNhvLxXwP58912321 = YOmqBnEsJONuKNrcnywVVwNhvLxXwP77526879;     YOmqBnEsJONuKNrcnywVVwNhvLxXwP77526879 = YOmqBnEsJONuKNrcnywVVwNhvLxXwP66478714;     YOmqBnEsJONuKNrcnywVVwNhvLxXwP66478714 = YOmqBnEsJONuKNrcnywVVwNhvLxXwP32949351;     YOmqBnEsJONuKNrcnywVVwNhvLxXwP32949351 = YOmqBnEsJONuKNrcnywVVwNhvLxXwP28066099;     YOmqBnEsJONuKNrcnywVVwNhvLxXwP28066099 = YOmqBnEsJONuKNrcnywVVwNhvLxXwP24744797;     YOmqBnEsJONuKNrcnywVVwNhvLxXwP24744797 = YOmqBnEsJONuKNrcnywVVwNhvLxXwP13346397;     YOmqBnEsJONuKNrcnywVVwNhvLxXwP13346397 = YOmqBnEsJONuKNrcnywVVwNhvLxXwP14529056;     YOmqBnEsJONuKNrcnywVVwNhvLxXwP14529056 = YOmqBnEsJONuKNrcnywVVwNhvLxXwP96932586;     YOmqBnEsJONuKNrcnywVVwNhvLxXwP96932586 = YOmqBnEsJONuKNrcnywVVwNhvLxXwP51517563;     YOmqBnEsJONuKNrcnywVVwNhvLxXwP51517563 = YOmqBnEsJONuKNrcnywVVwNhvLxXwP47558599;     YOmqBnEsJONuKNrcnywVVwNhvLxXwP47558599 = YOmqBnEsJONuKNrcnywVVwNhvLxXwP69143389;     YOmqBnEsJONuKNrcnywVVwNhvLxXwP69143389 = YOmqBnEsJONuKNrcnywVVwNhvLxXwP43416940;     YOmqBnEsJONuKNrcnywVVwNhvLxXwP43416940 = YOmqBnEsJONuKNrcnywVVwNhvLxXwP83796298;     YOmqBnEsJONuKNrcnywVVwNhvLxXwP83796298 = YOmqBnEsJONuKNrcnywVVwNhvLxXwP8445621;     YOmqBnEsJONuKNrcnywVVwNhvLxXwP8445621 = YOmqBnEsJONuKNrcnywVVwNhvLxXwP55934010;     YOmqBnEsJONuKNrcnywVVwNhvLxXwP55934010 = YOmqBnEsJONuKNrcnywVVwNhvLxXwP12184329;     YOmqBnEsJONuKNrcnywVVwNhvLxXwP12184329 = YOmqBnEsJONuKNrcnywVVwNhvLxXwP13663269;     YOmqBnEsJONuKNrcnywVVwNhvLxXwP13663269 = YOmqBnEsJONuKNrcnywVVwNhvLxXwP74332286;     YOmqBnEsJONuKNrcnywVVwNhvLxXwP74332286 = YOmqBnEsJONuKNrcnywVVwNhvLxXwP88152596;     YOmqBnEsJONuKNrcnywVVwNhvLxXwP88152596 = YOmqBnEsJONuKNrcnywVVwNhvLxXwP18066444;     YOmqBnEsJONuKNrcnywVVwNhvLxXwP18066444 = YOmqBnEsJONuKNrcnywVVwNhvLxXwP88401381;     YOmqBnEsJONuKNrcnywVVwNhvLxXwP88401381 = YOmqBnEsJONuKNrcnywVVwNhvLxXwP5195649;     YOmqBnEsJONuKNrcnywVVwNhvLxXwP5195649 = YOmqBnEsJONuKNrcnywVVwNhvLxXwP1683349;     YOmqBnEsJONuKNrcnywVVwNhvLxXwP1683349 = YOmqBnEsJONuKNrcnywVVwNhvLxXwP22028097;     YOmqBnEsJONuKNrcnywVVwNhvLxXwP22028097 = YOmqBnEsJONuKNrcnywVVwNhvLxXwP24160478;     YOmqBnEsJONuKNrcnywVVwNhvLxXwP24160478 = YOmqBnEsJONuKNrcnywVVwNhvLxXwP28518472;     YOmqBnEsJONuKNrcnywVVwNhvLxXwP28518472 = YOmqBnEsJONuKNrcnywVVwNhvLxXwP28541271;     YOmqBnEsJONuKNrcnywVVwNhvLxXwP28541271 = YOmqBnEsJONuKNrcnywVVwNhvLxXwP98552750;     YOmqBnEsJONuKNrcnywVVwNhvLxXwP98552750 = YOmqBnEsJONuKNrcnywVVwNhvLxXwP54798972;     YOmqBnEsJONuKNrcnywVVwNhvLxXwP54798972 = YOmqBnEsJONuKNrcnywVVwNhvLxXwP65569884;     YOmqBnEsJONuKNrcnywVVwNhvLxXwP65569884 = YOmqBnEsJONuKNrcnywVVwNhvLxXwP81155441;     YOmqBnEsJONuKNrcnywVVwNhvLxXwP81155441 = YOmqBnEsJONuKNrcnywVVwNhvLxXwP65458671;     YOmqBnEsJONuKNrcnywVVwNhvLxXwP65458671 = YOmqBnEsJONuKNrcnywVVwNhvLxXwP32580663;     YOmqBnEsJONuKNrcnywVVwNhvLxXwP32580663 = YOmqBnEsJONuKNrcnywVVwNhvLxXwP24760616;     YOmqBnEsJONuKNrcnywVVwNhvLxXwP24760616 = YOmqBnEsJONuKNrcnywVVwNhvLxXwP95437752;     YOmqBnEsJONuKNrcnywVVwNhvLxXwP95437752 = YOmqBnEsJONuKNrcnywVVwNhvLxXwP88761236;     YOmqBnEsJONuKNrcnywVVwNhvLxXwP88761236 = YOmqBnEsJONuKNrcnywVVwNhvLxXwP34069956;     YOmqBnEsJONuKNrcnywVVwNhvLxXwP34069956 = YOmqBnEsJONuKNrcnywVVwNhvLxXwP76883156;     YOmqBnEsJONuKNrcnywVVwNhvLxXwP76883156 = YOmqBnEsJONuKNrcnywVVwNhvLxXwP6219960;     YOmqBnEsJONuKNrcnywVVwNhvLxXwP6219960 = YOmqBnEsJONuKNrcnywVVwNhvLxXwP75875410;     YOmqBnEsJONuKNrcnywVVwNhvLxXwP75875410 = YOmqBnEsJONuKNrcnywVVwNhvLxXwP66476043;     YOmqBnEsJONuKNrcnywVVwNhvLxXwP66476043 = YOmqBnEsJONuKNrcnywVVwNhvLxXwP99609293;     YOmqBnEsJONuKNrcnywVVwNhvLxXwP99609293 = YOmqBnEsJONuKNrcnywVVwNhvLxXwP21428040;     YOmqBnEsJONuKNrcnywVVwNhvLxXwP21428040 = YOmqBnEsJONuKNrcnywVVwNhvLxXwP83701000;     YOmqBnEsJONuKNrcnywVVwNhvLxXwP83701000 = YOmqBnEsJONuKNrcnywVVwNhvLxXwP35578829;     YOmqBnEsJONuKNrcnywVVwNhvLxXwP35578829 = YOmqBnEsJONuKNrcnywVVwNhvLxXwP85314480;     YOmqBnEsJONuKNrcnywVVwNhvLxXwP85314480 = YOmqBnEsJONuKNrcnywVVwNhvLxXwP41506845;     YOmqBnEsJONuKNrcnywVVwNhvLxXwP41506845 = YOmqBnEsJONuKNrcnywVVwNhvLxXwP88629938;     YOmqBnEsJONuKNrcnywVVwNhvLxXwP88629938 = YOmqBnEsJONuKNrcnywVVwNhvLxXwP70204976;     YOmqBnEsJONuKNrcnywVVwNhvLxXwP70204976 = YOmqBnEsJONuKNrcnywVVwNhvLxXwP50807671;     YOmqBnEsJONuKNrcnywVVwNhvLxXwP50807671 = YOmqBnEsJONuKNrcnywVVwNhvLxXwP98368195;     YOmqBnEsJONuKNrcnywVVwNhvLxXwP98368195 = YOmqBnEsJONuKNrcnywVVwNhvLxXwP98787807;     YOmqBnEsJONuKNrcnywVVwNhvLxXwP98787807 = YOmqBnEsJONuKNrcnywVVwNhvLxXwP34528258;     YOmqBnEsJONuKNrcnywVVwNhvLxXwP34528258 = YOmqBnEsJONuKNrcnywVVwNhvLxXwP8797952;     YOmqBnEsJONuKNrcnywVVwNhvLxXwP8797952 = YOmqBnEsJONuKNrcnywVVwNhvLxXwP70510939;     YOmqBnEsJONuKNrcnywVVwNhvLxXwP70510939 = YOmqBnEsJONuKNrcnywVVwNhvLxXwP72331230;     YOmqBnEsJONuKNrcnywVVwNhvLxXwP72331230 = YOmqBnEsJONuKNrcnywVVwNhvLxXwP64795366;     YOmqBnEsJONuKNrcnywVVwNhvLxXwP64795366 = YOmqBnEsJONuKNrcnywVVwNhvLxXwP67469234;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void GivLtbVLsTxhgehESXmjKWivv12466725() {     double cUobLNoSwytOkMZUWdgMZGKJNwwvwL89291455 = -348081531;    double cUobLNoSwytOkMZUWdgMZGKJNwwvwL42878056 = -239637017;    double cUobLNoSwytOkMZUWdgMZGKJNwwvwL56901231 = 11272036;    double cUobLNoSwytOkMZUWdgMZGKJNwwvwL10578782 = -271927783;    double cUobLNoSwytOkMZUWdgMZGKJNwwvwL78746854 = -701511561;    double cUobLNoSwytOkMZUWdgMZGKJNwwvwL29315358 = -548073407;    double cUobLNoSwytOkMZUWdgMZGKJNwwvwL6394988 = -117893651;    double cUobLNoSwytOkMZUWdgMZGKJNwwvwL85934171 = -277746122;    double cUobLNoSwytOkMZUWdgMZGKJNwwvwL81466901 = -945263519;    double cUobLNoSwytOkMZUWdgMZGKJNwwvwL39424478 = -751019351;    double cUobLNoSwytOkMZUWdgMZGKJNwwvwL3859217 = 93634812;    double cUobLNoSwytOkMZUWdgMZGKJNwwvwL42932197 = -960095062;    double cUobLNoSwytOkMZUWdgMZGKJNwwvwL85880840 = -799133276;    double cUobLNoSwytOkMZUWdgMZGKJNwwvwL20788084 = -990818691;    double cUobLNoSwytOkMZUWdgMZGKJNwwvwL20874624 = -522260684;    double cUobLNoSwytOkMZUWdgMZGKJNwwvwL72662462 = -693130952;    double cUobLNoSwytOkMZUWdgMZGKJNwwvwL11240032 = -150775670;    double cUobLNoSwytOkMZUWdgMZGKJNwwvwL40126651 = -354226518;    double cUobLNoSwytOkMZUWdgMZGKJNwwvwL58912759 = -96422694;    double cUobLNoSwytOkMZUWdgMZGKJNwwvwL69249166 = -569801354;    double cUobLNoSwytOkMZUWdgMZGKJNwwvwL16599344 = -534272873;    double cUobLNoSwytOkMZUWdgMZGKJNwwvwL48074914 = -119809220;    double cUobLNoSwytOkMZUWdgMZGKJNwwvwL82436036 = -128721388;    double cUobLNoSwytOkMZUWdgMZGKJNwwvwL92517572 = -452970969;    double cUobLNoSwytOkMZUWdgMZGKJNwwvwL40949974 = -471872317;    double cUobLNoSwytOkMZUWdgMZGKJNwwvwL94525108 = 84639991;    double cUobLNoSwytOkMZUWdgMZGKJNwwvwL4001361 = -482899734;    double cUobLNoSwytOkMZUWdgMZGKJNwwvwL24801633 = -125229663;    double cUobLNoSwytOkMZUWdgMZGKJNwwvwL28902012 = -860901940;    double cUobLNoSwytOkMZUWdgMZGKJNwwvwL42358958 = 64020350;    double cUobLNoSwytOkMZUWdgMZGKJNwwvwL24110869 = -44117924;    double cUobLNoSwytOkMZUWdgMZGKJNwwvwL50150925 = -179142395;    double cUobLNoSwytOkMZUWdgMZGKJNwwvwL30041682 = -488432142;    double cUobLNoSwytOkMZUWdgMZGKJNwwvwL1270538 = -412195054;    double cUobLNoSwytOkMZUWdgMZGKJNwwvwL6137357 = -895182895;    double cUobLNoSwytOkMZUWdgMZGKJNwwvwL66652518 = -211663102;    double cUobLNoSwytOkMZUWdgMZGKJNwwvwL69221242 = -939687107;    double cUobLNoSwytOkMZUWdgMZGKJNwwvwL66929862 = -579769643;    double cUobLNoSwytOkMZUWdgMZGKJNwwvwL72411910 = -216908165;    double cUobLNoSwytOkMZUWdgMZGKJNwwvwL85790739 = -825316522;    double cUobLNoSwytOkMZUWdgMZGKJNwwvwL77056699 = 56144704;    double cUobLNoSwytOkMZUWdgMZGKJNwwvwL43366566 = -497189797;    double cUobLNoSwytOkMZUWdgMZGKJNwwvwL6279720 = -693131599;    double cUobLNoSwytOkMZUWdgMZGKJNwwvwL25621738 = -89545934;    double cUobLNoSwytOkMZUWdgMZGKJNwwvwL46394526 = -279505847;    double cUobLNoSwytOkMZUWdgMZGKJNwwvwL72155830 = -971589457;    double cUobLNoSwytOkMZUWdgMZGKJNwwvwL53734210 = -47653301;    double cUobLNoSwytOkMZUWdgMZGKJNwwvwL6584549 = 61130290;    double cUobLNoSwytOkMZUWdgMZGKJNwwvwL20410490 = -507647503;    double cUobLNoSwytOkMZUWdgMZGKJNwwvwL30576532 = -641624896;    double cUobLNoSwytOkMZUWdgMZGKJNwwvwL85394405 = -799127542;    double cUobLNoSwytOkMZUWdgMZGKJNwwvwL47906227 = -696095012;    double cUobLNoSwytOkMZUWdgMZGKJNwwvwL38781463 = -64687772;    double cUobLNoSwytOkMZUWdgMZGKJNwwvwL97168511 = -216809227;    double cUobLNoSwytOkMZUWdgMZGKJNwwvwL95867381 = -446178557;    double cUobLNoSwytOkMZUWdgMZGKJNwwvwL41216541 = -128272311;    double cUobLNoSwytOkMZUWdgMZGKJNwwvwL60442020 = -10915630;    double cUobLNoSwytOkMZUWdgMZGKJNwwvwL64383658 = -535756996;    double cUobLNoSwytOkMZUWdgMZGKJNwwvwL69628808 = -800055467;    double cUobLNoSwytOkMZUWdgMZGKJNwwvwL84221745 = -686151553;    double cUobLNoSwytOkMZUWdgMZGKJNwwvwL25313998 = 34826327;    double cUobLNoSwytOkMZUWdgMZGKJNwwvwL81593355 = -992663989;    double cUobLNoSwytOkMZUWdgMZGKJNwwvwL57032160 = -416844183;    double cUobLNoSwytOkMZUWdgMZGKJNwwvwL39107944 = -909283870;    double cUobLNoSwytOkMZUWdgMZGKJNwwvwL15313609 = -606901427;    double cUobLNoSwytOkMZUWdgMZGKJNwwvwL53708292 = -727222794;    double cUobLNoSwytOkMZUWdgMZGKJNwwvwL12890515 = -371662921;    double cUobLNoSwytOkMZUWdgMZGKJNwwvwL84610302 = -286938223;    double cUobLNoSwytOkMZUWdgMZGKJNwwvwL14650727 = 4364203;    double cUobLNoSwytOkMZUWdgMZGKJNwwvwL54222106 = -210597583;    double cUobLNoSwytOkMZUWdgMZGKJNwwvwL3441220 = -753443845;    double cUobLNoSwytOkMZUWdgMZGKJNwwvwL44310170 = -571006027;    double cUobLNoSwytOkMZUWdgMZGKJNwwvwL67714741 = -37318353;    double cUobLNoSwytOkMZUWdgMZGKJNwwvwL73122019 = -271106173;    double cUobLNoSwytOkMZUWdgMZGKJNwwvwL92192467 = -525946058;    double cUobLNoSwytOkMZUWdgMZGKJNwwvwL73232777 = 62916924;    double cUobLNoSwytOkMZUWdgMZGKJNwwvwL41795195 = -426677622;    double cUobLNoSwytOkMZUWdgMZGKJNwwvwL56814298 = 60824546;    double cUobLNoSwytOkMZUWdgMZGKJNwwvwL46123047 = -73465122;    double cUobLNoSwytOkMZUWdgMZGKJNwwvwL68794143 = -500282861;    double cUobLNoSwytOkMZUWdgMZGKJNwwvwL40790899 = -867706709;    double cUobLNoSwytOkMZUWdgMZGKJNwwvwL97416811 = -444030025;    double cUobLNoSwytOkMZUWdgMZGKJNwwvwL4391144 = -617582161;    double cUobLNoSwytOkMZUWdgMZGKJNwwvwL98325479 = -119277044;    double cUobLNoSwytOkMZUWdgMZGKJNwwvwL56964552 = -136852108;    double cUobLNoSwytOkMZUWdgMZGKJNwwvwL76204641 = -348022913;    double cUobLNoSwytOkMZUWdgMZGKJNwwvwL11369462 = -14454623;    double cUobLNoSwytOkMZUWdgMZGKJNwwvwL32873171 = -171622915;    double cUobLNoSwytOkMZUWdgMZGKJNwwvwL5403156 = -966016497;    double cUobLNoSwytOkMZUWdgMZGKJNwwvwL64920815 = -666910584;    double cUobLNoSwytOkMZUWdgMZGKJNwwvwL6210499 = -100747472;    double cUobLNoSwytOkMZUWdgMZGKJNwwvwL4837584 = -303930112;    double cUobLNoSwytOkMZUWdgMZGKJNwwvwL97301054 = -779714177;    double cUobLNoSwytOkMZUWdgMZGKJNwwvwL88190164 = -530756613;    double cUobLNoSwytOkMZUWdgMZGKJNwwvwL60476741 = -760142849;    double cUobLNoSwytOkMZUWdgMZGKJNwwvwL95463344 = 48808692;    double cUobLNoSwytOkMZUWdgMZGKJNwwvwL86334406 = 19654386;    double cUobLNoSwytOkMZUWdgMZGKJNwwvwL67171776 = -783847729;    double cUobLNoSwytOkMZUWdgMZGKJNwwvwL10308130 = -482644508;    double cUobLNoSwytOkMZUWdgMZGKJNwwvwL92686233 = -348081531;     cUobLNoSwytOkMZUWdgMZGKJNwwvwL89291455 = cUobLNoSwytOkMZUWdgMZGKJNwwvwL42878056;     cUobLNoSwytOkMZUWdgMZGKJNwwvwL42878056 = cUobLNoSwytOkMZUWdgMZGKJNwwvwL56901231;     cUobLNoSwytOkMZUWdgMZGKJNwwvwL56901231 = cUobLNoSwytOkMZUWdgMZGKJNwwvwL10578782;     cUobLNoSwytOkMZUWdgMZGKJNwwvwL10578782 = cUobLNoSwytOkMZUWdgMZGKJNwwvwL78746854;     cUobLNoSwytOkMZUWdgMZGKJNwwvwL78746854 = cUobLNoSwytOkMZUWdgMZGKJNwwvwL29315358;     cUobLNoSwytOkMZUWdgMZGKJNwwvwL29315358 = cUobLNoSwytOkMZUWdgMZGKJNwwvwL6394988;     cUobLNoSwytOkMZUWdgMZGKJNwwvwL6394988 = cUobLNoSwytOkMZUWdgMZGKJNwwvwL85934171;     cUobLNoSwytOkMZUWdgMZGKJNwwvwL85934171 = cUobLNoSwytOkMZUWdgMZGKJNwwvwL81466901;     cUobLNoSwytOkMZUWdgMZGKJNwwvwL81466901 = cUobLNoSwytOkMZUWdgMZGKJNwwvwL39424478;     cUobLNoSwytOkMZUWdgMZGKJNwwvwL39424478 = cUobLNoSwytOkMZUWdgMZGKJNwwvwL3859217;     cUobLNoSwytOkMZUWdgMZGKJNwwvwL3859217 = cUobLNoSwytOkMZUWdgMZGKJNwwvwL42932197;     cUobLNoSwytOkMZUWdgMZGKJNwwvwL42932197 = cUobLNoSwytOkMZUWdgMZGKJNwwvwL85880840;     cUobLNoSwytOkMZUWdgMZGKJNwwvwL85880840 = cUobLNoSwytOkMZUWdgMZGKJNwwvwL20788084;     cUobLNoSwytOkMZUWdgMZGKJNwwvwL20788084 = cUobLNoSwytOkMZUWdgMZGKJNwwvwL20874624;     cUobLNoSwytOkMZUWdgMZGKJNwwvwL20874624 = cUobLNoSwytOkMZUWdgMZGKJNwwvwL72662462;     cUobLNoSwytOkMZUWdgMZGKJNwwvwL72662462 = cUobLNoSwytOkMZUWdgMZGKJNwwvwL11240032;     cUobLNoSwytOkMZUWdgMZGKJNwwvwL11240032 = cUobLNoSwytOkMZUWdgMZGKJNwwvwL40126651;     cUobLNoSwytOkMZUWdgMZGKJNwwvwL40126651 = cUobLNoSwytOkMZUWdgMZGKJNwwvwL58912759;     cUobLNoSwytOkMZUWdgMZGKJNwwvwL58912759 = cUobLNoSwytOkMZUWdgMZGKJNwwvwL69249166;     cUobLNoSwytOkMZUWdgMZGKJNwwvwL69249166 = cUobLNoSwytOkMZUWdgMZGKJNwwvwL16599344;     cUobLNoSwytOkMZUWdgMZGKJNwwvwL16599344 = cUobLNoSwytOkMZUWdgMZGKJNwwvwL48074914;     cUobLNoSwytOkMZUWdgMZGKJNwwvwL48074914 = cUobLNoSwytOkMZUWdgMZGKJNwwvwL82436036;     cUobLNoSwytOkMZUWdgMZGKJNwwvwL82436036 = cUobLNoSwytOkMZUWdgMZGKJNwwvwL92517572;     cUobLNoSwytOkMZUWdgMZGKJNwwvwL92517572 = cUobLNoSwytOkMZUWdgMZGKJNwwvwL40949974;     cUobLNoSwytOkMZUWdgMZGKJNwwvwL40949974 = cUobLNoSwytOkMZUWdgMZGKJNwwvwL94525108;     cUobLNoSwytOkMZUWdgMZGKJNwwvwL94525108 = cUobLNoSwytOkMZUWdgMZGKJNwwvwL4001361;     cUobLNoSwytOkMZUWdgMZGKJNwwvwL4001361 = cUobLNoSwytOkMZUWdgMZGKJNwwvwL24801633;     cUobLNoSwytOkMZUWdgMZGKJNwwvwL24801633 = cUobLNoSwytOkMZUWdgMZGKJNwwvwL28902012;     cUobLNoSwytOkMZUWdgMZGKJNwwvwL28902012 = cUobLNoSwytOkMZUWdgMZGKJNwwvwL42358958;     cUobLNoSwytOkMZUWdgMZGKJNwwvwL42358958 = cUobLNoSwytOkMZUWdgMZGKJNwwvwL24110869;     cUobLNoSwytOkMZUWdgMZGKJNwwvwL24110869 = cUobLNoSwytOkMZUWdgMZGKJNwwvwL50150925;     cUobLNoSwytOkMZUWdgMZGKJNwwvwL50150925 = cUobLNoSwytOkMZUWdgMZGKJNwwvwL30041682;     cUobLNoSwytOkMZUWdgMZGKJNwwvwL30041682 = cUobLNoSwytOkMZUWdgMZGKJNwwvwL1270538;     cUobLNoSwytOkMZUWdgMZGKJNwwvwL1270538 = cUobLNoSwytOkMZUWdgMZGKJNwwvwL6137357;     cUobLNoSwytOkMZUWdgMZGKJNwwvwL6137357 = cUobLNoSwytOkMZUWdgMZGKJNwwvwL66652518;     cUobLNoSwytOkMZUWdgMZGKJNwwvwL66652518 = cUobLNoSwytOkMZUWdgMZGKJNwwvwL69221242;     cUobLNoSwytOkMZUWdgMZGKJNwwvwL69221242 = cUobLNoSwytOkMZUWdgMZGKJNwwvwL66929862;     cUobLNoSwytOkMZUWdgMZGKJNwwvwL66929862 = cUobLNoSwytOkMZUWdgMZGKJNwwvwL72411910;     cUobLNoSwytOkMZUWdgMZGKJNwwvwL72411910 = cUobLNoSwytOkMZUWdgMZGKJNwwvwL85790739;     cUobLNoSwytOkMZUWdgMZGKJNwwvwL85790739 = cUobLNoSwytOkMZUWdgMZGKJNwwvwL77056699;     cUobLNoSwytOkMZUWdgMZGKJNwwvwL77056699 = cUobLNoSwytOkMZUWdgMZGKJNwwvwL43366566;     cUobLNoSwytOkMZUWdgMZGKJNwwvwL43366566 = cUobLNoSwytOkMZUWdgMZGKJNwwvwL6279720;     cUobLNoSwytOkMZUWdgMZGKJNwwvwL6279720 = cUobLNoSwytOkMZUWdgMZGKJNwwvwL25621738;     cUobLNoSwytOkMZUWdgMZGKJNwwvwL25621738 = cUobLNoSwytOkMZUWdgMZGKJNwwvwL46394526;     cUobLNoSwytOkMZUWdgMZGKJNwwvwL46394526 = cUobLNoSwytOkMZUWdgMZGKJNwwvwL72155830;     cUobLNoSwytOkMZUWdgMZGKJNwwvwL72155830 = cUobLNoSwytOkMZUWdgMZGKJNwwvwL53734210;     cUobLNoSwytOkMZUWdgMZGKJNwwvwL53734210 = cUobLNoSwytOkMZUWdgMZGKJNwwvwL6584549;     cUobLNoSwytOkMZUWdgMZGKJNwwvwL6584549 = cUobLNoSwytOkMZUWdgMZGKJNwwvwL20410490;     cUobLNoSwytOkMZUWdgMZGKJNwwvwL20410490 = cUobLNoSwytOkMZUWdgMZGKJNwwvwL30576532;     cUobLNoSwytOkMZUWdgMZGKJNwwvwL30576532 = cUobLNoSwytOkMZUWdgMZGKJNwwvwL85394405;     cUobLNoSwytOkMZUWdgMZGKJNwwvwL85394405 = cUobLNoSwytOkMZUWdgMZGKJNwwvwL47906227;     cUobLNoSwytOkMZUWdgMZGKJNwwvwL47906227 = cUobLNoSwytOkMZUWdgMZGKJNwwvwL38781463;     cUobLNoSwytOkMZUWdgMZGKJNwwvwL38781463 = cUobLNoSwytOkMZUWdgMZGKJNwwvwL97168511;     cUobLNoSwytOkMZUWdgMZGKJNwwvwL97168511 = cUobLNoSwytOkMZUWdgMZGKJNwwvwL95867381;     cUobLNoSwytOkMZUWdgMZGKJNwwvwL95867381 = cUobLNoSwytOkMZUWdgMZGKJNwwvwL41216541;     cUobLNoSwytOkMZUWdgMZGKJNwwvwL41216541 = cUobLNoSwytOkMZUWdgMZGKJNwwvwL60442020;     cUobLNoSwytOkMZUWdgMZGKJNwwvwL60442020 = cUobLNoSwytOkMZUWdgMZGKJNwwvwL64383658;     cUobLNoSwytOkMZUWdgMZGKJNwwvwL64383658 = cUobLNoSwytOkMZUWdgMZGKJNwwvwL69628808;     cUobLNoSwytOkMZUWdgMZGKJNwwvwL69628808 = cUobLNoSwytOkMZUWdgMZGKJNwwvwL84221745;     cUobLNoSwytOkMZUWdgMZGKJNwwvwL84221745 = cUobLNoSwytOkMZUWdgMZGKJNwwvwL25313998;     cUobLNoSwytOkMZUWdgMZGKJNwwvwL25313998 = cUobLNoSwytOkMZUWdgMZGKJNwwvwL81593355;     cUobLNoSwytOkMZUWdgMZGKJNwwvwL81593355 = cUobLNoSwytOkMZUWdgMZGKJNwwvwL57032160;     cUobLNoSwytOkMZUWdgMZGKJNwwvwL57032160 = cUobLNoSwytOkMZUWdgMZGKJNwwvwL39107944;     cUobLNoSwytOkMZUWdgMZGKJNwwvwL39107944 = cUobLNoSwytOkMZUWdgMZGKJNwwvwL15313609;     cUobLNoSwytOkMZUWdgMZGKJNwwvwL15313609 = cUobLNoSwytOkMZUWdgMZGKJNwwvwL53708292;     cUobLNoSwytOkMZUWdgMZGKJNwwvwL53708292 = cUobLNoSwytOkMZUWdgMZGKJNwwvwL12890515;     cUobLNoSwytOkMZUWdgMZGKJNwwvwL12890515 = cUobLNoSwytOkMZUWdgMZGKJNwwvwL84610302;     cUobLNoSwytOkMZUWdgMZGKJNwwvwL84610302 = cUobLNoSwytOkMZUWdgMZGKJNwwvwL14650727;     cUobLNoSwytOkMZUWdgMZGKJNwwvwL14650727 = cUobLNoSwytOkMZUWdgMZGKJNwwvwL54222106;     cUobLNoSwytOkMZUWdgMZGKJNwwvwL54222106 = cUobLNoSwytOkMZUWdgMZGKJNwwvwL3441220;     cUobLNoSwytOkMZUWdgMZGKJNwwvwL3441220 = cUobLNoSwytOkMZUWdgMZGKJNwwvwL44310170;     cUobLNoSwytOkMZUWdgMZGKJNwwvwL44310170 = cUobLNoSwytOkMZUWdgMZGKJNwwvwL67714741;     cUobLNoSwytOkMZUWdgMZGKJNwwvwL67714741 = cUobLNoSwytOkMZUWdgMZGKJNwwvwL73122019;     cUobLNoSwytOkMZUWdgMZGKJNwwvwL73122019 = cUobLNoSwytOkMZUWdgMZGKJNwwvwL92192467;     cUobLNoSwytOkMZUWdgMZGKJNwwvwL92192467 = cUobLNoSwytOkMZUWdgMZGKJNwwvwL73232777;     cUobLNoSwytOkMZUWdgMZGKJNwwvwL73232777 = cUobLNoSwytOkMZUWdgMZGKJNwwvwL41795195;     cUobLNoSwytOkMZUWdgMZGKJNwwvwL41795195 = cUobLNoSwytOkMZUWdgMZGKJNwwvwL56814298;     cUobLNoSwytOkMZUWdgMZGKJNwwvwL56814298 = cUobLNoSwytOkMZUWdgMZGKJNwwvwL46123047;     cUobLNoSwytOkMZUWdgMZGKJNwwvwL46123047 = cUobLNoSwytOkMZUWdgMZGKJNwwvwL68794143;     cUobLNoSwytOkMZUWdgMZGKJNwwvwL68794143 = cUobLNoSwytOkMZUWdgMZGKJNwwvwL40790899;     cUobLNoSwytOkMZUWdgMZGKJNwwvwL40790899 = cUobLNoSwytOkMZUWdgMZGKJNwwvwL97416811;     cUobLNoSwytOkMZUWdgMZGKJNwwvwL97416811 = cUobLNoSwytOkMZUWdgMZGKJNwwvwL4391144;     cUobLNoSwytOkMZUWdgMZGKJNwwvwL4391144 = cUobLNoSwytOkMZUWdgMZGKJNwwvwL98325479;     cUobLNoSwytOkMZUWdgMZGKJNwwvwL98325479 = cUobLNoSwytOkMZUWdgMZGKJNwwvwL56964552;     cUobLNoSwytOkMZUWdgMZGKJNwwvwL56964552 = cUobLNoSwytOkMZUWdgMZGKJNwwvwL76204641;     cUobLNoSwytOkMZUWdgMZGKJNwwvwL76204641 = cUobLNoSwytOkMZUWdgMZGKJNwwvwL11369462;     cUobLNoSwytOkMZUWdgMZGKJNwwvwL11369462 = cUobLNoSwytOkMZUWdgMZGKJNwwvwL32873171;     cUobLNoSwytOkMZUWdgMZGKJNwwvwL32873171 = cUobLNoSwytOkMZUWdgMZGKJNwwvwL5403156;     cUobLNoSwytOkMZUWdgMZGKJNwwvwL5403156 = cUobLNoSwytOkMZUWdgMZGKJNwwvwL64920815;     cUobLNoSwytOkMZUWdgMZGKJNwwvwL64920815 = cUobLNoSwytOkMZUWdgMZGKJNwwvwL6210499;     cUobLNoSwytOkMZUWdgMZGKJNwwvwL6210499 = cUobLNoSwytOkMZUWdgMZGKJNwwvwL4837584;     cUobLNoSwytOkMZUWdgMZGKJNwwvwL4837584 = cUobLNoSwytOkMZUWdgMZGKJNwwvwL97301054;     cUobLNoSwytOkMZUWdgMZGKJNwwvwL97301054 = cUobLNoSwytOkMZUWdgMZGKJNwwvwL88190164;     cUobLNoSwytOkMZUWdgMZGKJNwwvwL88190164 = cUobLNoSwytOkMZUWdgMZGKJNwwvwL60476741;     cUobLNoSwytOkMZUWdgMZGKJNwwvwL60476741 = cUobLNoSwytOkMZUWdgMZGKJNwwvwL95463344;     cUobLNoSwytOkMZUWdgMZGKJNwwvwL95463344 = cUobLNoSwytOkMZUWdgMZGKJNwwvwL86334406;     cUobLNoSwytOkMZUWdgMZGKJNwwvwL86334406 = cUobLNoSwytOkMZUWdgMZGKJNwwvwL67171776;     cUobLNoSwytOkMZUWdgMZGKJNwwvwL67171776 = cUobLNoSwytOkMZUWdgMZGKJNwwvwL10308130;     cUobLNoSwytOkMZUWdgMZGKJNwwvwL10308130 = cUobLNoSwytOkMZUWdgMZGKJNwwvwL92686233;     cUobLNoSwytOkMZUWdgMZGKJNwwvwL92686233 = cUobLNoSwytOkMZUWdgMZGKJNwwvwL89291455;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void XsBrxMTzKNtPTUsdWzfXYbHKF74313983() {     double VhaMZIUqyoLGmRfWCvGMiYrwqAfozA40455538 = -170671874;    double VhaMZIUqyoLGmRfWCvGMiYrwqAfozA74244659 = -793187696;    double VhaMZIUqyoLGmRfWCvGMiYrwqAfozA23972795 = -650779650;    double VhaMZIUqyoLGmRfWCvGMiYrwqAfozA87102501 = -107114400;    double VhaMZIUqyoLGmRfWCvGMiYrwqAfozA26270966 = -163711457;    double VhaMZIUqyoLGmRfWCvGMiYrwqAfozA98139343 = -557468225;    double VhaMZIUqyoLGmRfWCvGMiYrwqAfozA85584012 = -986972532;    double VhaMZIUqyoLGmRfWCvGMiYrwqAfozA85168470 = -743287198;    double VhaMZIUqyoLGmRfWCvGMiYrwqAfozA14865651 = -551357678;    double VhaMZIUqyoLGmRfWCvGMiYrwqAfozA74380756 = 43050732;    double VhaMZIUqyoLGmRfWCvGMiYrwqAfozA52846930 = -486693034;    double VhaMZIUqyoLGmRfWCvGMiYrwqAfozA27859186 = -482991238;    double VhaMZIUqyoLGmRfWCvGMiYrwqAfozA70895310 = -349288481;    double VhaMZIUqyoLGmRfWCvGMiYrwqAfozA57751737 = -185020330;    double VhaMZIUqyoLGmRfWCvGMiYrwqAfozA78584509 = -262065452;    double VhaMZIUqyoLGmRfWCvGMiYrwqAfozA62669095 = -798309557;    double VhaMZIUqyoLGmRfWCvGMiYrwqAfozA66689024 = -447029828;    double VhaMZIUqyoLGmRfWCvGMiYrwqAfozA5358993 = -683852861;    double VhaMZIUqyoLGmRfWCvGMiYrwqAfozA2270471 = -80352675;    double VhaMZIUqyoLGmRfWCvGMiYrwqAfozA63645863 = -30704557;    double VhaMZIUqyoLGmRfWCvGMiYrwqAfozA98287298 = -68138809;    double VhaMZIUqyoLGmRfWCvGMiYrwqAfozA29377394 = -369266962;    double VhaMZIUqyoLGmRfWCvGMiYrwqAfozA26842029 = -675863440;    double VhaMZIUqyoLGmRfWCvGMiYrwqAfozA39595766 = -51589451;    double VhaMZIUqyoLGmRfWCvGMiYrwqAfozA79198941 = -33558455;    double VhaMZIUqyoLGmRfWCvGMiYrwqAfozA70077459 = -52467020;    double VhaMZIUqyoLGmRfWCvGMiYrwqAfozA38998760 = 84674284;    double VhaMZIUqyoLGmRfWCvGMiYrwqAfozA88002757 = -93521117;    double VhaMZIUqyoLGmRfWCvGMiYrwqAfozA57334883 = -879559955;    double VhaMZIUqyoLGmRfWCvGMiYrwqAfozA25093809 = -529230147;    double VhaMZIUqyoLGmRfWCvGMiYrwqAfozA1616817 = 11494780;    double VhaMZIUqyoLGmRfWCvGMiYrwqAfozA9254648 = -18555824;    double VhaMZIUqyoLGmRfWCvGMiYrwqAfozA57868209 = -486018631;    double VhaMZIUqyoLGmRfWCvGMiYrwqAfozA8727518 = -401166729;    double VhaMZIUqyoLGmRfWCvGMiYrwqAfozA91305370 = -357368642;    double VhaMZIUqyoLGmRfWCvGMiYrwqAfozA19064409 = -226618280;    double VhaMZIUqyoLGmRfWCvGMiYrwqAfozA80453381 = -900364375;    double VhaMZIUqyoLGmRfWCvGMiYrwqAfozA87992915 = -272461973;    double VhaMZIUqyoLGmRfWCvGMiYrwqAfozA89572664 = -746266225;    double VhaMZIUqyoLGmRfWCvGMiYrwqAfozA75230979 = -274688846;    double VhaMZIUqyoLGmRfWCvGMiYrwqAfozA59214929 = -81919574;    double VhaMZIUqyoLGmRfWCvGMiYrwqAfozA17083407 = -609058888;    double VhaMZIUqyoLGmRfWCvGMiYrwqAfozA64963518 = -209474616;    double VhaMZIUqyoLGmRfWCvGMiYrwqAfozA26440195 = -583341575;    double VhaMZIUqyoLGmRfWCvGMiYrwqAfozA14374330 = -630807484;    double VhaMZIUqyoLGmRfWCvGMiYrwqAfozA45384443 = -728729203;    double VhaMZIUqyoLGmRfWCvGMiYrwqAfozA80968911 = -593871644;    double VhaMZIUqyoLGmRfWCvGMiYrwqAfozA98193671 = -933996759;    double VhaMZIUqyoLGmRfWCvGMiYrwqAfozA40691519 = -270763818;    double VhaMZIUqyoLGmRfWCvGMiYrwqAfozA58241945 = 75303911;    double VhaMZIUqyoLGmRfWCvGMiYrwqAfozA18926270 = -874999754;    double VhaMZIUqyoLGmRfWCvGMiYrwqAfozA16970644 = -334399119;    double VhaMZIUqyoLGmRfWCvGMiYrwqAfozA50377018 = 7461123;    double VhaMZIUqyoLGmRfWCvGMiYrwqAfozA45216600 = -278856641;    double VhaMZIUqyoLGmRfWCvGMiYrwqAfozA76026685 = -53258669;    double VhaMZIUqyoLGmRfWCvGMiYrwqAfozA11078145 = -801404912;    double VhaMZIUqyoLGmRfWCvGMiYrwqAfozA47402630 = -17324256;    double VhaMZIUqyoLGmRfWCvGMiYrwqAfozA84377028 = -499190200;    double VhaMZIUqyoLGmRfWCvGMiYrwqAfozA7903560 = 26444054;    double VhaMZIUqyoLGmRfWCvGMiYrwqAfozA56193507 = -11244437;    double VhaMZIUqyoLGmRfWCvGMiYrwqAfozA59140584 = -542142509;    double VhaMZIUqyoLGmRfWCvGMiYrwqAfozA97581254 = -793451416;    double VhaMZIUqyoLGmRfWCvGMiYrwqAfozA27833587 = -863727243;    double VhaMZIUqyoLGmRfWCvGMiYrwqAfozA89771841 = 77872468;    double VhaMZIUqyoLGmRfWCvGMiYrwqAfozA72763940 = -968444049;    double VhaMZIUqyoLGmRfWCvGMiYrwqAfozA43592283 = -368137210;    double VhaMZIUqyoLGmRfWCvGMiYrwqAfozA69990977 = -996972607;    double VhaMZIUqyoLGmRfWCvGMiYrwqAfozA62167792 = -948121752;    double VhaMZIUqyoLGmRfWCvGMiYrwqAfozA66446366 = -827651688;    double VhaMZIUqyoLGmRfWCvGMiYrwqAfozA59520100 = 64552828;    double VhaMZIUqyoLGmRfWCvGMiYrwqAfozA82215714 = -897945183;    double VhaMZIUqyoLGmRfWCvGMiYrwqAfozA78696108 = -74567856;    double VhaMZIUqyoLGmRfWCvGMiYrwqAfozA15786329 = -937586636;    double VhaMZIUqyoLGmRfWCvGMiYrwqAfozA27039491 = -805663830;    double VhaMZIUqyoLGmRfWCvGMiYrwqAfozA4430934 = -948784983;    double VhaMZIUqyoLGmRfWCvGMiYrwqAfozA81203891 = -459079922;    double VhaMZIUqyoLGmRfWCvGMiYrwqAfozA64413875 = -59792347;    double VhaMZIUqyoLGmRfWCvGMiYrwqAfozA401834 = 7478135;    double VhaMZIUqyoLGmRfWCvGMiYrwqAfozA25221436 = -420781968;    double VhaMZIUqyoLGmRfWCvGMiYrwqAfozA33814499 = -304829253;    double VhaMZIUqyoLGmRfWCvGMiYrwqAfozA89108547 = -458595377;    double VhaMZIUqyoLGmRfWCvGMiYrwqAfozA40805089 = 18671042;    double VhaMZIUqyoLGmRfWCvGMiYrwqAfozA47311239 = -822757300;    double VhaMZIUqyoLGmRfWCvGMiYrwqAfozA99092938 = -854863867;    double VhaMZIUqyoLGmRfWCvGMiYrwqAfozA6167540 = -654230394;    double VhaMZIUqyoLGmRfWCvGMiYrwqAfozA84646172 = -654106102;    double VhaMZIUqyoLGmRfWCvGMiYrwqAfozA58877629 = 73983053;    double VhaMZIUqyoLGmRfWCvGMiYrwqAfozA12651610 = -107161991;    double VhaMZIUqyoLGmRfWCvGMiYrwqAfozA32700833 = -247908060;    double VhaMZIUqyoLGmRfWCvGMiYrwqAfozA80227225 = -555963731;    double VhaMZIUqyoLGmRfWCvGMiYrwqAfozA71661778 = -109294024;    double VhaMZIUqyoLGmRfWCvGMiYrwqAfozA96076352 = -301174175;    double VhaMZIUqyoLGmRfWCvGMiYrwqAfozA80089355 = -198906028;    double VhaMZIUqyoLGmRfWCvGMiYrwqAfozA33379158 = -635021789;    double VhaMZIUqyoLGmRfWCvGMiYrwqAfozA16090396 = -732546337;    double VhaMZIUqyoLGmRfWCvGMiYrwqAfozA61633674 = -288468159;    double VhaMZIUqyoLGmRfWCvGMiYrwqAfozA89249820 = -745331645;    double VhaMZIUqyoLGmRfWCvGMiYrwqAfozA75191677 = -187347084;    double VhaMZIUqyoLGmRfWCvGMiYrwqAfozA53676255 = -614897527;    double VhaMZIUqyoLGmRfWCvGMiYrwqAfozA70782047 = -170671874;     VhaMZIUqyoLGmRfWCvGMiYrwqAfozA40455538 = VhaMZIUqyoLGmRfWCvGMiYrwqAfozA74244659;     VhaMZIUqyoLGmRfWCvGMiYrwqAfozA74244659 = VhaMZIUqyoLGmRfWCvGMiYrwqAfozA23972795;     VhaMZIUqyoLGmRfWCvGMiYrwqAfozA23972795 = VhaMZIUqyoLGmRfWCvGMiYrwqAfozA87102501;     VhaMZIUqyoLGmRfWCvGMiYrwqAfozA87102501 = VhaMZIUqyoLGmRfWCvGMiYrwqAfozA26270966;     VhaMZIUqyoLGmRfWCvGMiYrwqAfozA26270966 = VhaMZIUqyoLGmRfWCvGMiYrwqAfozA98139343;     VhaMZIUqyoLGmRfWCvGMiYrwqAfozA98139343 = VhaMZIUqyoLGmRfWCvGMiYrwqAfozA85584012;     VhaMZIUqyoLGmRfWCvGMiYrwqAfozA85584012 = VhaMZIUqyoLGmRfWCvGMiYrwqAfozA85168470;     VhaMZIUqyoLGmRfWCvGMiYrwqAfozA85168470 = VhaMZIUqyoLGmRfWCvGMiYrwqAfozA14865651;     VhaMZIUqyoLGmRfWCvGMiYrwqAfozA14865651 = VhaMZIUqyoLGmRfWCvGMiYrwqAfozA74380756;     VhaMZIUqyoLGmRfWCvGMiYrwqAfozA74380756 = VhaMZIUqyoLGmRfWCvGMiYrwqAfozA52846930;     VhaMZIUqyoLGmRfWCvGMiYrwqAfozA52846930 = VhaMZIUqyoLGmRfWCvGMiYrwqAfozA27859186;     VhaMZIUqyoLGmRfWCvGMiYrwqAfozA27859186 = VhaMZIUqyoLGmRfWCvGMiYrwqAfozA70895310;     VhaMZIUqyoLGmRfWCvGMiYrwqAfozA70895310 = VhaMZIUqyoLGmRfWCvGMiYrwqAfozA57751737;     VhaMZIUqyoLGmRfWCvGMiYrwqAfozA57751737 = VhaMZIUqyoLGmRfWCvGMiYrwqAfozA78584509;     VhaMZIUqyoLGmRfWCvGMiYrwqAfozA78584509 = VhaMZIUqyoLGmRfWCvGMiYrwqAfozA62669095;     VhaMZIUqyoLGmRfWCvGMiYrwqAfozA62669095 = VhaMZIUqyoLGmRfWCvGMiYrwqAfozA66689024;     VhaMZIUqyoLGmRfWCvGMiYrwqAfozA66689024 = VhaMZIUqyoLGmRfWCvGMiYrwqAfozA5358993;     VhaMZIUqyoLGmRfWCvGMiYrwqAfozA5358993 = VhaMZIUqyoLGmRfWCvGMiYrwqAfozA2270471;     VhaMZIUqyoLGmRfWCvGMiYrwqAfozA2270471 = VhaMZIUqyoLGmRfWCvGMiYrwqAfozA63645863;     VhaMZIUqyoLGmRfWCvGMiYrwqAfozA63645863 = VhaMZIUqyoLGmRfWCvGMiYrwqAfozA98287298;     VhaMZIUqyoLGmRfWCvGMiYrwqAfozA98287298 = VhaMZIUqyoLGmRfWCvGMiYrwqAfozA29377394;     VhaMZIUqyoLGmRfWCvGMiYrwqAfozA29377394 = VhaMZIUqyoLGmRfWCvGMiYrwqAfozA26842029;     VhaMZIUqyoLGmRfWCvGMiYrwqAfozA26842029 = VhaMZIUqyoLGmRfWCvGMiYrwqAfozA39595766;     VhaMZIUqyoLGmRfWCvGMiYrwqAfozA39595766 = VhaMZIUqyoLGmRfWCvGMiYrwqAfozA79198941;     VhaMZIUqyoLGmRfWCvGMiYrwqAfozA79198941 = VhaMZIUqyoLGmRfWCvGMiYrwqAfozA70077459;     VhaMZIUqyoLGmRfWCvGMiYrwqAfozA70077459 = VhaMZIUqyoLGmRfWCvGMiYrwqAfozA38998760;     VhaMZIUqyoLGmRfWCvGMiYrwqAfozA38998760 = VhaMZIUqyoLGmRfWCvGMiYrwqAfozA88002757;     VhaMZIUqyoLGmRfWCvGMiYrwqAfozA88002757 = VhaMZIUqyoLGmRfWCvGMiYrwqAfozA57334883;     VhaMZIUqyoLGmRfWCvGMiYrwqAfozA57334883 = VhaMZIUqyoLGmRfWCvGMiYrwqAfozA25093809;     VhaMZIUqyoLGmRfWCvGMiYrwqAfozA25093809 = VhaMZIUqyoLGmRfWCvGMiYrwqAfozA1616817;     VhaMZIUqyoLGmRfWCvGMiYrwqAfozA1616817 = VhaMZIUqyoLGmRfWCvGMiYrwqAfozA9254648;     VhaMZIUqyoLGmRfWCvGMiYrwqAfozA9254648 = VhaMZIUqyoLGmRfWCvGMiYrwqAfozA57868209;     VhaMZIUqyoLGmRfWCvGMiYrwqAfozA57868209 = VhaMZIUqyoLGmRfWCvGMiYrwqAfozA8727518;     VhaMZIUqyoLGmRfWCvGMiYrwqAfozA8727518 = VhaMZIUqyoLGmRfWCvGMiYrwqAfozA91305370;     VhaMZIUqyoLGmRfWCvGMiYrwqAfozA91305370 = VhaMZIUqyoLGmRfWCvGMiYrwqAfozA19064409;     VhaMZIUqyoLGmRfWCvGMiYrwqAfozA19064409 = VhaMZIUqyoLGmRfWCvGMiYrwqAfozA80453381;     VhaMZIUqyoLGmRfWCvGMiYrwqAfozA80453381 = VhaMZIUqyoLGmRfWCvGMiYrwqAfozA87992915;     VhaMZIUqyoLGmRfWCvGMiYrwqAfozA87992915 = VhaMZIUqyoLGmRfWCvGMiYrwqAfozA89572664;     VhaMZIUqyoLGmRfWCvGMiYrwqAfozA89572664 = VhaMZIUqyoLGmRfWCvGMiYrwqAfozA75230979;     VhaMZIUqyoLGmRfWCvGMiYrwqAfozA75230979 = VhaMZIUqyoLGmRfWCvGMiYrwqAfozA59214929;     VhaMZIUqyoLGmRfWCvGMiYrwqAfozA59214929 = VhaMZIUqyoLGmRfWCvGMiYrwqAfozA17083407;     VhaMZIUqyoLGmRfWCvGMiYrwqAfozA17083407 = VhaMZIUqyoLGmRfWCvGMiYrwqAfozA64963518;     VhaMZIUqyoLGmRfWCvGMiYrwqAfozA64963518 = VhaMZIUqyoLGmRfWCvGMiYrwqAfozA26440195;     VhaMZIUqyoLGmRfWCvGMiYrwqAfozA26440195 = VhaMZIUqyoLGmRfWCvGMiYrwqAfozA14374330;     VhaMZIUqyoLGmRfWCvGMiYrwqAfozA14374330 = VhaMZIUqyoLGmRfWCvGMiYrwqAfozA45384443;     VhaMZIUqyoLGmRfWCvGMiYrwqAfozA45384443 = VhaMZIUqyoLGmRfWCvGMiYrwqAfozA80968911;     VhaMZIUqyoLGmRfWCvGMiYrwqAfozA80968911 = VhaMZIUqyoLGmRfWCvGMiYrwqAfozA98193671;     VhaMZIUqyoLGmRfWCvGMiYrwqAfozA98193671 = VhaMZIUqyoLGmRfWCvGMiYrwqAfozA40691519;     VhaMZIUqyoLGmRfWCvGMiYrwqAfozA40691519 = VhaMZIUqyoLGmRfWCvGMiYrwqAfozA58241945;     VhaMZIUqyoLGmRfWCvGMiYrwqAfozA58241945 = VhaMZIUqyoLGmRfWCvGMiYrwqAfozA18926270;     VhaMZIUqyoLGmRfWCvGMiYrwqAfozA18926270 = VhaMZIUqyoLGmRfWCvGMiYrwqAfozA16970644;     VhaMZIUqyoLGmRfWCvGMiYrwqAfozA16970644 = VhaMZIUqyoLGmRfWCvGMiYrwqAfozA50377018;     VhaMZIUqyoLGmRfWCvGMiYrwqAfozA50377018 = VhaMZIUqyoLGmRfWCvGMiYrwqAfozA45216600;     VhaMZIUqyoLGmRfWCvGMiYrwqAfozA45216600 = VhaMZIUqyoLGmRfWCvGMiYrwqAfozA76026685;     VhaMZIUqyoLGmRfWCvGMiYrwqAfozA76026685 = VhaMZIUqyoLGmRfWCvGMiYrwqAfozA11078145;     VhaMZIUqyoLGmRfWCvGMiYrwqAfozA11078145 = VhaMZIUqyoLGmRfWCvGMiYrwqAfozA47402630;     VhaMZIUqyoLGmRfWCvGMiYrwqAfozA47402630 = VhaMZIUqyoLGmRfWCvGMiYrwqAfozA84377028;     VhaMZIUqyoLGmRfWCvGMiYrwqAfozA84377028 = VhaMZIUqyoLGmRfWCvGMiYrwqAfozA7903560;     VhaMZIUqyoLGmRfWCvGMiYrwqAfozA7903560 = VhaMZIUqyoLGmRfWCvGMiYrwqAfozA56193507;     VhaMZIUqyoLGmRfWCvGMiYrwqAfozA56193507 = VhaMZIUqyoLGmRfWCvGMiYrwqAfozA59140584;     VhaMZIUqyoLGmRfWCvGMiYrwqAfozA59140584 = VhaMZIUqyoLGmRfWCvGMiYrwqAfozA97581254;     VhaMZIUqyoLGmRfWCvGMiYrwqAfozA97581254 = VhaMZIUqyoLGmRfWCvGMiYrwqAfozA27833587;     VhaMZIUqyoLGmRfWCvGMiYrwqAfozA27833587 = VhaMZIUqyoLGmRfWCvGMiYrwqAfozA89771841;     VhaMZIUqyoLGmRfWCvGMiYrwqAfozA89771841 = VhaMZIUqyoLGmRfWCvGMiYrwqAfozA72763940;     VhaMZIUqyoLGmRfWCvGMiYrwqAfozA72763940 = VhaMZIUqyoLGmRfWCvGMiYrwqAfozA43592283;     VhaMZIUqyoLGmRfWCvGMiYrwqAfozA43592283 = VhaMZIUqyoLGmRfWCvGMiYrwqAfozA69990977;     VhaMZIUqyoLGmRfWCvGMiYrwqAfozA69990977 = VhaMZIUqyoLGmRfWCvGMiYrwqAfozA62167792;     VhaMZIUqyoLGmRfWCvGMiYrwqAfozA62167792 = VhaMZIUqyoLGmRfWCvGMiYrwqAfozA66446366;     VhaMZIUqyoLGmRfWCvGMiYrwqAfozA66446366 = VhaMZIUqyoLGmRfWCvGMiYrwqAfozA59520100;     VhaMZIUqyoLGmRfWCvGMiYrwqAfozA59520100 = VhaMZIUqyoLGmRfWCvGMiYrwqAfozA82215714;     VhaMZIUqyoLGmRfWCvGMiYrwqAfozA82215714 = VhaMZIUqyoLGmRfWCvGMiYrwqAfozA78696108;     VhaMZIUqyoLGmRfWCvGMiYrwqAfozA78696108 = VhaMZIUqyoLGmRfWCvGMiYrwqAfozA15786329;     VhaMZIUqyoLGmRfWCvGMiYrwqAfozA15786329 = VhaMZIUqyoLGmRfWCvGMiYrwqAfozA27039491;     VhaMZIUqyoLGmRfWCvGMiYrwqAfozA27039491 = VhaMZIUqyoLGmRfWCvGMiYrwqAfozA4430934;     VhaMZIUqyoLGmRfWCvGMiYrwqAfozA4430934 = VhaMZIUqyoLGmRfWCvGMiYrwqAfozA81203891;     VhaMZIUqyoLGmRfWCvGMiYrwqAfozA81203891 = VhaMZIUqyoLGmRfWCvGMiYrwqAfozA64413875;     VhaMZIUqyoLGmRfWCvGMiYrwqAfozA64413875 = VhaMZIUqyoLGmRfWCvGMiYrwqAfozA401834;     VhaMZIUqyoLGmRfWCvGMiYrwqAfozA401834 = VhaMZIUqyoLGmRfWCvGMiYrwqAfozA25221436;     VhaMZIUqyoLGmRfWCvGMiYrwqAfozA25221436 = VhaMZIUqyoLGmRfWCvGMiYrwqAfozA33814499;     VhaMZIUqyoLGmRfWCvGMiYrwqAfozA33814499 = VhaMZIUqyoLGmRfWCvGMiYrwqAfozA89108547;     VhaMZIUqyoLGmRfWCvGMiYrwqAfozA89108547 = VhaMZIUqyoLGmRfWCvGMiYrwqAfozA40805089;     VhaMZIUqyoLGmRfWCvGMiYrwqAfozA40805089 = VhaMZIUqyoLGmRfWCvGMiYrwqAfozA47311239;     VhaMZIUqyoLGmRfWCvGMiYrwqAfozA47311239 = VhaMZIUqyoLGmRfWCvGMiYrwqAfozA99092938;     VhaMZIUqyoLGmRfWCvGMiYrwqAfozA99092938 = VhaMZIUqyoLGmRfWCvGMiYrwqAfozA6167540;     VhaMZIUqyoLGmRfWCvGMiYrwqAfozA6167540 = VhaMZIUqyoLGmRfWCvGMiYrwqAfozA84646172;     VhaMZIUqyoLGmRfWCvGMiYrwqAfozA84646172 = VhaMZIUqyoLGmRfWCvGMiYrwqAfozA58877629;     VhaMZIUqyoLGmRfWCvGMiYrwqAfozA58877629 = VhaMZIUqyoLGmRfWCvGMiYrwqAfozA12651610;     VhaMZIUqyoLGmRfWCvGMiYrwqAfozA12651610 = VhaMZIUqyoLGmRfWCvGMiYrwqAfozA32700833;     VhaMZIUqyoLGmRfWCvGMiYrwqAfozA32700833 = VhaMZIUqyoLGmRfWCvGMiYrwqAfozA80227225;     VhaMZIUqyoLGmRfWCvGMiYrwqAfozA80227225 = VhaMZIUqyoLGmRfWCvGMiYrwqAfozA71661778;     VhaMZIUqyoLGmRfWCvGMiYrwqAfozA71661778 = VhaMZIUqyoLGmRfWCvGMiYrwqAfozA96076352;     VhaMZIUqyoLGmRfWCvGMiYrwqAfozA96076352 = VhaMZIUqyoLGmRfWCvGMiYrwqAfozA80089355;     VhaMZIUqyoLGmRfWCvGMiYrwqAfozA80089355 = VhaMZIUqyoLGmRfWCvGMiYrwqAfozA33379158;     VhaMZIUqyoLGmRfWCvGMiYrwqAfozA33379158 = VhaMZIUqyoLGmRfWCvGMiYrwqAfozA16090396;     VhaMZIUqyoLGmRfWCvGMiYrwqAfozA16090396 = VhaMZIUqyoLGmRfWCvGMiYrwqAfozA61633674;     VhaMZIUqyoLGmRfWCvGMiYrwqAfozA61633674 = VhaMZIUqyoLGmRfWCvGMiYrwqAfozA89249820;     VhaMZIUqyoLGmRfWCvGMiYrwqAfozA89249820 = VhaMZIUqyoLGmRfWCvGMiYrwqAfozA75191677;     VhaMZIUqyoLGmRfWCvGMiYrwqAfozA75191677 = VhaMZIUqyoLGmRfWCvGMiYrwqAfozA53676255;     VhaMZIUqyoLGmRfWCvGMiYrwqAfozA53676255 = VhaMZIUqyoLGmRfWCvGMiYrwqAfozA70782047;     VhaMZIUqyoLGmRfWCvGMiYrwqAfozA70782047 = VhaMZIUqyoLGmRfWCvGMiYrwqAfozA40455538;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void IwMYctXdUlUvtsgNnpRJHdjkU83918709() {     double LwYDphicXkDRzoGVoVymykiRSqMMkW62277759 = -738887205;    double LwYDphicXkDRzoGVoVymykiRSqMMkW35712463 = -75786548;    double LwYDphicXkDRzoGVoVymykiRSqMMkW69700064 = -697997182;    double LwYDphicXkDRzoGVoVymykiRSqMMkW18477647 = -311898576;    double LwYDphicXkDRzoGVoVymykiRSqMMkW86405296 = -40962379;    double LwYDphicXkDRzoGVoVymykiRSqMMkW22157660 = -569011383;    double LwYDphicXkDRzoGVoVymykiRSqMMkW14604597 = 49709344;    double LwYDphicXkDRzoGVoVymykiRSqMMkW72031099 = -751468046;    double LwYDphicXkDRzoGVoVymykiRSqMMkW11389291 = -537153096;    double LwYDphicXkDRzoGVoVymykiRSqMMkW35663982 = -927167666;    double LwYDphicXkDRzoGVoVymykiRSqMMkW23763199 = -42450736;    double LwYDphicXkDRzoGVoVymykiRSqMMkW44041069 = -586172845;    double LwYDphicXkDRzoGVoVymykiRSqMMkW3884253 = -887322270;    double LwYDphicXkDRzoGVoVymykiRSqMMkW24718205 = 64902873;    double LwYDphicXkDRzoGVoVymykiRSqMMkW73842304 = -188907370;    double LwYDphicXkDRzoGVoVymykiRSqMMkW10639821 = -140676098;    double LwYDphicXkDRzoGVoVymykiRSqMMkW60138083 = -832854546;    double LwYDphicXkDRzoGVoVymykiRSqMMkW67884296 = -605573779;    double LwYDphicXkDRzoGVoVymykiRSqMMkW6907695 = -153488332;    double LwYDphicXkDRzoGVoVymykiRSqMMkW44755505 = -521949612;    double LwYDphicXkDRzoGVoVymykiRSqMMkW55441583 = -900217511;    double LwYDphicXkDRzoGVoVymykiRSqMMkW93779371 = -440018127;    double LwYDphicXkDRzoGVoVymykiRSqMMkW36313433 = -231890795;    double LwYDphicXkDRzoGVoVymykiRSqMMkW76873388 = -461688316;    double LwYDphicXkDRzoGVoVymykiRSqMMkW53129609 = 55544572;    double LwYDphicXkDRzoGVoVymykiRSqMMkW59653313 = -379652548;    double LwYDphicXkDRzoGVoVymykiRSqMMkW12035364 = -542129761;    double LwYDphicXkDRzoGVoVymykiRSqMMkW23582583 = 42030650;    double LwYDphicXkDRzoGVoVymykiRSqMMkW5231797 = -546505873;    double LwYDphicXkDRzoGVoVymykiRSqMMkW70910886 = -905444341;    double LwYDphicXkDRzoGVoVymykiRSqMMkW52782082 = -394232968;    double LwYDphicXkDRzoGVoVymykiRSqMMkW28145973 = -894444654;    double LwYDphicXkDRzoGVoVymykiRSqMMkW83187674 = -228622514;    double LwYDphicXkDRzoGVoVymykiRSqMMkW81266634 = -76986357;    double LwYDphicXkDRzoGVoVymykiRSqMMkW72139583 = -507187244;    double LwYDphicXkDRzoGVoVymykiRSqMMkW88641368 = -241034260;    double LwYDphicXkDRzoGVoVymykiRSqMMkW23535638 = -949981471;    double LwYDphicXkDRzoGVoVymykiRSqMMkW91930777 = -854004730;    double LwYDphicXkDRzoGVoVymykiRSqMMkW49953110 = -518671506;    double LwYDphicXkDRzoGVoVymykiRSqMMkW87901625 = -732237847;    double LwYDphicXkDRzoGVoVymykiRSqMMkW13590775 = -516058832;    double LwYDphicXkDRzoGVoVymykiRSqMMkW33585578 = -296524965;    double LwYDphicXkDRzoGVoVymykiRSqMMkW12330918 = -253441430;    double LwYDphicXkDRzoGVoVymykiRSqMMkW74535053 = -492147744;    double LwYDphicXkDRzoGVoVymykiRSqMMkW94290141 = -817496113;    double LwYDphicXkDRzoGVoVymykiRSqMMkW84590922 = -432161433;    double LwYDphicXkDRzoGVoVymykiRSqMMkW6637023 = -774879164;    double LwYDphicXkDRzoGVoVymykiRSqMMkW80033423 = -672492748;    double LwYDphicXkDRzoGVoVymykiRSqMMkW47755611 = -455880240;    double LwYDphicXkDRzoGVoVymykiRSqMMkW74289422 = 96248727;    double LwYDphicXkDRzoGVoVymykiRSqMMkW7388090 = -918889080;    double LwYDphicXkDRzoGVoVymykiRSqMMkW13359308 = -659777200;    double LwYDphicXkDRzoGVoVymykiRSqMMkW41599883 = 43865983;    double LwYDphicXkDRzoGVoVymykiRSqMMkW73241721 = -469865700;    double LwYDphicXkDRzoGVoVymykiRSqMMkW28477127 = -14380418;    double LwYDphicXkDRzoGVoVymykiRSqMMkW68498387 = -198869079;    double LwYDphicXkDRzoGVoVymykiRSqMMkW99399030 = -843895754;    double LwYDphicXkDRzoGVoVymykiRSqMMkW92826676 = -136308866;    double LwYDphicXkDRzoGVoVymykiRSqMMkW65348038 = -267443149;    double LwYDphicXkDRzoGVoVymykiRSqMMkW26751984 = -661309831;    double LwYDphicXkDRzoGVoVymykiRSqMMkW10122296 = 73118377;    double LwYDphicXkDRzoGVoVymykiRSqMMkW91022013 = -992321307;    double LwYDphicXkDRzoGVoVymykiRSqMMkW66799303 = -104962173;    double LwYDphicXkDRzoGVoVymykiRSqMMkW40478404 = -631708756;    double LwYDphicXkDRzoGVoVymykiRSqMMkW82881900 = -432934699;    double LwYDphicXkDRzoGVoVymykiRSqMMkW95617225 = -148006082;    double LwYDphicXkDRzoGVoVymykiRSqMMkW60853395 = -257550331;    double LwYDphicXkDRzoGVoVymykiRSqMMkW22617618 = -710335914;    double LwYDphicXkDRzoGVoVymykiRSqMMkW52578621 = -427909884;    double LwYDphicXkDRzoGVoVymykiRSqMMkW85200936 = -947873111;    double LwYDphicXkDRzoGVoVymykiRSqMMkW87104183 = -190694627;    double LwYDphicXkDRzoGVoVymykiRSqMMkW68207306 = -978849816;    double LwYDphicXkDRzoGVoVymykiRSqMMkW17931186 = 13097727;    double LwYDphicXkDRzoGVoVymykiRSqMMkW19006069 = -421250486;    double LwYDphicXkDRzoGVoVymykiRSqMMkW31164731 = 94109219;    double LwYDphicXkDRzoGVoVymykiRSqMMkW21856005 = -503692547;    double LwYDphicXkDRzoGVoVymykiRSqMMkW81448454 = -86576697;    double LwYDphicXkDRzoGVoVymykiRSqMMkW61778379 = -739743051;    double LwYDphicXkDRzoGVoVymykiRSqMMkW82583247 = -644192204;    double LwYDphicXkDRzoGVoVymykiRSqMMkW68538686 = -512293995;    double LwYDphicXkDRzoGVoVymykiRSqMMkW53016290 = -604773385;    double LwYDphicXkDRzoGVoVymykiRSqMMkW32001941 = -869637014;    double LwYDphicXkDRzoGVoVymykiRSqMMkW75826972 = -502089110;    double LwYDphicXkDRzoGVoVymykiRSqMMkW30942374 = -542754600;    double LwYDphicXkDRzoGVoVymykiRSqMMkW63522797 = -986555262;    double LwYDphicXkDRzoGVoVymykiRSqMMkW39422774 = -734455768;    double LwYDphicXkDRzoGVoVymykiRSqMMkW86546090 = -838310638;    double LwYDphicXkDRzoGVoVymykiRSqMMkW9945953 = -758756815;    double LwYDphicXkDRzoGVoVymykiRSqMMkW52789508 = 37394061;    double LwYDphicXkDRzoGVoVymykiRSqMMkW3641196 = -208318166;    double LwYDphicXkDRzoGVoVymykiRSqMMkW89242338 = -397138506;    double LwYDphicXkDRzoGVoVymykiRSqMMkW30708961 = -713672605;    double LwYDphicXkDRzoGVoVymykiRSqMMkW26582739 = -486561582;    double LwYDphicXkDRzoGVoVymykiRSqMMkW23201127 = -857361676;    double LwYDphicXkDRzoGVoVymykiRSqMMkW77779330 = -705356224;    double LwYDphicXkDRzoGVoVymykiRSqMMkW22568762 = -523737526;    double LwYDphicXkDRzoGVoVymykiRSqMMkW66786275 = -91562792;    double LwYDphicXkDRzoGVoVymykiRSqMMkW71852514 = -621732675;    double LwYDphicXkDRzoGVoVymykiRSqMMkW91653153 = 40786954;    double LwYDphicXkDRzoGVoVymykiRSqMMkW98672915 = -738887205;     LwYDphicXkDRzoGVoVymykiRSqMMkW62277759 = LwYDphicXkDRzoGVoVymykiRSqMMkW35712463;     LwYDphicXkDRzoGVoVymykiRSqMMkW35712463 = LwYDphicXkDRzoGVoVymykiRSqMMkW69700064;     LwYDphicXkDRzoGVoVymykiRSqMMkW69700064 = LwYDphicXkDRzoGVoVymykiRSqMMkW18477647;     LwYDphicXkDRzoGVoVymykiRSqMMkW18477647 = LwYDphicXkDRzoGVoVymykiRSqMMkW86405296;     LwYDphicXkDRzoGVoVymykiRSqMMkW86405296 = LwYDphicXkDRzoGVoVymykiRSqMMkW22157660;     LwYDphicXkDRzoGVoVymykiRSqMMkW22157660 = LwYDphicXkDRzoGVoVymykiRSqMMkW14604597;     LwYDphicXkDRzoGVoVymykiRSqMMkW14604597 = LwYDphicXkDRzoGVoVymykiRSqMMkW72031099;     LwYDphicXkDRzoGVoVymykiRSqMMkW72031099 = LwYDphicXkDRzoGVoVymykiRSqMMkW11389291;     LwYDphicXkDRzoGVoVymykiRSqMMkW11389291 = LwYDphicXkDRzoGVoVymykiRSqMMkW35663982;     LwYDphicXkDRzoGVoVymykiRSqMMkW35663982 = LwYDphicXkDRzoGVoVymykiRSqMMkW23763199;     LwYDphicXkDRzoGVoVymykiRSqMMkW23763199 = LwYDphicXkDRzoGVoVymykiRSqMMkW44041069;     LwYDphicXkDRzoGVoVymykiRSqMMkW44041069 = LwYDphicXkDRzoGVoVymykiRSqMMkW3884253;     LwYDphicXkDRzoGVoVymykiRSqMMkW3884253 = LwYDphicXkDRzoGVoVymykiRSqMMkW24718205;     LwYDphicXkDRzoGVoVymykiRSqMMkW24718205 = LwYDphicXkDRzoGVoVymykiRSqMMkW73842304;     LwYDphicXkDRzoGVoVymykiRSqMMkW73842304 = LwYDphicXkDRzoGVoVymykiRSqMMkW10639821;     LwYDphicXkDRzoGVoVymykiRSqMMkW10639821 = LwYDphicXkDRzoGVoVymykiRSqMMkW60138083;     LwYDphicXkDRzoGVoVymykiRSqMMkW60138083 = LwYDphicXkDRzoGVoVymykiRSqMMkW67884296;     LwYDphicXkDRzoGVoVymykiRSqMMkW67884296 = LwYDphicXkDRzoGVoVymykiRSqMMkW6907695;     LwYDphicXkDRzoGVoVymykiRSqMMkW6907695 = LwYDphicXkDRzoGVoVymykiRSqMMkW44755505;     LwYDphicXkDRzoGVoVymykiRSqMMkW44755505 = LwYDphicXkDRzoGVoVymykiRSqMMkW55441583;     LwYDphicXkDRzoGVoVymykiRSqMMkW55441583 = LwYDphicXkDRzoGVoVymykiRSqMMkW93779371;     LwYDphicXkDRzoGVoVymykiRSqMMkW93779371 = LwYDphicXkDRzoGVoVymykiRSqMMkW36313433;     LwYDphicXkDRzoGVoVymykiRSqMMkW36313433 = LwYDphicXkDRzoGVoVymykiRSqMMkW76873388;     LwYDphicXkDRzoGVoVymykiRSqMMkW76873388 = LwYDphicXkDRzoGVoVymykiRSqMMkW53129609;     LwYDphicXkDRzoGVoVymykiRSqMMkW53129609 = LwYDphicXkDRzoGVoVymykiRSqMMkW59653313;     LwYDphicXkDRzoGVoVymykiRSqMMkW59653313 = LwYDphicXkDRzoGVoVymykiRSqMMkW12035364;     LwYDphicXkDRzoGVoVymykiRSqMMkW12035364 = LwYDphicXkDRzoGVoVymykiRSqMMkW23582583;     LwYDphicXkDRzoGVoVymykiRSqMMkW23582583 = LwYDphicXkDRzoGVoVymykiRSqMMkW5231797;     LwYDphicXkDRzoGVoVymykiRSqMMkW5231797 = LwYDphicXkDRzoGVoVymykiRSqMMkW70910886;     LwYDphicXkDRzoGVoVymykiRSqMMkW70910886 = LwYDphicXkDRzoGVoVymykiRSqMMkW52782082;     LwYDphicXkDRzoGVoVymykiRSqMMkW52782082 = LwYDphicXkDRzoGVoVymykiRSqMMkW28145973;     LwYDphicXkDRzoGVoVymykiRSqMMkW28145973 = LwYDphicXkDRzoGVoVymykiRSqMMkW83187674;     LwYDphicXkDRzoGVoVymykiRSqMMkW83187674 = LwYDphicXkDRzoGVoVymykiRSqMMkW81266634;     LwYDphicXkDRzoGVoVymykiRSqMMkW81266634 = LwYDphicXkDRzoGVoVymykiRSqMMkW72139583;     LwYDphicXkDRzoGVoVymykiRSqMMkW72139583 = LwYDphicXkDRzoGVoVymykiRSqMMkW88641368;     LwYDphicXkDRzoGVoVymykiRSqMMkW88641368 = LwYDphicXkDRzoGVoVymykiRSqMMkW23535638;     LwYDphicXkDRzoGVoVymykiRSqMMkW23535638 = LwYDphicXkDRzoGVoVymykiRSqMMkW91930777;     LwYDphicXkDRzoGVoVymykiRSqMMkW91930777 = LwYDphicXkDRzoGVoVymykiRSqMMkW49953110;     LwYDphicXkDRzoGVoVymykiRSqMMkW49953110 = LwYDphicXkDRzoGVoVymykiRSqMMkW87901625;     LwYDphicXkDRzoGVoVymykiRSqMMkW87901625 = LwYDphicXkDRzoGVoVymykiRSqMMkW13590775;     LwYDphicXkDRzoGVoVymykiRSqMMkW13590775 = LwYDphicXkDRzoGVoVymykiRSqMMkW33585578;     LwYDphicXkDRzoGVoVymykiRSqMMkW33585578 = LwYDphicXkDRzoGVoVymykiRSqMMkW12330918;     LwYDphicXkDRzoGVoVymykiRSqMMkW12330918 = LwYDphicXkDRzoGVoVymykiRSqMMkW74535053;     LwYDphicXkDRzoGVoVymykiRSqMMkW74535053 = LwYDphicXkDRzoGVoVymykiRSqMMkW94290141;     LwYDphicXkDRzoGVoVymykiRSqMMkW94290141 = LwYDphicXkDRzoGVoVymykiRSqMMkW84590922;     LwYDphicXkDRzoGVoVymykiRSqMMkW84590922 = LwYDphicXkDRzoGVoVymykiRSqMMkW6637023;     LwYDphicXkDRzoGVoVymykiRSqMMkW6637023 = LwYDphicXkDRzoGVoVymykiRSqMMkW80033423;     LwYDphicXkDRzoGVoVymykiRSqMMkW80033423 = LwYDphicXkDRzoGVoVymykiRSqMMkW47755611;     LwYDphicXkDRzoGVoVymykiRSqMMkW47755611 = LwYDphicXkDRzoGVoVymykiRSqMMkW74289422;     LwYDphicXkDRzoGVoVymykiRSqMMkW74289422 = LwYDphicXkDRzoGVoVymykiRSqMMkW7388090;     LwYDphicXkDRzoGVoVymykiRSqMMkW7388090 = LwYDphicXkDRzoGVoVymykiRSqMMkW13359308;     LwYDphicXkDRzoGVoVymykiRSqMMkW13359308 = LwYDphicXkDRzoGVoVymykiRSqMMkW41599883;     LwYDphicXkDRzoGVoVymykiRSqMMkW41599883 = LwYDphicXkDRzoGVoVymykiRSqMMkW73241721;     LwYDphicXkDRzoGVoVymykiRSqMMkW73241721 = LwYDphicXkDRzoGVoVymykiRSqMMkW28477127;     LwYDphicXkDRzoGVoVymykiRSqMMkW28477127 = LwYDphicXkDRzoGVoVymykiRSqMMkW68498387;     LwYDphicXkDRzoGVoVymykiRSqMMkW68498387 = LwYDphicXkDRzoGVoVymykiRSqMMkW99399030;     LwYDphicXkDRzoGVoVymykiRSqMMkW99399030 = LwYDphicXkDRzoGVoVymykiRSqMMkW92826676;     LwYDphicXkDRzoGVoVymykiRSqMMkW92826676 = LwYDphicXkDRzoGVoVymykiRSqMMkW65348038;     LwYDphicXkDRzoGVoVymykiRSqMMkW65348038 = LwYDphicXkDRzoGVoVymykiRSqMMkW26751984;     LwYDphicXkDRzoGVoVymykiRSqMMkW26751984 = LwYDphicXkDRzoGVoVymykiRSqMMkW10122296;     LwYDphicXkDRzoGVoVymykiRSqMMkW10122296 = LwYDphicXkDRzoGVoVymykiRSqMMkW91022013;     LwYDphicXkDRzoGVoVymykiRSqMMkW91022013 = LwYDphicXkDRzoGVoVymykiRSqMMkW66799303;     LwYDphicXkDRzoGVoVymykiRSqMMkW66799303 = LwYDphicXkDRzoGVoVymykiRSqMMkW40478404;     LwYDphicXkDRzoGVoVymykiRSqMMkW40478404 = LwYDphicXkDRzoGVoVymykiRSqMMkW82881900;     LwYDphicXkDRzoGVoVymykiRSqMMkW82881900 = LwYDphicXkDRzoGVoVymykiRSqMMkW95617225;     LwYDphicXkDRzoGVoVymykiRSqMMkW95617225 = LwYDphicXkDRzoGVoVymykiRSqMMkW60853395;     LwYDphicXkDRzoGVoVymykiRSqMMkW60853395 = LwYDphicXkDRzoGVoVymykiRSqMMkW22617618;     LwYDphicXkDRzoGVoVymykiRSqMMkW22617618 = LwYDphicXkDRzoGVoVymykiRSqMMkW52578621;     LwYDphicXkDRzoGVoVymykiRSqMMkW52578621 = LwYDphicXkDRzoGVoVymykiRSqMMkW85200936;     LwYDphicXkDRzoGVoVymykiRSqMMkW85200936 = LwYDphicXkDRzoGVoVymykiRSqMMkW87104183;     LwYDphicXkDRzoGVoVymykiRSqMMkW87104183 = LwYDphicXkDRzoGVoVymykiRSqMMkW68207306;     LwYDphicXkDRzoGVoVymykiRSqMMkW68207306 = LwYDphicXkDRzoGVoVymykiRSqMMkW17931186;     LwYDphicXkDRzoGVoVymykiRSqMMkW17931186 = LwYDphicXkDRzoGVoVymykiRSqMMkW19006069;     LwYDphicXkDRzoGVoVymykiRSqMMkW19006069 = LwYDphicXkDRzoGVoVymykiRSqMMkW31164731;     LwYDphicXkDRzoGVoVymykiRSqMMkW31164731 = LwYDphicXkDRzoGVoVymykiRSqMMkW21856005;     LwYDphicXkDRzoGVoVymykiRSqMMkW21856005 = LwYDphicXkDRzoGVoVymykiRSqMMkW81448454;     LwYDphicXkDRzoGVoVymykiRSqMMkW81448454 = LwYDphicXkDRzoGVoVymykiRSqMMkW61778379;     LwYDphicXkDRzoGVoVymykiRSqMMkW61778379 = LwYDphicXkDRzoGVoVymykiRSqMMkW82583247;     LwYDphicXkDRzoGVoVymykiRSqMMkW82583247 = LwYDphicXkDRzoGVoVymykiRSqMMkW68538686;     LwYDphicXkDRzoGVoVymykiRSqMMkW68538686 = LwYDphicXkDRzoGVoVymykiRSqMMkW53016290;     LwYDphicXkDRzoGVoVymykiRSqMMkW53016290 = LwYDphicXkDRzoGVoVymykiRSqMMkW32001941;     LwYDphicXkDRzoGVoVymykiRSqMMkW32001941 = LwYDphicXkDRzoGVoVymykiRSqMMkW75826972;     LwYDphicXkDRzoGVoVymykiRSqMMkW75826972 = LwYDphicXkDRzoGVoVymykiRSqMMkW30942374;     LwYDphicXkDRzoGVoVymykiRSqMMkW30942374 = LwYDphicXkDRzoGVoVymykiRSqMMkW63522797;     LwYDphicXkDRzoGVoVymykiRSqMMkW63522797 = LwYDphicXkDRzoGVoVymykiRSqMMkW39422774;     LwYDphicXkDRzoGVoVymykiRSqMMkW39422774 = LwYDphicXkDRzoGVoVymykiRSqMMkW86546090;     LwYDphicXkDRzoGVoVymykiRSqMMkW86546090 = LwYDphicXkDRzoGVoVymykiRSqMMkW9945953;     LwYDphicXkDRzoGVoVymykiRSqMMkW9945953 = LwYDphicXkDRzoGVoVymykiRSqMMkW52789508;     LwYDphicXkDRzoGVoVymykiRSqMMkW52789508 = LwYDphicXkDRzoGVoVymykiRSqMMkW3641196;     LwYDphicXkDRzoGVoVymykiRSqMMkW3641196 = LwYDphicXkDRzoGVoVymykiRSqMMkW89242338;     LwYDphicXkDRzoGVoVymykiRSqMMkW89242338 = LwYDphicXkDRzoGVoVymykiRSqMMkW30708961;     LwYDphicXkDRzoGVoVymykiRSqMMkW30708961 = LwYDphicXkDRzoGVoVymykiRSqMMkW26582739;     LwYDphicXkDRzoGVoVymykiRSqMMkW26582739 = LwYDphicXkDRzoGVoVymykiRSqMMkW23201127;     LwYDphicXkDRzoGVoVymykiRSqMMkW23201127 = LwYDphicXkDRzoGVoVymykiRSqMMkW77779330;     LwYDphicXkDRzoGVoVymykiRSqMMkW77779330 = LwYDphicXkDRzoGVoVymykiRSqMMkW22568762;     LwYDphicXkDRzoGVoVymykiRSqMMkW22568762 = LwYDphicXkDRzoGVoVymykiRSqMMkW66786275;     LwYDphicXkDRzoGVoVymykiRSqMMkW66786275 = LwYDphicXkDRzoGVoVymykiRSqMMkW71852514;     LwYDphicXkDRzoGVoVymykiRSqMMkW71852514 = LwYDphicXkDRzoGVoVymykiRSqMMkW91653153;     LwYDphicXkDRzoGVoVymykiRSqMMkW91653153 = LwYDphicXkDRzoGVoVymykiRSqMMkW98672915;     LwYDphicXkDRzoGVoVymykiRSqMMkW98672915 = LwYDphicXkDRzoGVoVymykiRSqMMkW62277759;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void zrqUBbnzCsqaOUvSMDraMHxnH45765968() {     double veLCXcbpnjWMjsGEsENwHoIJBAAfDD13441842 = -561477548;    double veLCXcbpnjWMjsGEsENwHoIJBAAfDD67079066 = -629337227;    double veLCXcbpnjWMjsGEsENwHoIJBAAfDD36771628 = -260048868;    double veLCXcbpnjWMjsGEsENwHoIJBAAfDD95001367 = -147085193;    double veLCXcbpnjWMjsGEsENwHoIJBAAfDD33929409 = -603162275;    double veLCXcbpnjWMjsGEsENwHoIJBAAfDD90981644 = -578406202;    double veLCXcbpnjWMjsGEsENwHoIJBAAfDD93793621 = -819369537;    double veLCXcbpnjWMjsGEsENwHoIJBAAfDD71265398 = -117009121;    double veLCXcbpnjWMjsGEsENwHoIJBAAfDD44788040 = -143247256;    double veLCXcbpnjWMjsGEsENwHoIJBAAfDD70620260 = -133097584;    double veLCXcbpnjWMjsGEsENwHoIJBAAfDD72750911 = -622778582;    double veLCXcbpnjWMjsGEsENwHoIJBAAfDD28968058 = -109069021;    double veLCXcbpnjWMjsGEsENwHoIJBAAfDD88898722 = -437477475;    double veLCXcbpnjWMjsGEsENwHoIJBAAfDD61681858 = -229298766;    double veLCXcbpnjWMjsGEsENwHoIJBAAfDD31552190 = 71287862;    double veLCXcbpnjWMjsGEsENwHoIJBAAfDD646455 = -245854703;    double veLCXcbpnjWMjsGEsENwHoIJBAAfDD15587076 = -29108704;    double veLCXcbpnjWMjsGEsENwHoIJBAAfDD33116638 = -935200122;    double veLCXcbpnjWMjsGEsENwHoIJBAAfDD50265406 = -137418314;    double veLCXcbpnjWMjsGEsENwHoIJBAAfDD39152202 = 17147185;    double veLCXcbpnjWMjsGEsENwHoIJBAAfDD37129538 = -434083447;    double veLCXcbpnjWMjsGEsENwHoIJBAAfDD75081851 = -689475869;    double veLCXcbpnjWMjsGEsENwHoIJBAAfDD80719425 = -779032848;    double veLCXcbpnjWMjsGEsENwHoIJBAAfDD23951581 = -60306798;    double veLCXcbpnjWMjsGEsENwHoIJBAAfDD91378576 = -606141565;    double veLCXcbpnjWMjsGEsENwHoIJBAAfDD35205663 = -516759560;    double veLCXcbpnjWMjsGEsENwHoIJBAAfDD47032764 = 25444257;    double veLCXcbpnjWMjsGEsENwHoIJBAAfDD86783708 = 73739197;    double veLCXcbpnjWMjsGEsENwHoIJBAAfDD33664668 = -565163889;    double veLCXcbpnjWMjsGEsENwHoIJBAAfDD53645738 = -398694839;    double veLCXcbpnjWMjsGEsENwHoIJBAAfDD30288029 = -338620264;    double veLCXcbpnjWMjsGEsENwHoIJBAAfDD87249695 = -733858084;    double veLCXcbpnjWMjsGEsENwHoIJBAAfDD11014201 = -226209004;    double veLCXcbpnjWMjsGEsENwHoIJBAAfDD88723614 = -65958032;    double veLCXcbpnjWMjsGEsENwHoIJBAAfDD57307597 = 30627008;    double veLCXcbpnjWMjsGEsENwHoIJBAAfDD41053259 = -255989438;    double veLCXcbpnjWMjsGEsENwHoIJBAAfDD34767776 = -910658739;    double veLCXcbpnjWMjsGEsENwHoIJBAAfDD12993831 = -546697059;    double veLCXcbpnjWMjsGEsENwHoIJBAAfDD67113864 = 51970434;    double veLCXcbpnjWMjsGEsENwHoIJBAAfDD77341866 = -181610171;    double veLCXcbpnjWMjsGEsENwHoIJBAAfDD95749004 = -654123110;    double veLCXcbpnjWMjsGEsENwHoIJBAAfDD7302420 = -408394055;    double veLCXcbpnjWMjsGEsENwHoIJBAAfDD71014716 = -869784447;    double veLCXcbpnjWMjsGEsENwHoIJBAAfDD75353510 = -985943386;    double veLCXcbpnjWMjsGEsENwHoIJBAAfDD62269945 = -68797749;    double veLCXcbpnjWMjsGEsENwHoIJBAAfDD57819535 = -189301179;    double veLCXcbpnjWMjsGEsENwHoIJBAAfDD33871724 = -221097507;    double veLCXcbpnjWMjsGEsENwHoIJBAAfDD71642546 = -567619797;    double veLCXcbpnjWMjsGEsENwHoIJBAAfDD68036640 = -218996555;    double veLCXcbpnjWMjsGEsENwHoIJBAAfDD1954836 = -286822466;    double veLCXcbpnjWMjsGEsENwHoIJBAAfDD40919954 = -994761291;    double veLCXcbpnjWMjsGEsENwHoIJBAAfDD82423724 = -298081307;    double veLCXcbpnjWMjsGEsENwHoIJBAAfDD53195438 = -983985123;    double veLCXcbpnjWMjsGEsENwHoIJBAAfDD21289810 = -531913114;    double veLCXcbpnjWMjsGEsENwHoIJBAAfDD8636430 = -721460531;    double veLCXcbpnjWMjsGEsENwHoIJBAAfDD38359991 = -872001680;    double veLCXcbpnjWMjsGEsENwHoIJBAAfDD86359640 = -850304380;    double veLCXcbpnjWMjsGEsENwHoIJBAAfDD12820047 = -99742070;    double veLCXcbpnjWMjsGEsENwHoIJBAAfDD3622791 = -540943628;    double veLCXcbpnjWMjsGEsENwHoIJBAAfDD98723745 = 13597285;    double veLCXcbpnjWMjsGEsENwHoIJBAAfDD43948881 = -503850459;    double veLCXcbpnjWMjsGEsENwHoIJBAAfDD7009914 = -793108734;    double veLCXcbpnjWMjsGEsENwHoIJBAAfDD37600731 = -551845233;    double veLCXcbpnjWMjsGEsENwHoIJBAAfDD91142301 = -744552417;    double veLCXcbpnjWMjsGEsENwHoIJBAAfDD40332231 = -794477320;    double veLCXcbpnjWMjsGEsENwHoIJBAAfDD85501216 = -888920498;    double veLCXcbpnjWMjsGEsENwHoIJBAAfDD17953858 = -882860017;    double veLCXcbpnjWMjsGEsENwHoIJBAAfDD175108 = -271519443;    double veLCXcbpnjWMjsGEsENwHoIJBAAfDD4374262 = -159925775;    double veLCXcbpnjWMjsGEsENwHoIJBAAfDD90498930 = -672722701;    double veLCXcbpnjWMjsGEsENwHoIJBAAfDD65878678 = -335195965;    double veLCXcbpnjWMjsGEsENwHoIJBAAfDD2593246 = -482411645;    double veLCXcbpnjWMjsGEsENwHoIJBAAfDD66002773 = -887170556;    double veLCXcbpnjWMjsGEsENwHoIJBAAfDD72923540 = -955808143;    double veLCXcbpnjWMjsGEsENwHoIJBAAfDD43403197 = -328729705;    double veLCXcbpnjWMjsGEsENwHoIJBAAfDD29827119 = 74310608;    double veLCXcbpnjWMjsGEsENwHoIJBAAfDD4067135 = -819691422;    double veLCXcbpnjWMjsGEsENwHoIJBAAfDD5365916 = -793089463;    double veLCXcbpnjWMjsGEsENwHoIJBAAfDD61681635 = -991509049;    double veLCXcbpnjWMjsGEsENwHoIJBAAfDD33559042 = -316840387;    double veLCXcbpnjWMjsGEsENwHoIJBAAfDD1333940 = -195662053;    double veLCXcbpnjWMjsGEsENwHoIJBAAfDD75390217 = -406935946;    double veLCXcbpnjWMjsGEsENwHoIJBAAfDD18747068 = -707264249;    double veLCXcbpnjWMjsGEsENwHoIJBAAfDD31709833 = -178341423;    double veLCXcbpnjWMjsGEsENwHoIJBAAfDD12725785 = -403933548;    double veLCXcbpnjWMjsGEsENwHoIJBAAfDD47864305 = 59461043;    double veLCXcbpnjWMjsGEsENwHoIJBAAfDD34054257 = -749872962;    double veLCXcbpnjWMjsGEsENwHoIJBAAfDD89724390 = -694295890;    double veLCXcbpnjWMjsGEsENwHoIJBAAfDD80087184 = -344497502;    double veLCXcbpnjWMjsGEsENwHoIJBAAfDD18947607 = -97371313;    double veLCXcbpnjWMjsGEsENwHoIJBAAfDD54693618 = -405685058;    double veLCXcbpnjWMjsGEsENwHoIJBAAfDD21947729 = -710916669;    double veLCXcbpnjWMjsGEsENwHoIJBAAfDD9371040 = 94246568;    double veLCXcbpnjWMjsGEsENwHoIJBAAfDD68390119 = -961626851;    double veLCXcbpnjWMjsGEsENwHoIJBAAfDD33392985 = -677759713;    double veLCXcbpnjWMjsGEsENwHoIJBAAfDD88739091 = -861014377;    double veLCXcbpnjWMjsGEsENwHoIJBAAfDD69701688 = -856548823;    double veLCXcbpnjWMjsGEsENwHoIJBAAfDD79872415 = -25232030;    double veLCXcbpnjWMjsGEsENwHoIJBAAfDD35021279 = -91466066;    double veLCXcbpnjWMjsGEsENwHoIJBAAfDD76768729 = -561477548;     veLCXcbpnjWMjsGEsENwHoIJBAAfDD13441842 = veLCXcbpnjWMjsGEsENwHoIJBAAfDD67079066;     veLCXcbpnjWMjsGEsENwHoIJBAAfDD67079066 = veLCXcbpnjWMjsGEsENwHoIJBAAfDD36771628;     veLCXcbpnjWMjsGEsENwHoIJBAAfDD36771628 = veLCXcbpnjWMjsGEsENwHoIJBAAfDD95001367;     veLCXcbpnjWMjsGEsENwHoIJBAAfDD95001367 = veLCXcbpnjWMjsGEsENwHoIJBAAfDD33929409;     veLCXcbpnjWMjsGEsENwHoIJBAAfDD33929409 = veLCXcbpnjWMjsGEsENwHoIJBAAfDD90981644;     veLCXcbpnjWMjsGEsENwHoIJBAAfDD90981644 = veLCXcbpnjWMjsGEsENwHoIJBAAfDD93793621;     veLCXcbpnjWMjsGEsENwHoIJBAAfDD93793621 = veLCXcbpnjWMjsGEsENwHoIJBAAfDD71265398;     veLCXcbpnjWMjsGEsENwHoIJBAAfDD71265398 = veLCXcbpnjWMjsGEsENwHoIJBAAfDD44788040;     veLCXcbpnjWMjsGEsENwHoIJBAAfDD44788040 = veLCXcbpnjWMjsGEsENwHoIJBAAfDD70620260;     veLCXcbpnjWMjsGEsENwHoIJBAAfDD70620260 = veLCXcbpnjWMjsGEsENwHoIJBAAfDD72750911;     veLCXcbpnjWMjsGEsENwHoIJBAAfDD72750911 = veLCXcbpnjWMjsGEsENwHoIJBAAfDD28968058;     veLCXcbpnjWMjsGEsENwHoIJBAAfDD28968058 = veLCXcbpnjWMjsGEsENwHoIJBAAfDD88898722;     veLCXcbpnjWMjsGEsENwHoIJBAAfDD88898722 = veLCXcbpnjWMjsGEsENwHoIJBAAfDD61681858;     veLCXcbpnjWMjsGEsENwHoIJBAAfDD61681858 = veLCXcbpnjWMjsGEsENwHoIJBAAfDD31552190;     veLCXcbpnjWMjsGEsENwHoIJBAAfDD31552190 = veLCXcbpnjWMjsGEsENwHoIJBAAfDD646455;     veLCXcbpnjWMjsGEsENwHoIJBAAfDD646455 = veLCXcbpnjWMjsGEsENwHoIJBAAfDD15587076;     veLCXcbpnjWMjsGEsENwHoIJBAAfDD15587076 = veLCXcbpnjWMjsGEsENwHoIJBAAfDD33116638;     veLCXcbpnjWMjsGEsENwHoIJBAAfDD33116638 = veLCXcbpnjWMjsGEsENwHoIJBAAfDD50265406;     veLCXcbpnjWMjsGEsENwHoIJBAAfDD50265406 = veLCXcbpnjWMjsGEsENwHoIJBAAfDD39152202;     veLCXcbpnjWMjsGEsENwHoIJBAAfDD39152202 = veLCXcbpnjWMjsGEsENwHoIJBAAfDD37129538;     veLCXcbpnjWMjsGEsENwHoIJBAAfDD37129538 = veLCXcbpnjWMjsGEsENwHoIJBAAfDD75081851;     veLCXcbpnjWMjsGEsENwHoIJBAAfDD75081851 = veLCXcbpnjWMjsGEsENwHoIJBAAfDD80719425;     veLCXcbpnjWMjsGEsENwHoIJBAAfDD80719425 = veLCXcbpnjWMjsGEsENwHoIJBAAfDD23951581;     veLCXcbpnjWMjsGEsENwHoIJBAAfDD23951581 = veLCXcbpnjWMjsGEsENwHoIJBAAfDD91378576;     veLCXcbpnjWMjsGEsENwHoIJBAAfDD91378576 = veLCXcbpnjWMjsGEsENwHoIJBAAfDD35205663;     veLCXcbpnjWMjsGEsENwHoIJBAAfDD35205663 = veLCXcbpnjWMjsGEsENwHoIJBAAfDD47032764;     veLCXcbpnjWMjsGEsENwHoIJBAAfDD47032764 = veLCXcbpnjWMjsGEsENwHoIJBAAfDD86783708;     veLCXcbpnjWMjsGEsENwHoIJBAAfDD86783708 = veLCXcbpnjWMjsGEsENwHoIJBAAfDD33664668;     veLCXcbpnjWMjsGEsENwHoIJBAAfDD33664668 = veLCXcbpnjWMjsGEsENwHoIJBAAfDD53645738;     veLCXcbpnjWMjsGEsENwHoIJBAAfDD53645738 = veLCXcbpnjWMjsGEsENwHoIJBAAfDD30288029;     veLCXcbpnjWMjsGEsENwHoIJBAAfDD30288029 = veLCXcbpnjWMjsGEsENwHoIJBAAfDD87249695;     veLCXcbpnjWMjsGEsENwHoIJBAAfDD87249695 = veLCXcbpnjWMjsGEsENwHoIJBAAfDD11014201;     veLCXcbpnjWMjsGEsENwHoIJBAAfDD11014201 = veLCXcbpnjWMjsGEsENwHoIJBAAfDD88723614;     veLCXcbpnjWMjsGEsENwHoIJBAAfDD88723614 = veLCXcbpnjWMjsGEsENwHoIJBAAfDD57307597;     veLCXcbpnjWMjsGEsENwHoIJBAAfDD57307597 = veLCXcbpnjWMjsGEsENwHoIJBAAfDD41053259;     veLCXcbpnjWMjsGEsENwHoIJBAAfDD41053259 = veLCXcbpnjWMjsGEsENwHoIJBAAfDD34767776;     veLCXcbpnjWMjsGEsENwHoIJBAAfDD34767776 = veLCXcbpnjWMjsGEsENwHoIJBAAfDD12993831;     veLCXcbpnjWMjsGEsENwHoIJBAAfDD12993831 = veLCXcbpnjWMjsGEsENwHoIJBAAfDD67113864;     veLCXcbpnjWMjsGEsENwHoIJBAAfDD67113864 = veLCXcbpnjWMjsGEsENwHoIJBAAfDD77341866;     veLCXcbpnjWMjsGEsENwHoIJBAAfDD77341866 = veLCXcbpnjWMjsGEsENwHoIJBAAfDD95749004;     veLCXcbpnjWMjsGEsENwHoIJBAAfDD95749004 = veLCXcbpnjWMjsGEsENwHoIJBAAfDD7302420;     veLCXcbpnjWMjsGEsENwHoIJBAAfDD7302420 = veLCXcbpnjWMjsGEsENwHoIJBAAfDD71014716;     veLCXcbpnjWMjsGEsENwHoIJBAAfDD71014716 = veLCXcbpnjWMjsGEsENwHoIJBAAfDD75353510;     veLCXcbpnjWMjsGEsENwHoIJBAAfDD75353510 = veLCXcbpnjWMjsGEsENwHoIJBAAfDD62269945;     veLCXcbpnjWMjsGEsENwHoIJBAAfDD62269945 = veLCXcbpnjWMjsGEsENwHoIJBAAfDD57819535;     veLCXcbpnjWMjsGEsENwHoIJBAAfDD57819535 = veLCXcbpnjWMjsGEsENwHoIJBAAfDD33871724;     veLCXcbpnjWMjsGEsENwHoIJBAAfDD33871724 = veLCXcbpnjWMjsGEsENwHoIJBAAfDD71642546;     veLCXcbpnjWMjsGEsENwHoIJBAAfDD71642546 = veLCXcbpnjWMjsGEsENwHoIJBAAfDD68036640;     veLCXcbpnjWMjsGEsENwHoIJBAAfDD68036640 = veLCXcbpnjWMjsGEsENwHoIJBAAfDD1954836;     veLCXcbpnjWMjsGEsENwHoIJBAAfDD1954836 = veLCXcbpnjWMjsGEsENwHoIJBAAfDD40919954;     veLCXcbpnjWMjsGEsENwHoIJBAAfDD40919954 = veLCXcbpnjWMjsGEsENwHoIJBAAfDD82423724;     veLCXcbpnjWMjsGEsENwHoIJBAAfDD82423724 = veLCXcbpnjWMjsGEsENwHoIJBAAfDD53195438;     veLCXcbpnjWMjsGEsENwHoIJBAAfDD53195438 = veLCXcbpnjWMjsGEsENwHoIJBAAfDD21289810;     veLCXcbpnjWMjsGEsENwHoIJBAAfDD21289810 = veLCXcbpnjWMjsGEsENwHoIJBAAfDD8636430;     veLCXcbpnjWMjsGEsENwHoIJBAAfDD8636430 = veLCXcbpnjWMjsGEsENwHoIJBAAfDD38359991;     veLCXcbpnjWMjsGEsENwHoIJBAAfDD38359991 = veLCXcbpnjWMjsGEsENwHoIJBAAfDD86359640;     veLCXcbpnjWMjsGEsENwHoIJBAAfDD86359640 = veLCXcbpnjWMjsGEsENwHoIJBAAfDD12820047;     veLCXcbpnjWMjsGEsENwHoIJBAAfDD12820047 = veLCXcbpnjWMjsGEsENwHoIJBAAfDD3622791;     veLCXcbpnjWMjsGEsENwHoIJBAAfDD3622791 = veLCXcbpnjWMjsGEsENwHoIJBAAfDD98723745;     veLCXcbpnjWMjsGEsENwHoIJBAAfDD98723745 = veLCXcbpnjWMjsGEsENwHoIJBAAfDD43948881;     veLCXcbpnjWMjsGEsENwHoIJBAAfDD43948881 = veLCXcbpnjWMjsGEsENwHoIJBAAfDD7009914;     veLCXcbpnjWMjsGEsENwHoIJBAAfDD7009914 = veLCXcbpnjWMjsGEsENwHoIJBAAfDD37600731;     veLCXcbpnjWMjsGEsENwHoIJBAAfDD37600731 = veLCXcbpnjWMjsGEsENwHoIJBAAfDD91142301;     veLCXcbpnjWMjsGEsENwHoIJBAAfDD91142301 = veLCXcbpnjWMjsGEsENwHoIJBAAfDD40332231;     veLCXcbpnjWMjsGEsENwHoIJBAAfDD40332231 = veLCXcbpnjWMjsGEsENwHoIJBAAfDD85501216;     veLCXcbpnjWMjsGEsENwHoIJBAAfDD85501216 = veLCXcbpnjWMjsGEsENwHoIJBAAfDD17953858;     veLCXcbpnjWMjsGEsENwHoIJBAAfDD17953858 = veLCXcbpnjWMjsGEsENwHoIJBAAfDD175108;     veLCXcbpnjWMjsGEsENwHoIJBAAfDD175108 = veLCXcbpnjWMjsGEsENwHoIJBAAfDD4374262;     veLCXcbpnjWMjsGEsENwHoIJBAAfDD4374262 = veLCXcbpnjWMjsGEsENwHoIJBAAfDD90498930;     veLCXcbpnjWMjsGEsENwHoIJBAAfDD90498930 = veLCXcbpnjWMjsGEsENwHoIJBAAfDD65878678;     veLCXcbpnjWMjsGEsENwHoIJBAAfDD65878678 = veLCXcbpnjWMjsGEsENwHoIJBAAfDD2593246;     veLCXcbpnjWMjsGEsENwHoIJBAAfDD2593246 = veLCXcbpnjWMjsGEsENwHoIJBAAfDD66002773;     veLCXcbpnjWMjsGEsENwHoIJBAAfDD66002773 = veLCXcbpnjWMjsGEsENwHoIJBAAfDD72923540;     veLCXcbpnjWMjsGEsENwHoIJBAAfDD72923540 = veLCXcbpnjWMjsGEsENwHoIJBAAfDD43403197;     veLCXcbpnjWMjsGEsENwHoIJBAAfDD43403197 = veLCXcbpnjWMjsGEsENwHoIJBAAfDD29827119;     veLCXcbpnjWMjsGEsENwHoIJBAAfDD29827119 = veLCXcbpnjWMjsGEsENwHoIJBAAfDD4067135;     veLCXcbpnjWMjsGEsENwHoIJBAAfDD4067135 = veLCXcbpnjWMjsGEsENwHoIJBAAfDD5365916;     veLCXcbpnjWMjsGEsENwHoIJBAAfDD5365916 = veLCXcbpnjWMjsGEsENwHoIJBAAfDD61681635;     veLCXcbpnjWMjsGEsENwHoIJBAAfDD61681635 = veLCXcbpnjWMjsGEsENwHoIJBAAfDD33559042;     veLCXcbpnjWMjsGEsENwHoIJBAAfDD33559042 = veLCXcbpnjWMjsGEsENwHoIJBAAfDD1333940;     veLCXcbpnjWMjsGEsENwHoIJBAAfDD1333940 = veLCXcbpnjWMjsGEsENwHoIJBAAfDD75390217;     veLCXcbpnjWMjsGEsENwHoIJBAAfDD75390217 = veLCXcbpnjWMjsGEsENwHoIJBAAfDD18747068;     veLCXcbpnjWMjsGEsENwHoIJBAAfDD18747068 = veLCXcbpnjWMjsGEsENwHoIJBAAfDD31709833;     veLCXcbpnjWMjsGEsENwHoIJBAAfDD31709833 = veLCXcbpnjWMjsGEsENwHoIJBAAfDD12725785;     veLCXcbpnjWMjsGEsENwHoIJBAAfDD12725785 = veLCXcbpnjWMjsGEsENwHoIJBAAfDD47864305;     veLCXcbpnjWMjsGEsENwHoIJBAAfDD47864305 = veLCXcbpnjWMjsGEsENwHoIJBAAfDD34054257;     veLCXcbpnjWMjsGEsENwHoIJBAAfDD34054257 = veLCXcbpnjWMjsGEsENwHoIJBAAfDD89724390;     veLCXcbpnjWMjsGEsENwHoIJBAAfDD89724390 = veLCXcbpnjWMjsGEsENwHoIJBAAfDD80087184;     veLCXcbpnjWMjsGEsENwHoIJBAAfDD80087184 = veLCXcbpnjWMjsGEsENwHoIJBAAfDD18947607;     veLCXcbpnjWMjsGEsENwHoIJBAAfDD18947607 = veLCXcbpnjWMjsGEsENwHoIJBAAfDD54693618;     veLCXcbpnjWMjsGEsENwHoIJBAAfDD54693618 = veLCXcbpnjWMjsGEsENwHoIJBAAfDD21947729;     veLCXcbpnjWMjsGEsENwHoIJBAAfDD21947729 = veLCXcbpnjWMjsGEsENwHoIJBAAfDD9371040;     veLCXcbpnjWMjsGEsENwHoIJBAAfDD9371040 = veLCXcbpnjWMjsGEsENwHoIJBAAfDD68390119;     veLCXcbpnjWMjsGEsENwHoIJBAAfDD68390119 = veLCXcbpnjWMjsGEsENwHoIJBAAfDD33392985;     veLCXcbpnjWMjsGEsENwHoIJBAAfDD33392985 = veLCXcbpnjWMjsGEsENwHoIJBAAfDD88739091;     veLCXcbpnjWMjsGEsENwHoIJBAAfDD88739091 = veLCXcbpnjWMjsGEsENwHoIJBAAfDD69701688;     veLCXcbpnjWMjsGEsENwHoIJBAAfDD69701688 = veLCXcbpnjWMjsGEsENwHoIJBAAfDD79872415;     veLCXcbpnjWMjsGEsENwHoIJBAAfDD79872415 = veLCXcbpnjWMjsGEsENwHoIJBAAfDD35021279;     veLCXcbpnjWMjsGEsENwHoIJBAAfDD35021279 = veLCXcbpnjWMjsGEsENwHoIJBAAfDD76768729;     veLCXcbpnjWMjsGEsENwHoIJBAAfDD76768729 = veLCXcbpnjWMjsGEsENwHoIJBAAfDD13441842;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void WvDtOCYDlOswbEYhLmOUIcnrb55370694() {     double EqNWvilrESHlofxvFxCjOkxILjyDFS35264063 = -29692880;    double EqNWvilrESHlofxvFxCjOkxILjyDFS28546870 = 88063920;    double EqNWvilrESHlofxvFxCjOkxILjyDFS82498898 = -307266400;    double EqNWvilrESHlofxvFxCjOkxILjyDFS26376513 = -351869369;    double EqNWvilrESHlofxvFxCjOkxILjyDFS94063739 = -480413196;    double EqNWvilrESHlofxvFxCjOkxILjyDFS14999961 = -589949360;    double EqNWvilrESHlofxvFxCjOkxILjyDFS22814206 = -882687661;    double EqNWvilrESHlofxvFxCjOkxILjyDFS58128028 = -125189969;    double EqNWvilrESHlofxvFxCjOkxILjyDFS41311680 = -129042674;    double EqNWvilrESHlofxvFxCjOkxILjyDFS31903486 = -3315981;    double EqNWvilrESHlofxvFxCjOkxILjyDFS43667180 = -178536285;    double EqNWvilrESHlofxvFxCjOkxILjyDFS45149941 = -212250627;    double EqNWvilrESHlofxvFxCjOkxILjyDFS21887665 = -975511264;    double EqNWvilrESHlofxvFxCjOkxILjyDFS28648326 = 20624436;    double EqNWvilrESHlofxvFxCjOkxILjyDFS26809985 = -955554057;    double EqNWvilrESHlofxvFxCjOkxILjyDFS48617180 = -688221244;    double EqNWvilrESHlofxvFxCjOkxILjyDFS9036135 = -414933423;    double EqNWvilrESHlofxvFxCjOkxILjyDFS95641940 = -856921040;    double EqNWvilrESHlofxvFxCjOkxILjyDFS54902630 = -210553970;    double EqNWvilrESHlofxvFxCjOkxILjyDFS20261844 = -474097871;    double EqNWvilrESHlofxvFxCjOkxILjyDFS94283823 = -166162150;    double EqNWvilrESHlofxvFxCjOkxILjyDFS39483829 = -760227033;    double EqNWvilrESHlofxvFxCjOkxILjyDFS90190829 = -335060203;    double EqNWvilrESHlofxvFxCjOkxILjyDFS61229203 = -470405664;    double EqNWvilrESHlofxvFxCjOkxILjyDFS65309243 = -517038538;    double EqNWvilrESHlofxvFxCjOkxILjyDFS24781517 = -843945088;    double EqNWvilrESHlofxvFxCjOkxILjyDFS20069368 = -601359787;    double EqNWvilrESHlofxvFxCjOkxILjyDFS22363534 = -890709036;    double EqNWvilrESHlofxvFxCjOkxILjyDFS81561580 = -232109807;    double EqNWvilrESHlofxvFxCjOkxILjyDFS99462815 = -774909033;    double EqNWvilrESHlofxvFxCjOkxILjyDFS81453294 = -744348011;    double EqNWvilrESHlofxvFxCjOkxILjyDFS6141021 = -509746914;    double EqNWvilrESHlofxvFxCjOkxILjyDFS36333666 = 31187113;    double EqNWvilrESHlofxvFxCjOkxILjyDFS61262731 = -841777659;    double EqNWvilrESHlofxvFxCjOkxILjyDFS38141810 = -119191594;    double EqNWvilrESHlofxvFxCjOkxILjyDFS10630219 = -270405417;    double EqNWvilrESHlofxvFxCjOkxILjyDFS77850032 = -960275835;    double EqNWvilrESHlofxvFxCjOkxILjyDFS16931693 = -28239817;    double EqNWvilrESHlofxvFxCjOkxILjyDFS27494311 = -820434847;    double EqNWvilrESHlofxvFxCjOkxILjyDFS90012511 = -639159172;    double EqNWvilrESHlofxvFxCjOkxILjyDFS50124850 = 11737632;    double EqNWvilrESHlofxvFxCjOkxILjyDFS23804590 = -95860133;    double EqNWvilrESHlofxvFxCjOkxILjyDFS18382116 = -913751262;    double EqNWvilrESHlofxvFxCjOkxILjyDFS23448369 = -894749555;    double EqNWvilrESHlofxvFxCjOkxILjyDFS42185757 = -255486379;    double EqNWvilrESHlofxvFxCjOkxILjyDFS97026013 = -992733409;    double EqNWvilrESHlofxvFxCjOkxILjyDFS59539835 = -402105027;    double EqNWvilrESHlofxvFxCjOkxILjyDFS53482298 = -306115786;    double EqNWvilrESHlofxvFxCjOkxILjyDFS75100732 = -404112977;    double EqNWvilrESHlofxvFxCjOkxILjyDFS18002312 = -265877651;    double EqNWvilrESHlofxvFxCjOkxILjyDFS29381773 = 61349383;    double EqNWvilrESHlofxvFxCjOkxILjyDFS78812388 = -623459388;    double EqNWvilrESHlofxvFxCjOkxILjyDFS44418303 = -947580262;    double EqNWvilrESHlofxvFxCjOkxILjyDFS49314932 = -722922174;    double EqNWvilrESHlofxvFxCjOkxILjyDFS61086871 = -682582280;    double EqNWvilrESHlofxvFxCjOkxILjyDFS95780233 = -269465847;    double EqNWvilrESHlofxvFxCjOkxILjyDFS38356040 = -576875878;    double EqNWvilrESHlofxvFxCjOkxILjyDFS21269696 = -836860737;    double EqNWvilrESHlofxvFxCjOkxILjyDFS61067269 = -834830831;    double EqNWvilrESHlofxvFxCjOkxILjyDFS69282222 = -636468109;    double EqNWvilrESHlofxvFxCjOkxILjyDFS94930593 = -988589573;    double EqNWvilrESHlofxvFxCjOkxILjyDFS450673 = -991978625;    double EqNWvilrESHlofxvFxCjOkxILjyDFS76566447 = -893080163;    double EqNWvilrESHlofxvFxCjOkxILjyDFS41848864 = -354133641;    double EqNWvilrESHlofxvFxCjOkxILjyDFS50450191 = -258967970;    double EqNWvilrESHlofxvFxCjOkxILjyDFS37526159 = -668789371;    double EqNWvilrESHlofxvFxCjOkxILjyDFS8816276 = -143437740;    double EqNWvilrESHlofxvFxCjOkxILjyDFS60624933 = -33733605;    double EqNWvilrESHlofxvFxCjOkxILjyDFS90506515 = -860183970;    double EqNWvilrESHlofxvFxCjOkxILjyDFS16179766 = -585148640;    double EqNWvilrESHlofxvFxCjOkxILjyDFS70767147 = -727945409;    double EqNWvilrESHlofxvFxCjOkxILjyDFS92104442 = -286693606;    double EqNWvilrESHlofxvFxCjOkxILjyDFS68147630 = 63513807;    double EqNWvilrESHlofxvFxCjOkxILjyDFS64890118 = -571394798;    double EqNWvilrESHlofxvFxCjOkxILjyDFS70136993 = -385835503;    double EqNWvilrESHlofxvFxCjOkxILjyDFS70479233 = 29697983;    double EqNWvilrESHlofxvFxCjOkxILjyDFS21101714 = -846475771;    double EqNWvilrESHlofxvFxCjOkxILjyDFS66742461 = -440310649;    double EqNWvilrESHlofxvFxCjOkxILjyDFS19043447 = -114919286;    double EqNWvilrESHlofxvFxCjOkxILjyDFS68283230 = -524305129;    double EqNWvilrESHlofxvFxCjOkxILjyDFS65241682 = -341840061;    double EqNWvilrESHlofxvFxCjOkxILjyDFS66587069 = -195244002;    double EqNWvilrESHlofxvFxCjOkxILjyDFS47262801 = -386596059;    double EqNWvilrESHlofxvFxCjOkxILjyDFS63559269 = -966232156;    double EqNWvilrESHlofxvFxCjOkxILjyDFS70081042 = -736258416;    double EqNWvilrESHlofxvFxCjOkxILjyDFS2640907 = -20888624;    double EqNWvilrESHlofxvFxCjOkxILjyDFS61722718 = -562166653;    double EqNWvilrESHlofxvFxCjOkxILjyDFS87018733 = -245890714;    double EqNWvilrESHlofxvFxCjOkxILjyDFS175861 = -59195380;    double EqNWvilrESHlofxvFxCjOkxILjyDFS42361576 = -849725748;    double EqNWvilrESHlofxvFxCjOkxILjyDFS72274178 = -693529540;    double EqNWvilrESHlofxvFxCjOkxILjyDFS56580337 = -23415099;    double EqNWvilrESHlofxvFxCjOkxILjyDFS55864423 = -193408986;    double EqNWvilrESHlofxvFxCjOkxILjyDFS58212088 = -83966738;    double EqNWvilrESHlofxvFxCjOkxILjyDFS95081918 = -650569600;    double EqNWvilrESHlofxvFxCjOkxILjyDFS49674178 = 3716257;    double EqNWvilrESHlofxvFxCjOkxILjyDFS47238143 = -202779970;    double EqNWvilrESHlofxvFxCjOkxILjyDFS76533251 = -459617622;    double EqNWvilrESHlofxvFxCjOkxILjyDFS72998178 = -535781585;    double EqNWvilrESHlofxvFxCjOkxILjyDFS4659598 = -29692880;     EqNWvilrESHlofxvFxCjOkxILjyDFS35264063 = EqNWvilrESHlofxvFxCjOkxILjyDFS28546870;     EqNWvilrESHlofxvFxCjOkxILjyDFS28546870 = EqNWvilrESHlofxvFxCjOkxILjyDFS82498898;     EqNWvilrESHlofxvFxCjOkxILjyDFS82498898 = EqNWvilrESHlofxvFxCjOkxILjyDFS26376513;     EqNWvilrESHlofxvFxCjOkxILjyDFS26376513 = EqNWvilrESHlofxvFxCjOkxILjyDFS94063739;     EqNWvilrESHlofxvFxCjOkxILjyDFS94063739 = EqNWvilrESHlofxvFxCjOkxILjyDFS14999961;     EqNWvilrESHlofxvFxCjOkxILjyDFS14999961 = EqNWvilrESHlofxvFxCjOkxILjyDFS22814206;     EqNWvilrESHlofxvFxCjOkxILjyDFS22814206 = EqNWvilrESHlofxvFxCjOkxILjyDFS58128028;     EqNWvilrESHlofxvFxCjOkxILjyDFS58128028 = EqNWvilrESHlofxvFxCjOkxILjyDFS41311680;     EqNWvilrESHlofxvFxCjOkxILjyDFS41311680 = EqNWvilrESHlofxvFxCjOkxILjyDFS31903486;     EqNWvilrESHlofxvFxCjOkxILjyDFS31903486 = EqNWvilrESHlofxvFxCjOkxILjyDFS43667180;     EqNWvilrESHlofxvFxCjOkxILjyDFS43667180 = EqNWvilrESHlofxvFxCjOkxILjyDFS45149941;     EqNWvilrESHlofxvFxCjOkxILjyDFS45149941 = EqNWvilrESHlofxvFxCjOkxILjyDFS21887665;     EqNWvilrESHlofxvFxCjOkxILjyDFS21887665 = EqNWvilrESHlofxvFxCjOkxILjyDFS28648326;     EqNWvilrESHlofxvFxCjOkxILjyDFS28648326 = EqNWvilrESHlofxvFxCjOkxILjyDFS26809985;     EqNWvilrESHlofxvFxCjOkxILjyDFS26809985 = EqNWvilrESHlofxvFxCjOkxILjyDFS48617180;     EqNWvilrESHlofxvFxCjOkxILjyDFS48617180 = EqNWvilrESHlofxvFxCjOkxILjyDFS9036135;     EqNWvilrESHlofxvFxCjOkxILjyDFS9036135 = EqNWvilrESHlofxvFxCjOkxILjyDFS95641940;     EqNWvilrESHlofxvFxCjOkxILjyDFS95641940 = EqNWvilrESHlofxvFxCjOkxILjyDFS54902630;     EqNWvilrESHlofxvFxCjOkxILjyDFS54902630 = EqNWvilrESHlofxvFxCjOkxILjyDFS20261844;     EqNWvilrESHlofxvFxCjOkxILjyDFS20261844 = EqNWvilrESHlofxvFxCjOkxILjyDFS94283823;     EqNWvilrESHlofxvFxCjOkxILjyDFS94283823 = EqNWvilrESHlofxvFxCjOkxILjyDFS39483829;     EqNWvilrESHlofxvFxCjOkxILjyDFS39483829 = EqNWvilrESHlofxvFxCjOkxILjyDFS90190829;     EqNWvilrESHlofxvFxCjOkxILjyDFS90190829 = EqNWvilrESHlofxvFxCjOkxILjyDFS61229203;     EqNWvilrESHlofxvFxCjOkxILjyDFS61229203 = EqNWvilrESHlofxvFxCjOkxILjyDFS65309243;     EqNWvilrESHlofxvFxCjOkxILjyDFS65309243 = EqNWvilrESHlofxvFxCjOkxILjyDFS24781517;     EqNWvilrESHlofxvFxCjOkxILjyDFS24781517 = EqNWvilrESHlofxvFxCjOkxILjyDFS20069368;     EqNWvilrESHlofxvFxCjOkxILjyDFS20069368 = EqNWvilrESHlofxvFxCjOkxILjyDFS22363534;     EqNWvilrESHlofxvFxCjOkxILjyDFS22363534 = EqNWvilrESHlofxvFxCjOkxILjyDFS81561580;     EqNWvilrESHlofxvFxCjOkxILjyDFS81561580 = EqNWvilrESHlofxvFxCjOkxILjyDFS99462815;     EqNWvilrESHlofxvFxCjOkxILjyDFS99462815 = EqNWvilrESHlofxvFxCjOkxILjyDFS81453294;     EqNWvilrESHlofxvFxCjOkxILjyDFS81453294 = EqNWvilrESHlofxvFxCjOkxILjyDFS6141021;     EqNWvilrESHlofxvFxCjOkxILjyDFS6141021 = EqNWvilrESHlofxvFxCjOkxILjyDFS36333666;     EqNWvilrESHlofxvFxCjOkxILjyDFS36333666 = EqNWvilrESHlofxvFxCjOkxILjyDFS61262731;     EqNWvilrESHlofxvFxCjOkxILjyDFS61262731 = EqNWvilrESHlofxvFxCjOkxILjyDFS38141810;     EqNWvilrESHlofxvFxCjOkxILjyDFS38141810 = EqNWvilrESHlofxvFxCjOkxILjyDFS10630219;     EqNWvilrESHlofxvFxCjOkxILjyDFS10630219 = EqNWvilrESHlofxvFxCjOkxILjyDFS77850032;     EqNWvilrESHlofxvFxCjOkxILjyDFS77850032 = EqNWvilrESHlofxvFxCjOkxILjyDFS16931693;     EqNWvilrESHlofxvFxCjOkxILjyDFS16931693 = EqNWvilrESHlofxvFxCjOkxILjyDFS27494311;     EqNWvilrESHlofxvFxCjOkxILjyDFS27494311 = EqNWvilrESHlofxvFxCjOkxILjyDFS90012511;     EqNWvilrESHlofxvFxCjOkxILjyDFS90012511 = EqNWvilrESHlofxvFxCjOkxILjyDFS50124850;     EqNWvilrESHlofxvFxCjOkxILjyDFS50124850 = EqNWvilrESHlofxvFxCjOkxILjyDFS23804590;     EqNWvilrESHlofxvFxCjOkxILjyDFS23804590 = EqNWvilrESHlofxvFxCjOkxILjyDFS18382116;     EqNWvilrESHlofxvFxCjOkxILjyDFS18382116 = EqNWvilrESHlofxvFxCjOkxILjyDFS23448369;     EqNWvilrESHlofxvFxCjOkxILjyDFS23448369 = EqNWvilrESHlofxvFxCjOkxILjyDFS42185757;     EqNWvilrESHlofxvFxCjOkxILjyDFS42185757 = EqNWvilrESHlofxvFxCjOkxILjyDFS97026013;     EqNWvilrESHlofxvFxCjOkxILjyDFS97026013 = EqNWvilrESHlofxvFxCjOkxILjyDFS59539835;     EqNWvilrESHlofxvFxCjOkxILjyDFS59539835 = EqNWvilrESHlofxvFxCjOkxILjyDFS53482298;     EqNWvilrESHlofxvFxCjOkxILjyDFS53482298 = EqNWvilrESHlofxvFxCjOkxILjyDFS75100732;     EqNWvilrESHlofxvFxCjOkxILjyDFS75100732 = EqNWvilrESHlofxvFxCjOkxILjyDFS18002312;     EqNWvilrESHlofxvFxCjOkxILjyDFS18002312 = EqNWvilrESHlofxvFxCjOkxILjyDFS29381773;     EqNWvilrESHlofxvFxCjOkxILjyDFS29381773 = EqNWvilrESHlofxvFxCjOkxILjyDFS78812388;     EqNWvilrESHlofxvFxCjOkxILjyDFS78812388 = EqNWvilrESHlofxvFxCjOkxILjyDFS44418303;     EqNWvilrESHlofxvFxCjOkxILjyDFS44418303 = EqNWvilrESHlofxvFxCjOkxILjyDFS49314932;     EqNWvilrESHlofxvFxCjOkxILjyDFS49314932 = EqNWvilrESHlofxvFxCjOkxILjyDFS61086871;     EqNWvilrESHlofxvFxCjOkxILjyDFS61086871 = EqNWvilrESHlofxvFxCjOkxILjyDFS95780233;     EqNWvilrESHlofxvFxCjOkxILjyDFS95780233 = EqNWvilrESHlofxvFxCjOkxILjyDFS38356040;     EqNWvilrESHlofxvFxCjOkxILjyDFS38356040 = EqNWvilrESHlofxvFxCjOkxILjyDFS21269696;     EqNWvilrESHlofxvFxCjOkxILjyDFS21269696 = EqNWvilrESHlofxvFxCjOkxILjyDFS61067269;     EqNWvilrESHlofxvFxCjOkxILjyDFS61067269 = EqNWvilrESHlofxvFxCjOkxILjyDFS69282222;     EqNWvilrESHlofxvFxCjOkxILjyDFS69282222 = EqNWvilrESHlofxvFxCjOkxILjyDFS94930593;     EqNWvilrESHlofxvFxCjOkxILjyDFS94930593 = EqNWvilrESHlofxvFxCjOkxILjyDFS450673;     EqNWvilrESHlofxvFxCjOkxILjyDFS450673 = EqNWvilrESHlofxvFxCjOkxILjyDFS76566447;     EqNWvilrESHlofxvFxCjOkxILjyDFS76566447 = EqNWvilrESHlofxvFxCjOkxILjyDFS41848864;     EqNWvilrESHlofxvFxCjOkxILjyDFS41848864 = EqNWvilrESHlofxvFxCjOkxILjyDFS50450191;     EqNWvilrESHlofxvFxCjOkxILjyDFS50450191 = EqNWvilrESHlofxvFxCjOkxILjyDFS37526159;     EqNWvilrESHlofxvFxCjOkxILjyDFS37526159 = EqNWvilrESHlofxvFxCjOkxILjyDFS8816276;     EqNWvilrESHlofxvFxCjOkxILjyDFS8816276 = EqNWvilrESHlofxvFxCjOkxILjyDFS60624933;     EqNWvilrESHlofxvFxCjOkxILjyDFS60624933 = EqNWvilrESHlofxvFxCjOkxILjyDFS90506515;     EqNWvilrESHlofxvFxCjOkxILjyDFS90506515 = EqNWvilrESHlofxvFxCjOkxILjyDFS16179766;     EqNWvilrESHlofxvFxCjOkxILjyDFS16179766 = EqNWvilrESHlofxvFxCjOkxILjyDFS70767147;     EqNWvilrESHlofxvFxCjOkxILjyDFS70767147 = EqNWvilrESHlofxvFxCjOkxILjyDFS92104442;     EqNWvilrESHlofxvFxCjOkxILjyDFS92104442 = EqNWvilrESHlofxvFxCjOkxILjyDFS68147630;     EqNWvilrESHlofxvFxCjOkxILjyDFS68147630 = EqNWvilrESHlofxvFxCjOkxILjyDFS64890118;     EqNWvilrESHlofxvFxCjOkxILjyDFS64890118 = EqNWvilrESHlofxvFxCjOkxILjyDFS70136993;     EqNWvilrESHlofxvFxCjOkxILjyDFS70136993 = EqNWvilrESHlofxvFxCjOkxILjyDFS70479233;     EqNWvilrESHlofxvFxCjOkxILjyDFS70479233 = EqNWvilrESHlofxvFxCjOkxILjyDFS21101714;     EqNWvilrESHlofxvFxCjOkxILjyDFS21101714 = EqNWvilrESHlofxvFxCjOkxILjyDFS66742461;     EqNWvilrESHlofxvFxCjOkxILjyDFS66742461 = EqNWvilrESHlofxvFxCjOkxILjyDFS19043447;     EqNWvilrESHlofxvFxCjOkxILjyDFS19043447 = EqNWvilrESHlofxvFxCjOkxILjyDFS68283230;     EqNWvilrESHlofxvFxCjOkxILjyDFS68283230 = EqNWvilrESHlofxvFxCjOkxILjyDFS65241682;     EqNWvilrESHlofxvFxCjOkxILjyDFS65241682 = EqNWvilrESHlofxvFxCjOkxILjyDFS66587069;     EqNWvilrESHlofxvFxCjOkxILjyDFS66587069 = EqNWvilrESHlofxvFxCjOkxILjyDFS47262801;     EqNWvilrESHlofxvFxCjOkxILjyDFS47262801 = EqNWvilrESHlofxvFxCjOkxILjyDFS63559269;     EqNWvilrESHlofxvFxCjOkxILjyDFS63559269 = EqNWvilrESHlofxvFxCjOkxILjyDFS70081042;     EqNWvilrESHlofxvFxCjOkxILjyDFS70081042 = EqNWvilrESHlofxvFxCjOkxILjyDFS2640907;     EqNWvilrESHlofxvFxCjOkxILjyDFS2640907 = EqNWvilrESHlofxvFxCjOkxILjyDFS61722718;     EqNWvilrESHlofxvFxCjOkxILjyDFS61722718 = EqNWvilrESHlofxvFxCjOkxILjyDFS87018733;     EqNWvilrESHlofxvFxCjOkxILjyDFS87018733 = EqNWvilrESHlofxvFxCjOkxILjyDFS175861;     EqNWvilrESHlofxvFxCjOkxILjyDFS175861 = EqNWvilrESHlofxvFxCjOkxILjyDFS42361576;     EqNWvilrESHlofxvFxCjOkxILjyDFS42361576 = EqNWvilrESHlofxvFxCjOkxILjyDFS72274178;     EqNWvilrESHlofxvFxCjOkxILjyDFS72274178 = EqNWvilrESHlofxvFxCjOkxILjyDFS56580337;     EqNWvilrESHlofxvFxCjOkxILjyDFS56580337 = EqNWvilrESHlofxvFxCjOkxILjyDFS55864423;     EqNWvilrESHlofxvFxCjOkxILjyDFS55864423 = EqNWvilrESHlofxvFxCjOkxILjyDFS58212088;     EqNWvilrESHlofxvFxCjOkxILjyDFS58212088 = EqNWvilrESHlofxvFxCjOkxILjyDFS95081918;     EqNWvilrESHlofxvFxCjOkxILjyDFS95081918 = EqNWvilrESHlofxvFxCjOkxILjyDFS49674178;     EqNWvilrESHlofxvFxCjOkxILjyDFS49674178 = EqNWvilrESHlofxvFxCjOkxILjyDFS47238143;     EqNWvilrESHlofxvFxCjOkxILjyDFS47238143 = EqNWvilrESHlofxvFxCjOkxILjyDFS76533251;     EqNWvilrESHlofxvFxCjOkxILjyDFS76533251 = EqNWvilrESHlofxvFxCjOkxILjyDFS72998178;     EqNWvilrESHlofxvFxCjOkxILjyDFS72998178 = EqNWvilrESHlofxvFxCjOkxILjyDFS4659598;     EqNWvilrESHlofxvFxCjOkxILjyDFS4659598 = EqNWvilrESHlofxvFxCjOkxILjyDFS35264063;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void jlQAsGjcQApxLIivJlpluWeMt17217953() {     double iTLbhEDdbIhWJiGczDThawhgvbyjII86428145 = -952283222;    double iTLbhEDdbIhWJiGczDThawhgvbyjII59913473 = -465486759;    double iTLbhEDdbIhWJiGczDThawhgvbyjII49570462 = -969318086;    double iTLbhEDdbIhWJiGczDThawhgvbyjII2900233 = -187055985;    double iTLbhEDdbIhWJiGczDThawhgvbyjII41587851 = 57386908;    double iTLbhEDdbIhWJiGczDThawhgvbyjII83823945 = -599344178;    double iTLbhEDdbIhWJiGczDThawhgvbyjII2003232 = -651766542;    double iTLbhEDdbIhWJiGczDThawhgvbyjII57362327 = -590731045;    double iTLbhEDdbIhWJiGczDThawhgvbyjII74710429 = -835136833;    double iTLbhEDdbIhWJiGczDThawhgvbyjII66859764 = -309245899;    double iTLbhEDdbIhWJiGczDThawhgvbyjII92654893 = -758864130;    double iTLbhEDdbIhWJiGczDThawhgvbyjII30076930 = -835146803;    double iTLbhEDdbIhWJiGczDThawhgvbyjII6902135 = -525666469;    double iTLbhEDdbIhWJiGczDThawhgvbyjII65611979 = -273577202;    double iTLbhEDdbIhWJiGczDThawhgvbyjII84519870 = -695358824;    double iTLbhEDdbIhWJiGczDThawhgvbyjII38623813 = -793399848;    double iTLbhEDdbIhWJiGczDThawhgvbyjII64485126 = -711187581;    double iTLbhEDdbIhWJiGczDThawhgvbyjII60874282 = -86547383;    double iTLbhEDdbIhWJiGczDThawhgvbyjII98260341 = -194483952;    double iTLbhEDdbIhWJiGczDThawhgvbyjII14658541 = 64998927;    double iTLbhEDdbIhWJiGczDThawhgvbyjII75971778 = -800028086;    double iTLbhEDdbIhWJiGczDThawhgvbyjII20786309 = 90315225;    double iTLbhEDdbIhWJiGczDThawhgvbyjII34596822 = -882202255;    double iTLbhEDdbIhWJiGczDThawhgvbyjII8307397 = -69024146;    double iTLbhEDdbIhWJiGczDThawhgvbyjII3558212 = -78724676;    double iTLbhEDdbIhWJiGczDThawhgvbyjII333868 = -981052099;    double iTLbhEDdbIhWJiGczDThawhgvbyjII55066767 = -33785769;    double iTLbhEDdbIhWJiGczDThawhgvbyjII85564659 = -859000490;    double iTLbhEDdbIhWJiGczDThawhgvbyjII9994453 = -250767823;    double iTLbhEDdbIhWJiGczDThawhgvbyjII82197667 = -268159530;    double iTLbhEDdbIhWJiGczDThawhgvbyjII58959242 = -688735307;    double iTLbhEDdbIhWJiGczDThawhgvbyjII65244743 = -349160344;    double iTLbhEDdbIhWJiGczDThawhgvbyjII64160192 = 33600623;    double iTLbhEDdbIhWJiGczDThawhgvbyjII68719711 = -830749335;    double iTLbhEDdbIhWJiGczDThawhgvbyjII23309824 = -681377342;    double iTLbhEDdbIhWJiGczDThawhgvbyjII63042109 = -285360596;    double iTLbhEDdbIhWJiGczDThawhgvbyjII89082171 = -920953103;    double iTLbhEDdbIhWJiGczDThawhgvbyjII37994745 = -820932146;    double iTLbhEDdbIhWJiGczDThawhgvbyjII44655064 = -249792907;    double iTLbhEDdbIhWJiGczDThawhgvbyjII79452752 = -88531497;    double iTLbhEDdbIhWJiGczDThawhgvbyjII32283080 = -126326646;    double iTLbhEDdbIhWJiGczDThawhgvbyjII97521431 = -207729223;    double iTLbhEDdbIhWJiGczDThawhgvbyjII77065914 = -430094279;    double iTLbhEDdbIhWJiGczDThawhgvbyjII24266826 = -288545196;    double iTLbhEDdbIhWJiGczDThawhgvbyjII10165561 = -606788015;    double iTLbhEDdbIhWJiGczDThawhgvbyjII70254626 = -749873155;    double iTLbhEDdbIhWJiGczDThawhgvbyjII86774535 = -948323370;    double iTLbhEDdbIhWJiGczDThawhgvbyjII45091421 = -201242835;    double iTLbhEDdbIhWJiGczDThawhgvbyjII95381762 = -167229292;    double iTLbhEDdbIhWJiGczDThawhgvbyjII45667725 = -648948843;    double iTLbhEDdbIhWJiGczDThawhgvbyjII62913638 = -14522829;    double iTLbhEDdbIhWJiGczDThawhgvbyjII47876805 = -261763495;    double iTLbhEDdbIhWJiGczDThawhgvbyjII56013858 = -875431368;    double iTLbhEDdbIhWJiGczDThawhgvbyjII97363020 = -784969588;    double iTLbhEDdbIhWJiGczDThawhgvbyjII41246174 = -289662393;    double iTLbhEDdbIhWJiGczDThawhgvbyjII65641837 = -942598448;    double iTLbhEDdbIhWJiGczDThawhgvbyjII25316651 = -583284504;    double iTLbhEDdbIhWJiGczDThawhgvbyjII41263066 = -800293941;    double iTLbhEDdbIhWJiGczDThawhgvbyjII99342021 = -8331310;    double iTLbhEDdbIhWJiGczDThawhgvbyjII41253984 = 38439007;    double iTLbhEDdbIhWJiGczDThawhgvbyjII28757179 = -465558409;    double iTLbhEDdbIhWJiGczDThawhgvbyjII16438572 = -792766053;    double iTLbhEDdbIhWJiGczDThawhgvbyjII47367875 = -239963223;    double iTLbhEDdbIhWJiGczDThawhgvbyjII92512761 = -466977303;    double iTLbhEDdbIhWJiGczDThawhgvbyjII7900522 = -620510592;    double iTLbhEDdbIhWJiGczDThawhgvbyjII27410150 = -309703787;    double iTLbhEDdbIhWJiGczDThawhgvbyjII65916737 = -768747426;    double iTLbhEDdbIhWJiGczDThawhgvbyjII38182423 = -694917135;    double iTLbhEDdbIhWJiGczDThawhgvbyjII42302156 = -592199861;    double iTLbhEDdbIhWJiGczDThawhgvbyjII21477761 = -309998229;    double iTLbhEDdbIhWJiGczDThawhgvbyjII49541642 = -872446746;    double iTLbhEDdbIhWJiGczDThawhgvbyjII26490382 = -890255435;    double iTLbhEDdbIhWJiGczDThawhgvbyjII16219218 = -836754477;    double iTLbhEDdbIhWJiGczDThawhgvbyjII18807590 = -5952455;    double iTLbhEDdbIhWJiGczDThawhgvbyjII82375460 = -808674427;    double iTLbhEDdbIhWJiGczDThawhgvbyjII78450347 = -492298863;    double iTLbhEDdbIhWJiGczDThawhgvbyjII43720394 = -479590497;    double iTLbhEDdbIhWJiGczDThawhgvbyjII10329997 = -493657060;    double iTLbhEDdbIhWJiGczDThawhgvbyjII98141835 = -462236131;    double iTLbhEDdbIhWJiGczDThawhgvbyjII33303585 = -328851521;    double iTLbhEDdbIhWJiGczDThawhgvbyjII13559332 = 67271270;    double iTLbhEDdbIhWJiGczDThawhgvbyjII9975347 = -832542935;    double iTLbhEDdbIhWJiGczDThawhgvbyjII90182897 = -591771198;    double iTLbhEDdbIhWJiGczDThawhgvbyjII64326727 = -601818980;    double iTLbhEDdbIhWJiGczDThawhgvbyjII19284030 = -153636702;    double iTLbhEDdbIhWJiGczDThawhgvbyjII11082438 = -326971813;    double iTLbhEDdbIhWJiGczDThawhgvbyjII9230885 = -473728976;    double iTLbhEDdbIhWJiGczDThawhgvbyjII66797172 = -181429790;    double iTLbhEDdbIhWJiGczDThawhgvbyjII27473537 = -441086943;    double iTLbhEDdbIhWJiGczDThawhgvbyjII57667987 = -738778895;    double iTLbhEDdbIhWJiGczDThawhgvbyjII37725459 = -702076092;    double iTLbhEDdbIhWJiGczDThawhgvbyjII47819106 = -20659162;    double iTLbhEDdbIhWJiGczDThawhgvbyjII38652724 = -712600837;    double iTLbhEDdbIhWJiGczDThawhgvbyjII3401081 = -188231914;    double iTLbhEDdbIhWJiGczDThawhgvbyjII50695574 = -622973088;    double iTLbhEDdbIhWJiGczDThawhgvbyjII15844509 = -333560594;    double iTLbhEDdbIhWJiGczDThawhgvbyjII50153557 = -967766001;    double iTLbhEDdbIhWJiGczDThawhgvbyjII84553152 = -963116977;    double iTLbhEDdbIhWJiGczDThawhgvbyjII16366304 = -668034604;    double iTLbhEDdbIhWJiGczDThawhgvbyjII82755411 = -952283222;     iTLbhEDdbIhWJiGczDThawhgvbyjII86428145 = iTLbhEDdbIhWJiGczDThawhgvbyjII59913473;     iTLbhEDdbIhWJiGczDThawhgvbyjII59913473 = iTLbhEDdbIhWJiGczDThawhgvbyjII49570462;     iTLbhEDdbIhWJiGczDThawhgvbyjII49570462 = iTLbhEDdbIhWJiGczDThawhgvbyjII2900233;     iTLbhEDdbIhWJiGczDThawhgvbyjII2900233 = iTLbhEDdbIhWJiGczDThawhgvbyjII41587851;     iTLbhEDdbIhWJiGczDThawhgvbyjII41587851 = iTLbhEDdbIhWJiGczDThawhgvbyjII83823945;     iTLbhEDdbIhWJiGczDThawhgvbyjII83823945 = iTLbhEDdbIhWJiGczDThawhgvbyjII2003232;     iTLbhEDdbIhWJiGczDThawhgvbyjII2003232 = iTLbhEDdbIhWJiGczDThawhgvbyjII57362327;     iTLbhEDdbIhWJiGczDThawhgvbyjII57362327 = iTLbhEDdbIhWJiGczDThawhgvbyjII74710429;     iTLbhEDdbIhWJiGczDThawhgvbyjII74710429 = iTLbhEDdbIhWJiGczDThawhgvbyjII66859764;     iTLbhEDdbIhWJiGczDThawhgvbyjII66859764 = iTLbhEDdbIhWJiGczDThawhgvbyjII92654893;     iTLbhEDdbIhWJiGczDThawhgvbyjII92654893 = iTLbhEDdbIhWJiGczDThawhgvbyjII30076930;     iTLbhEDdbIhWJiGczDThawhgvbyjII30076930 = iTLbhEDdbIhWJiGczDThawhgvbyjII6902135;     iTLbhEDdbIhWJiGczDThawhgvbyjII6902135 = iTLbhEDdbIhWJiGczDThawhgvbyjII65611979;     iTLbhEDdbIhWJiGczDThawhgvbyjII65611979 = iTLbhEDdbIhWJiGczDThawhgvbyjII84519870;     iTLbhEDdbIhWJiGczDThawhgvbyjII84519870 = iTLbhEDdbIhWJiGczDThawhgvbyjII38623813;     iTLbhEDdbIhWJiGczDThawhgvbyjII38623813 = iTLbhEDdbIhWJiGczDThawhgvbyjII64485126;     iTLbhEDdbIhWJiGczDThawhgvbyjII64485126 = iTLbhEDdbIhWJiGczDThawhgvbyjII60874282;     iTLbhEDdbIhWJiGczDThawhgvbyjII60874282 = iTLbhEDdbIhWJiGczDThawhgvbyjII98260341;     iTLbhEDdbIhWJiGczDThawhgvbyjII98260341 = iTLbhEDdbIhWJiGczDThawhgvbyjII14658541;     iTLbhEDdbIhWJiGczDThawhgvbyjII14658541 = iTLbhEDdbIhWJiGczDThawhgvbyjII75971778;     iTLbhEDdbIhWJiGczDThawhgvbyjII75971778 = iTLbhEDdbIhWJiGczDThawhgvbyjII20786309;     iTLbhEDdbIhWJiGczDThawhgvbyjII20786309 = iTLbhEDdbIhWJiGczDThawhgvbyjII34596822;     iTLbhEDdbIhWJiGczDThawhgvbyjII34596822 = iTLbhEDdbIhWJiGczDThawhgvbyjII8307397;     iTLbhEDdbIhWJiGczDThawhgvbyjII8307397 = iTLbhEDdbIhWJiGczDThawhgvbyjII3558212;     iTLbhEDdbIhWJiGczDThawhgvbyjII3558212 = iTLbhEDdbIhWJiGczDThawhgvbyjII333868;     iTLbhEDdbIhWJiGczDThawhgvbyjII333868 = iTLbhEDdbIhWJiGczDThawhgvbyjII55066767;     iTLbhEDdbIhWJiGczDThawhgvbyjII55066767 = iTLbhEDdbIhWJiGczDThawhgvbyjII85564659;     iTLbhEDdbIhWJiGczDThawhgvbyjII85564659 = iTLbhEDdbIhWJiGczDThawhgvbyjII9994453;     iTLbhEDdbIhWJiGczDThawhgvbyjII9994453 = iTLbhEDdbIhWJiGczDThawhgvbyjII82197667;     iTLbhEDdbIhWJiGczDThawhgvbyjII82197667 = iTLbhEDdbIhWJiGczDThawhgvbyjII58959242;     iTLbhEDdbIhWJiGczDThawhgvbyjII58959242 = iTLbhEDdbIhWJiGczDThawhgvbyjII65244743;     iTLbhEDdbIhWJiGczDThawhgvbyjII65244743 = iTLbhEDdbIhWJiGczDThawhgvbyjII64160192;     iTLbhEDdbIhWJiGczDThawhgvbyjII64160192 = iTLbhEDdbIhWJiGczDThawhgvbyjII68719711;     iTLbhEDdbIhWJiGczDThawhgvbyjII68719711 = iTLbhEDdbIhWJiGczDThawhgvbyjII23309824;     iTLbhEDdbIhWJiGczDThawhgvbyjII23309824 = iTLbhEDdbIhWJiGczDThawhgvbyjII63042109;     iTLbhEDdbIhWJiGczDThawhgvbyjII63042109 = iTLbhEDdbIhWJiGczDThawhgvbyjII89082171;     iTLbhEDdbIhWJiGczDThawhgvbyjII89082171 = iTLbhEDdbIhWJiGczDThawhgvbyjII37994745;     iTLbhEDdbIhWJiGczDThawhgvbyjII37994745 = iTLbhEDdbIhWJiGczDThawhgvbyjII44655064;     iTLbhEDdbIhWJiGczDThawhgvbyjII44655064 = iTLbhEDdbIhWJiGczDThawhgvbyjII79452752;     iTLbhEDdbIhWJiGczDThawhgvbyjII79452752 = iTLbhEDdbIhWJiGczDThawhgvbyjII32283080;     iTLbhEDdbIhWJiGczDThawhgvbyjII32283080 = iTLbhEDdbIhWJiGczDThawhgvbyjII97521431;     iTLbhEDdbIhWJiGczDThawhgvbyjII97521431 = iTLbhEDdbIhWJiGczDThawhgvbyjII77065914;     iTLbhEDdbIhWJiGczDThawhgvbyjII77065914 = iTLbhEDdbIhWJiGczDThawhgvbyjII24266826;     iTLbhEDdbIhWJiGczDThawhgvbyjII24266826 = iTLbhEDdbIhWJiGczDThawhgvbyjII10165561;     iTLbhEDdbIhWJiGczDThawhgvbyjII10165561 = iTLbhEDdbIhWJiGczDThawhgvbyjII70254626;     iTLbhEDdbIhWJiGczDThawhgvbyjII70254626 = iTLbhEDdbIhWJiGczDThawhgvbyjII86774535;     iTLbhEDdbIhWJiGczDThawhgvbyjII86774535 = iTLbhEDdbIhWJiGczDThawhgvbyjII45091421;     iTLbhEDdbIhWJiGczDThawhgvbyjII45091421 = iTLbhEDdbIhWJiGczDThawhgvbyjII95381762;     iTLbhEDdbIhWJiGczDThawhgvbyjII95381762 = iTLbhEDdbIhWJiGczDThawhgvbyjII45667725;     iTLbhEDdbIhWJiGczDThawhgvbyjII45667725 = iTLbhEDdbIhWJiGczDThawhgvbyjII62913638;     iTLbhEDdbIhWJiGczDThawhgvbyjII62913638 = iTLbhEDdbIhWJiGczDThawhgvbyjII47876805;     iTLbhEDdbIhWJiGczDThawhgvbyjII47876805 = iTLbhEDdbIhWJiGczDThawhgvbyjII56013858;     iTLbhEDdbIhWJiGczDThawhgvbyjII56013858 = iTLbhEDdbIhWJiGczDThawhgvbyjII97363020;     iTLbhEDdbIhWJiGczDThawhgvbyjII97363020 = iTLbhEDdbIhWJiGczDThawhgvbyjII41246174;     iTLbhEDdbIhWJiGczDThawhgvbyjII41246174 = iTLbhEDdbIhWJiGczDThawhgvbyjII65641837;     iTLbhEDdbIhWJiGczDThawhgvbyjII65641837 = iTLbhEDdbIhWJiGczDThawhgvbyjII25316651;     iTLbhEDdbIhWJiGczDThawhgvbyjII25316651 = iTLbhEDdbIhWJiGczDThawhgvbyjII41263066;     iTLbhEDdbIhWJiGczDThawhgvbyjII41263066 = iTLbhEDdbIhWJiGczDThawhgvbyjII99342021;     iTLbhEDdbIhWJiGczDThawhgvbyjII99342021 = iTLbhEDdbIhWJiGczDThawhgvbyjII41253984;     iTLbhEDdbIhWJiGczDThawhgvbyjII41253984 = iTLbhEDdbIhWJiGczDThawhgvbyjII28757179;     iTLbhEDdbIhWJiGczDThawhgvbyjII28757179 = iTLbhEDdbIhWJiGczDThawhgvbyjII16438572;     iTLbhEDdbIhWJiGczDThawhgvbyjII16438572 = iTLbhEDdbIhWJiGczDThawhgvbyjII47367875;     iTLbhEDdbIhWJiGczDThawhgvbyjII47367875 = iTLbhEDdbIhWJiGczDThawhgvbyjII92512761;     iTLbhEDdbIhWJiGczDThawhgvbyjII92512761 = iTLbhEDdbIhWJiGczDThawhgvbyjII7900522;     iTLbhEDdbIhWJiGczDThawhgvbyjII7900522 = iTLbhEDdbIhWJiGczDThawhgvbyjII27410150;     iTLbhEDdbIhWJiGczDThawhgvbyjII27410150 = iTLbhEDdbIhWJiGczDThawhgvbyjII65916737;     iTLbhEDdbIhWJiGczDThawhgvbyjII65916737 = iTLbhEDdbIhWJiGczDThawhgvbyjII38182423;     iTLbhEDdbIhWJiGczDThawhgvbyjII38182423 = iTLbhEDdbIhWJiGczDThawhgvbyjII42302156;     iTLbhEDdbIhWJiGczDThawhgvbyjII42302156 = iTLbhEDdbIhWJiGczDThawhgvbyjII21477761;     iTLbhEDdbIhWJiGczDThawhgvbyjII21477761 = iTLbhEDdbIhWJiGczDThawhgvbyjII49541642;     iTLbhEDdbIhWJiGczDThawhgvbyjII49541642 = iTLbhEDdbIhWJiGczDThawhgvbyjII26490382;     iTLbhEDdbIhWJiGczDThawhgvbyjII26490382 = iTLbhEDdbIhWJiGczDThawhgvbyjII16219218;     iTLbhEDdbIhWJiGczDThawhgvbyjII16219218 = iTLbhEDdbIhWJiGczDThawhgvbyjII18807590;     iTLbhEDdbIhWJiGczDThawhgvbyjII18807590 = iTLbhEDdbIhWJiGczDThawhgvbyjII82375460;     iTLbhEDdbIhWJiGczDThawhgvbyjII82375460 = iTLbhEDdbIhWJiGczDThawhgvbyjII78450347;     iTLbhEDdbIhWJiGczDThawhgvbyjII78450347 = iTLbhEDdbIhWJiGczDThawhgvbyjII43720394;     iTLbhEDdbIhWJiGczDThawhgvbyjII43720394 = iTLbhEDdbIhWJiGczDThawhgvbyjII10329997;     iTLbhEDdbIhWJiGczDThawhgvbyjII10329997 = iTLbhEDdbIhWJiGczDThawhgvbyjII98141835;     iTLbhEDdbIhWJiGczDThawhgvbyjII98141835 = iTLbhEDdbIhWJiGczDThawhgvbyjII33303585;     iTLbhEDdbIhWJiGczDThawhgvbyjII33303585 = iTLbhEDdbIhWJiGczDThawhgvbyjII13559332;     iTLbhEDdbIhWJiGczDThawhgvbyjII13559332 = iTLbhEDdbIhWJiGczDThawhgvbyjII9975347;     iTLbhEDdbIhWJiGczDThawhgvbyjII9975347 = iTLbhEDdbIhWJiGczDThawhgvbyjII90182897;     iTLbhEDdbIhWJiGczDThawhgvbyjII90182897 = iTLbhEDdbIhWJiGczDThawhgvbyjII64326727;     iTLbhEDdbIhWJiGczDThawhgvbyjII64326727 = iTLbhEDdbIhWJiGczDThawhgvbyjII19284030;     iTLbhEDdbIhWJiGczDThawhgvbyjII19284030 = iTLbhEDdbIhWJiGczDThawhgvbyjII11082438;     iTLbhEDdbIhWJiGczDThawhgvbyjII11082438 = iTLbhEDdbIhWJiGczDThawhgvbyjII9230885;     iTLbhEDdbIhWJiGczDThawhgvbyjII9230885 = iTLbhEDdbIhWJiGczDThawhgvbyjII66797172;     iTLbhEDdbIhWJiGczDThawhgvbyjII66797172 = iTLbhEDdbIhWJiGczDThawhgvbyjII27473537;     iTLbhEDdbIhWJiGczDThawhgvbyjII27473537 = iTLbhEDdbIhWJiGczDThawhgvbyjII57667987;     iTLbhEDdbIhWJiGczDThawhgvbyjII57667987 = iTLbhEDdbIhWJiGczDThawhgvbyjII37725459;     iTLbhEDdbIhWJiGczDThawhgvbyjII37725459 = iTLbhEDdbIhWJiGczDThawhgvbyjII47819106;     iTLbhEDdbIhWJiGczDThawhgvbyjII47819106 = iTLbhEDdbIhWJiGczDThawhgvbyjII38652724;     iTLbhEDdbIhWJiGczDThawhgvbyjII38652724 = iTLbhEDdbIhWJiGczDThawhgvbyjII3401081;     iTLbhEDdbIhWJiGczDThawhgvbyjII3401081 = iTLbhEDdbIhWJiGczDThawhgvbyjII50695574;     iTLbhEDdbIhWJiGczDThawhgvbyjII50695574 = iTLbhEDdbIhWJiGczDThawhgvbyjII15844509;     iTLbhEDdbIhWJiGczDThawhgvbyjII15844509 = iTLbhEDdbIhWJiGczDThawhgvbyjII50153557;     iTLbhEDdbIhWJiGczDThawhgvbyjII50153557 = iTLbhEDdbIhWJiGczDThawhgvbyjII84553152;     iTLbhEDdbIhWJiGczDThawhgvbyjII84553152 = iTLbhEDdbIhWJiGczDThawhgvbyjII16366304;     iTLbhEDdbIhWJiGczDThawhgvbyjII16366304 = iTLbhEDdbIhWJiGczDThawhgvbyjII82755411;     iTLbhEDdbIhWJiGczDThawhgvbyjII82755411 = iTLbhEDdbIhWJiGczDThawhgvbyjII86428145;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void QzLVFGAAAoJTQKQdLxwuNKwti26822679() {     double FjvpDVjyTKRDeTYpZJXgznCxKdTIgg8250367 = -420498554;    double FjvpDVjyTKRDeTYpZJXgznCxKdTIgg21381277 = -848085612;    double FjvpDVjyTKRDeTYpZJXgznCxKdTIgg95297732 = 83464382;    double FjvpDVjyTKRDeTYpZJXgznCxKdTIgg34275379 = -391840161;    double FjvpDVjyTKRDeTYpZJXgznCxKdTIgg1722183 = -919864014;    double FjvpDVjyTKRDeTYpZJXgznCxKdTIgg7842262 = -610887336;    double FjvpDVjyTKRDeTYpZJXgznCxKdTIgg31023816 = -715084666;    double FjvpDVjyTKRDeTYpZJXgznCxKdTIgg44224956 = -598911893;    double FjvpDVjyTKRDeTYpZJXgznCxKdTIgg71234068 = -820932251;    double FjvpDVjyTKRDeTYpZJXgznCxKdTIgg28142990 = -179464296;    double FjvpDVjyTKRDeTYpZJXgznCxKdTIgg63571162 = -314621833;    double FjvpDVjyTKRDeTYpZJXgznCxKdTIgg46258813 = -938328409;    double FjvpDVjyTKRDeTYpZJXgznCxKdTIgg39891077 = 36299742;    double FjvpDVjyTKRDeTYpZJXgznCxKdTIgg32578447 = -23654000;    double FjvpDVjyTKRDeTYpZJXgznCxKdTIgg79777665 = -622200743;    double FjvpDVjyTKRDeTYpZJXgznCxKdTIgg86594539 = -135766389;    double FjvpDVjyTKRDeTYpZJXgznCxKdTIgg57934186 = 2987701;    double FjvpDVjyTKRDeTYpZJXgznCxKdTIgg23399585 = -8268301;    double FjvpDVjyTKRDeTYpZJXgznCxKdTIgg2897566 = -267619609;    double FjvpDVjyTKRDeTYpZJXgznCxKdTIgg95768182 = -426246129;    double FjvpDVjyTKRDeTYpZJXgznCxKdTIgg33126063 = -532106788;    double FjvpDVjyTKRDeTYpZJXgznCxKdTIgg85188286 = 19564060;    double FjvpDVjyTKRDeTYpZJXgznCxKdTIgg44068227 = -438229610;    double FjvpDVjyTKRDeTYpZJXgznCxKdTIgg45585018 = -479123011;    double FjvpDVjyTKRDeTYpZJXgznCxKdTIgg77488878 = 10378352;    double FjvpDVjyTKRDeTYpZJXgznCxKdTIgg89909721 = -208237627;    double FjvpDVjyTKRDeTYpZJXgznCxKdTIgg28103371 = -660589814;    double FjvpDVjyTKRDeTYpZJXgznCxKdTIgg21144485 = -723448723;    double FjvpDVjyTKRDeTYpZJXgznCxKdTIgg57891365 = 82286260;    double FjvpDVjyTKRDeTYpZJXgznCxKdTIgg28014745 = -644373724;    double FjvpDVjyTKRDeTYpZJXgznCxKdTIgg10124508 = 5536945;    double FjvpDVjyTKRDeTYpZJXgznCxKdTIgg84136069 = -125049174;    double FjvpDVjyTKRDeTYpZJXgznCxKdTIgg89479657 = -809003260;    double FjvpDVjyTKRDeTYpZJXgznCxKdTIgg41258829 = -506568962;    double FjvpDVjyTKRDeTYpZJXgznCxKdTIgg4144037 = -831195944;    double FjvpDVjyTKRDeTYpZJXgznCxKdTIgg32619070 = -299776575;    double FjvpDVjyTKRDeTYpZJXgznCxKdTIgg32164428 = -970570199;    double FjvpDVjyTKRDeTYpZJXgznCxKdTIgg41932607 = -302474904;    double FjvpDVjyTKRDeTYpZJXgznCxKdTIgg5035511 = -22198187;    double FjvpDVjyTKRDeTYpZJXgznCxKdTIgg92123398 = -546080498;    double FjvpDVjyTKRDeTYpZJXgznCxKdTIgg86658926 = -560465904;    double FjvpDVjyTKRDeTYpZJXgznCxKdTIgg14023603 = -995195301;    double FjvpDVjyTKRDeTYpZJXgznCxKdTIgg24433313 = -474061094;    double FjvpDVjyTKRDeTYpZJXgznCxKdTIgg72361684 = -197351365;    double FjvpDVjyTKRDeTYpZJXgznCxKdTIgg90081372 = -793476644;    double FjvpDVjyTKRDeTYpZJXgznCxKdTIgg9461106 = -453305385;    double FjvpDVjyTKRDeTYpZJXgznCxKdTIgg12442648 = -29330890;    double FjvpDVjyTKRDeTYpZJXgznCxKdTIgg26931173 = 60261176;    double FjvpDVjyTKRDeTYpZJXgznCxKdTIgg2445855 = -352345714;    double FjvpDVjyTKRDeTYpZJXgznCxKdTIgg61715201 = -628004028;    double FjvpDVjyTKRDeTYpZJXgznCxKdTIgg51375457 = -58412155;    double FjvpDVjyTKRDeTYpZJXgznCxKdTIgg44265469 = -587141576;    double FjvpDVjyTKRDeTYpZJXgznCxKdTIgg47236723 = -839026508;    double FjvpDVjyTKRDeTYpZJXgznCxKdTIgg25388143 = -975978648;    double FjvpDVjyTKRDeTYpZJXgznCxKdTIgg93696615 = -250784142;    double FjvpDVjyTKRDeTYpZJXgznCxKdTIgg23062080 = -340062615;    double FjvpDVjyTKRDeTYpZJXgznCxKdTIgg77313050 = -309856002;    double FjvpDVjyTKRDeTYpZJXgznCxKdTIgg49712714 = -437412607;    double FjvpDVjyTKRDeTYpZJXgznCxKdTIgg56786500 = -302218514;    double FjvpDVjyTKRDeTYpZJXgznCxKdTIgg11812461 = -611626387;    double FjvpDVjyTKRDeTYpZJXgznCxKdTIgg79738890 = -950297523;    double FjvpDVjyTKRDeTYpZJXgznCxKdTIgg9879331 = -991635944;    double FjvpDVjyTKRDeTYpZJXgznCxKdTIgg86333591 = -581198153;    double FjvpDVjyTKRDeTYpZJXgznCxKdTIgg43219324 = -76558527;    double FjvpDVjyTKRDeTYpZJXgznCxKdTIgg18018482 = -85001242;    double FjvpDVjyTKRDeTYpZJXgznCxKdTIgg79435092 = -89572659;    double FjvpDVjyTKRDeTYpZJXgznCxKdTIgg56779156 = -29325150;    double FjvpDVjyTKRDeTYpZJXgznCxKdTIgg98632248 = -457131296;    double FjvpDVjyTKRDeTYpZJXgznCxKdTIgg28434411 = -192458056;    double FjvpDVjyTKRDeTYpZJXgznCxKdTIgg47158596 = -222424168;    double FjvpDVjyTKRDeTYpZJXgznCxKdTIgg54430111 = -165196191;    double FjvpDVjyTKRDeTYpZJXgznCxKdTIgg16001579 = -694537395;    double FjvpDVjyTKRDeTYpZJXgznCxKdTIgg18364075 = -986070114;    double FjvpDVjyTKRDeTYpZJXgznCxKdTIgg10774168 = -721539111;    double FjvpDVjyTKRDeTYpZJXgznCxKdTIgg9109257 = -865780225;    double FjvpDVjyTKRDeTYpZJXgznCxKdTIgg19102461 = -536911488;    double FjvpDVjyTKRDeTYpZJXgznCxKdTIgg60754974 = -506374846;    double FjvpDVjyTKRDeTYpZJXgznCxKdTIgg71706542 = -140878246;    double FjvpDVjyTKRDeTYpZJXgznCxKdTIgg55503646 = -685646368;    double FjvpDVjyTKRDeTYpZJXgznCxKdTIgg68027773 = -536316263;    double FjvpDVjyTKRDeTYpZJXgznCxKdTIgg77467074 = -78906738;    double FjvpDVjyTKRDeTYpZJXgznCxKdTIgg1172199 = -620850991;    double FjvpDVjyTKRDeTYpZJXgznCxKdTIgg18698631 = -271103009;    double FjvpDVjyTKRDeTYpZJXgznCxKdTIgg96176163 = -289709713;    double FjvpDVjyTKRDeTYpZJXgznCxKdTIgg76639288 = -485961570;    double FjvpDVjyTKRDeTYpZJXgznCxKdTIgg65859039 = -407321479;    double FjvpDVjyTKRDeTYpZJXgznCxKdTIgg36899346 = -286022667;    double FjvpDVjyTKRDeTYpZJXgznCxKdTIgg64091514 = -833024613;    double FjvpDVjyTKRDeTYpZJXgznCxKdTIgg47562213 = -155784821;    double FjvpDVjyTKRDeTYpZJXgznCxKdTIgg81081956 = -391133330;    double FjvpDVjyTKRDeTYpZJXgznCxKdTIgg55306019 = -989920574;    double FjvpDVjyTKRDeTYpZJXgznCxKdTIgg82451714 = -433157592;    double FjvpDVjyTKRDeTYpZJXgznCxKdTIgg85146107 = 99743609;    double FjvpDVjyTKRDeTYpZJXgznCxKdTIgg93223049 = -410571801;    double FjvpDVjyTKRDeTYpZJXgznCxKdTIgg12384508 = -595782976;    double FjvpDVjyTKRDeTYpZJXgznCxKdTIgg76779595 = -568829961;    double FjvpDVjyTKRDeTYpZJXgznCxKdTIgg27690012 = -313997148;    double FjvpDVjyTKRDeTYpZJXgznCxKdTIgg81213989 = -297502568;    double FjvpDVjyTKRDeTYpZJXgznCxKdTIgg54343202 = -12350124;    double FjvpDVjyTKRDeTYpZJXgznCxKdTIgg10646280 = -420498554;     FjvpDVjyTKRDeTYpZJXgznCxKdTIgg8250367 = FjvpDVjyTKRDeTYpZJXgznCxKdTIgg21381277;     FjvpDVjyTKRDeTYpZJXgznCxKdTIgg21381277 = FjvpDVjyTKRDeTYpZJXgznCxKdTIgg95297732;     FjvpDVjyTKRDeTYpZJXgznCxKdTIgg95297732 = FjvpDVjyTKRDeTYpZJXgznCxKdTIgg34275379;     FjvpDVjyTKRDeTYpZJXgznCxKdTIgg34275379 = FjvpDVjyTKRDeTYpZJXgznCxKdTIgg1722183;     FjvpDVjyTKRDeTYpZJXgznCxKdTIgg1722183 = FjvpDVjyTKRDeTYpZJXgznCxKdTIgg7842262;     FjvpDVjyTKRDeTYpZJXgznCxKdTIgg7842262 = FjvpDVjyTKRDeTYpZJXgznCxKdTIgg31023816;     FjvpDVjyTKRDeTYpZJXgznCxKdTIgg31023816 = FjvpDVjyTKRDeTYpZJXgznCxKdTIgg44224956;     FjvpDVjyTKRDeTYpZJXgznCxKdTIgg44224956 = FjvpDVjyTKRDeTYpZJXgznCxKdTIgg71234068;     FjvpDVjyTKRDeTYpZJXgznCxKdTIgg71234068 = FjvpDVjyTKRDeTYpZJXgznCxKdTIgg28142990;     FjvpDVjyTKRDeTYpZJXgznCxKdTIgg28142990 = FjvpDVjyTKRDeTYpZJXgznCxKdTIgg63571162;     FjvpDVjyTKRDeTYpZJXgznCxKdTIgg63571162 = FjvpDVjyTKRDeTYpZJXgznCxKdTIgg46258813;     FjvpDVjyTKRDeTYpZJXgznCxKdTIgg46258813 = FjvpDVjyTKRDeTYpZJXgznCxKdTIgg39891077;     FjvpDVjyTKRDeTYpZJXgznCxKdTIgg39891077 = FjvpDVjyTKRDeTYpZJXgznCxKdTIgg32578447;     FjvpDVjyTKRDeTYpZJXgznCxKdTIgg32578447 = FjvpDVjyTKRDeTYpZJXgznCxKdTIgg79777665;     FjvpDVjyTKRDeTYpZJXgznCxKdTIgg79777665 = FjvpDVjyTKRDeTYpZJXgznCxKdTIgg86594539;     FjvpDVjyTKRDeTYpZJXgznCxKdTIgg86594539 = FjvpDVjyTKRDeTYpZJXgznCxKdTIgg57934186;     FjvpDVjyTKRDeTYpZJXgznCxKdTIgg57934186 = FjvpDVjyTKRDeTYpZJXgznCxKdTIgg23399585;     FjvpDVjyTKRDeTYpZJXgznCxKdTIgg23399585 = FjvpDVjyTKRDeTYpZJXgznCxKdTIgg2897566;     FjvpDVjyTKRDeTYpZJXgznCxKdTIgg2897566 = FjvpDVjyTKRDeTYpZJXgznCxKdTIgg95768182;     FjvpDVjyTKRDeTYpZJXgznCxKdTIgg95768182 = FjvpDVjyTKRDeTYpZJXgznCxKdTIgg33126063;     FjvpDVjyTKRDeTYpZJXgznCxKdTIgg33126063 = FjvpDVjyTKRDeTYpZJXgznCxKdTIgg85188286;     FjvpDVjyTKRDeTYpZJXgznCxKdTIgg85188286 = FjvpDVjyTKRDeTYpZJXgznCxKdTIgg44068227;     FjvpDVjyTKRDeTYpZJXgznCxKdTIgg44068227 = FjvpDVjyTKRDeTYpZJXgznCxKdTIgg45585018;     FjvpDVjyTKRDeTYpZJXgznCxKdTIgg45585018 = FjvpDVjyTKRDeTYpZJXgznCxKdTIgg77488878;     FjvpDVjyTKRDeTYpZJXgznCxKdTIgg77488878 = FjvpDVjyTKRDeTYpZJXgznCxKdTIgg89909721;     FjvpDVjyTKRDeTYpZJXgznCxKdTIgg89909721 = FjvpDVjyTKRDeTYpZJXgznCxKdTIgg28103371;     FjvpDVjyTKRDeTYpZJXgznCxKdTIgg28103371 = FjvpDVjyTKRDeTYpZJXgznCxKdTIgg21144485;     FjvpDVjyTKRDeTYpZJXgznCxKdTIgg21144485 = FjvpDVjyTKRDeTYpZJXgznCxKdTIgg57891365;     FjvpDVjyTKRDeTYpZJXgznCxKdTIgg57891365 = FjvpDVjyTKRDeTYpZJXgznCxKdTIgg28014745;     FjvpDVjyTKRDeTYpZJXgznCxKdTIgg28014745 = FjvpDVjyTKRDeTYpZJXgznCxKdTIgg10124508;     FjvpDVjyTKRDeTYpZJXgznCxKdTIgg10124508 = FjvpDVjyTKRDeTYpZJXgznCxKdTIgg84136069;     FjvpDVjyTKRDeTYpZJXgznCxKdTIgg84136069 = FjvpDVjyTKRDeTYpZJXgznCxKdTIgg89479657;     FjvpDVjyTKRDeTYpZJXgznCxKdTIgg89479657 = FjvpDVjyTKRDeTYpZJXgznCxKdTIgg41258829;     FjvpDVjyTKRDeTYpZJXgznCxKdTIgg41258829 = FjvpDVjyTKRDeTYpZJXgznCxKdTIgg4144037;     FjvpDVjyTKRDeTYpZJXgznCxKdTIgg4144037 = FjvpDVjyTKRDeTYpZJXgznCxKdTIgg32619070;     FjvpDVjyTKRDeTYpZJXgznCxKdTIgg32619070 = FjvpDVjyTKRDeTYpZJXgznCxKdTIgg32164428;     FjvpDVjyTKRDeTYpZJXgznCxKdTIgg32164428 = FjvpDVjyTKRDeTYpZJXgznCxKdTIgg41932607;     FjvpDVjyTKRDeTYpZJXgznCxKdTIgg41932607 = FjvpDVjyTKRDeTYpZJXgznCxKdTIgg5035511;     FjvpDVjyTKRDeTYpZJXgznCxKdTIgg5035511 = FjvpDVjyTKRDeTYpZJXgznCxKdTIgg92123398;     FjvpDVjyTKRDeTYpZJXgznCxKdTIgg92123398 = FjvpDVjyTKRDeTYpZJXgznCxKdTIgg86658926;     FjvpDVjyTKRDeTYpZJXgznCxKdTIgg86658926 = FjvpDVjyTKRDeTYpZJXgznCxKdTIgg14023603;     FjvpDVjyTKRDeTYpZJXgznCxKdTIgg14023603 = FjvpDVjyTKRDeTYpZJXgznCxKdTIgg24433313;     FjvpDVjyTKRDeTYpZJXgznCxKdTIgg24433313 = FjvpDVjyTKRDeTYpZJXgznCxKdTIgg72361684;     FjvpDVjyTKRDeTYpZJXgznCxKdTIgg72361684 = FjvpDVjyTKRDeTYpZJXgznCxKdTIgg90081372;     FjvpDVjyTKRDeTYpZJXgznCxKdTIgg90081372 = FjvpDVjyTKRDeTYpZJXgznCxKdTIgg9461106;     FjvpDVjyTKRDeTYpZJXgznCxKdTIgg9461106 = FjvpDVjyTKRDeTYpZJXgznCxKdTIgg12442648;     FjvpDVjyTKRDeTYpZJXgznCxKdTIgg12442648 = FjvpDVjyTKRDeTYpZJXgznCxKdTIgg26931173;     FjvpDVjyTKRDeTYpZJXgznCxKdTIgg26931173 = FjvpDVjyTKRDeTYpZJXgznCxKdTIgg2445855;     FjvpDVjyTKRDeTYpZJXgznCxKdTIgg2445855 = FjvpDVjyTKRDeTYpZJXgznCxKdTIgg61715201;     FjvpDVjyTKRDeTYpZJXgznCxKdTIgg61715201 = FjvpDVjyTKRDeTYpZJXgznCxKdTIgg51375457;     FjvpDVjyTKRDeTYpZJXgznCxKdTIgg51375457 = FjvpDVjyTKRDeTYpZJXgznCxKdTIgg44265469;     FjvpDVjyTKRDeTYpZJXgznCxKdTIgg44265469 = FjvpDVjyTKRDeTYpZJXgznCxKdTIgg47236723;     FjvpDVjyTKRDeTYpZJXgznCxKdTIgg47236723 = FjvpDVjyTKRDeTYpZJXgznCxKdTIgg25388143;     FjvpDVjyTKRDeTYpZJXgznCxKdTIgg25388143 = FjvpDVjyTKRDeTYpZJXgznCxKdTIgg93696615;     FjvpDVjyTKRDeTYpZJXgznCxKdTIgg93696615 = FjvpDVjyTKRDeTYpZJXgznCxKdTIgg23062080;     FjvpDVjyTKRDeTYpZJXgznCxKdTIgg23062080 = FjvpDVjyTKRDeTYpZJXgznCxKdTIgg77313050;     FjvpDVjyTKRDeTYpZJXgznCxKdTIgg77313050 = FjvpDVjyTKRDeTYpZJXgznCxKdTIgg49712714;     FjvpDVjyTKRDeTYpZJXgznCxKdTIgg49712714 = FjvpDVjyTKRDeTYpZJXgznCxKdTIgg56786500;     FjvpDVjyTKRDeTYpZJXgznCxKdTIgg56786500 = FjvpDVjyTKRDeTYpZJXgznCxKdTIgg11812461;     FjvpDVjyTKRDeTYpZJXgznCxKdTIgg11812461 = FjvpDVjyTKRDeTYpZJXgznCxKdTIgg79738890;     FjvpDVjyTKRDeTYpZJXgznCxKdTIgg79738890 = FjvpDVjyTKRDeTYpZJXgznCxKdTIgg9879331;     FjvpDVjyTKRDeTYpZJXgznCxKdTIgg9879331 = FjvpDVjyTKRDeTYpZJXgznCxKdTIgg86333591;     FjvpDVjyTKRDeTYpZJXgznCxKdTIgg86333591 = FjvpDVjyTKRDeTYpZJXgznCxKdTIgg43219324;     FjvpDVjyTKRDeTYpZJXgznCxKdTIgg43219324 = FjvpDVjyTKRDeTYpZJXgznCxKdTIgg18018482;     FjvpDVjyTKRDeTYpZJXgznCxKdTIgg18018482 = FjvpDVjyTKRDeTYpZJXgznCxKdTIgg79435092;     FjvpDVjyTKRDeTYpZJXgznCxKdTIgg79435092 = FjvpDVjyTKRDeTYpZJXgznCxKdTIgg56779156;     FjvpDVjyTKRDeTYpZJXgznCxKdTIgg56779156 = FjvpDVjyTKRDeTYpZJXgznCxKdTIgg98632248;     FjvpDVjyTKRDeTYpZJXgznCxKdTIgg98632248 = FjvpDVjyTKRDeTYpZJXgznCxKdTIgg28434411;     FjvpDVjyTKRDeTYpZJXgznCxKdTIgg28434411 = FjvpDVjyTKRDeTYpZJXgznCxKdTIgg47158596;     FjvpDVjyTKRDeTYpZJXgznCxKdTIgg47158596 = FjvpDVjyTKRDeTYpZJXgznCxKdTIgg54430111;     FjvpDVjyTKRDeTYpZJXgznCxKdTIgg54430111 = FjvpDVjyTKRDeTYpZJXgznCxKdTIgg16001579;     FjvpDVjyTKRDeTYpZJXgznCxKdTIgg16001579 = FjvpDVjyTKRDeTYpZJXgznCxKdTIgg18364075;     FjvpDVjyTKRDeTYpZJXgznCxKdTIgg18364075 = FjvpDVjyTKRDeTYpZJXgznCxKdTIgg10774168;     FjvpDVjyTKRDeTYpZJXgznCxKdTIgg10774168 = FjvpDVjyTKRDeTYpZJXgznCxKdTIgg9109257;     FjvpDVjyTKRDeTYpZJXgznCxKdTIgg9109257 = FjvpDVjyTKRDeTYpZJXgznCxKdTIgg19102461;     FjvpDVjyTKRDeTYpZJXgznCxKdTIgg19102461 = FjvpDVjyTKRDeTYpZJXgznCxKdTIgg60754974;     FjvpDVjyTKRDeTYpZJXgznCxKdTIgg60754974 = FjvpDVjyTKRDeTYpZJXgznCxKdTIgg71706542;     FjvpDVjyTKRDeTYpZJXgznCxKdTIgg71706542 = FjvpDVjyTKRDeTYpZJXgznCxKdTIgg55503646;     FjvpDVjyTKRDeTYpZJXgznCxKdTIgg55503646 = FjvpDVjyTKRDeTYpZJXgznCxKdTIgg68027773;     FjvpDVjyTKRDeTYpZJXgznCxKdTIgg68027773 = FjvpDVjyTKRDeTYpZJXgznCxKdTIgg77467074;     FjvpDVjyTKRDeTYpZJXgznCxKdTIgg77467074 = FjvpDVjyTKRDeTYpZJXgznCxKdTIgg1172199;     FjvpDVjyTKRDeTYpZJXgznCxKdTIgg1172199 = FjvpDVjyTKRDeTYpZJXgznCxKdTIgg18698631;     FjvpDVjyTKRDeTYpZJXgznCxKdTIgg18698631 = FjvpDVjyTKRDeTYpZJXgznCxKdTIgg96176163;     FjvpDVjyTKRDeTYpZJXgznCxKdTIgg96176163 = FjvpDVjyTKRDeTYpZJXgznCxKdTIgg76639288;     FjvpDVjyTKRDeTYpZJXgznCxKdTIgg76639288 = FjvpDVjyTKRDeTYpZJXgznCxKdTIgg65859039;     FjvpDVjyTKRDeTYpZJXgznCxKdTIgg65859039 = FjvpDVjyTKRDeTYpZJXgznCxKdTIgg36899346;     FjvpDVjyTKRDeTYpZJXgznCxKdTIgg36899346 = FjvpDVjyTKRDeTYpZJXgznCxKdTIgg64091514;     FjvpDVjyTKRDeTYpZJXgznCxKdTIgg64091514 = FjvpDVjyTKRDeTYpZJXgznCxKdTIgg47562213;     FjvpDVjyTKRDeTYpZJXgznCxKdTIgg47562213 = FjvpDVjyTKRDeTYpZJXgznCxKdTIgg81081956;     FjvpDVjyTKRDeTYpZJXgznCxKdTIgg81081956 = FjvpDVjyTKRDeTYpZJXgznCxKdTIgg55306019;     FjvpDVjyTKRDeTYpZJXgznCxKdTIgg55306019 = FjvpDVjyTKRDeTYpZJXgznCxKdTIgg82451714;     FjvpDVjyTKRDeTYpZJXgznCxKdTIgg82451714 = FjvpDVjyTKRDeTYpZJXgznCxKdTIgg85146107;     FjvpDVjyTKRDeTYpZJXgznCxKdTIgg85146107 = FjvpDVjyTKRDeTYpZJXgznCxKdTIgg93223049;     FjvpDVjyTKRDeTYpZJXgznCxKdTIgg93223049 = FjvpDVjyTKRDeTYpZJXgznCxKdTIgg12384508;     FjvpDVjyTKRDeTYpZJXgznCxKdTIgg12384508 = FjvpDVjyTKRDeTYpZJXgznCxKdTIgg76779595;     FjvpDVjyTKRDeTYpZJXgznCxKdTIgg76779595 = FjvpDVjyTKRDeTYpZJXgznCxKdTIgg27690012;     FjvpDVjyTKRDeTYpZJXgznCxKdTIgg27690012 = FjvpDVjyTKRDeTYpZJXgznCxKdTIgg81213989;     FjvpDVjyTKRDeTYpZJXgznCxKdTIgg81213989 = FjvpDVjyTKRDeTYpZJXgznCxKdTIgg54343202;     FjvpDVjyTKRDeTYpZJXgznCxKdTIgg54343202 = FjvpDVjyTKRDeTYpZJXgznCxKdTIgg10646280;     FjvpDVjyTKRDeTYpZJXgznCxKdTIgg10646280 = FjvpDVjyTKRDeTYpZJXgznCxKdTIgg8250367;}
// Junk Finished
